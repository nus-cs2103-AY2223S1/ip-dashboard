[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"EmilyOng":21}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":82,"EmilyOng":9}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.ParserManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.StorageManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.ui.Main;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" * Initializes the Duke application and initiates a conversation with the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     * Name of the chatbot.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    public static final String NAME \u003d \"Duke\";","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"     * The greeting message used by the chatbot when the application starts.","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    public static final String MESSAGE_GREETING \u003d String.format(\"Hello! I\u0027m %s\\nWhat can I do for you?\", Duke.NAME);","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    private ParserManager parserManager;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the Duke application with managers.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    public Duke() {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"            this.storageManager \u003d new StorageManager();","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"            return;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"        this.taskManager \u003d new TaskManager(this.storageManager.getTaskStorage());","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"        this.parserManager \u003d new ParserManager();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"     * Retrieves the command for the given command string.","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"     * @param fullCommand The given command string.","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"     * @return Status string of the command execution.","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"    public String handleCommand(String fullCommand) {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"            // Receive the command entered by the user","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"            Command command \u003d this.parserManager.parseCommand(fullCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"            return command.execute(this.taskManager);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"EmilyOng":61}},{"path":"src/main/java/duke/commands/AddDeadlineTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import duke.utils.DukeValidator;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a command for adding a {@link Deadline} task. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" *         {@code deadline {taskDescription} /by {taskDeadline}}: To add a deadline task with the corresponding","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":" *         description and deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"public class AddDeadlineTaskCommand extends AddTaskCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d AddDeadlineTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"            + \" \u003cdescription\u003e /by \u003cdeadline\u003e: Adds a Deadline task with the corresponding description and deadline\";","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_INVALID_DEADLINE_TASK \u003d \"Use the \u0027deadline\u0027 command together with the \"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"            + \"task description and deadline\\nFor example: \u0027deadline return book /by 2022-12-02\u0027\";","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     * Matches a non-empty description and a non-empty deadline, separated by a {@code \u0027/by\u0027} indicator.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * \u003cp\u003eFor example: {@code {taskDescription} /by {taskDeadline}}\u003c/p\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_DEADLINE_TASK \u003d Pattern.compile(","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"            \"(?\u003ctaskDescription\u003e.+?)\\\\s/by\\\\s(?\u003ctaskDeadline\u003e.+)\"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    );","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of the Command handler for adding a {@link Deadline} task.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments following the {@code \u0027deadline\u0027} prefix supplied by the user from keyboard input.","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"    public AddDeadlineTaskCommand(String arguments) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d AddDeadlineTaskCommand.MATCH_DEADLINE_TASK.matcher(this.arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(AddDeadlineTaskCommand.ERROR_INVALID_DEADLINE_TASK);","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"        String description \u003d matcher.group(\"taskDescription\").strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"        String datelineString \u003d matcher.group(\"taskDeadline\").strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"        LocalDate dateline \u003d DukeValidator.parseDate(datelineString);","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"        return this.addTask(taskManager, () -\u003e new Deadline(description, dateline));","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":63}},{"path":"src/main/java/duke/commands/AddEventTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import duke.utils.DukeValidator;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a command for adding an {@link Event} task. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" *         {@code event {taskDescription} /by {taskDate}}: To add an event task with the corresponding description","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":" *         and date.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"public class AddEventTaskCommand extends AddTaskCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d AddEventTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"            + \" \u003cdescription\u003e /at \u003cdate\u003e: Adds an Event task with the corresponding description and date\";","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_INVALID_EVENT_TASK \u003d \"Use the \u0027event\u0027 command together with the \"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"            + \"task description and date\\nFor example: \u0027event project meeting /at 2022-12-02\u0027\";","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     * Matches a non-empty description and a non-empty date, separated by a {@code \u0027/at\u0027} indicator.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * \u003cp\u003eFor example: {@code {taskDescription} /at {taskDate}}\u003c/p\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_EVENT_TASK \u003d Pattern.compile(\"(?\u003ctaskDescription\u003e.+?)\\\\s/at\\\\s(?\u003ctaskDate\u003e.+)\");","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of the Command handler for adding an {@link Event} task.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments following the {@code \u0027event\u0027} prefix supplied by the user from keyboard input.","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"    public AddEventTaskCommand(String arguments) {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d AddEventTaskCommand.MATCH_EVENT_TASK.matcher(this.arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(AddEventTaskCommand.ERROR_INVALID_EVENT_TASK);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        String description \u003d matcher.group(\"taskDescription\").strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"        String dateString \u003d matcher.group(\"taskDate\").strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"        LocalDate date \u003d DukeValidator.parseDate(dateString);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"        return this.addTask(taskManager, () -\u003e new Event(description, date));","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":59}},{"path":"src/main/java/duke/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a base command for adding a {@link Task} that provides a utility method to interact with the task","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * manager.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * Subclasses of the class can call the {@link #addTask(TaskManager, Supplier)} method in the class to delegate the","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" * task manager to add the corresponding task.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"abstract class AddTaskCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_ADD_TASK \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private static final String ASSERTION_TASK_IS_NON_NULL \u003d \"A task must be non-null to be added.\";","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"     * Retrieves the task supplied by the caller and adds that task to the specified task manager.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"     * @param taskManager  Task manager in charge of the managing all the tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"     * @param taskSupplier Supplier method that returns a task.","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     * @return Status message indicating the status of adding the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    public String addTask(TaskManager taskManager, Supplier\u003c? extends Task\u003e taskSupplier) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d taskSupplier.get();","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"        assert task !\u003d null : AddTaskCommand.ASSERTION_TASK_IS_NON_NULL;","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"            task \u003d taskManager.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"            return String.format(","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"                    \"%s\\n\\t%s\\n%s\",","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"                    AddTaskCommand.MESSAGE_ADD_TASK,","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"                    task,","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"                    taskManager.getStatus()","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"            );","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":47}},{"path":"src/main/java/duke/commands/AddToDoTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a command for adding a {@link ToDo} task. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" *         {@code todo {taskDescription}}: To add a todo task with the corresponding description.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"public class AddToDoTaskCommand extends AddTaskCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d AddToDoTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"            + \" \u003cdescription\u003e: Adds a ToDo task with the corresponding description\";","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_INVALID_TODO_TASK \u003d \"Use the \u0027todo\u0027 command together with a task \"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"            + \"description!\\nFor example: \u0027todo borrow book\u0027\";","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     * Matches a non-empty description, for example: {@code {taskDescription}}.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_TODO_TASK \u003d Pattern.compile(\"(.+)\");","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of the Command handler for adding a {@link ToDo} task.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments following the {@code \u0027todo\u0027} prefix supplied by the user from keyboard input.","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    public AddToDoTaskCommand(String arguments) {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d AddToDoTaskCommand.MATCH_TODO_TASK.matcher(this.arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(AddToDoTaskCommand.ERROR_INVALID_TODO_TASK);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"        return this.addTask(taskManager, () -\u003e new ToDo(this.arguments.strip()));","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":53}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a command for terminating the program. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" *         {@code bye}","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d ByeCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"            + \" : Terminates the application\";","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"     * Returns {@code true} if and only if the supplied command is an instance of the {@link ByeCommand}.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"     * @param command The supplied command.","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"     * @return {@code true} if and only if the supplied command is an instance of the {@link ByeCommand}.","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    public static boolean is(Command command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        return ByeCommand.MESSAGE_GOODBYE;","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":37}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates an executable command.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"@FunctionalInterface","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"public interface Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"     * Receives a task manager object from the caller and executes a specified command that may or may","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"     * not result in a modification of the task manager object.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"     * @param taskManager Task manager object in the current lifecycle to manage the list of tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     * @return Status message.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If an error occurs during the execution of a command.","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    String execute(TaskManager taskManager) throws DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":23}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a command for deleting a {@link Task}. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" *         {@code delete {taskNumber}}: To delete a task corresponding to the task number.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d DeleteTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"            + \" \u003ctask\u003e: Deletes a task corresponding to the provided task number\";","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_DELETE_TASK \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_MISSING_TASK_INDEX \u003d \"You are missing a task number!\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"            + \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_NAN_TASK_NUMBER \u003d \"The task number you provided is not a number!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_TASK_NUMBER_IS_INVALID \u003d \"The task number you provided is not valid!\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"            + \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of the Command handler for deleting a {@link Task}.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments following the {@code \u0027delete\u0027} prefix that is supplied by the user from keyboard","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     *                  input, and should denote the corresponding task number.","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"    public DeleteTaskCommand(String arguments) {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        // Retrieve the task index (1-indexed) to delete the task","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"        if (this.arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(DeleteTaskCommand.ERROR_MISSING_TASK_INDEX);","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"        int taskNumber;","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"            taskNumber \u003d Integer.parseInt(this.arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(DeleteTaskCommand.ERROR_NAN_TASK_NUMBER);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"        Task task;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"            task \u003d taskManager.delete(taskNumber);","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(DeleteTaskCommand.ERROR_TASK_NUMBER_IS_INVALID);","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"        return String.format(","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"                \"%s\\n\\t%s\\n%s\",","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"                DeleteTaskCommand.MESSAGE_DELETE_TASK,","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"                task,","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"                taskManager.getStatus()","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"        );","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":69}},{"path":"src/main/java/duke/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a command for finding a {@link Task}. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" *         {@code find {taskKeyword}}: To find tasks whose description contains the corresponding keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"public class FindTaskCommand implements Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d FindTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"            + \" \u003ckeyword1\u003e \u003ckeyword2\u003e ...: Finds the tasks from the list containing all provided keywords\";","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_NO_SEARCH_KEYWORD \u003d \"Provide a search keyword to find the task!\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"            + \"For example, use `find book mystery` to find all tasks where it\u0027s\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"            + \"description contains the word \u0027book\u0027 and \u0027mystery\u0027\";","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_MATCHING_TASKS_FOUND \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_NO_MATCHING_TASKS_FOUND \u003d \"No matching tasks are found in your list!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    private final String[] arguments;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of the Command handler for finding a {@link Task}.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments following the {@code \u0027find\u0027} prefix supplied by the user from keyboard input.","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    public FindTaskCommand(String ...arguments) {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"        if (this.arguments.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(FindTaskCommand.ERROR_NO_SEARCH_KEYWORD);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"        Predicate\u003cTask\u003e areKeywordsInTaskDescription \u003d task -\u003e (","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"                Arrays.stream(this.arguments).allMatch(keyword -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        List\u003cTask\u003e filteredTasks \u003d taskManager.list(areKeywordsInTaskDescription);","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"            return FindTaskCommand.MESSAGE_NO_MATCHING_TASKS_FOUND;","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"            return String.format(","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"                    \"%s\\n%s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"                    FindTaskCommand.MESSAGE_MATCHING_TASKS_FOUND,","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"                    TaskManager.display(filteredTasks, taskManager.getUserProgress())","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"            );","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"EmilyOng":66}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a command that represents an incorrect usage of the application.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"public class IncorrectCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_UNKNOWN_COMMAND \u003d \"I do not understand your command!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"        return IncorrectCommand.ERROR_UNKNOWN_COMMAND;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":17}},{"path":"src/main/java/duke/commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"import duke.utils.DukeValidator;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a command for listing the {@link Task Tasks} available. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":" *         {@code list}: To list all the tasks available.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":" *         {@code list /on {date}}: To list all the tasks occurring on the corresponding date.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":" *         {@code list /before {date}}: To list all the tasks occurring before the corresponding date.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"public class ListTasksCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d ListTasksCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"        + \" : Lists all the tasks\\n\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"        + ListTasksCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"        + \" /before \u003cdate\u003e: Lists all the tasks occurring before the provided date\\n\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        + ListTasksCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"        + \" /on \u003cdate\u003e: Lists all the tasks occurring on the provided date\";","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_UNKNOWN_OPTION \u003d \"Unknown option provided! Use either a \u0027/on\u0027 or\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"        + \"\u0027/before\u0027 command together with a date in order to\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"        + \"filter the tasks by their date!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"     * Matches a {@code \u0027/on\u0027} command followed by a (possibly invalid) date string. This is used to show the list of","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"     * tasks occurring on the specific date.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_TASKS_ON \u003d Pattern.compile(\"/on\\\\s(?\u003cdate\u003e.+)\");","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"     * Matches a {@code \u0027/before\u0027} command followed by a (possibly invalid) date string. This is used to show the list","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"     * of tasks occurring before the specific date.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_TASKS_BEFORE \u003d Pattern.compile(\"/before\\\\s(?\u003cdate\u003e.+)\");","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of the Command handler for listing tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments following the {@code \u0027list\u0027} prefix supplied by the user from keyboard input.","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"    public ListTasksCommand(String arguments) {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"        if (this.arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-07"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"            return TaskManager.display(taskManager.list(), taskManager.getUserProgress());","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"        Matcher matchTasksOn \u003d ListTasksCommand.MATCH_TASKS_ON.matcher(this.arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"        if (matchTasksOn.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"            LocalDate date \u003d DukeValidator.parseDate(matchTasksOn.group(\"date\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"            if (date \u003d\u003d null) {","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"                throw new DukeException(ListTasksCommand.ERROR_UNKNOWN_OPTION);","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"            List\u003cTask\u003e filteredTasks \u003d taskManager.list(","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"                task -\u003e {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"                    LocalDate taskDate \u003d task.getDate();","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"                    return taskDate !\u003d null \u0026\u0026 taskDate.isEqual(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"            );","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"            return TaskManager.display(filteredTasks, taskManager.getUserProgress());","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"        Matcher matchTasksBefore \u003d ListTasksCommand.MATCH_TASKS_BEFORE.matcher(this.arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"EmilyOng"},"content":"        if (matchTasksBefore.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"EmilyOng"},"content":"            LocalDate date \u003d DukeValidator.parseDate(matchTasksBefore.group(\"date\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"EmilyOng"},"content":"            if (date \u003d\u003d null) {","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"EmilyOng"},"content":"                throw new DukeException(ListTasksCommand.ERROR_UNKNOWN_OPTION);","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"EmilyOng"},"content":"            List\u003cTask\u003e filteredTasks \u003d taskManager.list(","lastModifiedDate":"2022-09-07"},{"lineNumber":94,"author":{"gitId":"EmilyOng"},"content":"                task -\u003e {","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"EmilyOng"},"content":"                    LocalDate taskDate \u003d task.getDate();","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"EmilyOng"},"content":"                    return taskDate !\u003d null \u0026\u0026 taskDate.isBefore(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"EmilyOng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"EmilyOng"},"content":"            );","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"EmilyOng"},"content":"            return TaskManager.display(filteredTasks, taskManager.getUserProgress());","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"EmilyOng"},"content":"        throw new DukeException(ListTasksCommand.ERROR_UNKNOWN_OPTION);","lastModifiedDate":"2022-09-07"},{"lineNumber":103,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":104}},{"path":"src/main/java/duke/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" * Encapsulate a command for marking a {@link Task} as completed. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" *         {@code mark {taskNumber}}: To mark the task corresponding to the task number as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"public class MarkTaskCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d MarkTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"            + \" \u003ctask\u003e: Marks the task corresponding to the provided task number as done\";","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_MARK_TASK_AS_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_MISSING_TASK_INDEX \u003d \"You are missing a task number!\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"            + \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_NAN_TASK_NUMBER \u003d \"The task number you provided is not a number!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of a Command handler for marking a task as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments following the {@code \u0027mark\u0027} prefix supplied by the user from keyboard input.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    public MarkTaskCommand(String arguments) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        // Retrieve the task index (1-indexed) to mark the task as done","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"        if (this.arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(MarkTaskCommand.ERROR_MISSING_TASK_INDEX);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"        int taskNumber;","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"            taskNumber \u003d Integer.parseInt(this.arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(MarkTaskCommand.ERROR_NAN_TASK_NUMBER);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d taskManager.get(taskNumber);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        Task updatedTask \u003d taskManager.update(taskNumber, task);","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"%s\\n\\t%s\", MarkTaskCommand.MESSAGE_MARK_TASK_AS_DONE, updatedTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":57}},{"path":"src/main/java/duke/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.TaskManager;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" * Encapsulate a command for marking a {@link Task} as not completed. The command should be used as follows:","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *     \u003cli\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" *         {@code unmark {taskNumber}}: To mark the task corresponding to the task number as not completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" *     \u003c/li\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"public class UnmarkTaskCommand implements Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    public static final String COMMAND_DESCRIPTION \u003d UnmarkTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"            + \" \u003ctask\u003e: Marks the task corresponding to the provided task number as not done\";","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_MARK_TASK_AS_UNDONE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_MISSING_TASK_INDEX \u003d \"You are missing a task number!\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"            + \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_NAN_TASK_NUMBER \u003d \"The task number you provided is not a number!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of a Command handler for marking a task as not completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments following the {@code \u0027unmark\u0027} prefix supplied by the user from keyboard input.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    public UnmarkTaskCommand(String arguments) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        // Retrieve the task index (1-indexed) to mark the task as undone","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"        if (this.arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(UnmarkTaskCommand.ERROR_MISSING_TASK_INDEX);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"        int taskNumber;","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"            taskNumber \u003d Integer.parseInt(this.arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(UnmarkTaskCommand.ERROR_NAN_TASK_NUMBER);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d taskManager.get(taskNumber);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        Task updatedTask \u003d taskManager.update(taskNumber, task);","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"%s\\n\\t%s\", UnmarkTaskCommand.MESSAGE_MARK_TASK_AS_UNDONE, updatedTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":57}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates an instance of the exception thrown by the {@link duke.Duke} application.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_OOPS \u003d \"OOPS!!!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"     * Creates a new instance of the Exception object.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"        super(String.format(\"%s %s\", DukeException.MESSAGE_OOPS, message));","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":19}},{"path":"src/main/java/duke/managers/ParserManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.managers;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.AddEventTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.AddToDoTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.DeleteTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.FindTaskCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.ListTasksCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.MarkTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates the logic for parsing commands and delegating the corresponding {@link Command} handler responsible for","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":" * handling the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"public class ParserManager {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)?\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     * Returns the map of all commands and their descriptions in the application.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     * @return Map of all commands in the application.","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"    public static Map\u003cString, String\u003e getAllCommands() {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        return new LinkedHashMap\u003c\u003e() {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"                put(AddDeadlineTaskCommand.COMMAND_WORD, AddDeadlineTaskCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"                put(AddEventTaskCommand.COMMAND_WORD, AddEventTaskCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"                put(AddToDoTaskCommand.COMMAND_WORD, AddToDoTaskCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"                put(MarkTaskCommand.COMMAND_WORD, MarkTaskCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"                put(UnmarkTaskCommand.COMMAND_WORD, UnmarkTaskCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"                put(DeleteTaskCommand.COMMAND_WORD, DeleteTaskCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"                put(FindTaskCommand.COMMAND_WORD, FindTaskCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"                put(ListTasksCommand.COMMAND_WORD, ListTasksCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"                put(ByeCommand.COMMAND_WORD, ByeCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"        };","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"     * Parses the given command string and returns a {@link Command} instance that corresponds to the command string.","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"     * @param fullCommand The full command string supplied by the user from keyboard input.","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"     * @return The {@link Command} instance responsible for handling the corresponding command.","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"    public Command parseCommand(String fullCommand) {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d ParserManager.BASIC_COMMAND_FORMAT.matcher(fullCommand);","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"        String command \u003d matcher.group(\"commandWord\").strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"EmilyOng"},"content":"        String arguments \u003d matcher.group(\"arguments\").strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"EmilyOng"},"content":"        switch (command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"EmilyOng"},"content":"        // List all tasks in the task manager","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"EmilyOng"},"content":"        case ListTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"EmilyOng"},"content":"            return new ListTasksCommand(arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"EmilyOng"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"EmilyOng"},"content":"            return new FindTaskCommand(arguments.split(\" \"));","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"EmilyOng"},"content":"        // Modifying operations on a task","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"EmilyOng"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"EmilyOng"},"content":"            return new MarkTaskCommand(arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"EmilyOng"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"EmilyOng"},"content":"            return new UnmarkTaskCommand(arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"EmilyOng"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"EmilyOng"},"content":"            return new DeleteTaskCommand(arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"EmilyOng"},"content":"        // Creating operations on a task","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"EmilyOng"},"content":"        case AddToDoTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"EmilyOng"},"content":"            return new AddToDoTaskCommand(arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"EmilyOng"},"content":"        case AddDeadlineTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"EmilyOng"},"content":"            return new AddDeadlineTaskCommand(arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"EmilyOng"},"content":"        case AddEventTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"EmilyOng"},"content":"            return new AddEventTaskCommand(arguments);","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"EmilyOng"},"content":"        // Termination of program","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"EmilyOng"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"EmilyOng"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"EmilyOng"},"content":"        default:","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"EmilyOng"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":119}},{"path":"src/main/java/duke/managers/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.managers;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.storage.StorageType;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.storage.TaskStorage;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a fictional storage manager that contains the logic for managing the various {@link Storage storages}","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" * used in the application.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"public class StorageManager {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    private final HashMap\u003cStorageType, ? extends Storage\u003e storages;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"     * Sets up the {@link Storage storages} used in the application and initializes each of them.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If an error occurred when initializing a particular storage.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    public StorageManager() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        this.storages \u003d new HashMap\u003c\u003e() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"                put(StorageType.TASK, new TaskStorage());","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        };","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"        for (Storage storage : this.storages.values()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"            storage.initialize();","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"     * Returns the initialized {@link TaskStorage} object used in the application.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"     * @return The initialized {@link TaskStorage} object used in the application.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"    public TaskStorage getTaskStorage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"        return (TaskStorage) this.storages.get(StorageType.TASK);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":44}},{"path":"src/main/java/duke/managers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.managers;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"import duke.storage.TaskStorage;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates the logic to manage the list of {@link Task tasks} and provides augmenting operations to support CRUD","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":" * operations on the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"public class TaskManager {","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_NO_TASKS_AVAILABLE \u003d \"There are currently no tasks available. Add one now!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_TASK_LIST_STATUS \u003d \"Now you have %s task(s) in the list.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_TASK_LIST_CANNOT_READ_STATUS \u003d \"Uh oh, I cannot read the tasks in the list!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    private static final String MESSAGE_TASK_COMPLETION_PROGRESS \u003d \"Keep it up! \"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        + \"You have completed %.2f%% of the tasks.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    private final TaskStorage taskStorage;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     * Stores a reference to the {@link TaskStorage} used in the application.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     * @param taskStorage The {@link TaskStorage} used in the application.","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    public TaskManager(TaskStorage taskStorage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"     * Displays the list of tasks in numerical order by implicitly invoking the string representation","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"     * of the tasks, along with the progress of the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"     * @param tasks        The tasks to be displayed.","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"     * @param userProgress The progress of the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"     * @return String representation of the tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"    public static String display(List\u003cTask\u003e tasks, String userProgress) {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"            return TaskManager.MESSAGE_NO_TASKS_AVAILABLE;","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"        String taskManagerDisplay \u003d IntStream","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"            .range(0, tasks.size())","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"            .mapToObj(index -\u003e String.format(\"%d. %s\\n\", index + 1, tasks.get(index)))","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"            .collect(Collectors.joining());","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"        return (taskManagerDisplay + \"\\n\\n\" + userProgress + \"\\n\").strip();","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"     * Adds the received {@link Task} into the task storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"     * @param task Task received from the caller.","lastModifiedDate":"2022-09-07"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"     * @return The added task.","lastModifiedDate":"2022-09-07"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the task cannot be added.","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"    public Task add(Task task) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"        return this.taskStorage.addTask(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"     * Updates the specified {@link Task} corresponding to the given task index.","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"     * @param taskNumber The 1-based task number, possibly corresponding to a particular task.","lastModifiedDate":"2022-09-07"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"     * @param task       the task to be updated.","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"     * @return The updated task.","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the task cannot be updated.","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"    public Task update(int taskNumber, Task task) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"        return this.taskStorage.updateTask(taskNumber - 1, task);","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"     * Deletes the specified task number (1-index) from the {@link TaskStorage task storage} and returns the deleted","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"     * {@link Task}.","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"EmilyOng"},"content":"     * @param taskNumber The 1-based task number, possibly corresponding to a particular task.","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"EmilyOng"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the task cannot be deleted.","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"EmilyOng"},"content":"    public Task delete(int taskNumber) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"EmilyOng"},"content":"        return this.taskStorage.deleteTask(taskNumber - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"EmilyOng"},"content":"     * Returns the {@link Task} corresponding to the task number.","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":100,"author":{"gitId":"EmilyOng"},"content":"     * @param taskNumber A 1-based task number, possibly corresponding to a particular task.","lastModifiedDate":"2022-09-07"},{"lineNumber":101,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"EmilyOng"},"content":"     * @return Task corresponding to the particular task number.","lastModifiedDate":"2022-09-07"},{"lineNumber":103,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the task cannot be read or retrieved.","lastModifiedDate":"2022-09-07"},{"lineNumber":104,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"EmilyOng"},"content":"    public Task get(int taskNumber) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"EmilyOng"},"content":"        return this.taskStorage.findTask(taskNumber - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"EmilyOng"},"content":"     * Returns the number of {@link Task tasks} in the {@link TaskStorage task storage}.","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"EmilyOng"},"content":"     * @return Number of tasks in the task storage.","lastModifiedDate":"2022-09-07"},{"lineNumber":113,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the tasks cannot be read.","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"EmilyOng"},"content":"    private int count() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"EmilyOng"},"content":"        return this.taskStorage.count();","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"EmilyOng"},"content":"     * Returns the status of the task manager encapsulated in the form of the number of {@link Task tasks} in the","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"EmilyOng"},"content":"     * {@link TaskStorage task storage}.","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"EmilyOng"},"content":"     * @return Status of the task manager.","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"EmilyOng"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"EmilyOng"},"content":"            return String.format(TaskManager.MESSAGE_TASK_LIST_STATUS, this.count());","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"EmilyOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"EmilyOng"},"content":"            return String.format(\"%s: %s\", TaskManager.MESSAGE_TASK_LIST_CANNOT_READ_STATUS, e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":133,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"EmilyOng"},"content":"     * Returns the progress of the user encapsulated in the form of the number of tasks completed in the past","lastModifiedDate":"2022-09-08"},{"lineNumber":135,"author":{"gitId":"EmilyOng"},"content":"     * week.","lastModifiedDate":"2022-09-08"},{"lineNumber":136,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"EmilyOng"},"content":"     * @return Progress of the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":138,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"EmilyOng"},"content":"    public String getUserProgress() {","lastModifiedDate":"2022-09-08"},{"lineNumber":140,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"EmilyOng"},"content":"            LocalDate oneWeekAgo \u003d LocalDate.now().minusWeeks(1);","lastModifiedDate":"2022-09-08"},{"lineNumber":142,"author":{"gitId":"EmilyOng"},"content":"            int numTasksCompleted \u003d this.list(","lastModifiedDate":"2022-09-08"},{"lineNumber":143,"author":{"gitId":"EmilyOng"},"content":"                task -\u003e task.getDoneAt() !\u003d null","lastModifiedDate":"2022-09-08"},{"lineNumber":144,"author":{"gitId":"EmilyOng"},"content":"                    \u0026\u0026 (task.getDoneAt().isAfter(oneWeekAgo) || task.getDoneAt().isEqual(oneWeekAgo))","lastModifiedDate":"2022-09-08"},{"lineNumber":145,"author":{"gitId":"EmilyOng"},"content":"            ).size();","lastModifiedDate":"2022-09-08"},{"lineNumber":146,"author":{"gitId":"EmilyOng"},"content":"            int totalNumTasks \u003d this.count();","lastModifiedDate":"2022-09-08"},{"lineNumber":147,"author":{"gitId":"EmilyOng"},"content":"            double userProgress \u003d (numTasksCompleted * 100.0) / totalNumTasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":148,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":149,"author":{"gitId":"EmilyOng"},"content":"            if (numTasksCompleted \u003d\u003d 0) {","lastModifiedDate":"2022-09-08"},{"lineNumber":150,"author":{"gitId":"EmilyOng"},"content":"                return \"\";","lastModifiedDate":"2022-09-08"},{"lineNumber":151,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":152,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":153,"author":{"gitId":"EmilyOng"},"content":"            return String.format(TaskManager.MESSAGE_TASK_COMPLETION_PROGRESS, userProgress);","lastModifiedDate":"2022-09-08"},{"lineNumber":154,"author":{"gitId":"EmilyOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"EmilyOng"},"content":"            return String.format(\"%s: %s\", TaskManager.MESSAGE_TASK_LIST_CANNOT_READ_STATUS, e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":160,"author":{"gitId":"EmilyOng"},"content":"     * Returns the list of {@link Task tasks} in the {@link TaskStorage task storage}.","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"EmilyOng"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":163,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the tasks cannot be read.","lastModifiedDate":"2022-09-07"},{"lineNumber":164,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":165,"author":{"gitId":"EmilyOng"},"content":"    public List\u003cTask\u003e list() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"EmilyOng"},"content":"        return this.taskStorage.readAllTasks();","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":168,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":169,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":170,"author":{"gitId":"EmilyOng"},"content":"     * Returns the filtered list of {@link Task tasks} in the {@link TaskStorage task storage} that passes the","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"EmilyOng"},"content":"     * predicate.","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"EmilyOng"},"content":"     * @param condition The predicate to test if the task should be returned.","lastModifiedDate":"2022-09-07"},{"lineNumber":174,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"EmilyOng"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":176,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the tasks cannot be read or retrieved.","lastModifiedDate":"2022-09-07"},{"lineNumber":177,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":178,"author":{"gitId":"EmilyOng"},"content":"    public List\u003cTask\u003e list(Predicate\u003c? super Task\u003e condition) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"EmilyOng"},"content":"        return this.taskStorage.filter(condition);","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":181,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"EmilyOng":181}},{"path":"src/main/java/duke/models/serializable/Serializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.serializable;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates the logic for serializing and deserializing a particular object of type {@code T}.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" * @param \u003cT\u003e The type of the object that can be serialized and deserialized","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"public abstract class Serializable\u003cT\u003e {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_MATCHING_SERIALIZABLE_REGEX \u003d \"Regex for serialized string does not match!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     * Use the double slash to escape the pipe character.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    private static final String formatterRead \u003d \" \\\\| \";","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private static final String formatterWrite \u003d formatterRead.replace(\"\\\\\", \"\");","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    private final String serialized;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    private final String[] originalData;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"     * Stores the original data and sets up a serialized form of the data.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     * @param originalData The original data.","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    public Serializable(String[] originalData) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"        this.originalData \u003d originalData;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"        this.serialized \u003d String.join(Serializable.formatterWrite, originalData);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"     * Initializes a new {@code Serializable} object by applying the reverse of the serialization operation on the","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"     * serialized string to obtain the original data as well as storing the serialized string, if and only if the","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"     * provided serialized string matches the expected format.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"     * @param serializedString The received serialized string.","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"     * @param regexMatch       The Regex format that the serialized string should match.","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the received serialized string does not match the provided Regex format.","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    public Serializable(String serializedString, Pattern regexMatch) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d regexMatch.matcher(serializedString);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(Serializable.ERROR_MATCHING_SERIALIZABLE_REGEX);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"        this.serialized \u003d serializedString;","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"        this.originalData \u003d serializedString.split(Serializable.formatterRead);","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"     * Supports the deserialization operation of the serializable object.","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"     * @return The deserialized object.","lastModifiedDate":"2022-09-07"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the object cannot be deserialized.","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"    public abstract T deserialize() throws DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"     * Returns the original data passed into the {@code Serializable} constructor.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"     * @return Original data passed into the constructor.","lastModifiedDate":"2022-09-07"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"    protected String[] get() {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"        return this.originalData;","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"        return this.serialized;","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":77}},{"path":"src/main/java/duke/models/serializable/TaskSerializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.serializable;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.TaskType;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"import duke.utils.DukeValidator;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates the logic for serializing and deserializing a {@link Task}.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"public class TaskSerializable extends Serializable\u003cTask\u003e {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_TASK_DATA \u003d Pattern.compile(\"(?\u003ctaskType\u003e[TDE])\\\\s\\\\|\\\\s\"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        + \"(?\u003ctaskCompleted\u003e[01])\\\\s\\\\|\\\\s\"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"        + \"(?\u003ctaskDoneAt\u003e(.*))\\\\s\\\\|\\\\s\"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        + \"(?\u003ctaskDescription\u003e(.+))(\\\\s\\\\|\\\\s\"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        + \"(?\u003ctaskMeta\u003e(.+)))?\"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    );","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    private static final String ASSERTION_SERIALIZED_FORMAT_VALID \u003d \"Serialized format must be valid.\";","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_UNKNOWN_TASK_TYPE \u003d \"Unknown task type %s!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * There are 4 core serialized components, including {@code taskType}, {@code taskCompleted},","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     * {@code taskDoneAt}, {@code taskDescription} and optionally a {@code taskMeta}, which is not counted.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"    private static final int NUM_CORE_SERIALIZED_COMPONENTS \u003d 4;","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"    private static final String TASK_IS_DONE_STATUS \u003d \"1\";","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    private static final String TASK_IS_NOT_DONE_STATUS \u003d \"0\";","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    private final String taskDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    private final boolean taskIsDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"    private final Object taskDoneAt;","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    private final Object taskMetaData;","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the serializable {@link Task} object from parameters for the {@link Task} model.","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"     * @param taskType        The type of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"     * @param taskIsDone      The completion status of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"     * @param taskDoneAt      The date where the task was marked as done.","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"     * @param taskMetaData    The meta data associated with the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"    public TaskSerializable(","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"        TaskType taskType,","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"        String taskDescription,","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"        boolean taskIsDone,","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"        LocalDate taskDoneAt,","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"        Object taskMetaData","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"    ) {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"        super(TaskSerializable.collateTaskInformation(taskType, taskDescription, taskIsDone, taskDoneAt, taskMetaData));","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"        this.taskIsDone \u003d taskIsDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"        this.taskDoneAt \u003d taskDoneAt;","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"        this.taskMetaData \u003d taskMetaData;","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"    private TaskSerializable(String serializedString) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"        super(serializedString, TaskSerializable.MATCH_TASK_DATA);","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"        String[] originalData \u003d super.get();","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"        assert (","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"            originalData.length \u003d\u003d TaskSerializable.NUM_CORE_SERIALIZED_COMPONENTS","lastModifiedDate":"2022-09-07"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"                || originalData.length \u003d\u003d NUM_CORE_SERIALIZED_COMPONENTS + 1","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"        ) : TaskSerializable.ASSERTION_SERIALIZED_FORMAT_VALID;","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"        // By invariance, there are at least 4 core serialized components consisting of","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"        // `taskType`, `taskIsDone`, `taskDoneAt`, and `taskDescription`. Optionally, there is a","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"        // `taskMeta` component.","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"        this.taskType \u003d TaskType.fromString(originalData[0]);","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"        this.taskIsDone \u003d originalData[1].equals(TaskSerializable.TASK_IS_DONE_STATUS);","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"        this.taskDoneAt \u003d originalData[2];","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"        this.taskDescription \u003d originalData[3];","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"EmilyOng"},"content":"        this.taskMetaData \u003d originalData.length \u003e TaskSerializable.NUM_CORE_SERIALIZED_COMPONENTS","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"EmilyOng"},"content":"            ? originalData[4]","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"EmilyOng"},"content":"            : null;","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"EmilyOng"},"content":"    private static String[] collateTaskInformation(","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"EmilyOng"},"content":"        TaskType taskType,","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"EmilyOng"},"content":"        String taskDescription,","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"EmilyOng"},"content":"        boolean taskIsDone,","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"EmilyOng"},"content":"        LocalDate taskDoneAt,","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"EmilyOng"},"content":"        Object taskMetaData","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"EmilyOng"},"content":"    ) {","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"EmilyOng"},"content":"        String taskIsDoneStatus \u003d taskIsDone","lastModifiedDate":"2022-09-07"},{"lineNumber":100,"author":{"gitId":"EmilyOng"},"content":"            ? TaskSerializable.TASK_IS_DONE_STATUS","lastModifiedDate":"2022-09-07"},{"lineNumber":101,"author":{"gitId":"EmilyOng"},"content":"            : TaskSerializable.TASK_IS_NOT_DONE_STATUS;","lastModifiedDate":"2022-09-07"},{"lineNumber":102,"author":{"gitId":"EmilyOng"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"EmilyOng"},"content":"            {","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"EmilyOng"},"content":"                add(taskType.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"EmilyOng"},"content":"                add(taskIsDoneStatus);","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"EmilyOng"},"content":"                add(taskDoneAt \u003d\u003d null ? \"\" : taskDoneAt.toString());","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"EmilyOng"},"content":"                add(taskDescription);","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"EmilyOng"},"content":"        };","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"EmilyOng"},"content":"        if (taskMetaData !\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"EmilyOng"},"content":"            data.add(taskMetaData.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"EmilyOng"},"content":"        return data.toArray(String[]::new);","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"EmilyOng"},"content":"     * Initializes and returns the serializable {@link Task} object from a serialized string.","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"EmilyOng"},"content":"     * @param serializedString The received serialized string.","lastModifiedDate":"2022-09-07"},{"lineNumber":120,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"EmilyOng"},"content":"     * @return The serializable task object if and only if the received serialized string is of the expected format.","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the serialized string is not of the expected format.","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"EmilyOng"},"content":"    public static TaskSerializable from(String serializedString) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"EmilyOng"},"content":"        return new TaskSerializable(serializedString);","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"EmilyOng"},"content":"    public Task deserialize() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"EmilyOng"},"content":"        LocalDate doneAt \u003d DukeValidator.parseDate(this.taskDoneAt.toString());","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"EmilyOng"},"content":"        switch (this.taskType) {","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"EmilyOng"},"content":"        case TODO:","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"EmilyOng"},"content":"            return new ToDo(this.taskDescription, this.taskIsDone, doneAt);","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"EmilyOng"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"EmilyOng"},"content":"            LocalDate deadline \u003d DukeValidator.parseDate(this.taskMetaData.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"EmilyOng"},"content":"            return new Deadline(this.taskDescription, deadline, this.taskIsDone, doneAt);","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"EmilyOng"},"content":"        case EVENT:","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"EmilyOng"},"content":"            LocalDate date \u003d DukeValidator.parseDate(this.taskMetaData.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"EmilyOng"},"content":"            return new Event(this.taskDescription, date, this.taskIsDone, doneAt);","lastModifiedDate":"2022-09-08"},{"lineNumber":140,"author":{"gitId":"EmilyOng"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(String.format(TaskSerializable.ERROR_UNKNOWN_TASK_TYPE, this.taskType));","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"EmilyOng":144}},{"path":"src/main/java/duke/models/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.models.serializable.TaskSerializable;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.utils.DukeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a {@link Task} that needs to be done before a specific date.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    private static final TaskType taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the Deadline task with the provided description and deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"     * @param description The received description.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"     * @param deadline    The received deadline.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the Deadline task with the provided description, deadline and completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     * @param description The received description.","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * @param deadline    The received deadline.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     * @param isDone      The received completion status.","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"     * @param doneAt      The received done at date.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    public Deadline(String description, LocalDate deadline, boolean isDone, LocalDate doneAt) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"        super(description, isDone, doneAt);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        return Deadline.taskType.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"    public TaskSerializable serialize() {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"        return new TaskSerializable(Deadline.taskType, super.description, super.isDone, super.doneAt, this.deadline);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        return this.deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), DukeFormatter.formatDate(this.deadline));","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":61}},{"path":"src/main/java/duke/models/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.models.serializable.TaskSerializable;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.utils.DukeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a {@link Task} that starts at a specific date and ends at a specific date.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    private static final TaskType taskType \u003d TaskType.EVENT;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the Event task with the provided description and date.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"     * @param description The received description.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"     * @param date        The received date.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    public Event(String description, LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the Event task with the provided description, date and completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     * @param description The received description.","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * @param date        The received date.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     * @param isDone      The received completion status.","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"     * @param doneAt      The received done at date.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    public Event(String description, LocalDate date, boolean isDone, LocalDate doneAt) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"        super(description, isDone, doneAt);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        return Event.taskType.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"    public TaskSerializable serialize() {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"        return new TaskSerializable(Event.taskType, super.description, super.isDone, super.doneAt, this.date);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        return this.date;","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), DukeFormatter.formatDate(this.date));","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":61}},{"path":"src/main/java/duke/models/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.models.serializable.TaskSerializable;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.utils.DukeFormatter;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a task containing a description and a completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    private static final String ASSERTION_DONE_AT_NOT_NULL_IF_IS_DONE \u003d \"doneAt should not be null if the task is\"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"        + \"marked as done.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    protected LocalDate doneAt;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the Task object with the provided description and sets the completion status to be undone.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"     * @param description The received description.","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        this.doneAt \u003d null;","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the Task object with the provided description and completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"     * @param description The received description.","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     * @param isDone      The received completion status.","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"     * @param doneAt      The received done at date where the task is marked as done.","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    public Task(String description, boolean isDone, LocalDate doneAt) {","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"            assert doneAt !\u003d null : Task.ASSERTION_DONE_AT_NOT_NULL_IF_IS_DONE;","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"            this.doneAt \u003d doneAt;","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"        } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"            this.doneAt \u003d null;","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"     * Marks the current task as done","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"        this.doneAt \u003d LocalDate.now();","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"     * Marks the current task as not done","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"        this.doneAt \u003d null;","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"     * @return Description of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"        return this.description;","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"     * Returns the doneAt date of the task. If the task is not marked as done, this method will return null.","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"     * @return Date of the task where the task was marked as done.","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"    public LocalDate getDoneAt() {","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"            assert this.doneAt !\u003d null : Task.ASSERTION_DONE_AT_NOT_NULL_IF_IS_DONE;","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"        } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"            assert this.doneAt \u003d\u003d null : Task.ASSERTION_DONE_AT_NOT_NULL_IF_IS_DONE;","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"EmilyOng"},"content":"        return this.doneAt;","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"EmilyOng"},"content":"     * Returns the task type icon of the current task.","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"EmilyOng"},"content":"     * @return Task type icon of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":94,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"EmilyOng"},"content":"    public abstract String getTaskTypeIcon();","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"EmilyOng"},"content":"     * Returns the date of the current task, or null if there is no associated date","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":100,"author":{"gitId":"EmilyOng"},"content":"     * @return Date of the current task, or null if there is no associated date.","lastModifiedDate":"2022-09-07"},{"lineNumber":101,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":102,"author":{"gitId":"EmilyOng"},"content":"    public abstract LocalDate getDate();","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":104,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"EmilyOng"},"content":"     * Returns the status icon of the current task, where a task that is done is marked with a \u0027X\u0027 and a task that is","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"EmilyOng"},"content":"     * undone is marked with an empty space.","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"EmilyOng"},"content":"     * @return Date of the current task, or null if there is no associated date.","lastModifiedDate":"2022-09-07"},{"lineNumber":109,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"EmilyOng"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"EmilyOng"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"EmilyOng"},"content":"            return String.format(\"X (Done on: %s)\", DukeFormatter.formatDate(this.doneAt));","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"EmilyOng"},"content":"        return \" \";","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"EmilyOng"},"content":"     * Returns a serializable format of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"EmilyOng"},"content":"     * @return Serializable format of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":121,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"EmilyOng"},"content":"    public abstract TaskSerializable serialize();","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"EmilyOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"[%s] [%s] %s\", this.getTaskTypeIcon(), this.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"EmilyOng":128}},{"path":"src/main/java/duke/models/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * List of valid task types.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    TODO {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"        @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"        public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"            return \"T\";","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    },","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    DEADLINE {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"        @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"        public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"            return \"D\";","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    },","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    EVENT {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"        public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"            return \"E\";","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    };","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     * Returns a corresponding TaskType from the given string.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     * @param str The received string input.","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * @return The corresponding TaskType.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    public static TaskType fromString(String str) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"        if (str.equals(TODO.toString())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"            return TODO;","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"        if (str.equals(DEADLINE.toString())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"            return DEADLINE;","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"        if (str.equals(EVENT.toString())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"            return EVENT;","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"        return null;","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":47}},{"path":"src/main/java/duke/models/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.models.serializable.TaskSerializable;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a {@link Task} without any date attached to it.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    private static final TaskType taskType \u003d TaskType.TODO;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the ToDo task with the provided description.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     * @param description The received description.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the ToDo task with the provided description and completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"     * @param description The received description.","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     * @param isDone      The received completion status.","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     * @param doneAt      The received done at date.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    public ToDo(String description, boolean isDone, LocalDate doneAt) {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"        super(description, isDone, doneAt);","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    public TaskSerializable serialize() {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"        return new TaskSerializable(ToDo.taskType, super.description, super.isDone, super.doneAt, null);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"        return ToDo.taskType.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"        return null;","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":50}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates the logic for managing data in files.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"public abstract class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    protected static final String ERROR_STORAGE_NOT_INITIALIZED \u003d \"Storage is not initialized yet!\";","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_CREATING_DATA_FOLDER \u003d \"No permission to create data folder!\";","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_CREATING_DATA_FILE \u003d \"No permission to create data file!\";","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    private static final String ASSERTION_FILE_STORAGE_INITIALIZED \u003d \"File storage should be initialized\";","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private final File storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    private boolean isInitialized;","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"     * Sets up the storage object for the provided file name.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"     * @param dataFilename The file name specifying where the data should be stored.","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    public Storage(String dataFilename) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"        this.storage \u003d new File(String.format(\"%s/%s\", Storage.FILE_DIRECTORY, dataFilename));","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"        this.isInitialized \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    protected File getStorage() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"        if (!this.isInitialized) {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(Storage.ERROR_STORAGE_NOT_INITIALIZED);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"        assert this.storage !\u003d null : Storage.ASSERTION_FILE_STORAGE_INITIALIZED;","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        return this.storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the storage by retrieving the file belonging to the file path for the","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"     * data, creating the relevant files and folders if necessary.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the files or folders for the data cannot be retrieved or created.","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"    public void initialize() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"        File parentFolder \u003d this.storage.getParentFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"        // Checks if the folder specified exists or not","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"            if (!parentFolder.exists() \u0026\u0026 !parentFolder.mkdir()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"                throw new DukeException(Storage.ERROR_CREATING_DATA_FOLDER);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(Storage.ERROR_CREATING_DATA_FOLDER);","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"        // Checks if the file specified exists or not","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"            if (!this.storage.exists() \u0026\u0026 !this.storage.createNewFile()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"                throw new DukeException(Storage.ERROR_CREATING_DATA_FILE);","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(Storage.ERROR_CREATING_DATA_FILE);","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"        // The storage has been successfully initialized","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"        this.isInitialized \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":73}},{"path":"src/main/java/duke/storage/StorageType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * List the types of storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"public enum StorageType {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    TASK","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":10}},{"path":"src/main/java/duke/storage/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"import duke.models.serializable.TaskSerializable;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"import duke.models.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates the logic for managing and interacting with the storage for storing {@link Task} data.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"public class TaskStorage extends Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    private static final String TASK_FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_ADDING_TASK_TO_STORAGE \u003d \"Error adding task to storage!\";","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_TASK_NOT_FOUND \u003d \"Task with id %d is not found!\";","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the task storage with the file path for where tasks information are persisted.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    public TaskStorage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"        super(TaskStorage.TASK_FILE_NAME);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     * Adds a {@link Task} to the task storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"     * @param addingTask Task object to be added.","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"     * @return The added task object.","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the task cannot be added.","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    public Task addTask(Task addingTask) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        this.appendTask(addingTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"        return addingTask;","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"     * Returns the {@link Task} specified by the task index.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"     * @param taskIndex 0-indexed specifier for the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"     * @return The corresponding task.","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the task cannot be found.","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"    public Task findTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"        List\u003cTask\u003e allTasks \u003d this.readAllTasks();","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d allTasks.size()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(String.format(TaskStorage.ERROR_TASK_NOT_FOUND, taskIndex + 1));","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"        return allTasks.get(taskIndex);","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"     * Deletes the {@link Task} corresponding to the task index from the task storage and returns the deleted task.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"     * @param taskIndex The task index corresponding to the task to be deleted.","lastModifiedDate":"2022-09-07"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-09-07"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the task cannot be deleted.","lastModifiedDate":"2022-09-07"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"    public Task deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"        List\u003cTask\u003e allTasks \u003d this.readAllTasks();","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d allTasks.size()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(String.format(TaskStorage.ERROR_TASK_NOT_FOUND, taskIndex + 1));","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"        Task deletedTask \u003d allTasks.remove(taskIndex);","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"        this.writeAllTasks(allTasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"        return deletedTask;","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"     * Updates the {@link Task} corresponding to the task index using the updated Task object provided by the caller,","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"     * and returns the updated task.","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"     * @param taskIndex    0-based indexed specifier for the task to be updated.","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"EmilyOng"},"content":"     * @param updatingTask The task object containing the updated task.","lastModifiedDate":"2022-09-07"},{"lineNumber":88,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"EmilyOng"},"content":"     * @return The updated task.","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the task cannot be updated.","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"EmilyOng"},"content":"    public Task updateTask(int taskIndex, Task updatingTask) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"EmilyOng"},"content":"        List\u003cTask\u003e allTasks \u003d this.readAllTasks();","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"EmilyOng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d allTasks.size()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(String.format(TaskStorage.ERROR_TASK_NOT_FOUND, taskIndex + 1));","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"EmilyOng"},"content":"        allTasks.set(taskIndex, updatingTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"EmilyOng"},"content":"        this.writeAllTasks(allTasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"EmilyOng"},"content":"        return updatingTask;","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"EmilyOng"},"content":"     * Returns the number of {@link Task tasks} in the task storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"EmilyOng"},"content":"     * @return Number of tasks in the task storage.","lastModifiedDate":"2022-09-07"},{"lineNumber":106,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the tasks cannot be read.","lastModifiedDate":"2022-09-07"},{"lineNumber":107,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"EmilyOng"},"content":"    public int count() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"EmilyOng"},"content":"        List\u003cTask\u003e allTasks \u003d this.readAllTasks();","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"EmilyOng"},"content":"        return allTasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"EmilyOng"},"content":"     * Returns a filtered {@link Task} list based on the provided predicate.","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"EmilyOng"},"content":"     * @param condition Predicate provided for the filter operation.","lastModifiedDate":"2022-09-07"},{"lineNumber":117,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"EmilyOng"},"content":"     * @return Filtered task list.","lastModifiedDate":"2022-09-07"},{"lineNumber":119,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the tasks cannot be read or retrieved.","lastModifiedDate":"2022-09-07"},{"lineNumber":120,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"EmilyOng"},"content":"    public List\u003cTask\u003e filter(Predicate\u003c? super Task\u003e condition) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"EmilyOng"},"content":"        return this.readAllTasks().stream().filter(condition).collect(Collectors.toList());","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"EmilyOng"},"content":"     * Returns the list of {@link Task tasks} in the task storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"EmilyOng"},"content":"     * @return List of tasks in the task storage.","lastModifiedDate":"2022-09-07"},{"lineNumber":129,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the tasks cannot be read.","lastModifiedDate":"2022-09-07"},{"lineNumber":130,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"EmilyOng"},"content":"    public List\u003cTask\u003e readAllTasks() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"EmilyOng"},"content":"        File storage \u003d this.getStorage();","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"EmilyOng"},"content":"        Scanner fileReader;","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"EmilyOng"},"content":"            fileReader \u003d new Scanner(storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"EmilyOng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(ERROR_STORAGE_NOT_INITIALIZED);","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"EmilyOng"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"EmilyOng"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"EmilyOng"},"content":"            TaskSerializable serializable \u003d TaskSerializable.from(fileReader.nextLine());","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"EmilyOng"},"content":"            allTasks.add(serializable.deserialize());","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"EmilyOng"},"content":"        return allTasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"EmilyOng"},"content":"    private void writeAllTasks(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"EmilyOng"},"content":"        File storage \u003d this.getStorage();","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"EmilyOng"},"content":"            FileWriter fileWriter \u003d new FileWriter(storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"EmilyOng"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"EmilyOng"},"content":"                fileWriter.write(task.serialize().toString() + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"EmilyOng"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"EmilyOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(TaskStorage.ERROR_ADDING_TASK_TO_STORAGE);","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"EmilyOng"},"content":"    private void appendTask(Task task) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"EmilyOng"},"content":"        File storage \u003d this.getStorage();","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"EmilyOng"},"content":"            // Set the \u0027append\u0027 flag to true to avoid overwriting existing file entries","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"EmilyOng"},"content":"            FileWriter fileWriter \u003d new FileWriter(storage, true);","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"EmilyOng"},"content":"            fileWriter.write(task.serialize().toString() + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"EmilyOng"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"EmilyOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(TaskStorage.ERROR_ADDING_TASK_TO_STORAGE);","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":174}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private static final String RESOURCE_DIALOG_BOX \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    private Label dialogText;","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(RESOURCE_DIALOG_BOX));","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"        this.dialogText.setText(text);","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"        this.displayPicture.setImage(img);","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    private void flip() {","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"        setAlignment(Pos.TOP_CENTER);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"        dialogBox.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"        return dialogBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"EmilyOng":59}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"            stage.show();","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"EmilyOng":31}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.managers.ParserManager;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.control.Accordion;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.control.TitledPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    private ImageView dukePicture;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    private Label appLabel;","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"    private Accordion commandsAccordion;","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/User.png\"))","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    );","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"            this.getClass().getResourceAsStream(\"/images/Duke.png\"))","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"    );","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"    private final String fontType \u003d \"Monaco\";","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"    private final int fontSize \u003d 12;","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"    private final int defaultPadding \u003d 8;","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"    private final int dialogBoxMinHeight \u003d 100;","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"    private final double opacityThreshold \u003d 0.7;","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"    protected void setDuke(Duke duke) {","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"    private void disableSendButtonIfEmptyUserInput() {","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"        this.sendButton.setDisable(this.userInput.getText().length() \u003d\u003d 0);","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"     * Initializes the main window application.","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"        this.dukePicture.setImage(this.dukeImage);","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"        this.appLabel.setText(Duke.NAME);","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"        this.disableSendButtonIfEmptyUserInput();","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"        Map\u003cString, String\u003e commandsMap \u003d ParserManager.getAllCommands();","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"        this.commandsAccordion.getPanes().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"            commandsMap.keySet().stream().map(commandWord -\u003e {","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"                Label label \u003d new Label(commandsMap.get(commandWord));","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"                label.setWrapText(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"                label.setFont(new Font(this.fontType, this.fontSize));","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"                label.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"                label.setMinHeight(this.dialogBoxMinHeight);","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"                label.setPadding(new Insets(this.defaultPadding));","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"                return new TitledPane(commandWord, label);","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"            }).collect(Collectors.toList())","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"EmilyOng"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"EmilyOng"},"content":"        // Greet the user","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"EmilyOng"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getDukeDialog(Duke.MESSAGE_GREETING, this.dukeImage));","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":92,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"EmilyOng"},"content":"    private void toggleCommandsAccordion() {","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"EmilyOng"},"content":"        this.commandsAccordion.setVisible(!this.commandsAccordion.isVisible());","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"EmilyOng"},"content":"        if (this.commandsAccordion.isVisible()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"EmilyOng"},"content":"            this.dialogContainer.setOpacity(this.opacityThreshold);","lastModifiedDate":"2022-09-07"},{"lineNumber":98,"author":{"gitId":"EmilyOng"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"EmilyOng"},"content":"            this.dialogContainer.setOpacity(1);","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"EmilyOng"},"content":"    private void closeCommandsAccordion() {","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"EmilyOng"},"content":"        if (!this.commandsAccordion.isVisible()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"EmilyOng"},"content":"            return;","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"EmilyOng"},"content":"        this.toggleCommandsAccordion();","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":112,"author":{"gitId":"EmilyOng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-30"},{"lineNumber":113,"author":{"gitId":"EmilyOng"},"content":"        this.disableSendButtonIfEmptyUserInput();","lastModifiedDate":"2022-08-30"},{"lineNumber":114,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":115,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":116,"author":{"gitId":"EmilyOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":117,"author":{"gitId":"EmilyOng"},"content":"    private void handleCommand() {","lastModifiedDate":"2022-08-30"},{"lineNumber":118,"author":{"gitId":"EmilyOng"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2022-08-30"},{"lineNumber":119,"author":{"gitId":"EmilyOng"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"EmilyOng"},"content":"            return;","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"EmilyOng"},"content":"        String response \u003d this.duke.handleCommand(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":123,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"EmilyOng"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-30"},{"lineNumber":125,"author":{"gitId":"EmilyOng"},"content":"                DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2022-08-30"},{"lineNumber":126,"author":{"gitId":"EmilyOng"},"content":"                DialogBox.getDukeDialog(response, this.dukeImage)","lastModifiedDate":"2022-08-30"},{"lineNumber":127,"author":{"gitId":"EmilyOng"},"content":"        );","lastModifiedDate":"2022-08-30"},{"lineNumber":128,"author":{"gitId":"EmilyOng"},"content":"        this.userInput.clear();","lastModifiedDate":"2022-08-30"},{"lineNumber":129,"author":{"gitId":"EmilyOng"},"content":"        this.userInput.requestFocus();","lastModifiedDate":"2022-08-30"},{"lineNumber":130,"author":{"gitId":"EmilyOng"},"content":"        this.disableSendButtonIfEmptyUserInput();","lastModifiedDate":"2022-08-30"},{"lineNumber":131,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":132,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"EmilyOng":132}},{"path":"src/main/java/duke/utils/DukeFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.utils;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates the logic for handling formatting in various parts of the application.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"public class DukeFormatter {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"     * Returns the formatted date according to the {@code MMM d yyyy} format.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"     * @param date The date object.","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"     * @return The formatted date.","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        final String dateFormatter \u003d \"MMM d yyyy\";","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        return date.format(DateTimeFormatter.ofPattern(dateFormatter));","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":23}},{"path":"src/main/java/duke/utils/DukeValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.utils;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates the logic for handling validation in various parts of the application.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"public class DukeValidator {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"     * Regex pattern matcher for a date in yyyy-mm-dd format.","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_DATE \u003d Pattern.compile(","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"            \"^(?\u003cyear\u003e\\\\d{4})-(?\u003cmonth\u003e0[0-9]|1[0-2])-(?\u003cday\u003e0[0-9]|1[0-9]|2[0-9]|3[0-1])$\"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    );","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    private static final String ERROR_INVALID_DATE \u003d \"Date is not in the specified yyyy-mm-dd format!\";","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"     * Returns the {@link LocalDate} object parsed from the provided date string.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"     * @param date The provided date string.","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"     * @return The date object corresponding to the provided date string if and only if the provided date string","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"     *         matches the expected format.","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"     * @throws DukeException If the provided date string does not match the expected format.","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    public static LocalDate parseDate(String date) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"        String strippedDate \u003d date.strip();","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        if (strippedDate.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"            return null;","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d MATCH_DATE.matcher(strippedDate);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(DukeValidator.ERROR_INVALID_DATE);","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"        return LocalDate.parse(strippedDate);","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"EmilyOng":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"\u003cfx:root alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"390.0\" style\u003d\"-fx-border-color: #322F3D; -fx-padding: 8px; -fx-spacing: 8px;\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"      \u003cLabel fx:id\u003d\"dialogText\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"317.0\" prefWidth\u003d\"317.0\" style\u003d\"-fx-background-color: #87556F; -fx-background-radius: 8px; -fx-word-wrap: break-word;\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"            \u003cFont name\u003d\"Monaco\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"33.0\" fitWidth\u003d\"47.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"EmilyOng":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"\u003c!--","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"  Copyright (c) 2015, 2019, Gluon and/or its affiliates.","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"  All rights reserved. Use is subject to license terms.","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"  This file is available and licensed under the following license:","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"  Redistribution and use in source and binary forms, with or without","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"  modification, are permitted provided that the following conditions","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"  are met:","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"  - Redistributions of source code must retain the above copyright","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    notice, this list of conditions and the following disclaimer.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"  - Redistributions in binary form must reproduce the above copyright","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    notice, this list of conditions and the following disclaimer in","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    the documentation and/or other materials provided with the distribution.","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"  - Neither the name of Oracle Corporation nor the names of its","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    contributors may be used to endorse or promote products derived","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    from this software without specific prior written permission.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"--\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.control.Accordion?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"397.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"      \u003cAccordion fx:id\u003d\"commandsAccordion\" layoutX\u003d\"37.0\" layoutY\u003d\"68.0\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"100.0\" prefWidth\u003d\"331.0\" style\u003d\"-fx-background-color: #4B5D67; -fx-view-order: -1; -fx-padding: 4px;\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"      \u003cHBox prefHeight\u003d\"45.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-padding: 8; -fx-spacing: 8; -fx-background-color: #322F3D;\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"            \u003cImageView fx:id\u003d\"dukePicture\" fitHeight\u003d\"27.0\" fitWidth\u003d\"33.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"            \u003cLabel fx:id\u003d\"appLabel\" prefHeight\u003d\"24.0\" prefWidth\u003d\"310.0\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"                  \u003cFont name\u003d\"Monaco\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"               \u003c/font\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"            \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#toggleCommandsAccordion\" prefHeight\u003d\"30.0\" prefWidth\u003d\"54.0\" style\u003d\"-fx-background-color: transparent; -fx-padding: 0; -fx-border-radius: 8px; -fx-border-color: #87556F;\" text\u003d\"?\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"                  \u003cFont name\u003d\"Monaco\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"               \u003c/font\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"      \u003cHBox alignment\u003d\"BOTTOM_LEFT\" layoutY\u003d\"557.0\" prefHeight\u003d\"44.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #59405C;\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"            \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleCommand\" onKeyPressed\u003d\"#handleUserInput\" onKeyReleased\u003d\"#handleUserInput\" onKeyTyped\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"318.0\" promptText\u003d\"Enter a command\" style\u003d\"-fx-background-color: #322F3D #322F3D; -fx-text-fill: #ffffff;\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"                  \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"               \u003c/font\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"            \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCommand\" prefHeight\u003d\"44.0\" prefWidth\u003d\"85.0\" style\u003d\"-fx-background-color: #87556F#87556F; -fx-background-radius: 8px;\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"                  \u003cFont name\u003d\"Monaco\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"               \u003c/font\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hmax\u003d\"0.0\" layoutY\u003d\"43.0\" prefHeight\u003d\"515.0\" prefWidth\u003d\"397.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" onMouseClicked\u003d\"#closeCommandsAccordion\" onTouchPressed\u003d\"#closeCommandsAccordion\" prefHeight\u003d\"513.0\" prefWidth\u003d\"396.0\" style\u003d\"-fx-background-color: #322F3D;\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"         \u003c/content\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"EmilyOng":84}},{"path":"src/test/java/duke/managers/ParserManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.managers;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.AddEventTaskCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.AddToDoTaskCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.DeleteTaskCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.ListTasksCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.MarkTaskCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"import duke.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"public class ParserManagerTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    public void parseCommand_invalidCommandWord_returnsIncorrectCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(new ParserManager().parseCommand(\"invalid\") instanceof IncorrectCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    public void parseCommand_listCommand_returnsListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(new ParserManager().parseCommand(\"list\") instanceof ListTasksCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    public void parseCommand_eventCommand_returnsListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(new ParserManager().parseCommand(\"event\") instanceof AddEventTaskCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"    public void parseCommand_todoCommand_returnsListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(new ParserManager().parseCommand(\"todo\") instanceof AddToDoTaskCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"    public void parseCommand_byeCommand_returnsListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(new ParserManager().parseCommand(\"bye\") instanceof ByeCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    public void parseCommand_deleteCommand_returnsListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(new ParserManager().parseCommand(\"delete\") instanceof DeleteTaskCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"    public void parseCommand_markCommand_returnsListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(new ParserManager().parseCommand(\"mark\") instanceof MarkTaskCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"    public void parseCommand_unmarkCommand_returnsListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(new ParserManager().parseCommand(\"unmark\") instanceof UnmarkTaskCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"EmilyOng":56}},{"path":"src/test/java/duke/models/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new Deadline(\"TaskA\", LocalDate.parse(\"2022-11-11\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    public void testMarkAsUndone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new Deadline(\"TaskA\", LocalDate.parse(\"2022-11-11\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new Deadline(\"TaskA\", LocalDate.parse(\"2022-11-11\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        assertEquals(\"[D] [ ] TaskA (by: Nov 11 2022)\", task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"EmilyOng":31}},{"path":"src/test/java/duke/models/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"public class EventTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new Event(\"TaskA\", LocalDate.parse(\"2022-11-11\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    public void testMarkAsUndone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new Event(\"TaskA\", LocalDate.parse(\"2022-11-11\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new Event(\"TaskA\", LocalDate.parse(\"2022-11-11\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        assertEquals(\"[E] [ ] TaskA (at: Nov 11 2022)\", task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"EmilyOng":31}},{"path":"src/test/java/duke/models/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package duke.models.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new ToDo(\"TaskA\");","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    public void testMarkAsUndone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new ToDo(\"TaskA\");","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d new ToDo(\"TaskA\");","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"        assertEquals(\"[T] [ ] TaskA\", task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"EmilyOng":29}}]

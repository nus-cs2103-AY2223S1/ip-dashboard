[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"import handlers.CommandType;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"import handlers.DukeCommand;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.CommandManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import utils.DukeErrorPrinter;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import utils.DukePrinter;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    // Name of the chatbot","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    private static final String NAME \u003d \"Duke\";","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    // The greeting message used by the chatbot when the program starts","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    private static final String GREETING_MESSAGE \u003d String.format(\"Hello! I\u0027m %s\\nWhat can I do for you?\", Duke.NAME);","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    private static final String UNKNOWN_COMMAND_ERROR \u003d \"I do not understand your command!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        CommandManager commandManager \u003d new CommandManager();","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        // Greet the user","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        DukePrinter.print(Duke.GREETING_MESSAGE);","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"            // Receive the command entered by the user","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"            String inputLine \u003d scanner.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"            String[] input \u003d inputLine.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"            String command \u003d input[0];","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"            String arguments \u003d inputLine.replaceFirst(command, \"\").strip();","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"            CommandType commandType;","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"                commandType \u003d CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"                DukeErrorPrinter.print(Duke.UNKNOWN_COMMAND_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"                continue;","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"            DukeCommand dukeCommand \u003d commandManager.get(commandType);","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"                String status \u003d dukeCommand.execute(taskManager, arguments);","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"                DukePrinter.print(status);","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"                DukeErrorPrinter.print(e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"            if (commandManager.isTerminatingCommand(commandType)) {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"        scanner.close();","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"EmilyOng":57}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package exceptions;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"    private static final String OOPS_MESSAGE \u003d \"OOPS!!!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"        super(String.format(\"%s %s\", DukeException.OOPS_MESSAGE, message));","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":9}},{"path":"src/main/java/handlers/AddDeadlineTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.Deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"public class AddDeadlineTaskCommand extends AddTaskCommand implements DukeCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    private static final String INVALID_DEADLINE_TASK_ERROR \u003d \"Use the \u0027deadline\u0027 command together with the \" +","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"            \"task description and deadline\\nFor example: \u0027deadline return book /by Sunday\u0027\";","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    // Matches a non-empty description and a non-empty deadline, separated by a \u0027/by\u0027 command","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    // For example: (\u003cdescription\u003e /by \u003cdeadline\u003e)","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_DEADLINE_TASK \u003d Pattern.compile(\"(.+?)\\\\s/by\\\\s(.+)\");","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager, String arguments) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d AddDeadlineTaskCommand.MATCH_DEADLINE_TASK.matcher(arguments);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(AddDeadlineTaskCommand.INVALID_DEADLINE_TASK_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        return this.addTask(taskManager, () -\u003e new Deadline(matcher.group(1).strip(), matcher.group(2).strip()));","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":26}},{"path":"src/main/java/handlers/AddEventTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.Event;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"public class AddEventTaskCommand extends AddTaskCommand implements DukeCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    private static final String INVALID_EVENT_TASK_ERROR \u003d \"Use the \u0027event\u0027 command together with the \" +","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"            \"task description and date time\\nFor example: \u0027event project meeting /at Mon 2-4pm\u0027\";","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    // Matches a non-empty description and a non-empty datetime, separated by a \u0027/at\u0027 command","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    // For example: \u003cdescription\u003e /at \u003cdatetime\u003e","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_EVENT_TASK \u003d Pattern.compile(\"(.+?)\\\\s/at\\\\s(.+)\");","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager, String arguments) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d AddEventTaskCommand.MATCH_EVENT_TASK.matcher(arguments);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(AddEventTaskCommand.INVALID_EVENT_TASK_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        return this.addTask(taskManager, () -\u003e new Event(matcher.group(1).strip(), matcher.group(2).strip()));","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":26}},{"path":"src/main/java/handlers/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import models.Task;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"abstract public class AddTaskCommand implements DukeCommand{","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    private static final String ADD_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"     * Retrieve the task supplied by the caller and adds that task to the specified task manager.","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"     * @param taskManager Task manager in charge of the list of tasks","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"     * @param taskSupplier Supplier function that returns a task","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"     * @return Status message","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    public String addTask(TaskManager taskManager, Supplier\u003c? extends Task\u003e taskSupplier) {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"        Task task \u003d taskSupplier.get();","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        taskManager.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        return String.format(","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"                \"%s\\n\\t%s\\n%s\",","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"                AddTaskCommand.ADD_TASK_MESSAGE,","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"                task,","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"                taskManager.getStatus()","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        );","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":28}},{"path":"src/main/java/handlers/AddToDoTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import models.ToDo;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"public class AddToDoTaskCommand extends AddTaskCommand implements DukeCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    private static final String INVALID_TODO_TASK_ERROR \u003d \"Use the \u0027todo\u0027 command together with a task \" +","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"            \"description!\\nFor example: \u0027todo borrow book\u0027\";","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    // Matches a non-empty description, for example: \u003cdescription\u003e","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    private static final Pattern MATCH_TODO_TASK \u003d Pattern.compile(\"(.+)\");","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager, String arguments) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"        Matcher matcher \u003d AddToDoTaskCommand.MATCH_TODO_TASK.matcher(arguments);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(AddToDoTaskCommand.INVALID_TODO_TASK_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        return this.addTask(taskManager, () -\u003e new ToDo(arguments.strip()));","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":26}},{"path":"src/main/java/handlers/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"public class ByeCommand implements DukeCommand{","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager, String arguments) {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"        return ByeCommand.GOODBYE_MESSAGE;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":12}},{"path":"src/main/java/handlers/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * List of valid commands for the user","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    LIST,","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"    MARK,","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    UNMARK,","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    TODO,","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    EVENT,","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    DELETE,","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    BYE","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":17}},{"path":"src/main/java/handlers/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.Task;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"public class DeleteTaskCommand implements DukeCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"    private static final String DELETE_TASK_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    private static final String MISSING_TASK_INDEX_ERROR \u003d \"You are missing a task number!\\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"            \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    private static final String NAN_TASK_NUMBER_ERROR \u003d \"The task number you provided is not a number!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    private static final String TASK_NUMBER_IS_INVALID_ERROR \u003d \"The task number you provided is not valid!\\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"            \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager, String arguments) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"        // Retrieve the task index (1-indexed) to delete the task","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(DeleteTaskCommand.MISSING_TASK_INDEX_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        int taskNumber;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"            taskNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(DeleteTaskCommand.NAN_TASK_NUMBER_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        Task task;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"            task \u003d taskManager.delete(taskNumber);","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(DeleteTaskCommand.TASK_NUMBER_IS_INVALID_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        return String.format(","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"                \"%s\\n\\t%s\\n%s\",","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"                DeleteTaskCommand.DELETE_TASK_MESSAGE,","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"                task,","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"                taskManager.getStatus()","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"        );","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":42}},{"path":"src/main/java/handlers/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates an executable command","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"@FunctionalInterface","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"public interface DukeCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"     * Receives a task manager object from the caller and execute a particular command that may or may","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"     * not result in a modification of the task manager object","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"     * @param taskManager Task Manager object to manage the list of tasks","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     * @param arguments The arguments received from the handler","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"     * @return Status message","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    String execute(TaskManager taskManager, String arguments) throws DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":23}},{"path":"src/main/java/handlers/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"public class ListTasksCommand implements DukeCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager, String arguments) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"        return taskManager.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":10}},{"path":"src/main/java/handlers/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import models.Task;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"public class MarkTaskCommand implements DukeCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"    private static final String MARK_TASK_AS_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    private static final String MISSING_TASK_INDEX_ERROR \u003d \"You are missing a task number!\\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"            \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    private static final String NAN_TASK_NUMBER_ERROR \u003d \"The task number you provided is not a number!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    private static final String TASK_NUMBER_IS_INVALID_ERROR \u003d \"The task number you provided is not valid!\\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"            \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager, String arguments) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"        // Retrieve the task index (1-indexed) to mark the task as done","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(MarkTaskCommand.MISSING_TASK_INDEX_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        int taskNumber;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"            taskNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(MarkTaskCommand.NAN_TASK_NUMBER_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        Task task;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"            task \u003d taskManager.get(taskNumber);","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(MarkTaskCommand.TASK_NUMBER_IS_INVALID_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"%s\\n\\t%s\", MarkTaskCommand.MARK_TASK_AS_DONE_MESSAGE, task);","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":38}},{"path":"src/main/java/handlers/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package handlers;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import models.TaskManager;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"import models.Task;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"public class UnmarkTaskCommand implements DukeCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"    private static final String MARK_TASK_AS_UNDONE_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    private static final String MISSING_TASK_INDEX_ERROR \u003d \"You are missing a task number!\\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"            \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    private static final String NAN_TASK_NUMBER_ERROR \u003d \"The task number you provided is not a number!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    private static final String TASK_NUMBER_IS_INVALID_ERROR \u003d \"The task number you provided is not valid!\\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"            \"Use the \u0027list\u0027 command to view the tasks and their number.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    public String execute(TaskManager taskManager, String arguments) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"        // Retrieve the task index (1-indexed) to mark the task as undone","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(UnmarkTaskCommand.MISSING_TASK_INDEX_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        int taskNumber;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"            taskNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(UnmarkTaskCommand.NAN_TASK_NUMBER_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        Task task;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"            task \u003d taskManager.get(taskNumber);","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"            throw new DukeException(UnmarkTaskCommand.TASK_NUMBER_IS_INVALID_ERROR);","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"%s\\n\\t%s\", UnmarkTaskCommand.MARK_TASK_AS_UNDONE_MESSAGE, task);","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":38}},{"path":"src/main/java/models/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package models;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import handlers.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"public class CommandManager {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    public final HashMap\u003cCommandType, DukeCommand\u003e commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    public CommandManager() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"        // Ensure that all commands have a corresponding command initializer","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"        CommandType[] allCommands \u003d CommandType.values();","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"        this.commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"        for (CommandType command : allCommands) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"            switch (command) {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"                // List all tasks in the task manager","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"                case LIST:","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"                    this.commands.put(command, new ListTasksCommand());","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"                // Modifying operations on a task","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"                case MARK:","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"                    this.commands.put(command, new MarkTaskCommand());","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"                case UNMARK:","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"                    this.commands.put(command, new UnmarkTaskCommand());","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"                case DELETE:","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"                    this.commands.put(command, new DeleteTaskCommand());","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"                // Creating operations on a task","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"                case TODO:","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"                    this.commands.put(command, new AddToDoTaskCommand());","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"                case DEADLINE:","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"                    this.commands.put(command, new AddDeadlineTaskCommand());","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"                case EVENT:","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"                    this.commands.put(command, new AddEventTaskCommand());","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"                // Termination of program","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"                case BYE:","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"                    this.commands.put(command, new ByeCommand());","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"     * Retrieve the command corresponding to the specified key","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"     * @param key Command key entered by the user","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"     * @return Corresponding DukeCommand if the key is valid","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"    public DukeCommand get(CommandType key) {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"        return this.commands.get(key);","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"    public boolean isTerminatingCommand(CommandType key) {","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"        return key.equals(CommandType.BYE);","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":66}},{"path":"src/main/java/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package models;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a task that needs to be done before a specific date/time,","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" * e.g., submit report by 11/10/2019 5pm","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    protected String deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        return TaskType.DEADLINE.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.deadline);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":27}},{"path":"src/main/java/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package models;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a task that starts at a specific time and ends at a specific time,","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" * e.g., team project meeting on 2/10/2019 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    protected String datetime;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"    public Event(String description, String datetime) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"        return TaskType.EVENT.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), this.datetime);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":27}},{"path":"src/main/java/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package models;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a task containing a description and a completion status","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"abstract public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"     * Marks the current task as done","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"     * Marks the current task as not done","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     * Return the task type icon of the current task. For example, a \"Deadline\" task has a","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     * task type icon of \u0027D\u0027.","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"     * @return Task type icon of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    abstract public String getTaskTypeIcon();","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"     * Return the status icon of the current task, where a task that is done is marked with","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"     * a \u0027X\u0027 and a task that is undone is marked with an empty space","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"     * @return Status icon of the task","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"        return String.format(\"[%s] [%s] %s\", this.getTaskTypeIcon(), this.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"EmilyOng":52}},{"path":"src/main/java/models/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package models;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" * Utility class to manage the list of tasks and provides augmenting operations to","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" * add to the list of tasks or to enumerate through the list of tasks","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"public class TaskManager {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"    // The list of tasks, accessed using 0-based indices","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    private static final String NO_TASKS_AVAILABLE \u003d \"There are currently no tasks available. Add one now!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"    private static final String TASK_LIST_STATUS_MESSAGE \u003d \"Now you have %s task(s) in the list.\";","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"    public TaskManager() {","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"     * Adds the received task into the task list","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"     * @param task Task received from the caller","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"     * Deletes the specified task number (1-index) from the task list","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"EmilyOng"},"content":"     * @param taskNumber The 1-based task number, possibly corresponding to a particular task","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"EmilyOng"},"content":"     * @return The deleted task","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"EmilyOng"},"content":"    public Task delete(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"EmilyOng"},"content":"        if (!this.isValidTask(taskNumber)) {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"EmilyOng"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"EmilyOng"},"content":"        int taskIndex \u003d this.getTaskIndexFromTaskNumber(taskNumber);","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"EmilyOng"},"content":"        return this.taskList.remove(taskIndex);","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"EmilyOng"},"content":"     * Retrieve the task","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"EmilyOng"},"content":"     * @param taskNumber An index (1-index) corresponding to a particular task","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"EmilyOng"},"content":"     * @return Task corresponding to the particular task number","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"EmilyOng"},"content":"    public Task get(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"EmilyOng"},"content":"        if (!this.isValidTask(taskNumber)) {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"EmilyOng"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"EmilyOng"},"content":"        int taskIndex \u003d this.getTaskIndexFromTaskNumber(taskNumber);","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"EmilyOng"},"content":"        return this.taskList.get(taskIndex);","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"EmilyOng"},"content":"     * Returns the number of tasks in the task manager list","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"EmilyOng"},"content":"     * @return Number of tasks in the task manager list","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"EmilyOng"},"content":"    public int count() {","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"EmilyOng"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"EmilyOng"},"content":"     * Returns the status of the task manager on the number of tasks in the list","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"EmilyOng"},"content":"     * @return Status of the task manager","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"EmilyOng"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"EmilyOng"},"content":"        return String.format(TASK_LIST_STATUS_MESSAGE, this.count());","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"EmilyOng"},"content":"     * Utility method to check if the provided 1-based task number is valid, i.e. there exists a","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"EmilyOng"},"content":"     * task corresponding to the specified task number","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"EmilyOng"},"content":"     * @param taskNumber The 1-based task number, possibly corresponding to a particular task","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"EmilyOng"},"content":"     * @return true if the task index corresponds to a valid task, and false otherwise","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"EmilyOng"},"content":"    private boolean isValidTask(int taskNumber) {","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"EmilyOng"},"content":"        int taskIndex \u003d this.getTaskIndexFromTaskNumber(taskNumber);","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"EmilyOng"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.count();","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"EmilyOng"},"content":"     * Utility method to retrieve the task index from the task number by applying a transformation","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"EmilyOng"},"content":"     * operation to deduct 1 from the task number to convert it to a 0-based index","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"EmilyOng"},"content":"     * @param taskNumber The provided task number in 1-based index","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"EmilyOng"},"content":"     * @return The corresponding task index in 0-based index","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"EmilyOng"},"content":"    private int getTaskIndexFromTaskNumber(int taskNumber) {","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"EmilyOng"},"content":"        return taskNumber - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":99,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":100,"author":{"gitId":"EmilyOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":101,"author":{"gitId":"EmilyOng"},"content":"        if (this.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":102,"author":{"gitId":"EmilyOng"},"content":"            return TaskManager.NO_TASKS_AVAILABLE;","lastModifiedDate":"2022-08-17"},{"lineNumber":103,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"EmilyOng"},"content":"        StringBuilder taskManagerDisplay \u003d new StringBuilder();","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"EmilyOng"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-08-16"},{"lineNumber":106,"author":{"gitId":"EmilyOng"},"content":"            // Implicitly invoke the display of the task defined in the Task class","lastModifiedDate":"2022-08-16"},{"lineNumber":107,"author":{"gitId":"EmilyOng"},"content":"            taskManagerDisplay.append(String.format(\"%d. %s\\n\", i + 1, this.taskList.get(i)));","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":109,"author":{"gitId":"EmilyOng"},"content":"        return taskManagerDisplay.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":110,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":111,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"EmilyOng":111}},{"path":"src/main/java/models/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package models;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * List of valid task types","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"    TODO {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"        @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"        public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"            return \"T\";","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    },","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    DEADLINE {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"        @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"        public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"            return \"D\";","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    },","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"    EVENT {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"        @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"        public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"            return \"E\";","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":27}},{"path":"src/main/java/models/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package models;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * Encapsulates a task without any date/time attached to it, e.g. visit new theme park","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"        return TaskType.TODO.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":18}},{"path":"src/main/java/utils/DukeErrorPrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package utils;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"public class DukeErrorPrinter extends DukePrinter {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"    private static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"    public static void print(String error) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"        System.out.print(DukeErrorPrinter.ANSI_RED);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"        DukePrinter.print(error);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"        System.out.print(DukeErrorPrinter.ANSI_RESET);","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":12}},{"path":"src/main/java/utils/DukePrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"package utils;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":" * Enables printing to screen display to be beautified according to the","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":" * line separator and tab formatter","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":" * @author Emily Ong Hui Qi","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"public class DukePrinter {","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"    // Horizontal line separator used in beautifying print commands","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"    private static final String SEPARATOR \u003d \"-\";","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"    // Denotes the number of separator symbols to used when printing the input","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"EmilyOng"},"content":"    private static final int SEPARATOR_SIZE \u003d 60;","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"EmilyOng"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"EmilyOng"},"content":"     * Returns a string consisting of the separator symbol repeated for a specified number of times","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"EmilyOng"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"EmilyOng"},"content":"     * @return Separator symbol repeated for a specified number of times","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"EmilyOng"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"EmilyOng"},"content":"    private static String getSeparatorLine() {","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"EmilyOng"},"content":"        return DukePrinter.SEPARATOR.repeat(DukePrinter.SEPARATOR_SIZE);","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"EmilyOng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"EmilyOng"},"content":"    public static void print(String input) {","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"EmilyOng"},"content":"        System.out.println(\"\\t\" + DukePrinter.getSeparatorLine());","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"EmilyOng"},"content":"        String[] inputs \u003d input.split(\"\\n\");","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"EmilyOng"},"content":"        for (String value : inputs) {","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"EmilyOng"},"content":"            System.out.println(\"\\t\" + value);","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"EmilyOng"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"EmilyOng"},"content":"        System.out.println(\"\\t\" + DukePrinter.getSeparatorLine());","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"EmilyOng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"EmilyOng"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"EmilyOng":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EmilyOng"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"EmilyOng"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"EmilyOng"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"EmilyOng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"EmilyOng"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"EmilyOng"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"EmilyOng"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"EmilyOng"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"EmilyOng"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"EmilyOng"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"EmilyOng"},"content":"event carnival /at Mon 5-9pm","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"EmilyOng"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"EmilyOng":12}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"javafx {","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"TZL0":27,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"T } 1 } 须弥探险","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"E } 0 } presentation } 2022-10-01 12:34","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"D } 0 } week 3 cs2103t project } 2022-08-25 23:45","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"E } 1 } CS2109S Lecture } 2022-08-26 11:22","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"E } 0 } CS2109S Lecture } 2022-08-19 00:01","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"E } 1 } CS2109S Lecture } 2022-08-12 02:59","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"E } 0 } CS2100 week 3 recitation } 2022-08-23 16:00","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"D } 0 } CS2102 tutorial 1 to finish } 2022-08-26 12:00","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"TZL0":8}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"@rem","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"echo.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"echo.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"goto fail","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"echo.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"echo.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"goto fail","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":":execute","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":":end","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":":fail","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"exit /b 1","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":":mainEnd","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":":omega","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2020-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2020-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"},{"lineNumber":195,"author":{"gitId":"TZL0"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e upstream/add-gradle-support","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"TZL0":92,"-":103}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    public static final double ROW_HEIGHT \u003d 18;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    public static final int ROW_LENGTH \u003d 35;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"//            setMinHeight(getNumberOfRows(text) * ROW_HEIGHT);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"//    private int getNumberOfRows(String s) {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"//        int result \u003d 0;","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"//        String[] strings \u003d s.split(System.lineSeparator());","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"//        for (String row : strings) {","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"//            result +\u003d (row.length() / ROW_LENGTH) + 1;","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"//        }","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"//        return result;","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"//    }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"TZL0":71}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"TZL0":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"TZL0":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        boot(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"            return;","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        if (input.equals(\"boot\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"            userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"            addDialogBox(DialogBox.getUserDialog(\"boot\", userImage));","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"            boot();","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"            return;","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        addDialogBox(userDialog);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        addDialogBox(dukeDialog);","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    private void addDialogBox(DialogBox dialogBox) {","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    private void boot(Duke... dukes) {","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        if (dukes.length \u003d\u003d 0) {","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"            this.duke \u003d new Duke();","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        } else if (dukes[0] \u003d\u003d null) {","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"            this.duke \u003d new Duke();","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"            this.duke \u003d dukes[0];","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        addDialogBox(DialogBox.getDukeDialog(duke.getResponse(\"greet\"), dukeImage));","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"TZL0":77}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.exception.CompileException;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import duke.exception.DukeRuntimeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" * The Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"public class Duke {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    private boolean isTerminated;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    private MessagePrinter messagePrinter;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Duke with given storage path.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     * @param storagePath The given storage path.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    public Duke(String storagePath) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        initialize(storagePath);","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Duke with given storage path.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    public Duke() {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        String storagePathWin \u003d \"data\\\\duke.txt\";","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        String storagePathElse \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        String storagePath \u003d System.getProperty(\"os.name\").startsWith(\"Windows\") ? storagePathWin : storagePathElse;","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        initialize(storagePath);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"     * The main method of Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"     * @param args The arguments.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        String storagePathWin \u003d \"data\\\\duke.txt\";","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        String storagePathElse \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        String storagePath \u003d System.getProperty(\"os.name\").startsWith(\"Windows\") ? storagePathWin : storagePathElse;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        new Duke(storagePath).run();","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    private void initialize(String storagePath) {","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        this.messagePrinter \u003d new MessagePrinter(39, \u0027*\u0027, 0);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        this.storage \u003d new Storage(storagePath);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        this.execute(Command.greet());","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"     * The method to launch Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    public void run() {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        while (!this.isTerminated) {","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"                    String entry \u003d scanner.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"                    Command command \u003d parse(entry);","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"                    execute(command);","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"                    this.isTerminated \u003d command.isTerminated();","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"                handle(dukeException);","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"    private Command parse(String entry) throws CompileException {","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        return Parser.parseCommand(entry);","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"     * The method to execute a givenCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"     * @param command The given Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"    public String execute(Command command) throws DukeRuntimeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"        return command.execute(this.tasks, this.messagePrinter, this.storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"     * The method to print given DukeException Details.","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"     * @param dukeException The given DukeException.","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"    public String handle(DukeException dukeException) {","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"        return this.messagePrinter.printMessage(dukeException.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"     * Returns the response of Duke with given input.","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"     * @param input The given input.","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"     * @return The response of Duke","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"            if (isTerminated) {","lastModifiedDate":"2022-09-01"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"                return \"...\";","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"            Scanner scanner \u003d new Scanner(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"            if (scanner.hasNext()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"                String entry \u003d scanner.nextLine();","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"                Command command \u003d parse(entry);","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"                this.isTerminated \u003d command.isTerminated();","lastModifiedDate":"2022-09-01"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"                return execute(command);","lastModifiedDate":"2022-09-01"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2022-09-01"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"            return handle(dukeException);","lastModifiedDate":"2022-09-01"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"        return null;","lastModifiedDate":"2022-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TZL0":123,"-":2}},{"path":"src/main/java/duke/Test.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public class Test extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    public Test() {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"        launch();","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"        String javaVersion \u003d System.getProperty(\"java.version\");","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"        String javafxVersion \u003d System.getProperty(\"javafx.version\");","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"        Label l \u003d new Label(\"Hello, JavaFX \" + javafxVersion + \", running on Java \" + javaVersion + \".\");","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"        Scene scene \u003d new Scene(new StackPane(l), 640, 480);","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"        stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        launch();","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"TZL0":28}},{"path":"src/main/java/duke/command/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import duke.exception.InvalidActionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * Represents all Actions that Duke supports.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"public enum Action {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    DONOTHING,","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    //    Level_1","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    GREET, ECHO, EXIT,","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    //    Level_2","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    ADD, LIST,","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    //    Level_3","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    MARK, UNMARK,","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    //    Level_4","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    TODO, EVENT, DEADLINE,","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    //    Level_5","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    //    No new actions is added","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    //    Level_6","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    DELETE,","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    //    Level_7","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    SAVE, READ,","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    //    Level_8","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    //    No new actions is added","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    //    Level-9","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    FIND;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * The HashMap stores the standardFormat of an Action.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    private static HashMap\u003cAction, String\u003e actionFormatMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * The HashMap stores the String representation of an Action.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    private static HashMap\u003cString, Action\u003e stringActionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    static {","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        HashMap\u003cAction, String\u003e map \u003d actionFormatMap;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        map.put(Action.DONOTHING, \"\");","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        //        Level_1","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        map.put(Action.GREET, \"greet\");","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        map.put(Action.EXIT, \"bye\");","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        map.put(Action.ECHO, \"echo\");","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        //        Level_2","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        map.put(Action.ADD, \"add [Name]\");","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        map.put(Action.LIST, \"list\");","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        //        Level_3","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        map.put(Action.MARK, \"mark [ID of task]\");","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        map.put(Action.UNMARK, \"unmark [ID of task]\");","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        //        Level_4","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        map.put(Action.TODO, \"todo [Name]\");","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        map.put(Action.EVENT, \"event [Event Name] /at [Event Time]\");","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        map.put(Action.DEADLINE, \"deadline [Deadline Name] /by [Deadline Time]\");","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        //        Level_5","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        //        No Action is added.","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        //        Level_6","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        map.put(Action.DELETE, \"delete [ID of Task]\");","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        //        Level_7","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        map.put(Action.SAVE, \"save\");","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        map.put(Action.READ, \"read\");","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        //        Level_8","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        //        No action added.","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        //        Level_9","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        map.put(Action.FIND, \"find [keyword]\");","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    static {","lastModifiedDate":"2022-08-15"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        HashMap\u003cString, Action\u003e map \u003d stringActionMap;","lastModifiedDate":"2022-08-15"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        map.put(\"\", Action.DONOTHING);","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        //        Level_1","lastModifiedDate":"2022-08-15"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        map.put(\"greet\", Action.GREET);","lastModifiedDate":"2022-08-15"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"        map.put(\"bye\", Action.EXIT);","lastModifiedDate":"2022-08-15"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        //        map.put(\"echo\", Action.ECHO);","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        //        Level_2","lastModifiedDate":"2022-08-15"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        //        map.put(\"add\", Action.ADD);","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        map.put(\"list\", Action.LIST);","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        //        Level_3","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        map.put(\"mark\", Action.MARK);","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        map.put(\"unmark\", Action.UNMARK);","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        //        Level_4","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        map.put(\"todo\", Action.TODO);","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        map.put(\"event\", Action.EVENT);","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"        map.put(\"deadline\", Action.DEADLINE);","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"        //        Level_5","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"        //        No Action is added.","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"        //        Level_6","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"        map.put(\"delete\", Action.DELETE);","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"        //        Level_7","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        map.put(\"save\", Action.SAVE);","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"        map.put(\"read\", Action.READ);","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"        //        Level_9","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"        map.put(\"find\", Action.FIND);","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"     * Returns the String representation of an Action.","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"     * @param action The Action to convert.","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"     * @return The String representation of an Action.","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"    public static String getString(Action action) {","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"        for (Map.Entry\u003cString, Action\u003e m : stringActionMap.entrySet()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"            if (m.getValue().equals(action)) {","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"                return m.getKey();","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"        return \"\";","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"     * Returns a mapped Action of the given String.","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"     * @param action The String to convert to Action","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"     * @return The mapped Action of the given String.","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"     * @throws InvalidActionException If the mapping of the given String is undefined.","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"    public static Action getAction(String action) throws InvalidActionException {","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"        return Optional.ofNullable(action)","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"                .map(x -\u003e Action.stringActionMap.get(x.trim()))","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"                .orElseThrow(() -\u003e new InvalidActionException(action));","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the given Action.","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"     * @param action The action.","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"    public static String getFormat(Action action) {","lastModifiedDate":"2022-08-17"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"        return Optional.ofNullable(action)","lastModifiedDate":"2022-08-17"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"                .map(x -\u003e Action.actionFormatMap.get(x))","lastModifiedDate":"2022-08-17"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"                .orElse(\"No standard format is provided\");","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":137,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"TZL0":137}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * Represents the Command to add Tasks to TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"     * The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    protected String msg;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     * Constructor of the Add Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"     * @param action Action to add specified Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     * @param message The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    protected AddCommand(Action action, String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"        super(action);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"        this.msg \u003d message;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * Returns the information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * @return The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public String getMsg() {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        return this.msg;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * Represents a Command to be executed by Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"     * The Action to be done by the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    protected Action action;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Constructor with the Action to be done by the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param action The Action to be done by the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    public Command(Action action) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a DoNothingCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"     * @return The DoNothingCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    public static DoNothingCommand doNothing() {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        return new DoNothingCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a GreetCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     * @return The GreetCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    public static GreetCommand greet() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        return new GreetCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return an ExitCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"     * @return The ExitCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    public static ExitCommand exit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a ListCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * @return The ListCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public static ListCommand list() {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        return new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a MarkCommand to mark given Task as done in Tasklist.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     * @param idTask The index of given Task in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"     * @return The MarkCommand to mark given Task as done in Tasklist.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    public static MarkCommand mark(int idTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        return new MarkCommand(idTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a UnmarkCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"     * to mark given Task as not done in the Tasklist.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"     * @param idTask The index of given Task in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * @return The MarkCommand to mark given Task as not done in the Tasklist.","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    public static UnmarkCommand unmark(int idTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        return new UnmarkCommand(idTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a TodoCommand to create Todo Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"     * @param msg The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"     * @return The TodoCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"    public static TodoCommand todo(String msg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        return new TodoCommand(msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return an EventCommand to create Event Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"     * @param msg The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"     * @param time The Time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"     * @return The EventCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"    public static EventCommand event(String msg, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"        return new EventCommand(msg, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a DeadlineCommand to create Deadline Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"     * @param msg The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"     * @param time The Time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"     * @return The DeadlineCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"    public static DeadlineCommand deadline(String msg, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        return new DeadlineCommand(msg, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a DeleteCommand to remove given Task from Tasklist.","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"     * @param idTask The index of given Task in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"     * @return The DeleteCommand to remove given Task from Tasklist.","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"    public static DeleteCommand delete(int idTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"        return new DeleteCommand(idTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a SaveCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"     * @return The SaveCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"    public static SaveCommand save() {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"        return new SaveCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a ReadCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"     * @return The ReadCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"    public static ReadCommand read() {","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"        return new ReadCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"     * A public static factory method to return a FindCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"     * @param target The String of the target.","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"     * @return The FindCommand","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"    public static FindCommand find(String target) {","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"TZL0"},"content":"        return new FindCommand(target);","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"     * @return The response of Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"    public abstract String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"     * @return The boolean indicating whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"    public abstract boolean isTerminated();","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"TZL0"},"content":"    public abstract String getFormat();","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"TZL0"},"content":"     * Return the Action to be done by the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"TZL0"},"content":"     * @return The Action to be done by the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"TZL0"},"content":"    public Action getAction() {","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"TZL0"},"content":"        return this.action;","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":168}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" * Represents a Command to create a Deadline Task in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     * The date and time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * The constructor of the class.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param msg The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param time The date and time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    protected DeadlineCommand(String msg, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        super(Action.DEADLINE, msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"     * Returns the date and time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * @return The date and time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        return this.time;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        return \"deadline [Deadline Name] /by [Deadline Time(yyyy-MM-dd HH:mm)]\";","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        String successMsg \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        Task deadline \u003d Task.deadline(msg, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        taskList.add(deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        successMsg \u003d successMsg + \"\\n\" + deadline + \"\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(successMsg);","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof DeadlineCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"            DeadlineCommand c \u003d (DeadlineCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"            if (this.getMsg() \u003d\u003d c.getMsg() \u0026\u0026 this.time \u003d\u003d c.getTime()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"            if (this.getMsg() \u003d\u003d null || c.getMsg() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"            if (this.getTime() \u003d\u003d null || c.getTime() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"            return this.getTime().equals(c.getTime()) \u0026\u0026 this.getMsg().equals(c.getMsg());","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":89}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" * Represents a Command to delete existing Task in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     * The index of Task to be deleted in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    private final int idTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * The constructor of the class.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * @param idTask The index of Task to be deleted in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    protected DeleteCommand(int idTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"        super(Action.DELETE);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        this.idTask \u003d idTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     * Return the index of Task to be deleted in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"     * @return The index of Task to be deleted in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    public int getIdTask() {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        return idTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        String successMsg \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        Task task \u003d taskList.remove(idTask - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        successMsg \u003d successMsg + \"\\n\" + task + \"\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(successMsg);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        return \"delete [ID of Task]\";","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof DeleteCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"            DeleteCommand c \u003d (DeleteCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"            return this.idTask \u003d\u003d c.getIdTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":85}},{"path":"src/main/java/duke/command/DoNothingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" * Represents a Command to do nothing in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class DoNothingCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * The constructor of the class.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    protected DoNothingCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(Action.DONOTHING);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        //            do nothing","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        return null;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        return \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        return obj instanceof DoNothingCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":63}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" * Represents a Command to create an Event Task in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     * The date and time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * The constructor of the class.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param msg The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param time The date and time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    protected EventCommand(String msg, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        super(Action.EVENT, msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"     * Returns the date and time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * @return The date and time of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        return time;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        return \"event [Event Name] /at [Event Time(yyyy-MM-dd HH:mm)]\";","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        String successMsg \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"        Task event \u003d Task.event(msg, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        taskList.add(event);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        successMsg \u003d successMsg + \"\\n\" + event + \"\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(successMsg);","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof EventCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"            EventCommand c \u003d (EventCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"            if (this.getMsg() \u003d\u003d c.getMsg() \u0026\u0026 this.time \u003d\u003d c.getTime()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"            if (this.getMsg() \u003d\u003d null || c.getMsg() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"            if (this.getTime() \u003d\u003d null || c.getTime() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"            return this.getTime().equals(c.getTime()) \u0026\u0026 this.getMsg().equals(c.getMsg());","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":89}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" * Represents a Command to terminates the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    protected ExitCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(Action.EXIT);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        String farewellMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(farewellMsg);","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        return \"bye\";","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        return obj instanceof ExitCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":62}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" * Represents a Command to find Tasks with given information.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    private String target;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     * @param target The given String.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    public FindCommand(String target) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"        super(Action.FIND);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"        this.target \u003d target;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     * Returns the target String.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     * @return The target String.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    public String getTarget() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        return this.target;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * @param tasks TaskList of the Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList tasks, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        Stream.iterate(0, x -\u003e x + 1).limit(tasks.size())","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"                .map(i -\u003e tasks.get(i))","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"                .filter(task -\u003e task.getName().contains(this.target))","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"                .forEach(task -\u003e temp.add(task));","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        if (temp.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"            message \u003d \"Currently no matching tasks in the list.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"            message \u003d message + temp.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(message);","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        return \"find [keyword]\";","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof FindCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"            FindCommand c \u003d (FindCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"            if (this.target \u003d\u003d c.getTarget()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"            if (this.target \u003d\u003d null || c.getTarget() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"            return this.target.equals(c.getTarget());","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"TZL0":96}},{"path":"src/main/java/duke/command/GreetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" * Represents a Command to greet the user in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class GreetCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    protected GreetCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(Action.GREET);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        String welcomeMsg \u003d \"Hello! I\u0027m Duke \\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(\"Hello from\\n\" + logo + \"\\n\" + welcomeMsg);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        return \"greet\";","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        return obj instanceof GreetCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":67}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" * Represents a Command to list all Tasks in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    protected ListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(Action.LIST);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        String message \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            message \u003d \"Currently no tasks in the list.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            message \u003d message + taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(message);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        return \"list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"        return obj instanceof ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":67}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" * Represents a Command to mark a Task as done in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    private final int idTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     * @param idTask The index of the Task to be marked as done in TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    protected MarkCommand(int idTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"        super(Action.MARK);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"        this.idTask \u003d idTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * Returns the index of the Task to be marked as done in TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     * @return The index of the Task to be marked as done in TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    public int getIdTask() {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        return idTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        String successMsg \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        Task task \u003d taskList.get(idTask - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(successMsg + \"\\n\" + task);","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"        return \"mark [ID of task]\";","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof MarkCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"            MarkCommand c \u003d (MarkCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"            return this.idTask \u003d\u003d c.getIdTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":81}},{"path":"src/main/java/duke/command/ReadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" * Represents a Command to read Tasks from Storage in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class ReadCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    protected ReadCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(Action.READ);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        taskList.loadFrom(storage.read());","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        String temp \u003d size \u003d\u003d 1 ? \"task has\" : \"tasks have\";","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(\"Your \" + size + \" \" + temp + \" been loaded successfully\\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"                + \"Type [list] to view your tasks\");","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        return \"read\";","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        return obj instanceof ReadCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":65}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" * Represents a Command to save Tasks to Storage in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    protected SaveCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(Action.SAVE);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        storage.write(taskList);","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        String temp \u003d size \u003d\u003d 1 ? \"task has\" : \"tasks have\";","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(\"Your \" + size + \" \" + temp + \" been saved successfully\");","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        return \"save\";","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        return obj instanceof SaveCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":64}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" * Represents a Command to create a Todo Task in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"     * @param msg The information of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    protected TodoCommand(String msg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"        super(Action.TODO, msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        return \"todo [Name]\";","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        String msg \u003d this.msg;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        String successMsg \u003d \"Got it. I\u0027ve added this Task:\";","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        Task todo \u003d Task.todo(msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        taskList.add(todo);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        successMsg \u003d successMsg + \"\\n\" + todo + \"\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(successMsg);","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof DeadlineCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"            DeadlineCommand c \u003d (DeadlineCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"            if (this.getMsg() \u003d\u003d c.getMsg()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"            if (this.getMsg() \u003d\u003d null || c.getMsg() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"            return this.getMsg().equals(c.getMsg());","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":69}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.MessagePrinter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" * Represents a Command to mark a Task not done in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     * The index of the Task to be marked as not done in TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    private final int idTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * @param idTask The index of the Task to be marked as not done in TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    protected UnmarkCommand(int idTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"        super(Action.UNMARK);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"        this.idTask \u003d idTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     * Returns the index of the Task to be marked as not done in TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"     * @return The index of the Task to be marked as not done in TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    public int getIdTask() {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        return idTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * Execute the Command with given Duke Segments.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     * @param taskList TaskList of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"     * @param messagePrinter MessagePrinter of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"     * @param storage Storage of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public String execute(TaskList taskList, MessagePrinter messagePrinter, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        String successMsg \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        Task task \u003d taskList.get(idTask - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        return messagePrinter.printMessage(successMsg + \"\\n\" + task);","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     * Returns the standard format of the Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * @return String of standard format.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"        return \"unmark [ID of task]\";","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"     * Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"     * @return Returns whether this command terminates Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof UnmarkCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"            UnmarkCommand c \u003d (UnmarkCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"            return this.idTask \u003d\u003d c.getIdTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":84}},{"path":"src/main/java/duke/exception/CompileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * The DukeException regarding user inputs.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class CompileException extends DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"     * The constructor of Compile Exception with given information.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"     * @param msg The given information.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public CompileException(String msg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"        super(\" I\u0027m sorry that your entry does not compile, \"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"                + \"please check with following information:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"                + msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof CompileException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            CompileException compileException \u003d (CompileException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            if (compileException \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(compileException.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":38}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * The Exceptions might be thrown and caught by Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Duke Exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"     * @param message","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof DukeException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            DukeException e \u003d (DukeException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":36}},{"path":"src/main/java/duke/exception/DukeRuntimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * The DukeException regarding the executing of Duke Commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class DukeRuntimeException extends DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"     * The constructor of DukeRuntimeException with given information.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"     * @param msg The given information.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public DukeRuntimeException(String msg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"        super(\" I\u0027m sorry that an error occurs when executing your command, \"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"                + \"please check with following information:\\n\" + msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof DukeRuntimeException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"            DukeRuntimeException e \u003d (DukeRuntimeException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":37}},{"path":"src/main/java/duke/exception/InvalidActionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * The DukeException when user enters an invalid action keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class InvalidActionException extends CompileException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"     * The constructor of the class with the incorrect Action name.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"     * @param action The incorrect Action name.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public InvalidActionException(String action) {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"        super(\"I don\u0027t know what [\" + action + \"] means :-(\");","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof InvalidActionException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            InvalidActionException e \u003d (InvalidActionException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":36}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.command.Action;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * The DukeException that the user enters incorrect arguments to a Duke Action.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public class InvalidArgumentException extends CompileException {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * @param action The invoking Action.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     * @param message The error information.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    public InvalidArgumentException(Action action, String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"        super(\"The description of a [\" + Action.getString(action) + \"] is incorrect.\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"                + message","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"                + \"\\nThe format of [\" + Action.getString(action) + \"] should be \u0027\" + Action.getFormat(action) + \"\u0027\"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"                + \"\\nAttribute Separator: \u0027\" + Parser.getAttributeSeparator() + \"\u0027, is not allowed.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof InvalidArgumentException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"            InvalidArgumentException e \u003d (InvalidArgumentException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":43}},{"path":"src/main/java/duke/exception/NoArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.command.Action;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * The DukeException that the user does not enter arguments to a Duke Action which needs arguments.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"public class NoArgumentException extends CompileException {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"     * @param action The invoking Action.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    public NoArgumentException(Action action) {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"        super(\"The description of a [\" + Action.getString(action) + \"] cannot be empty.\"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"                + \"\\nThe format of [\" + Action.getString(action) + \"] should be \u0027\" + Action.getFormat(action) + \"\u0027\");","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof NoArgumentException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            NoArgumentException e \u003d (NoArgumentException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":39}},{"path":"src/main/java/duke/exception/ReadAttributeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * The DukeRuntimeException when errors in reading attributes from a formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class ReadAttributeException extends RuntimeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"     * @param className The class that reads the formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     * @param formattedString The formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"     * @param message The Error Details.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    public ReadAttributeException(String className, String formattedString, String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"        super(\"When reading from \u0027\" + formattedString + \"\u0027 in class \" + className + \":\\n\" + message);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof ReadAttributeException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            ReadAttributeException e \u003d (ReadAttributeException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":38}},{"path":"src/main/java/duke/exception/ReadFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * The DukeRuntimeException that cannot read from file correctly.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"public class ReadFileException extends RuntimeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"     * @param path The path of the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * @param message The error detail.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    public ReadFileException(Path path, String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(\"When visiting \u0027\" + path.toString() + \"\u0027.\" + \":\\n\" + message);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof ReadFileException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            ReadFileException e \u003d (ReadFileException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":39}},{"path":"src/main/java/duke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":" * The DukeRuntimeException when index is not found in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"     * @param idTask The index of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public TaskNotFoundException(int idTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"        super(\"Task No.: \" + idTask + \" is not found in the task list. \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"                + \"Try command [list] to show the tasks you may choose from.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof TaskNotFoundException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"            TaskNotFoundException e \u003d (TaskNotFoundException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":37}},{"path":"src/main/java/duke/exception/WriteFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * The DukeRuntimeException that cannot write file correctly.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"public class WriteFileException extends RuntimeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"     * @param path The path of the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * @param message The error detail.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    public WriteFileException(Path path, String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(\"When writing \u0027\" + path.toString() + \"\u0027.\" + \":\\n\" + message);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof WriteFileException) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"            WriteFileException e \u003d (WriteFileException) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"            return this.getMessage().equals(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":39}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" * Represents Deadline tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    public static final String SYMBOL \u003d \"D\";","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    protected Deadline(String name, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"        super(name);","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"        return this.time;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public void setTime(LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString() + \" (by: \" + Parser.parseDateTimeToString(this.time) + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    public String toFormattedString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        return Parser.combineAttributes(SYMBOL,","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"                Integer.toString(Parser.convertBoolToInt(this.getIsDone())),","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"                this.getName(),","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"                Parser.parseDateTimeToString(this.getTime()));","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"            Deadline d \u003d (Deadline) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"            if (d \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"            if (this.time \u003d\u003d d.time \u0026\u0026 this.getName() \u003d\u003d d.getName()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"            if (this.getName() \u003d\u003d null || this.time \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"            if (d.getName() \u003d\u003d null || d.getTime() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"            return this.getName().equals(d.getName())","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 this.getIsDone() \u003d\u003d d.getIsDone()","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 this.getTime().equals(d.getTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":66}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" * Represents Event Tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public static final String SYMBOL \u003d \"E\";","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    protected Event(String name, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        super(name);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"        return this.time;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public void setTime(LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString() + \" (at: \" + Parser.parseDateTimeToString(this.time) + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public String toFormattedString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        return Parser.combineAttributes(SYMBOL,","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"                Integer.toString(Parser.convertBoolToInt(this.getIsDone())),","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"                this.getName(),","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"                Parser.parseDateTimeToString(this.getTime()));","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"            Event e \u003d (Event) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"            if (this.time \u003d\u003d e.time \u0026\u0026 this.getName() \u003d\u003d e.getName()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"            if (this.getName() \u003d\u003d null || this.time \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"            if (e.getName() \u003d\u003d null || e.getTime() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"            return this.getName().equals(e.getName())","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 this.getIsDone() \u003d\u003d e.getIsDone()","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 this.getTime().equals(e.getTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":65}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * Represents Tasks save by Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"    private String name;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    protected Task(String name) {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"        setName(name);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"        setIsDone(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    public static Todo todo(String msg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"        return new Todo(msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    public static Event event(String msg, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"        return new Event(msg, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public static Deadline deadline(String msg, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        return new Deadline(msg, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    public String getName() {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        return this.name;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    private void setIsDone(boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"    public abstract String toFormattedString();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        return (isDone ? \"[X]\" : \"[ ]\") + \" \" + this.getName();","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":60}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * Represents Todo tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"    public static final String SYMBOL \u003d \"T\";","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    protected Todo(String name) {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"        super(name);","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    public String toFormattedString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"        return Parser.combineAttributes(SYMBOL,","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"                Integer.toString(Parser.convertBoolToInt(this.getIsDone())),","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"                this.getName());","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"            Todo t \u003d (Todo) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"            if (t \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"            if (this.getName() \u003d\u003d t.getName()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"            if (this.getName() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"            if (t.getName() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"            return this.getName().equals(t.getName())","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 this.getIsDone() \u003d\u003d t.getIsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":51}},{"path":"src/main/java/duke/util/MessagePrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.util;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * Represents the UI of the Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public class MessagePrinter {","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"     * The indentation level.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    private int indentationLevel;","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     * The length of horizontal lines around the message.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    private int horizontalLineLength;","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * The symbol in horizontal lines.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    private char horizontalLineSymbol;","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     * The constructor of the class","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    public MessagePrinter() {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        setHorizontalLineLength(50);","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        setHorizontalLineSymbol(\u0027*\u0027);","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        setIndentationLevel(2);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * The constructor of the class","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    public MessagePrinter(int horizontalLineLength, char horizontalLineSymbol, int indentationLevel) {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        setHorizontalLineLength(horizontalLineLength);","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        setHorizontalLineSymbol(horizontalLineSymbol);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        setIndentationLevel(indentationLevel);","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"     * Set the indentation level to given value.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"     * @param indentationLevel","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    private void setIndentationLevel(int indentationLevel) {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        this.indentationLevel \u003d indentationLevel;","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * Set the horizontal line length to given value.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * @param horizontalLineLength","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    private void setHorizontalLineLength(int horizontalLineLength) {","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        this.horizontalLineLength \u003d horizontalLineLength;","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     * Set the horizontal line symbol to given character.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"     * @param horizontalLineSymbol","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"    private void setHorizontalLineSymbol(char horizontalLineSymbol) {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"        this.horizontalLineSymbol \u003d horizontalLineSymbol;","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"     * Returns the length of horizontal lines around the message.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"     * @return The length of horizontal lines around the message.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"    public int getHorizontalLineLength() {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"        return horizontalLineLength;","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"     * Returns the symbol of the horizontal line.","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"     * @return The symbol of the horizontal line.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    public char getHorizontalLineSymbol() {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        return horizontalLineSymbol;","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"     * Returns the indentation level.","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"     * @return The indentation level.","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"    public int getIndentationLevel() {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"        return indentationLevel;","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"     * Returns the indentation in String.","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"     * @return The indentation in String.","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"    private String getIndentation() {","lastModifiedDate":"2022-08-13"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"        return Stream.generate(() -\u003e \" \").limit(this.indentationLevel).reduce(\"\", (x, y) -\u003e x + y);","lastModifiedDate":"2022-08-13"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"     * Returns String of horizontal line.","lastModifiedDate":"2022-09-01"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"     * @return The String of horizontal line.","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"    private String printLine() {","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"        String line \u003d Stream.generate(() -\u003e Character.toString(this.horizontalLineSymbol))","lastModifiedDate":"2022-08-14"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"                .limit(this.horizontalLineLength)","lastModifiedDate":"2022-08-14"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"                .reduce(\"\", (x, y) -\u003e x + y);","lastModifiedDate":"2022-08-14"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"        return line;","lastModifiedDate":"2022-09-01"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"     * The method to print message.","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"     * @param msg The message to print.","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"    private void print(String msg) {","lastModifiedDate":"2022-08-13"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"        System.out.println(getIndentation() + msg);","lastModifiedDate":"2022-08-13"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"     * The method to accept given message and print with style.","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"     * @param msg The given message.","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"     * @return The message with style.","lastModifiedDate":"2022-09-01"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"    public String printMessage(String msg) {","lastModifiedDate":"2022-09-01"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"        result.append(printLine()).append(System.lineSeparator());","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"        result.append(Arrays.stream(msg.split(System.lineSeparator()))","lastModifiedDate":"2022-09-01"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"                        .reduce(\"\", (x, y) -\u003e x","lastModifiedDate":"2022-09-01"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"                                + (x.equals(\"\") ? \"\" : System.lineSeparator())","lastModifiedDate":"2022-09-01"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"                                + getIndentation() + y))","lastModifiedDate":"2022-09-01"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"                .append(System.lineSeparator());","lastModifiedDate":"2022-09-01"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"        result.append(printLine()).append(System.lineSeparator());","lastModifiedDate":"2022-09-01"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"        System.out.println(result.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"        return result.toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof MessagePrinter) {","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"TZL0"},"content":"            MessagePrinter mp \u003d (MessagePrinter) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"TZL0"},"content":"            return this.horizontalLineLength \u003d\u003d mp.horizontalLineLength","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 this.horizontalLineSymbol \u003d\u003d mp.getHorizontalLineSymbol()","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"                    \u0026\u0026 this.indentationLevel \u003d\u003d mp.getIndentationLevel();","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"TZL0":156}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.util;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"import duke.command.Action;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"import duke.exception.DukeRuntimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"import duke.exception.NoArgumentException;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"import duke.exception.ReadAttributeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":" * The Parser for conversion between String and other types.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"     * The String representation of the separator to divide a row of String into attributes.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"    private static final String ATTRIBUTE_SEPARATOR \u003d \"}\";","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     * Returns an Arraylist of all beginning indices of target in the whole String.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     * @param str1 The targeted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"     * @param str2 The whole String","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"     * @return The Arraylist of all beginning indices of target in the whole String.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    private static ArrayList\u003cInteger\u003e getIndicesOfStr1InStr2(String str1, String str2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        int len1 \u003d str1.length();","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        int len2 \u003d str2.length();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        ArrayList\u003cInteger\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        Stream.iterate(0, x -\u003e x + 1)","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"                .limit(len2 - len1 + 1)","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"                .filter(i -\u003e str2.substring(i, i + len1).equals(str1))","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"                .forEach(result::add);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     * Returns the first index of all beginning indices of target in the whole String.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * @param str1 The targeted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * @param str2 The whole String","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     * @return The first index of all beginning indices of target in the whole String.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"    private static int getFirstIndexOfStr1InStr2(String str1, String str2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        ArrayList\u003cInteger\u003e indices \u003d getIndicesOfStr1InStr2(str1, str2);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"        return indices.size() \u003d\u003d 0 ? -1 : indices.get(0);","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"     * Returns an Arraylist of String separated as attributes from the given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     * @param string The given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"     * @return The Arraylist of String separated as attributes from the given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"    private static ArrayList\u003cString\u003e separateAttributes(String string) {","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"        Arrays.stream(string.split(ATTRIBUTE_SEPARATOR)).forEach(s -\u003e result.add(s.trim()));","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"     * Returns the formatted String by combining attributes of Strings.","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"     * @param strings The attributes of Array of Strings","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"     * @return The formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    public static String combineAttributes(String... strings) {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"                .reduce(\"\", (x, y) -\u003e x + \" \" + ATTRIBUTE_SEPARATOR + \" \" + y)","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"                .substring(ATTRIBUTE_SEPARATOR.length() + 2);","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"     * Returns the Command indicated by given String.","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"     * @param s The given String.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"     * @return The Command.","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"     * @throws DukeException if the given String is not in correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"    public static Command parseCommand(String s) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"        int indexOfName;","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"        int indexOfTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        String arg1;","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"        String arg2;","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"        s \u003d s.trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"        String[] words \u003d s.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"        Action action \u003d Action.getAction(words[0]);","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"        switch (action) {","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"        case GREET:","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"            return Command.greet();","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"        case EXIT:","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"            return Command.exit();","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"        case MARK:","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"            arg1 \u003d s.substring(Action.getString(action).length()).trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"            if (arg1.equals(\"\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"                throw new NoArgumentException(action);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"            } else if (!isInt(arg1)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action, \"The argument should be an integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"            return Command.mark(Integer.parseInt(arg1));","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"            arg1 \u003d s.substring(Action.getString(action).length()).trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"            if (arg1.equals(\"\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"                throw new NoArgumentException(action);","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"            } else if (!isInt(arg1)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action, \"The argument should be an integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"            return Command.unmark(Integer.parseInt(arg1));","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"        case LIST:","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"            return Command.list();","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"        case TODO:","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"            arg1 \u003d s.substring(Action.getString(action).length()).trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"            if (arg1.equals(\"\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"                throw new NoArgumentException(action);","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"            } else if (!isValidString(arg1)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action,","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"                        \"Todo details should not contain \u0027}\u0027.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"            return Command.todo(arg1);","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"        case EVENT:","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"            String symbolEvent \u003d \" /at \";","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"            if (!s.contains(symbolEvent)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action, \"Keyword: [\"","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"TZL0"},"content":"                        + symbolEvent + \" ] or [Time] is not found.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"TZL0"},"content":"            indexOfName \u003d Action.getString(action).length();","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"            indexOfTime \u003d getFirstIndexOfStr1InStr2(symbolEvent, s);","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"            arg1 \u003d s.substring(indexOfName, indexOfTime).trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"            arg2 \u003d s.substring(indexOfTime + symbolEvent.length()).trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"TZL0"},"content":"            if (arg1.equals(\"\") \u0026\u0026 arg2.equals(\"\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"                throw new NoArgumentException(action);","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"            } else if (!isValidString(arg1)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action,","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"                        \"Event [Name] is not found.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"            } else if (!isValidDate(arg2)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action,","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"TZL0"},"content":"                        \"Event [Time] is not found.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"            return Command.event(arg1, parseStringToDateTime(arg2));","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"            String symbolDeadline \u003d \" /by \";","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"TZL0"},"content":"            if (!s.contains(symbolDeadline)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action, \"Keyword: [\"","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"TZL0"},"content":"                        + symbolDeadline + \" ] or [Time] is not found.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"TZL0"},"content":"            indexOfName \u003d Action.getString(action).length();","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"TZL0"},"content":"            indexOfTime \u003d getFirstIndexOfStr1InStr2(symbolDeadline, s);","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"TZL0"},"content":"            arg1 \u003d s.substring(indexOfName, indexOfTime).trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"TZL0"},"content":"            arg2 \u003d s.substring(indexOfTime + symbolDeadline.length()).trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"TZL0"},"content":"            if (arg1.equals(\"\") \u0026\u0026 arg2.equals(\"\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"TZL0"},"content":"                throw new NoArgumentException(action);","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"TZL0"},"content":"            } else if (!isValidString(arg1)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action,","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"TZL0"},"content":"                        \"Deadline [Name] is not found.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"TZL0"},"content":"            } else if (!isValidDate(arg2)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action,","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"TZL0"},"content":"                        \"Deadline [Time] is not found.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"TZL0"},"content":"            return Command.deadline(arg1, parseStringToDateTime(arg2));","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"TZL0"},"content":"        case DELETE:","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"TZL0"},"content":"            arg1 \u003d s.substring(Action.getString(action).length()).trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"TZL0"},"content":"            if (arg1.equals(\"\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":181,"author":{"gitId":"TZL0"},"content":"                throw new NoArgumentException(action);","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"TZL0"},"content":"            } else if (!isInt(arg1)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":183,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action, \"The argument should be an integer.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":185,"author":{"gitId":"TZL0"},"content":"            return Command.delete(Integer.parseInt(arg1));","lastModifiedDate":"2022-08-23"},{"lineNumber":186,"author":{"gitId":"TZL0"},"content":"        case SAVE:","lastModifiedDate":"2022-08-23"},{"lineNumber":187,"author":{"gitId":"TZL0"},"content":"            return Command.save();","lastModifiedDate":"2022-08-23"},{"lineNumber":188,"author":{"gitId":"TZL0"},"content":"        case READ:","lastModifiedDate":"2022-08-23"},{"lineNumber":189,"author":{"gitId":"TZL0"},"content":"            return Command.read();","lastModifiedDate":"2022-08-23"},{"lineNumber":190,"author":{"gitId":"TZL0"},"content":"        case FIND:","lastModifiedDate":"2022-08-25"},{"lineNumber":191,"author":{"gitId":"TZL0"},"content":"            arg1 \u003d s.substring(Action.getString(action).length()).trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":192,"author":{"gitId":"TZL0"},"content":"            if (arg1.equals(\"\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"TZL0"},"content":"                throw new NoArgumentException(action);","lastModifiedDate":"2022-08-25"},{"lineNumber":194,"author":{"gitId":"TZL0"},"content":"            } else if (!isValidString(arg1)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":195,"author":{"gitId":"TZL0"},"content":"                throw new InvalidArgumentException(action, \"The argument should be a String.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":196,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":197,"author":{"gitId":"TZL0"},"content":"            return Command.find(arg1);","lastModifiedDate":"2022-08-25"},{"lineNumber":198,"author":{"gitId":"TZL0"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":199,"author":{"gitId":"TZL0"},"content":"            return Command.doNothing();","lastModifiedDate":"2022-08-23"},{"lineNumber":200,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":201,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":202,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":203,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":204,"author":{"gitId":"TZL0"},"content":"     * Returns the Task represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":205,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":206,"author":{"gitId":"TZL0"},"content":"     * @param formattedString The given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":207,"author":{"gitId":"TZL0"},"content":"     * @return The Task represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":208,"author":{"gitId":"TZL0"},"content":"     * @throws ReadAttributeException if the String is not in correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":209,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":210,"author":{"gitId":"TZL0"},"content":"    public static Task parseTask(String formattedString) throws ReadAttributeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":211,"author":{"gitId":"TZL0"},"content":"        ArrayList\u003cString\u003e attributes \u003d Parser.separateAttributes(formattedString);","lastModifiedDate":"2022-08-25"},{"lineNumber":212,"author":{"gitId":"TZL0"},"content":"        switch (attributes.get(0)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"TZL0"},"content":"        case Todo.SYMBOL:","lastModifiedDate":"2022-08-25"},{"lineNumber":214,"author":{"gitId":"TZL0"},"content":"            return parseTodo(formattedString);","lastModifiedDate":"2022-08-25"},{"lineNumber":215,"author":{"gitId":"TZL0"},"content":"        case Event.SYMBOL:","lastModifiedDate":"2022-08-25"},{"lineNumber":216,"author":{"gitId":"TZL0"},"content":"            return parseEvent(formattedString);","lastModifiedDate":"2022-08-25"},{"lineNumber":217,"author":{"gitId":"TZL0"},"content":"        case Deadline.SYMBOL:","lastModifiedDate":"2022-08-25"},{"lineNumber":218,"author":{"gitId":"TZL0"},"content":"            return parseDeadline(formattedString);","lastModifiedDate":"2022-08-25"},{"lineNumber":219,"author":{"gitId":"TZL0"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":220,"author":{"gitId":"TZL0"},"content":"            throw new ReadAttributeException(","lastModifiedDate":"2022-08-25"},{"lineNumber":221,"author":{"gitId":"TZL0"},"content":"                    \"Task\", formattedString, \"Task Symbol: [\" + attributes.get(0) + \"] is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":222,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":223,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":224,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":225,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":226,"author":{"gitId":"TZL0"},"content":"     * Returns the Event represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":227,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":228,"author":{"gitId":"TZL0"},"content":"     * @param formattedString The given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":229,"author":{"gitId":"TZL0"},"content":"     * @return The Event represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":230,"author":{"gitId":"TZL0"},"content":"     * @throws ReadAttributeException if the String is not in correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":231,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":232,"author":{"gitId":"TZL0"},"content":"    private static Event parseEvent(String formattedString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":233,"author":{"gitId":"TZL0"},"content":"        ArrayList\u003cString\u003e attributes \u003d Parser.separateAttributes(formattedString);","lastModifiedDate":"2022-08-25"},{"lineNumber":234,"author":{"gitId":"TZL0"},"content":"        if (attributes.size() \u003c 4) {","lastModifiedDate":"2022-08-25"},{"lineNumber":235,"author":{"gitId":"TZL0"},"content":"            throw new ReadAttributeException(\"Event\", formattedString, \"Number of attributes less than 4\");","lastModifiedDate":"2022-08-25"},{"lineNumber":236,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":237,"author":{"gitId":"TZL0"},"content":"        Event result \u003d Task.event(attributes.get(2), parseStringToDateTime(attributes.get(3)));","lastModifiedDate":"2022-08-26"},{"lineNumber":238,"author":{"gitId":"TZL0"},"content":"        if (convertIntToBool(Integer.parseInt(attributes.get(1))) \u003d\u003d true) {","lastModifiedDate":"2022-08-25"},{"lineNumber":239,"author":{"gitId":"TZL0"},"content":"            result.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":240,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":241,"author":{"gitId":"TZL0"},"content":"        return result;","lastModifiedDate":"2022-08-25"},{"lineNumber":242,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":243,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":244,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":245,"author":{"gitId":"TZL0"},"content":"     * Returns the Deadline represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":246,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":247,"author":{"gitId":"TZL0"},"content":"     * @param formattedString The given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":248,"author":{"gitId":"TZL0"},"content":"     * @return The Deadline represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":249,"author":{"gitId":"TZL0"},"content":"     * @throws ReadAttributeException if the String is not in correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":250,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":251,"author":{"gitId":"TZL0"},"content":"    private static Deadline parseDeadline(String formattedString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":252,"author":{"gitId":"TZL0"},"content":"        ArrayList\u003cString\u003e attributes \u003d Parser.separateAttributes(formattedString);","lastModifiedDate":"2022-08-25"},{"lineNumber":253,"author":{"gitId":"TZL0"},"content":"        if (attributes.size() \u003c 4) {","lastModifiedDate":"2022-08-25"},{"lineNumber":254,"author":{"gitId":"TZL0"},"content":"            throw new ReadAttributeException(\"Deadline\", formattedString, \"Number of attributes less than 4\");","lastModifiedDate":"2022-08-25"},{"lineNumber":255,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":256,"author":{"gitId":"TZL0"},"content":"        Deadline result \u003d Task.deadline(attributes.get(2), parseStringToDateTime(attributes.get(3)));","lastModifiedDate":"2022-08-26"},{"lineNumber":257,"author":{"gitId":"TZL0"},"content":"        if (convertIntToBool(Integer.parseInt(attributes.get(1))) \u003d\u003d true) {","lastModifiedDate":"2022-08-25"},{"lineNumber":258,"author":{"gitId":"TZL0"},"content":"            result.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":259,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":260,"author":{"gitId":"TZL0"},"content":"        return result;","lastModifiedDate":"2022-08-25"},{"lineNumber":261,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":262,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":263,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":264,"author":{"gitId":"TZL0"},"content":"     * Returns the Todo represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":265,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":266,"author":{"gitId":"TZL0"},"content":"     * @param formattedString The given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":267,"author":{"gitId":"TZL0"},"content":"     * @return The Todo represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":268,"author":{"gitId":"TZL0"},"content":"     * @throws ReadAttributeException if the String is not in correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":269,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":270,"author":{"gitId":"TZL0"},"content":"    private static Todo parseTodo(String formattedString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":271,"author":{"gitId":"TZL0"},"content":"        ArrayList\u003cString\u003e attributes \u003d Parser.separateAttributes(formattedString);","lastModifiedDate":"2022-08-25"},{"lineNumber":272,"author":{"gitId":"TZL0"},"content":"        if (attributes.size() \u003c 3) {","lastModifiedDate":"2022-08-25"},{"lineNumber":273,"author":{"gitId":"TZL0"},"content":"            throw new ReadAttributeException(\"Todo\", formattedString, \"Number of attributes less than 3\");","lastModifiedDate":"2022-08-25"},{"lineNumber":274,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":275,"author":{"gitId":"TZL0"},"content":"        Todo result \u003d Task.todo(attributes.get(2));","lastModifiedDate":"2022-08-26"},{"lineNumber":276,"author":{"gitId":"TZL0"},"content":"        if (Parser.convertIntToBool(Integer.parseInt(attributes.get(1))) \u003d\u003d true) {","lastModifiedDate":"2022-08-25"},{"lineNumber":277,"author":{"gitId":"TZL0"},"content":"            result.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":278,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":279,"author":{"gitId":"TZL0"},"content":"        return result;","lastModifiedDate":"2022-08-25"},{"lineNumber":280,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":281,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":282,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":283,"author":{"gitId":"TZL0"},"content":"     * Returns the TaskList represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":284,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":285,"author":{"gitId":"TZL0"},"content":"     * @param formattedString The given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":286,"author":{"gitId":"TZL0"},"content":"     * @return The TaskList represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":287,"author":{"gitId":"TZL0"},"content":"     * @throws ReadAttributeException if the String is not in correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":288,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":289,"author":{"gitId":"TZL0"},"content":"    public static TaskList parseTaskList(String formattedString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":290,"author":{"gitId":"TZL0"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":291,"author":{"gitId":"TZL0"},"content":"        String[] rows \u003d formattedString.split(System.lineSeparator());","lastModifiedDate":"2022-08-27"},{"lineNumber":292,"author":{"gitId":"TZL0"},"content":"        Arrays.stream(rows)","lastModifiedDate":"2022-08-27"},{"lineNumber":293,"author":{"gitId":"TZL0"},"content":"                .filter(s -\u003e !s.trim().equals(\"\"))","lastModifiedDate":"2022-08-25"},{"lineNumber":294,"author":{"gitId":"TZL0"},"content":"                .map(s -\u003e s.trim())","lastModifiedDate":"2022-08-25"},{"lineNumber":295,"author":{"gitId":"TZL0"},"content":"                .map(s -\u003e Parser.parseTask(s))","lastModifiedDate":"2022-08-25"},{"lineNumber":296,"author":{"gitId":"TZL0"},"content":"                .forEach(task -\u003e result.add(task));","lastModifiedDate":"2022-08-25"},{"lineNumber":297,"author":{"gitId":"TZL0"},"content":"        return result;","lastModifiedDate":"2022-08-25"},{"lineNumber":298,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":299,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":300,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":301,"author":{"gitId":"TZL0"},"content":"     * Returns a boolean indicating whether the given String is a valid integer.","lastModifiedDate":"2022-08-25"},{"lineNumber":302,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":303,"author":{"gitId":"TZL0"},"content":"     * @param s The given String","lastModifiedDate":"2022-08-25"},{"lineNumber":304,"author":{"gitId":"TZL0"},"content":"     * @return The boolean indicating whether the given String is a valid integer.","lastModifiedDate":"2022-08-25"},{"lineNumber":305,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":306,"author":{"gitId":"TZL0"},"content":"    private static boolean isInt(String s) {","lastModifiedDate":"2022-08-23"},{"lineNumber":307,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":308,"author":{"gitId":"TZL0"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2022-08-23"},{"lineNumber":309,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":310,"author":{"gitId":"TZL0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":311,"author":{"gitId":"TZL0"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":312,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":313,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":314,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":315,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":316,"author":{"gitId":"TZL0"},"content":"     * Returns a boolean indicating whether the given String is a valid String.","lastModifiedDate":"2022-08-25"},{"lineNumber":317,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":318,"author":{"gitId":"TZL0"},"content":"     * @param input The given String","lastModifiedDate":"2022-08-25"},{"lineNumber":319,"author":{"gitId":"TZL0"},"content":"     * @return The boolean indicating whether the given String is a valid String.","lastModifiedDate":"2022-08-25"},{"lineNumber":320,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":321,"author":{"gitId":"TZL0"},"content":"    private static boolean isValidString(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":322,"author":{"gitId":"TZL0"},"content":"        return input !\u003d null \u0026\u0026 !input.equals(\"\") \u0026\u0026 !input.contains(ATTRIBUTE_SEPARATOR);","lastModifiedDate":"2022-08-23"},{"lineNumber":323,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":324,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":325,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":326,"author":{"gitId":"TZL0"},"content":"     * Returns a boolean indicating whether the given String is a valid LocalDateTime.","lastModifiedDate":"2022-08-25"},{"lineNumber":327,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":328,"author":{"gitId":"TZL0"},"content":"     * @param input The given String","lastModifiedDate":"2022-08-25"},{"lineNumber":329,"author":{"gitId":"TZL0"},"content":"     * @return The boolean indicating whether the given String is a valid LocalDateTime.","lastModifiedDate":"2022-08-25"},{"lineNumber":330,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":331,"author":{"gitId":"TZL0"},"content":"    private static boolean isValidDate(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":332,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":333,"author":{"gitId":"TZL0"},"content":"            LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":334,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":335,"author":{"gitId":"TZL0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":336,"author":{"gitId":"TZL0"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":337,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":338,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":339,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":340,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":341,"author":{"gitId":"TZL0"},"content":"     * Returns the number representation of a given boolean.","lastModifiedDate":"2022-08-25"},{"lineNumber":342,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":343,"author":{"gitId":"TZL0"},"content":"     * @param bool The given boolean.","lastModifiedDate":"2022-08-25"},{"lineNumber":344,"author":{"gitId":"TZL0"},"content":"     * @return The number representation of a given boolean.","lastModifiedDate":"2022-08-25"},{"lineNumber":345,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":346,"author":{"gitId":"TZL0"},"content":"    public static int convertBoolToInt(boolean bool) {","lastModifiedDate":"2022-08-25"},{"lineNumber":347,"author":{"gitId":"TZL0"},"content":"        return bool ? 1 : 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":348,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":349,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":350,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":351,"author":{"gitId":"TZL0"},"content":"     * Returns the boolean from given number representation.","lastModifiedDate":"2022-08-25"},{"lineNumber":352,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":353,"author":{"gitId":"TZL0"},"content":"     * @param i The given number representation.","lastModifiedDate":"2022-08-25"},{"lineNumber":354,"author":{"gitId":"TZL0"},"content":"     * @return The boolean.","lastModifiedDate":"2022-08-25"},{"lineNumber":355,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":356,"author":{"gitId":"TZL0"},"content":"    public static boolean convertIntToBool(int i) {","lastModifiedDate":"2022-08-25"},{"lineNumber":357,"author":{"gitId":"TZL0"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":358,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":359,"author":{"gitId":"TZL0"},"content":"        } else if (i \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":360,"author":{"gitId":"TZL0"},"content":"            return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":361,"author":{"gitId":"TZL0"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":362,"author":{"gitId":"TZL0"},"content":"            throw new DukeRuntimeException(i + \" is not defined when converting int to bool.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":363,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":364,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":365,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":366,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":367,"author":{"gitId":"TZL0"},"content":"     * Returns the String representation of the Attribute Separator in formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":368,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":369,"author":{"gitId":"TZL0"},"content":"     * @return The String representation of the Attribute Separator in formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":370,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":371,"author":{"gitId":"TZL0"},"content":"    public static String getAttributeSeparator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":372,"author":{"gitId":"TZL0"},"content":"        return ATTRIBUTE_SEPARATOR;","lastModifiedDate":"2022-08-23"},{"lineNumber":373,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":374,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":375,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":376,"author":{"gitId":"TZL0"},"content":"     * Returns the String representation of given LocalDateTime.","lastModifiedDate":"2022-08-25"},{"lineNumber":377,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":378,"author":{"gitId":"TZL0"},"content":"     * @param localDateTime The given LocalDateTime.","lastModifiedDate":"2022-08-25"},{"lineNumber":379,"author":{"gitId":"TZL0"},"content":"     * @return The String representation of given LocalDateTime.","lastModifiedDate":"2022-08-25"},{"lineNumber":380,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":381,"author":{"gitId":"TZL0"},"content":"    public static String parseDateTimeToString(LocalDateTime localDateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":382,"author":{"gitId":"TZL0"},"content":"        return localDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":383,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":384,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":385,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":386,"author":{"gitId":"TZL0"},"content":"     * Returns the LocalDateTime from given String representation.","lastModifiedDate":"2022-08-25"},{"lineNumber":387,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":388,"author":{"gitId":"TZL0"},"content":"     * @param string The given String representation.","lastModifiedDate":"2022-08-25"},{"lineNumber":389,"author":{"gitId":"TZL0"},"content":"     * @return The LocalDateTime from given String representation.","lastModifiedDate":"2022-08-25"},{"lineNumber":390,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":391,"author":{"gitId":"TZL0"},"content":"    public static LocalDateTime parseStringToDateTime(String string) {","lastModifiedDate":"2022-08-23"},{"lineNumber":392,"author":{"gitId":"TZL0"},"content":"        return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":393,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":394,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":394}},{"path":"src/main/java/duke/util/Savable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.util;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.exception.ReadAttributeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":" * The Interface representing the given type is able to be saved in a file by Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":" * @param \u003cT\u003e The given type.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public interface Savable\u003cT\u003e {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"     * Returns the formatted string representation of the object.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"     * @return The formatted string representation of the object.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    String toFormattedString();","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"     * Returns the object of type T instantiated by parsing the","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     * @param formattedString The given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * @return Returns the instantiated object of type T.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @throws ReadAttributeException if given String is not in correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    T parse(String formattedString) throws ReadAttributeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":24}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.util;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"import duke.exception.ReadFileException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"import duke.exception.WriteFileException;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":" * The IO part of Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"     * The Path of the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"    private final Path path;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"     * The constructor of the Class.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"     * @param path","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        this.path \u003d Paths.get(path);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        initialize();","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"     * To check whether directory or file exists and create if not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"    private void initialize() {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        checkDirectory();","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        checkFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"     * Returns the path of the Storage.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"     * @return The path of the Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"    public Path getPath() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        return path;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"     * Writes given content to the Path.","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"     * @param content The given content.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    public void write(String content) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"        initialize();","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.path.toFile());","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"            fileWriter.write(content);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"            throw new WriteFileException(this.path, \"Unable to write the file.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"     * Writes given content to the Path.","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     * @param content The given content.","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"    public \u003cT\u003e void write(Savable\u003cT\u003e content) {","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        write(content.toFormattedString());","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * Reads given content from the Path.","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"     * @return The content in the Path. Returns empty String if file does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"    public String read() {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        initialize();","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"            Scanner scanner \u003d new Scanner(this.path);","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"                result \u003d result + scanner.nextLine() + System.lineSeparator();","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"            throw new ReadFileException(this.path, \"Unable to read the file.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"     * Checks whether directory exists. Create if does not exist.","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"    private void checkDirectory() {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"        File temp \u003d this.path.getParent().toFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"        if (!temp.exists()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"            temp.mkdirs();","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"     * Checks whether file exists. Create if does not exist.","lastModifiedDate":"2022-09-01"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"    private void checkFile() {","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"        File temp \u003d this.path.toFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"            if (!temp.exists()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"                temp.createNewFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"            throw new ReadFileException(this.path, \"Unable to create new files.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"     * Returns boolean indicating whether this object","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof Storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"            Storage s \u003d (Storage) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"            if (this.path \u003d\u003d s.getPath()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"            if (this.path \u003d\u003d null || s.getPath() \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"                return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"            return this.path.equals(s.path);","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":136}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.util;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":" * Represents the memory that Duke uses for Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"public class TaskList implements Savable\u003cTaskList\u003e {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"     * The collection of Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"     * Add a given Task to the collection.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"     * @param task The given task.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"     * Returns a boolean whether the given ArrayList is equals to the internal TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"     * @param taskArrayList The given ArrayList of Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given ArrayList is equals to the internal TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    protected boolean compareTaskList(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"        return this.tasks \u003d\u003d taskArrayList","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"                ? true","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"                : this.tasks \u003d\u003d null || taskArrayList \u003d\u003d null","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"                ? false","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"                : this.tasks.equals(taskArrayList);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"     * Return the Task at given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"     * @param i The given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"     * @return The Task at given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"     * @throws TaskNotFoundException if given index is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    public Task get(int i) throws TaskNotFoundException {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"        throwIfNotValidIndex(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"     * Return the size of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"     * @return The Task size of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"    public int size() {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"     * Returns and removes the Task at given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"     * @param i The given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"     * @return The removed task.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"     * @throws TaskNotFoundException if given index is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"    public Task remove(int i) throws TaskNotFoundException {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"        throwIfNotValidIndex(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"        return this.tasks.remove(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"     * Return if the given index is valid.","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"     * @param i The given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"     * @return The boolean if the given index is valid.","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"TZL0"},"content":"    private boolean isValidIndex(int i) {","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"TZL0"},"content":"        return i \u003e\u003d 0 \u0026\u0026 i \u003c this.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"TZL0"},"content":"     * Throws the exception if the given index is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"TZL0"},"content":"     * @param i The given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"TZL0"},"content":"     * @throws TaskNotFoundException if the given index is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"TZL0"},"content":"    private void throwIfNotValidIndex(int i) throws TaskNotFoundException {","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"TZL0"},"content":"        if (!isValidIndex(i)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"TZL0"},"content":"            throw new TaskNotFoundException(i + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"TZL0"},"content":"     * Returns the Task ArrayList of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"TZL0"},"content":"     * @return The Task ArrayList of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"TZL0"},"content":"    protected ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"TZL0"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"TZL0"},"content":"     * Return the String representation of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"TZL0"},"content":"     * @return The String representation of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"TZL0"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"TZL0"},"content":"        String message \u003d Stream.iterate(0, x -\u003e x + 1)","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"TZL0"},"content":"                .limit(tasks.size())","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"TZL0"},"content":"                .map(x -\u003e x + 1 + \". \" + tasks.get(x).toString())","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"TZL0"},"content":"                .reduce(\"\", (x, y) -\u003e x + y + \"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"TZL0"},"content":"        return message;","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"TZL0"},"content":"     * Returns the formatted string representation of the object.","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"TZL0"},"content":"     * @return The formatted string representation of the object.","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"TZL0"},"content":"    public String toFormattedString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"TZL0"},"content":"        String s;","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"TZL0"},"content":"        s \u003d Stream.iterate(0, x -\u003e x + 1)","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"TZL0"},"content":"                .limit(tasks.size())","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"TZL0"},"content":"                .map(x -\u003e this.tasks.get(x).toFormattedString())","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"TZL0"},"content":"                .reduce(\"\", (x, y) -\u003e x + y + \"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"TZL0"},"content":"        return s;","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"TZL0"},"content":"     * Load the instantiated Tasks from given formatted String to current TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"TZL0"},"content":"     * @param formattedString","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"TZL0"},"content":"    public void loadFrom(String formattedString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"TZL0"},"content":"        this.tasks \u003d parse(formattedString).getTaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"TZL0"},"content":"     * Returns the TaskList represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"TZL0"},"content":"     * @param formattedString The given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"TZL0"},"content":"     * @return The TaskList represented by given formatted String.","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"TZL0"},"content":"    public TaskList parse(String formattedString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"TZL0"},"content":"        return Parser.parseTaskList(formattedString);","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"TZL0"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"TZL0"},"content":"     * Return boolean indicating whether this object","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"TZL0"},"content":"     * is equivalent to another object.","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"TZL0"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"TZL0"},"content":"     * @param obj The object to be checked.","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"TZL0"},"content":"     * @return The boolean whether the given object is equivalent to this object.","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"TZL0"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"TZL0"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"TZL0"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"TZL0"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"TZL0"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"TZL0"},"content":"        if (obj instanceof TaskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"TZL0"},"content":"            TaskList tl \u003d (TaskList) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"TZL0"},"content":"            if (this.tasks \u003d\u003d tl.tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"TZL0"},"content":"                return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"TZL0"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"TZL0"},"content":"            return tl.compareTaskList(this.tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"TZL0"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"TZL0"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"TZL0":164}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" cache\u003d\"true\" cacheHint\u003d\"SCALE\" cacheShape\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"200.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    \u003cLabel fx:id\u003d\"dialog\" scaleShape\u003d\"false\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"67.0\" fitWidth\u003d\"66.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"TZL0":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" scaleShape\u003d\"false\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" cacheShape\u003d\"false\" focusTraversable\u003d\"true\" maxHeight\u003d\"1.7976931348623157E308\" pickOnBounds\u003d\"false\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"TZL0":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"public class DukeTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"    private final String testPath \u003d \"test/data/duke.txt\";","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"    protected final Storage testStorage \u003d new Storage(testPath);","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"    protected Duke duke \u003d new Duke(testPath);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    protected final String WHOLE_FORMATTED_TASKLIST \u003d \"T } 1 } explore\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"            + \"E } 0 } presentation } 2022-10-01 12:34\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"            + \"D } 0 } week 3 cs2103t project } 2022-08-25 23:45\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"            + \"E } 1 } CS2109S Lecture } 2022-08-26 11:22\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"            + \"E } 0 } CS2109S Lecture } 2022-08-19 00:01\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"            + \"E } 1 } CS2109S Lecture } 2022-08-12 02:59\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"            + \"E } 0 } CS2100 week 3 recitation } 2022-08-23 16:00\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"            + \"D } 0 } CS2102 tutorial 1 to finish } 2022-08-26 12:00\";","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"TZL0":18}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"    public void test1() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"        TaskList actual \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"        TaskList expected \u003d Parser.parseTaskList(\"E } 0 } cs1010s } 2022-01-01 12:34\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"                + \"D } 0 } cs1231s } 2022-02-01 13:34\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"                + \"E } 0 } cs2030s } 2022-01-21 02:34\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"        actual.add(Task.event(\"cs1010s\", Parser.parseStringToDateTime(\"2022-01-01 12:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"        actual.add(Task.deadline(\"cs1231s\", Parser.parseStringToDateTime(\"2022-02-01 13:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"        actual.add(Task.event(\"cs2030s\", Parser.parseStringToDateTime(\"2022-01-21 02:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    public void test2() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"        TaskList actual \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        TaskList expected \u003d Parser.parseTaskList(\"E } 0 } cs1010s } 2022-01-01 12:34\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"                + \"E } 0 } cs2030s } 2022-01-21 02:34\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        actual.add(Task.event(\"cs1010s\", Parser.parseStringToDateTime(\"2022-01-01 12:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        actual.add(Task.deadline(\"cs1231s\", Parser.parseStringToDateTime(\"2022-02-01 13:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"        actual.add(Task.event(\"cs2030s\", Parser.parseStringToDateTime(\"2022-01-21 02:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"        actual.remove(1);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"    public void test3() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        Task actual;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"        TaskList actualList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"        Task expected \u003d Parser.parseTask(\"E } 0 } cs2030s } 2022-01-21 02:34\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"        actualList.add(Task.event(\"cs1010s\", Parser.parseStringToDateTime(\"2022-01-01 12:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"        actualList.add(Task.deadline(\"cs1231s\", Parser.parseStringToDateTime(\"2022-02-01 13:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"        actualList.add(Task.event(\"cs2030s\", Parser.parseStringToDateTime(\"2022-01-21 02:34\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"        actual \u003d actualList.get(2);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"TZL0":49}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.DukeTest;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"public class CommandTest extends DukeTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"TZL0":6}},{"path":"src/test/java/duke/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import duke.util.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"public class FindCommandTest extends CommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"    public void task1() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"        TaskList wholeTaskList\u003d Parser.parseTaskList(this.WHOLE_FORMATTED_TASKLIST);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"//        Storage storage \u003d new Storage(\"\")","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"TZL0":19}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"    public void test1() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"        final Task expected \u003d Parser.parseTask(\"T } 0 } compileJava UP-TO-DATE\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"        Task actual \u003d Event.todo(\"compileJava UP-TO-DATE\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"    public void test2() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"        final Task expected \u003d Parser.parseTask(\"T } 0 } compileJava UP-TO-DATE\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"        Task actual \u003d Event.todo(\"compileJava Not UP-TO-DATE\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"        assertNotEquals(expected, actual);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"    public void test3() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"        final Task expected \u003d Parser.parseTask(\"T } 1 } compileJava UP-TO-DATE\");","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"        Task actual \u003d Event.todo(\"compileJava UP-TO-DATE\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"        actual.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"    public void test4() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"        final Task expected \u003d Parser.parseTask(\"E } 1 } compileJava UP-TO-DATE } 2022-01-22 10:00\");","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"        Task actual \u003d Event.todo(\"compileJava UP-TO-DATE\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"        actual.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"        assertEquals(expected.equals(actual), false);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"TZL0":41}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"T | 1 | finish homework this night","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"E | 0 | CS2109S Lecture | I3-AUD","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"TZL0":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TZL0"},"content":"hi","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"TZL0"},"content":"todo finish homework this night","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"TZL0"},"content":"add","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"TZL0"},"content":"deadline CS2103T Week 2 Project Submition Hard deadline /by tonight 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"TZL0"},"content":"deadline CS2103T Week 2 Project Submition Hard deadline /bytonight 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"TZL0"},"content":"deadline CS2103T Week 2 Project Submition Hard deadline/by tonight 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"TZL0"},"content":"deadlineCS2103T Week 2 Project Submition Hard deadline /by tonight 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"TZL0"},"content":"deadline CS2103T Week 2 Project Submition Hard deadline /by ","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"TZL0"},"content":"deadline C/by tonight 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"TZL0"},"content":"deadline /by tonight 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"TZL0"},"content":"deadline     /by tonight 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"TZL0"},"content":"mark 2.2","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"TZL0"},"content":"mark 222222222222222222222222222222222222222222222222222222222","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"TZL0"},"content":"mark 1.1","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"TZL0"},"content":"mark 1+1","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"TZL0"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"TZL0"},"content":"Event CS2109S Lecture at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"TZL0"},"content":"    [E][ ] CS2109S Lecture (at: I3-AUD)","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"TZL0"},"content":"delete 100","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"TZL0"},"content":"delete 8","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"TZL0"},"content":"delete 5","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"TZL0"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I3-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I4-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"TZL0"},"content":"event CS2109S Lecture /at I5-AUD","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"TZL0"},"content":"mark 5","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"TZL0"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"TZL0"},"content":"delete 4","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"TZL0"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"TZL0"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"TZL0"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"TZL0"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"TZL0"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"TZL0"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"TZL0"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"TZL0"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"TZL0"},"content":"greet","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"TZL0"},"content":"mark","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"TZL0"},"content":"unmark","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"TZL0"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"TZL0"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"TZL0"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"TZL0":74}}]

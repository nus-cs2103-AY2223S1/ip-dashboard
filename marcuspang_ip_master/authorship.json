[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"compileJava.options.encoding \u003d \"UTF-8\"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    String javaFxVersion \u003d \u002718.0.2\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.9.0\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.9.0\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"    mainClassName \u003d \"dukeegg.Launcher\"","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    archiveBaseName \u003d \"dukeegg\"","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"checkstyle {","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"marcuspang":29}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":" * Terminates the chatbot program after execution, and saves the current tasks to some local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * Terminates the chatbot program and saves current task to the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":25}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":" * Represents the commands that are available in the chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * Executes the command based on the current tasks and local storage, and calls UI methods as required.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * @param tasks   The specified tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @param ui      The Ui class used to print messages to the console.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @param storage The storage that is used to manage tasks saved locally.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * @return The resulting output of executing the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException if the command did not complete successfully.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * Indicates whether the chatbot should terminate after the command is executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * @return true if the chatbot should terminate, false otherwise.","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":29}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":" * Creates a new deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * Constructs a deadline command, using the input strings to generate the deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    public DeadlineCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     * Creates a new deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        if (this.inputStrings.length \u003d\u003d 1 || inputStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDescriptionException(TaskType.D);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        String[] deadlineStrings \u003d inputStrings[1].split(\" /by \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        if (deadlineStrings.length \u003d\u003d 1 || deadlineStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDateTimeException(TaskType.D);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"            Deadline deadline \u003d new Deadline(deadlineStrings[0], false,","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"                    LocalDateTime.parse(deadlineStrings[1], Task.DATE_TIME_PARSER));","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"            return ui.showAddTask(deadline, tasks.size());","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidDateTimeException(Task.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":61}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" * Deletes the specified task.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs a delete command, which deletes a task based on the input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public DeleteCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * Deletes the task in the task list based on the input index.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"            // Tasks are displayed as 1-indexed, but they are stored as 0-indexed.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"            int taskIndex \u003d Integer.parseInt(inputStrings[1].trim()) - 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            Task task \u003d tasks.removeTask(taskIndex);","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"            return ui.showRemoveTask(task, tasks.size());","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":45}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":" * Creates a new event.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * Constructs an event command, which creates a new event based on input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    public EventCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     * Creates a new event and stores it in the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        if (this.inputStrings.length \u003d\u003d 1 || this.inputStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDescriptionException(TaskType.E);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        String[] eventStrings \u003d inputStrings[1].split(\" /at \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        if (eventStrings.length \u003d\u003d 1 || eventStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDateTimeException(TaskType.E);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"            Event event \u003d new Event(eventStrings[0], false, LocalDateTime.parse(eventStrings[1],","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"                    Task.DATE_TIME_PARSER));","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"            tasks.addTask(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"            return ui.showAddTask(event, tasks.size());","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidDateTimeException(Task.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":61}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Finds all tasks that have a matching description field.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * Constructs find command, which filters the current tasks with some query and prints them to the console.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public FindCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * Filters tasks and prints the tasks that match the query string.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        if (this.inputStrings.length \u003d\u003d 1 || this.inputStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        TaskList filteredTasks \u003d tasks.filter(this.inputStrings[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        return ui.showMatchingTasks(filteredTasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":40}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":" * Prints the current tasks in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Lists the current tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        return ui.showCurrentTasks(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":23}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" * Marks the specified task as done,","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs a mark command, which marks the task with the input index as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public MarkCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"            // Tasks are displayed as 1-indexed, but they are stored as 0-indexed.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"            int taskIndex \u003d Integer.parseInt(inputStrings[1].trim()) - 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"            task.markTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"            return ui.showMarkTask(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":46}},{"path":"src/main/java/commands/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" * Tags a task with a some string.","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs a tag command, which tags the task at the specified index.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public TagCommand(String[] inputStrings) {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * Tags a task with the specified tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        if (this.inputStrings.length \u003d\u003d 1 || this.inputStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"Invalid format for tag command\");","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"        String[] tagStrings \u003d inputStrings[1].split(\" \", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        if (tagStrings.length !\u003d 2) {","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"Invalid format for tag command\");","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        if (tagStrings[0].isEmpty()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"Tag cannot be empty!\");","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"            // Tasks are displayed as 1-indexed, but they are stored as 0-indexed.","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"            int taskIndex \u003d Integer.parseInt(tagStrings[1].trim()) - 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"            task.setTag(tagStrings[0]);","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"            return ui.showTagTask(task);","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"marcuspang":59}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":" * Creates a new Todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * Constructs a todo command, which creates a new todo based on the input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    public TodoCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * Creates a new todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        if (inputStrings.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDescriptionException(TaskType.T);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        Todo todo \u003d new Todo(inputStrings[1].trim(), false);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        return ui.showAddTask(todo, tasks.size());","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":45}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" * Marks a task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs an unmark command, which marks the task with the specified task index as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public UnmarkCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"            // Tasks are displayed as 1-indexed, but they are stored as 0-indexed.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"            int taskIndex \u003d Integer.parseInt(inputStrings[1].trim()) - 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"            task.unmarkTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"            return ui.showUnmarkTask(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":47}},{"path":"src/main/java/commands/UntagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" * Removes the tag of a task.","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs an untag command, which removes the tag of the task at the specified task index.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public UntagCommand(String[] inputStrings) {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * Removes the tag of a task.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"            // Tasks are displayed as 1-indexed, but they are stored as 0-indexed.","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"            int taskIndex \u003d Integer.parseInt(inputStrings[1].trim()) - 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"            task.clearTag();","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"            return ui.showUntagTask(task);","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"marcuspang":47}},{"path":"src/main/java/dukeegg/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.text.FontPosture;","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        this.dialog.setFont(Font.font(java.awt.Font.MONOSPACED, FontWeight.BOLD,","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"                FontPosture.REGULAR, 12));","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        this.displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"        this.dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"marcuspang":68}},{"path":"src/main/java/dukeegg/Dukegg.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Main class for chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class Dukegg {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * Time it takes for application to shut down, in seconds, after executing this command","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    private static final int APPLICATION_TERMINATION_DELAY \u003d 2;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     * Constructs a new chatbot which uses some file path as a way to store tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * @param filePath The specified file path.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    public Dukegg(String filePath) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        TaskList currentTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"            currentTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"            currentTasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        this.tasks \u003d currentTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"     * Generates the response based on user input.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"     * @param input The specified user input.","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"     * @return The response after parsing the user\u0027s input.","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"        assert input !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"            String response \u003d command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"            if (command.isExit()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"                terminateChatbot();","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"            return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"            return ui.showError(exception.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"     * Terminates the chatbot after a specified number of seconds.","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"    private void terminateChatbot() {","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(APPLICATION_TERMINATION_DELAY));","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"        delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"        delay.play();","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"        return this.ui.showWelcome();","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"marcuspang":71}},{"path":"src/main/java/dukeegg/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"marcuspang":12}},{"path":"src/main/java/dukeegg/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    private static final String TITLE \u003d \"Dukegg Chatbot\";","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    private final Dukegg dukegg \u003d new Dukegg(\"data/tasks.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"            // Initialise scene","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"            stage.setTitle(TITLE);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this.dukegg);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"marcuspang":33}},{"path":"src/main/java/dukeegg/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaEgg.jpeg\")));","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    private Dukegg dukegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"     * Initialises the user interface of the application to be displayed.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     * Sends a greeting message also.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"    public void setDuke(Dukegg dukegg) {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        this.dukegg \u003d dukegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"        String response \u003d this.dukegg.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"                DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"                DialogBox.getDukeDialog(response, this.dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"        this.userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"marcuspang":60}},{"path":"src/main/java/dukeegg/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import commands.ByeCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import commands.EventCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import commands.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import commands.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import commands.MarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import commands.TagCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import commands.TodoCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import commands.UntagCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":" * Used to parse user\u0027s input and returns the corresponding commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     * Parses the input command and returns the corresponding command.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * @param command The specified input command.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * @return The corresponding command to be executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException if an error was thrown during the construction of command.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        // Limit of 2 is used to avoid splitting the second argument.","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        String[] inputValues \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        switch (inputValues[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        case \"bye\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        case \"list\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        case \"mark\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"            return new MarkCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        case \"unmark\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"            return new UnmarkCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        case \"todo\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"            return new TodoCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"            return new DeadlineCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"        case \"event\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"            return new EventCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"        case \"delete\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"            return new DeleteCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"        case \"find\": {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"            return new FindCommand(inputValues);","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"        case \"tag\": {","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"            return new TagCommand(inputValues);","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"        case \"untag\": {","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"            return new UntagCommand(inputValues);","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"        default: {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":71}},{"path":"src/main/java/dukeegg/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.io.File;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidTaskDecodedException;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"import task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":" * Deals with loading tasks from the file and saving tasks in the file whenever chatbot starts / shuts down.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    // Used in the encoding of task data.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    public static final String DELIMITER \u003d \"|\";","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    private final File file;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     * Constructs a storage to store / retrieve tasks from some file path.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"     * @param filePath The specified path for the storage file.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"     * Creates file and subdirectories leading to the file if they have not been created.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"     * @param file The specified path to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException when a subdirectory or the file is unable to be created.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"    private static void createFileAndSubdirectoriesIfFileNotFound(File file) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        File parent \u003d file.getParentFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        if (parent !\u003d null \u0026\u0026 !parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"Unable to create storage file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"        assert file.exists();","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"     * Decodes task from storage file and returns the corresponding task.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"     * @param taskData The specified task data.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"     * @return The corresponding task based on the taskData.","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException when the values of the tasks are not valid.","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    public static Task decodeTask(String taskData) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        // Backslashes in split method is necessary as | is a metacharacter in regex.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"        String[] taskValues \u003d taskData.split(\"\\\\|\", 5);","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"        Task decodedTask;","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"        switch (taskValues[0]) {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"        case \"T\": {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"            if (taskValues.length !\u003d 4) {","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"                throw new InvalidTaskDecodedException(TaskType.T, taskData);","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"            decodedTask \u003d new Todo(taskValues[3], taskValues[1].equals(\"1\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"                    filterStringIfNull(taskValues[2]));","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"        case \"D\": {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"            if (taskValues.length !\u003d 5) {","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"                throw new InvalidTaskDecodedException(TaskType.D, taskData);","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"            decodedTask \u003d new Deadline(taskValues[3], taskValues[1].equals(\"1\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"                    filterStringIfNull(taskValues[2]),","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"marcuspang"},"content":"                    LocalDateTime.parse(taskValues[4], Task.DATE_TIME_PARSER));","lastModifiedDate":"2022-09-10"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"        case \"E\": {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"            if (taskValues.length !\u003d 5) {","lastModifiedDate":"2022-09-10"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"                throw new InvalidTaskDecodedException(TaskType.E, taskData);","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"marcuspang"},"content":"            decodedTask \u003d new Event(taskValues[3], taskValues[1].equals(\"1\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":86,"author":{"gitId":"marcuspang"},"content":"                    filterStringIfNull(taskValues[2]),","lastModifiedDate":"2022-09-10"},{"lineNumber":87,"author":{"gitId":"marcuspang"},"content":"                    LocalDateTime.parse(taskValues[4], Task.DATE_TIME_PARSER));","lastModifiedDate":"2022-09-10"},{"lineNumber":88,"author":{"gitId":"marcuspang"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"marcuspang"},"content":"        default:","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidTaskDecodedException(taskData);","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"marcuspang"},"content":"        return decodedTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":97,"author":{"gitId":"marcuspang"},"content":"     * Loads data from the storage file into current task list.","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"marcuspang"},"content":"     * @return The list of tasks retrieved from the storage file.","lastModifiedDate":"2022-08-30"},{"lineNumber":100,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException if an I/O error occurred or the task format is unrecognised.","lastModifiedDate":"2022-08-30"},{"lineNumber":101,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":102,"author":{"gitId":"marcuspang"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"marcuspang"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"marcuspang"},"content":"            createFileAndSubdirectoriesIfFileNotFound(this.file);","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"marcuspang"},"content":"            // Read the existing data in the storage file into the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"marcuspang"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"marcuspang"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"marcuspang"},"content":"                String taskData \u003d scanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"marcuspang"},"content":"                loadedTasks.add(decodeTask(taskData));","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"marcuspang"},"content":"            scanner.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"marcuspang"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"Error opening files\");","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"marcuspang"},"content":"        return loadedTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"marcuspang"},"content":"     * Overwrites the data inside the storage file with the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"marcuspang"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"marcuspang"},"content":"            createFileAndSubdirectoriesIfFileNotFound(this.file);","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"marcuspang"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.file, false);","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"marcuspang"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"marcuspang"},"content":"                fileWriter.write(taskList.getTask(i).encode(DELIMITER) + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"marcuspang"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"marcuspang"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"marcuspang"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"marcuspang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"marcuspang"},"content":"            System.out.println(exception.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":139,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":140,"author":{"gitId":"marcuspang"},"content":"     * Returns the specified string if it is not null and if the string is not equals to null.","lastModifiedDate":"2022-09-10"},{"lineNumber":141,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":142,"author":{"gitId":"marcuspang"},"content":"     * @param value The specified string.","lastModifiedDate":"2022-09-10"},{"lineNumber":143,"author":{"gitId":"marcuspang"},"content":"     * @return The specified string if it is not null, otherwise null is returned.","lastModifiedDate":"2022-09-10"},{"lineNumber":144,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":145,"author":{"gitId":"marcuspang"},"content":"    public static String filterStringIfNull(String value) {","lastModifiedDate":"2022-09-10"},{"lineNumber":146,"author":{"gitId":"marcuspang"},"content":"        if (value \u003d\u003d null || value.equals(\"null\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":147,"author":{"gitId":"marcuspang"},"content":"            return null;","lastModifiedDate":"2022-09-10"},{"lineNumber":148,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":149,"author":{"gitId":"marcuspang"},"content":"        return value;","lastModifiedDate":"2022-09-10"},{"lineNumber":150,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":151,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"marcuspang":151}},{"path":"src/main/java/dukeegg/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Used to keep track of the current task of the chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * Constructs a task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     * Constructs a task list with some tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * @param tasks The specified tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"     * Retrieves the size of the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     * @return The size of the current task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        return this.list.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"     * Retrieves the task at a given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"     * @param index The specified index.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range, i.e. {@code index \u003c 0 || index \u003e\u003d size()}","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"        return this.list.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"     * Removes the task at a given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"     * @param index The specified index.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"     * @return The removed task.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range, i.e. {@code index \u003c 0 || index \u003e\u003d size()}","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    public Task removeTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        return this.list.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"     * Filters the task list for tasks that have a description that includes the specified query.","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"     * @param query The specified query.","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"     * @return New TaskList containing filtered tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"    public TaskList filter(String query) {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"        return new TaskList(this.list.stream()","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"                .filter(task -\u003e task.getDescription().contains(query))","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"        );","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"     * Adds task to the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"marcuspang"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"        this.list.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":83}},{"path":"src/main/java/dukeegg/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Deals with the interaction of the user and messages to be displayed.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    private static final String LONG_LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"    private static final String INDENTATION \u003d \"  \";","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * Prints the message after adding a task, based on the task\u0027s fields.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * @param task              The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @param numberOfTasksLeft The number of tasks left.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public String showAddTask(Task task, int numberOfTasksLeft) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"                + INDENTATION + task + \"\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"                + \"Now you have \" + numberOfTasksLeft + \" task(s) in the list.\";","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * Prints the message after removing a task, based on the task\u0027s fields.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * @param task              The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     * @param numberOfTasksLeft The number of tasks left.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    public String showRemoveTask(Task task, int numberOfTasksLeft) {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"                + INDENTATION + task + \"\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"                + \"Now you have \" + numberOfTasksLeft + \" task(s) in the list.\";","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"     * Prints the message after marking a task as done, based on the task\u0027s fields.","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    public String showMarkTask(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"                + INDENTATION + task;","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"     * Prints the message after marking a task as not done, based on the task\u0027s fields.","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"    public String showUnmarkTask(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"                + INDENTATION + task;","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"     * Prints the message after tagging a task with some tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"    public String showTagTask(Task task) {","lastModifiedDate":"2022-09-10"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"        return \"OK, I\u0027ve tagged this task:\\n\"","lastModifiedDate":"2022-09-10"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"                + INDENTATION + task;","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"     * Prints the message after removing a tag from the task.","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"    public String showUntagTask(Task task) {","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"marcuspang"},"content":"        return \"OK, I\u0027ve untagged this task:\\n\"","lastModifiedDate":"2022-09-10"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"                + INDENTATION + task;","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"     * Prints the error message involved with retrieving tasks from a storage file.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"marcuspang"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"There was some error initialising the chatbot, no tasks are loaded.\");","lastModifiedDate":"2022-09-10"},{"lineNumber":87,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"marcuspang"},"content":"     * Prints the welcome message whenever the chatbot starts running.","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"marcuspang"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"marcuspang"},"content":"        return LONG_LINE","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"marcuspang"},"content":"                + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"marcuspang"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"marcuspang"},"content":"                + LONG_LINE;","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"marcuspang"},"content":"     * Prints the specified tasks in a 1-indexed list format.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"marcuspang"},"content":"     * @param tasks The specified tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"marcuspang"},"content":"    public String showTasks(TaskList tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"marcuspang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"marcuspang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"marcuspang"},"content":"            sb.append(INDENTATION).append(i + 1).append(\".\").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"marcuspang"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"marcuspang"},"content":"     * Prints the current tasks of the chatbot. Used by the list command.","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"marcuspang"},"content":"     * @param tasks The specified tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"marcuspang"},"content":"    public String showCurrentTasks(TaskList tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"marcuspang"},"content":"        return \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"marcuspang"},"content":"                + this.showTasks(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"marcuspang"},"content":"     * Prints the matching tasks based on user\u0027s input. Used by the find command.","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"marcuspang"},"content":"     * @param tasks The specified tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":131,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"marcuspang"},"content":"    public String showMatchingTasks(TaskList tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"marcuspang"},"content":"        return \"Here are the matching tasks in your list:\"","lastModifiedDate":"2022-08-31"},{"lineNumber":134,"author":{"gitId":"marcuspang"},"content":"                + this.showTasks(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"marcuspang"},"content":"     * Prints the goodbye message when the chatbot shuts down.","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"marcuspang"},"content":"    public String showGoodbye() {","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"marcuspang"},"content":"        return \"Bye. Hope to see you again soon! (Application closing in 2 seconds)\";","lastModifiedDate":"2022-08-31"},{"lineNumber":144,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"marcuspang"},"content":"     * Prints the error message to the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"marcuspang"},"content":"     * @param errorMessage The specified error message.","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted message.","lastModifiedDate":"2022-08-31"},{"lineNumber":151,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"marcuspang"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"marcuspang"},"content":"        return errorMessage;","lastModifiedDate":"2022-08-31"},{"lineNumber":154,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":155}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * Custom exception only used in chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception with a specified error message to be displayed.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * @param errorString The specified error message to be displayed.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    public DukeException(String errorString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        super(errorString);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"        return this.getMessage();","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marcuspang":20}},{"path":"src/main/java/exceptions/EmptyDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Used when datetime field is empty,","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class EmptyDateTimeException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the datetime field cannot be empty for the corresponding","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     * task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * @param taskType The specified task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    public EmptyDateTimeException(TaskType taskType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"        super(\"😅 OOPS!!! The datetime for \" + taskType.getValue() + \" cannot be empty.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":18}},{"path":"src/main/java/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Used when the description field is empty.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the description field cannot be empty for the current command.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        super(\"😅 OOPS!!! The description field cannot be empty.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the description of a task type cannot be empty.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param taskType The specified task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public EmptyDescriptionException(TaskType taskType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        super(\"😅 OOPS!!! The description for \" + taskType.getValue() + \" cannot be empty.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":24}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * Used when an invalid command is entered.","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"     * Constructs a new invalid command exception.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"        super(\"😅 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"marcuspang":13}},{"path":"src/main/java/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Used when the datetime field entered does not match the datetime format.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the datetime input does not follow the specified datetime","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     * format.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * @param dateTimeFormat The specified date time format.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    public InvalidDateTimeException(String dateTimeFormat) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"        super(\"😅 OOPS!!! The datetime specified is invalid, it should have the format \"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"                + Task.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":19}},{"path":"src/main/java/exceptions/InvalidTaskDecodedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Used when the task data being decoded is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class InvalidTaskDecodedException extends DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the task data being read from the storage file does not adhere to","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * any task type.","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * @param taskData The specified task data.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    public InvalidTaskDecodedException(String taskData) {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        super(\"😅 OOPS!!! Invalid format for \\n\" + taskData);","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the task data being read from the storage file does not adhere to","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"     * the format of the specified task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * @param taskType The specified task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * @param taskData The specified task data.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    public InvalidTaskDecodedException(TaskType taskType, String taskData) {","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"        super(\"😅 OOPS!!! Invalid format for \" + taskType.getValue() + \"\\n\" + taskData);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":30}},{"path":"src/main/java/exceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * Used when the task index being accessed is invalid..","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public class InvalidTaskIndexException extends DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the task index specified cannot be found.","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"    public InvalidTaskIndexException() {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"        super(\"☹ OOPS!!! The task at the index specified cannot be found.\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"marcuspang":13}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Represents a deadline, a type of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Constructs a deadline with description, a boolean to indicate isDone, and a datetime to indicate the","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * deadline.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @param deadline    The specified datetime for the deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.taskType \u003d TaskType.D;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * Constructs a deadline with description, a boolean to indicate isDone, a datetime to indicate the","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * deadline, and a tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"     * @param tag         The specified tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"     * @param deadline    The specified datetime for the deadline.","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    public Deadline(String description, boolean isDone, String tag, LocalDateTime deadline) {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"        this(description, isDone, deadline);","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        return Task.DATE_TIME_DISPLAY_FORMATTER.format(this.deadline);","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"     * Deadline has an additional datetime field for deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    public String encode(String delimiter) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"        return super.encode(delimiter) + delimiter + this.deadline.format(Task.DATE_TIME_PARSER);","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"        return super.toString() + \" (by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"marcuspang":57}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Represents an event, a type of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    private final LocalDateTime timing;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Constructs an event with description, a boolean indicating isDone, a datetime for the event\u0027s start","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * time.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @param timing      The specified datetime string for the start time.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    public Event(String description, boolean isDone, LocalDateTime timing) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.taskType \u003d TaskType.E;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * Constructs an event with description, a boolean indicating isDone, a datetime for the event\u0027s start","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * time, and a tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"     * @param tag         The specified tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"     * @param timing      The specified datetime string for the start time.","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    public Event(String description, boolean isDone, String tag, LocalDateTime timing) {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"        this(description, isDone, timing);","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"     * Retrieves formatted value of the event\u0027s timing.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted datetime string.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    public String getTiming() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        return Task.DATE_TIME_DISPLAY_FORMATTER.format(this.timing);","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"     * Event has an additional datetime field for timing.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"    public String encode(String delimiter) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"        return super.encode(delimiter) + delimiter + this.timing.format(Task.DATE_TIME_PARSER);","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"        return super.toString() + \" (at: \" + this.getTiming() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"marcuspang":62}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Represents a Task, which can be marked done / not done, along with some description.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    // Datetime formats for input and display.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"    public static final String DATE_TIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    public static final String DATE_TIME_DISPLAY_FORMAT \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    // Class variables used to parse and format datetime fields for input and display respectively.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    public static final DateTimeFormatter DATE_TIME_PARSER \u003d DateTimeFormatter.ofPattern(DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    public static final DateTimeFormatter DATE_TIME_DISPLAY_FORMATTER \u003d","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"            DateTimeFormatter.ofPattern(DATE_TIME_DISPLAY_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    protected final String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    protected String tag;","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    protected TaskType taskType;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * Constructor of a task that takes in a description to identify the task.","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    public Task(String description) {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     * Constructor for a task that takes in description to identify the task, and a boolean which determines","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     * whether they are done or not, which is only called in the different task types.","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        this(description);","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"     * Constructor for a task that takes in description to identify the task, a boolean which determines","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"     * whether they are done or not, which is only called in the different task types, and a tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"     * @param tag         The specified tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"    public Task(String description, boolean isDone, String tag) {","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        this(description, isDone);","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"     * Sets the tag to be null.","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"    public void clearTag() {","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"        this.tag \u003d null;","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"     * Returns whether the tag is null.","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"     * @return true if the tag is null, false otherwise.","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"    public boolean hasTag() {","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"        return this.tag !\u003d null;","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"marcuspang"},"content":"     * Marks the current task done.","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"    public void markTask() {","lastModifiedDate":"2022-08-15"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"marcuspang"},"content":"     * Marks the current task not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"marcuspang"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"marcuspang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":91,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"marcuspang"},"content":"     * Returns whether the task is done / not done, tasks that are done will be","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"marcuspang"},"content":"     * marked with \"X\".","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"marcuspang"},"content":"     * @return The status icon representing whether the task is done / not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"marcuspang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"marcuspang"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-15"},{"lineNumber":99,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":100,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":101,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"marcuspang"},"content":"     * Returns the description of the current task.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"marcuspang"},"content":"     * @return The description of the current task.","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"marcuspang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"marcuspang"},"content":"        return this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"marcuspang"},"content":"     * Converts the task into a String where each field is delimited by some delimiter.","lastModifiedDate":"2022-09-10"},{"lineNumber":112,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"marcuspang"},"content":"     * @param delimiter The specified delimiter.","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"marcuspang"},"content":"     * @return The values of the task fields delimited by delimiter.","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"marcuspang"},"content":"    public String encode(String delimiter) {","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"marcuspang"},"content":"        return this.taskType + delimiter","lastModifiedDate":"2022-09-10"},{"lineNumber":118,"author":{"gitId":"marcuspang"},"content":"                + (this.isDone ? \"1\" : \"0\") + delimiter","lastModifiedDate":"2022-09-10"},{"lineNumber":119,"author":{"gitId":"marcuspang"},"content":"                + this.tag + delimiter","lastModifiedDate":"2022-09-10"},{"lineNumber":120,"author":{"gitId":"marcuspang"},"content":"                + this.description;","lastModifiedDate":"2022-09-10"},{"lineNumber":121,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"marcuspang"},"content":"     * Returns the string formatted display of a task, with its status icon, task type, tag if it exists, and","lastModifiedDate":"2022-09-10"},{"lineNumber":125,"author":{"gitId":"marcuspang"},"content":"     * description.","lastModifiedDate":"2022-09-10"},{"lineNumber":126,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":128,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":129,"author":{"gitId":"marcuspang"},"content":"        return \"[\" + this.taskType + \"] \"","lastModifiedDate":"2022-09-10"},{"lineNumber":130,"author":{"gitId":"marcuspang"},"content":"                + \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2022-09-10"},{"lineNumber":131,"author":{"gitId":"marcuspang"},"content":"                + (this.hasTag() ? \"[#\" + this.tag + \"] \" : \"\")","lastModifiedDate":"2022-09-10"},{"lineNumber":132,"author":{"gitId":"marcuspang"},"content":"                + this.description;","lastModifiedDate":"2022-09-10"},{"lineNumber":133,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":134,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"marcuspang":134}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * An enum used to distinguish between different task types.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    T(\"todo\"),","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"    D(\"deadline\"),","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    E(\"event\");","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Value is used for printing the full name of the task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    private final String value;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs a task type enum, with a given value.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param value The specified value.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    TaskType(String value) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    public String getValue() {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"        return this.value;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marcuspang":28}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * Represents a todo, a type of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"     * Constructs a todo with description and a boolean indicating isDone.","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        this.taskType \u003d TaskType.T;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * Constructs a todo with description, a boolean indicating isDone, and a tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"     * @param tag         The specified tag.","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    public Todo(String description, boolean isDone, String tag) {","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"        this(description, isDone);","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"marcuspang":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"marcuspang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"            fx:controller\u003d\"dukeegg.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"marcuspang":24}},{"path":"src/test/java/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    public void execute_emptyTaskList_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        Storage storage \u003d new Storage(\"./\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"        String[] inputStrings \u003d new String[]{\"mark\", \"1\"};","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        Command command \u003d new MarkCommand(inputStrings);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        assertThrows(DukeException.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":24}},{"path":"src/test/java/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class TodoCommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    public void execute_emptyDescription_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        Storage storage \u003d new Storage(\"./\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"        String[] inputStrings \u003d new String[]{\"todo\"};","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        Command command \u003d new TodoCommand(inputStrings);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        assertThrows(DukeException.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":24}},{"path":"src/test/java/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import dukeegg.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import dukeegg.Ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    public void execute_emptyTaskList_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        Storage storage \u003d new Storage(\"./\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"        String[] inputStrings \u003d new String[]{\"unmark\", \"1\"};","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        Command command \u003d new UnmarkCommand(inputStrings);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        assertThrows(DukeException.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":24}},{"path":"src/test/java/dukeegg/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package dukeegg;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    public void add_normalTask_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        taskList.addTask(new Todo(\"todo\", true));","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"todo read book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"todo join sports club","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"mark 4","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"todo borrow book","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"marcuspang":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"java -classpath ..\\bin Dukegg \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"marcuspang":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"if ! javac -cp ../src/main/java/**/*.java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"java -classpath ../bin Dukegg \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"marcuspang":2}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"marcuspang":1}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":" * Terminates the chatbot program after execution, and saves the current tasks to some local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Terminates the chatbot program and saves current task to the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":27}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":" * Represents the commands that are available in the chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * Executes the command based on the current tasks and local storage, and calls UI methods as required.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * @param tasks   The specified tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @param ui      The Ui class used to print messages to the console.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @param storage The storage that is used to manage tasks saved locally.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException if the command did not complete successfully.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     * Indicates whether the chatbot should terminate after the command is executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * @return whether the chatbot should terminate.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":28}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":" * Creates a new deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * Constructs a deadline command, using the input strings to generate the deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    public DeadlineCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     * Creates a new deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        if (this.inputStrings.length \u003d\u003d 1 || inputStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDescriptionException(TaskType.D);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        String[] deadlineStrings \u003d inputStrings[1].split(\" /by \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        if (deadlineStrings.length \u003d\u003d 1 || deadlineStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDateTimeException(TaskType.D);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"            Deadline deadline \u003d new Deadline(deadlineStrings[0], false,","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"                    LocalDateTime.parse(deadlineStrings[1], Task.dateTimeParser));","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"            ui.showAddTask(deadline, tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidDateTimeException(Task.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":63}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Deletes the specified task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * Constructs a delete command, which deletes a task based on the input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public DeleteCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * Deletes the task in the task list based on the input index.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        // Tasks are displayed as 1-indexed, but they are stored as 0-indexed.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        int taskIndex \u003d Integer.parseInt(inputStrings[1].trim()) - 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        Task task \u003d tasks.removeTask(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        ui.showRemoveTask(task, tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":43}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":" * Creates a new event.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * Constructs an event command, which creates a new event based on input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    public EventCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     * Creates a new event and stores it in the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        if (this.inputStrings.length \u003d\u003d 1 || this.inputStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDescriptionException(TaskType.E);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        String[] eventStrings \u003d inputStrings[1].split(\" /at \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        if (eventStrings.length \u003d\u003d 1 || eventStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDateTimeException(TaskType.E);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"            Event event \u003d new Event(eventStrings[0], false, LocalDateTime.parse(eventStrings[1],","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"                    Task.dateTimeParser));","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"            tasks.addTask(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"            ui.showAddTask(event, tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"        } catch (","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"                DateTimeParseException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"            throw new InvalidDateTimeException(Task.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":63}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Finds all tasks that have a matching description field.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * Constructs find command, which filters the current tasks with some query and prints them to the console.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public FindCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * Filters tasks and prints the tasks that match the query string.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        if (this.inputStrings.length \u003d\u003d 1 || this.inputStrings[1].trim().isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        TaskList filteredTasks \u003d tasks.filter(this.inputStrings[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        ui.showMatchingTasks(filteredTasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":43}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":" * Prints the current tasks in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Lists the current tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        ui.showCurrentTasks(tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":26}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Marks the specified task as done,","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * Constructs a mark command, which marks the task with the input index as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public MarkCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"            // Tasks are displayed as 1-indexed, but they are stored as 0-indexed.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"            int taskIndex \u003d Integer.parseInt(inputStrings[1].trim()) - 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            task.markTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"            ui.showMarkTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The index specified is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":48}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":" * Creates a new Todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * Constructs a todo command, which creates a new todo based on the input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    public TodoCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * Creates a new todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        if (inputStrings.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"            throw new EmptyDescriptionException(TaskType.T);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        Todo todo \u003d new Todo(inputStrings[1].trim(), false);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        ui.showAddTask(todo, tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":48}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Marks a task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    private final String[] inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * Constructs an unmark command, which marks the task with the specified task index as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     * @param inputStrings The specified input strings.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    public UnmarkCommand(String[] inputStrings) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.inputStrings \u003d inputStrings;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"            // Tasks are displayed as 1-indexed, but they are stored as 0-indexed.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"            int taskIndex \u003d Integer.parseInt(inputStrings[1].trim()) - 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"            task.unmarkTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"            ui.showUnmarkTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The index specified is invalid.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":49}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" * Main class for chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * Constructs a new chatbot which uses some file path as a way to store tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * @param filePath The specified file path.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"        TaskList currentTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"            currentTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"            currentTasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        this.tasks \u003d currentTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"     * Starts the chatbot by reading user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"                ui.showError(exception.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"            } finally {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"marcuspang":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import commands.ByeCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import commands.EventCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import commands.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import commands.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"import commands.MarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import commands.TodoCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":" * Used to parse user\u0027s input and returns the corresponding commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     * Parses the input command and returns the corresponding command.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"     * @param command The specified input command.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     * @return The corresponding command to be executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException if an error was thrown during the construction of command.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"        // Limit of 2 is used to avoid splitting the second argument in fullCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"        String[] inputValues \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"        switch (inputValues[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        case \"bye\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        case \"list\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"        case \"mark\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"            return new MarkCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"        case \"unmark\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"            return new UnmarkCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"        case \"todo\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"            return new TodoCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"            return new DeadlineCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"        case \"event\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"            return new EventCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"        case \"delete\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"            return new DeleteCommand(inputValues);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"        case \"find\": {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"            return new FindCommand(inputValues);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"        default: {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":62}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import exceptions.InvalidTaskException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"import task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":" * Deals with loading tasks from the file and saving tasks in the file whenever Duke starts / shuts down.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    // Used in the encoding of task data.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    public static final String DELIMITER \u003d \"|\";","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    private final File file;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     * Constructs a storage to store / retrieve tasks from some file path.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * @param filePath The specified path for the storage file.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"     * Creates file and subdirectories leading to the file if they have not been created.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"     * @param file The specified path to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException when a subdirectory or the file is unable to be created.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    private static void createFileAndSubdirectoriesIfFileNotFound(File file) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        File parent \u003d file.getParentFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        if (parent !\u003d null \u0026\u0026 !parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"Unable to create storage file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"     * Decodes task from storage file and returns the corresponding task.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"     * @param taskData The specified task data.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"     * @return The corresponding task based on the taskData.","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"     * @throws DukeException when the values of the tasks are not valid.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    public static Task decodeTask(String taskData) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"        // Backslashes in split method is necessary as | is a metacharacter in regex.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"        String[] taskValues \u003d taskData.split(\"\\\\|\", 4);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        Task decodedTask \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"        switch (taskValues[0]) {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"        case \"T\": {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"            if (taskValues.length !\u003d 3) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"                throw new InvalidTaskException(TaskType.T, taskData);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"            decodedTask \u003d new Todo(taskValues[2], taskValues[1].equals(\"1\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"        case \"D\": {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"            if (taskValues.length !\u003d 4) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"                throw new InvalidTaskException(TaskType.D, taskData);","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"            decodedTask \u003d new Deadline(taskValues[2], taskValues[1].equals(\"1\"), LocalDateTime.parse(taskValues[3],","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"                    Task.dateTimeParser));","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"        case \"E\": {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"            if (taskValues.length !\u003d 4) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"marcuspang"},"content":"                throw new InvalidTaskException(TaskType.E, taskData);","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"            decodedTask \u003d new Event(taskValues[2], taskValues[1].equals(\"1\"), LocalDateTime.parse(taskValues[3],","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"                    Task.dateTimeParser));","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"marcuspang"},"content":"        return decodedTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"marcuspang"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"marcuspang"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"marcuspang"},"content":"            createFileAndSubdirectoriesIfFileNotFound(this.file);","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"marcuspang"},"content":"            // Read the existing data in the storage file into the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"marcuspang"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"marcuspang"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"marcuspang"},"content":"                String taskData \u003d scanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"marcuspang"},"content":"                loadedTasks.add(decodeTask(taskData));","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"marcuspang"},"content":"            scanner.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"marcuspang"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"marcuspang"},"content":"            throw new DukeException(\"Error opening files\");","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"marcuspang"},"content":"        return loadedTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"marcuspang"},"content":"     * Overwrites the data inside the storage file with the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"marcuspang"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"marcuspang"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"marcuspang"},"content":"            createFileAndSubdirectoriesIfFileNotFound(this.file);","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"marcuspang"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.file, false);","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"marcuspang"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"marcuspang"},"content":"                fileWriter.write(taskList.getTask(i).encode(DELIMITER) + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"marcuspang"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"marcuspang"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"marcuspang"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"marcuspang"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"marcuspang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"marcuspang"},"content":"            System.out.println(exception.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"marcuspang":124}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":" * Used to keep track of the current task of the chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * Constructs a task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     * Constructs a task list with some tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * @param tasks The specified tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"     * Retrieves the size of the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     * @return The size of the current task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"        return this.list.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"     * Retrieves the task at a given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"     * @param index The specified index.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range, i.e. {@code index \u003c 0 || index \u003e\u003d size()}","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"        return this.list.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"     * Removes the task at a given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"     * @param index The specified index.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"     * @return The removed task.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range, i.e. {@code index \u003c 0 || index \u003e\u003d size()}","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    public Task removeTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"        return this.list.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"    public TaskList filter(String query) {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"        return new TaskList(this.list.stream()","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"                .filter(task -\u003e task.getDescription().contains(query))","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"        );","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"     * Adds task to the current task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"        this.list.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":77}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":" * Deals with the interaction of the user and messages to be displayed.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    private final Scanner scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * Constructs a new Ui object, with a scanner object used to read user inputs.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    public Ui() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"     * Reads user input and returns the string value.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     * @return the specified user input as a String.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * Prints out a long line.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"     * Prints the messages after adding a task, based on the task\u0027s fields.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"     * @param task              The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"     * @param numberOfTasksLeft The number of tasks left.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"    public void showAddTask(Task task, int numberOfTasksLeft) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Now you have \" + numberOfTasksLeft + \" task(s) in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"     * Prints the messages after removing a task, based on the task\u0027s fields.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"     * @param task              The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"     * @param numberOfTasksLeft The number of tasks left.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"    public void showRemoveTask(Task task, int numberOfTasksLeft) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Now you have \" + numberOfTasksLeft + \" task(s) in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"     * Prints the messages after marking a task as done, based on the task\u0027s fields.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"    public void showMarkTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"     * Prints the messages after marking a task as not done, based on the task\u0027s fields.","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"     * @param task The specified task.","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"    public void showUnmarkTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"     * Prints the error message involved with retrieving tasks from a storage file.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     There was some error initializing the chatbot, no tasks are loaded.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"marcuspang"},"content":"     * Prints the welcome message whenever the chatbot starts running.","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"marcuspang"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"marcuspang"},"content":"        this.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"marcuspang"},"content":"        this.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"marcuspang"},"content":"     * Prints the specified tasks in a 1-indexed list format.","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"marcuspang"},"content":"     * @param tasks The specified tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"marcuspang"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"marcuspang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"marcuspang"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + tasks.getTask(i));","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"marcuspang"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"marcuspang"},"content":"     * Prints the current tasks of the chatbot. Used by the list command.","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"marcuspang"},"content":"     * @param tasks The specified tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"marcuspang"},"content":"    public void showCurrentTasks(TaskList tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"marcuspang"},"content":"        this.showTasks(tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"marcuspang"},"content":"     * Prints the matching tasks based on user\u0027s input. Used by the find command.","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"marcuspang"},"content":"     * @param tasks The specified tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"marcuspang"},"content":"    public void showMatchingTasks(TaskList tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"marcuspang"},"content":"        this.showTasks(tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"marcuspang"},"content":"     * Prints the goodbye message when the chatbot shuts down.","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"marcuspang"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"marcuspang"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"marcuspang"},"content":"     * Prints the error message to the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"marcuspang"},"content":"     * @param errorMessage The specified error message.","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"marcuspang"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"marcuspang"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":143}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * Custom exception only used in chatbot.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception with a specified error message to be displayed.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * @param errorString The specified error message to be displayed.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    public DukeException(String errorString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        super(errorString);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"        return this.getMessage();","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marcuspang":20}},{"path":"src/main/java/exceptions/EmptyDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Used when datetime field is empty,","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class EmptyDateTimeException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the datetime field cannot be empty for the corresponding","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     * task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * @param taskType The specified task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    public EmptyDateTimeException(TaskType taskType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"        super(\"     ☹ OOPS!!! The datetime for \" + taskType.getValue() + \" cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":18}},{"path":"src/main/java/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Used when the description field is empty.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the description field cannot be empty for the current command.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        super(\"     ☹ OOPS!!! The description field cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the description of a task type cannot be empty.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param taskType The specified task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    public EmptyDescriptionException(TaskType taskType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        super(\"     ☹ OOPS!!! The description for \" + taskType.getValue() + \" cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":24}},{"path":"src/main/java/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * Used when the datetime field entered does not match the datetime format.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the datetime input does not follow the specified datetime","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"     * format.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     * @param dateTimeFormat The specified date time format.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    public InvalidDateTimeException(String dateTimeFormat) {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"        super(\"     ☹ OOPS!!! The datetime specified is invalid, it should have the format \");","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":16}},{"path":"src/main/java/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import task.TaskType;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Used when the task data being decoded is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * Constructs an exception that indicates that the task data being read from the storage file does not adhere to","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     * the format of the specified task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     * @param taskType The specified task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * @param taskData The specified task data.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    public InvalidTaskException(TaskType taskType, String taskData) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        super(\"     ☹ OOPS!!! Invalid format for \" + taskType.getValue() + \"\\n\" + taskData);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marcuspang":19}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Represents a deadline, a type of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Constructs a deadline with some description and a datetime to indicate the deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @param deadline    The specified datetime for the deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.taskType \u003d TaskType.D;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"        return Task.dateTimeDisplayFormatter.format(this.deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"     * Deadline has an additional datetime field for deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    public String encode(String delimiter) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"        return super.encode(delimiter) + delimiter + this.deadline.format(Task.dateTimeParser);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        return super.toString() + \" (by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"marcuspang":42}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Represents an event, a type of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    private final LocalDateTime timing;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Constructs an event with some description and datetime for the event\u0027s start time.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"     * @param timing      The specified datetime string for the start time.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    public Event(String description, boolean isDone, LocalDateTime timing) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"        this.taskType \u003d TaskType.E;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     * Retrieves formatted value of the event\u0027s timing.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * @return The formatted datetime string.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public String getTiming() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        return Task.dateTimeDisplayFormatter.format(this.timing);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"     * Event has an additional datetime field for timing.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    public String encode(String delimiter) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"        return super.encode(delimiter) + delimiter + this.timing.format(Task.dateTimeParser);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        return super.toString() + \" (at: \" + this.getTiming() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"marcuspang":47}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":" * Represents a Task, which can be marked done / not done, along with some description.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    // Datetime formats for input and display.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"    public static final String DATE_TIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    public static final String DATE_TIME_DISPLAY_FORMAT \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    // Class variables used to parse and format datetime fields for input and display respectively.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    public static final DateTimeFormatter dateTimeParser \u003d DateTimeFormatter.ofPattern(DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"    public static final DateTimeFormatter dateTimeDisplayFormatter \u003d","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"            DateTimeFormatter.ofPattern(DATE_TIME_DISPLAY_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"    protected final String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"    protected TaskType taskType;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"     * Constructor for a task that takes in some description to identify the task and a boolean which determines","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"     * whether they are done or not, which is only called in the different task types;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"marcuspang"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"marcuspang"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"marcuspang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"marcuspang"},"content":"     * Marks the current task done.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"marcuspang"},"content":"    public void markTask() {","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"marcuspang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"marcuspang"},"content":"     * Marks the current task not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"marcuspang"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"marcuspang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"marcuspang"},"content":"     * Returns whether the task is done / not done, tasks that are done will be","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"marcuspang"},"content":"     * marked with \"X\".","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"marcuspang"},"content":"     * @return The status icon representing whether the task is done / not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"marcuspang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"marcuspang"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"marcuspang"},"content":"     * Returns the description of the current task.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"marcuspang"},"content":"     * @return The description of the current task.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"marcuspang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"marcuspang"},"content":"        return this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"marcuspang"},"content":"     * Converts the task into a String where each field is delimited by some","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"marcuspang"},"content":"     * delimiter.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"marcuspang"},"content":"     * @param delimiter The specified delimiter.","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"marcuspang"},"content":"     * @return The values of the task fields delimited by delimiter.","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"marcuspang"},"content":"    public String encode(String delimiter) {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"marcuspang"},"content":"        return this.taskType + delimiter + (this.isDone ? \"1\" : \"0\") + delimiter + this.description;","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"marcuspang"},"content":"     * Returns the string formatted display of a task, with its status icon, task","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"marcuspang"},"content":"     * type, and description.","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"marcuspang"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"marcuspang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"marcuspang"},"content":"        return \"[\" + this.taskType + \"] [\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"marcuspang":86}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * An enum used to distinguish between different task types.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    T(\"todo\"),      // Todo","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"    D(\"deadline\"),  // Deadline","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    E(\"event\");     // Event","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     * Value is used for printing the full name of the task type.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"    private final String value;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"     * Constructs a task type enum, with a given value.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"     * @param value The specified value.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    TaskType(String value) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marcuspang"},"content":"    public String getValue() {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marcuspang"},"content":"        return this.value;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marcuspang":28}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":" * Represents a todo, a type of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"     * Constructs a todo with the specified description.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"     * @param description The specified description.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"     * @param isDone      The boolean indicating whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        this.taskType \u003d TaskType.T;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"marcuspang":17}},{"path":"src/test/java/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    public void execute_emptyTaskList_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        Storage storage \u003d new Storage(\"./\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        String[] inputStrings \u003d new String[]{\"mark\", \"1\"};","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"        Command command \u003d new MarkCommand(inputStrings);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        assertThrows(DukeException.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":22}},{"path":"src/test/java/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"public class TodoCommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    public void execute_emptyDescription_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        Storage storage \u003d new Storage(\"./\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        String[] inputStrings \u003d new String[]{\"todo\"};","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"        Command command \u003d new TodoCommand(inputStrings);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        assertThrows(DukeException.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":22}},{"path":"src/test/java/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"    public void execute_emptyTaskList_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marcuspang"},"content":"        Storage storage \u003d new Storage(\"./\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marcuspang"},"content":"        String[] inputStrings \u003d new String[]{\"unmark\", \"1\"};","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"marcuspang"},"content":"        Command command \u003d new UnmarkCommand(inputStrings);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marcuspang"},"content":"        assertThrows(DukeException.class, () -\u003e command.execute(taskList, ui, storage));","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":22}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"import task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"    public void add_normalTask_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"        taskList.addTask(new Todo(\"todo\", true));","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marcuspang"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marcuspang"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marcuspang"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marcuspang":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcuspang"},"content":"todo read book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"marcuspang"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"marcuspang"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"marcuspang"},"content":"todo join sports club","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"marcuspang"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"marcuspang"},"content":"mark 4","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"marcuspang"},"content":"todo borrow book","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"marcuspang"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"marcuspang"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"marcuspang"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"marcuspang"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"marcuspang":11}}]

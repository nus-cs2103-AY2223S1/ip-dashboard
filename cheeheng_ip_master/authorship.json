[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"    mainClassName \u003d \"jude.Jude\"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"    archiveBaseName \u003d \"jude\"","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"    archiveVersion \u003d \"0.1\"","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"cheeheng":3}},{"path":"src/main/java/jude/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"public class IllegalCommandException extends RuntimeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"        super(message);","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":7}},{"path":"src/main/java/jude/Jude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":" * Jude is a task tracker which appears like a command line interface. The name is a Beatles","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":" * reference, referring to the hit song Hey Jude.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":" * When \u003e shows up, you can type a command.","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":" * There are three types of tasks, namely the todo, deadline and event.","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":" * Todo tasks are tasks without an associated date/time.","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":" * Deadline tasks have a specific deadline by which the task must be completed.","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":" * Event tasks have a start time and an end time.","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":" * Here are the list of commands:","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":" * todo (description) - adds a todo task with some description","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":" * deadline (description) /by (deadline) - adds a deadline task with the specified description and","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":" *   deadline. The deadline needs to be a valid date (e.g., 21 Aug 2022, Aug 21 2022 or","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":" *   2022-08-21), with time optional. If time is provided, it must be provided after the date,","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":" *   with exactly one space in between.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":" * event (description) /at (daterange) - adds an event task with start time and end time as part of","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":" *   daterange parameter","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":" * list - lists all tasks","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":" * mark - mark the task with a specified index (from list command) as done","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":" *   e.g. mark 2 marks second task as done","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":" * unmark - mark the task with a specified index (from list command) as undone,","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":" *   e.g. unmark 2 marks second task as undone","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":" * delete - delete the task corresponding to a specified index (from list command)","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":" *   e.g. delete 2 deletes second task","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":" * bye - exits the program","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":" * If the command does not have these prefixes, an error will be thrown saying that the bot does","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":" * not understand.","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"public class Jude {","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    // Overall project structure code for main class adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"    // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"    public Jude(String filePath) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"        parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"        while (true) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"            ui.showCommandReadReady();","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"            String str \u003d ui.readCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"            boolean canContinue \u003d parser.parse(str);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"            if (!canContinue) {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"     * Runs the task tracker.","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"     * @param args not used for now","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"        new Jude(\"data/tasks.txt\").run();","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":70}},{"path":"src/main/java/jude/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import jude.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import jude.task.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import jude.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import jude.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     * Creates a new Parser which will parse user commands in the chatbot and execute them.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     * @param tasks The initial list of tasks which will be used by the parser.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     * @param storage The file which the list of tasks will be saved to.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"    // Parses date in ISO 8601 format or DD MMM YYYY format (e.g. 21 Aug 2022) or MMM DD YYYY","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"    // format (e.g. Aug 21 2022) and returns a string in DD MMM YYYY format. If date parse fails,","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    // throws IllegalCommandException.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"    // Time, if provided, should be given in 12 or 24-hour format, and provided after the date","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    // string, which is not in ISO format.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"    // This parser is not case-sensitive.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    String convertToDate(String date) {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"        // Solution adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"        // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(\"Date cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"        LocalDateTime dateObject \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"            dateObject \u003d LocalDateTime.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"            boolean valid \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"            String[] dateTimeFormats \u003d {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"                    \"yyyy-MM-dd\",","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"                    \"yyyy-MM-dd H:mm\",","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"                    \"yyyy-MM-dd h:mm a\",","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"                    \"d MMM yyyy\",","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"                    \"d MMM yyyy H:mm\",","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"                    \"d MMM yyyy h:mm a\",","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"                    \"MMM d yyyy\",","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"                    \"MMM d yyyy H:mm\",","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"                    \"MMM d yyyy h:mm a\",","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"            };","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"            boolean[] isDateFormats \u003d { true, false, false, true, false, false, true, false, false };","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"            for (int i \u003d 0; i \u003c dateTimeFormats.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"                // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"                // https://stackoverflow.com/questions/44925840/","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"                // java-time-format-datetimeparseexception-text-could-not-be-parsed-at-index-3","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"                DateTimeFormatter dateFormat \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"                        .parseCaseInsensitive()","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"                        .appendPattern(dateTimeFormats[i])","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"                        .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"                try {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"                    if (isDateFormats[i]) {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"                        // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"                        // https://stackoverflow.com/questions/27454025/","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"                        // unable-to-obtain-localdatetime-from-temporalaccessor-when-parsing-localdatetime","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"                        dateObject \u003d LocalDate.parse(date, dateFormat).atStartOfDay();","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"                    } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"                        dateObject \u003d LocalDateTime.parse(date, dateFormat);","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"                    valid \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"                } catch (DateTimeParseException ex2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"            if (!valid) {","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"                throw new IllegalCommandException(\"Please input a valid date, e.g. 21 Aug 2022, \" +","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"                        \"Aug 21 2022 or 2022-08-21.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"        return dateObject.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"cheeheng"},"content":"     * Parses the command provided and executes it.","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"cheeheng"},"content":"     * @param command The command which will be provided to the parser.","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"cheeheng"},"content":"     * @return true if the command terminates the program, i.e. bye command, false otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"cheeheng"},"content":"    public boolean parse(String command) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"cheeheng"},"content":"        String[] tokens \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"cheeheng"},"content":"            if (tokens[0].equals(\"todo\") || tokens[0].equals(\"deadline\") ||","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"cheeheng"},"content":"                    tokens[0].equals(\"event\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"cheeheng"},"content":"                Task taskAdded \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"cheeheng"},"content":"                if (tokens.length \u003d\u003d 1 || tokens[1].isBlank()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"cheeheng"},"content":"                    throw new IllegalCommandException(","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"cheeheng"},"content":"                            String.format(\"Description of %s cannot be empty.\", tokens[0]));","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"cheeheng"},"content":"                } else if (tokens[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"cheeheng"},"content":"                    String description \u003d tokens[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"cheeheng"},"content":"                    taskAdded \u003d new Todo(description, false);","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"cheeheng"},"content":"                } else if (tokens[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"cheeheng"},"content":"                    String remText \u003d tokens[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"cheeheng"},"content":"                    String[] remTextTokens \u003d \"  \".concat(remText).split(\" /by \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"cheeheng"},"content":"                    if (remTextTokens.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"cheeheng"},"content":"                        String description \u003d remTextTokens[0].trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"cheeheng"},"content":"                        String deadline \u003d remTextTokens[1].trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"cheeheng"},"content":"                        if (description.isBlank() || description.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"cheeheng"},"content":"                            throw new IllegalCommandException(","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"cheeheng"},"content":"                                    \"Description of deadline task cannot be empty.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"cheeheng"},"content":"                        } else if (deadline.isBlank()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"cheeheng"},"content":"                            throw new IllegalCommandException(\"A deadline task must have a \" +","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"cheeheng"},"content":"                                    \"deadline.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"cheeheng"},"content":"                        }","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"cheeheng"},"content":"                        deadline \u003d convertToDate(deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"cheeheng"},"content":"                        taskAdded \u003d new Deadline(description, false, deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"cheeheng"},"content":"                    } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"cheeheng"},"content":"                        throw new IllegalCommandException(\"A deadline task must have a \" +","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"cheeheng"},"content":"                                \"deadline.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"cheeheng"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"cheeheng"},"content":"                } else if (tokens[0].equals(\"event\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"cheeheng"},"content":"                    String remText \u003d tokens[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"cheeheng"},"content":"                    String[] remTextTokens \u003d \"  \".concat(remText).split(\" /at \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"cheeheng"},"content":"                    if (remTextTokens.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"cheeheng"},"content":"                        String description \u003d remTextTokens[0].strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"cheeheng"},"content":"                        String when \u003d remTextTokens[1].strip();","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"cheeheng"},"content":"                        if (description.isBlank()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"cheeheng"},"content":"                            throw new IllegalCommandException(","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"cheeheng"},"content":"                                    \"Description of event task cannot be empty.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"cheeheng"},"content":"                        } else if (when.isBlank()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"cheeheng"},"content":"                            throw new IllegalCommandException(\"An event task must have a \" +","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"cheeheng"},"content":"                                    \"time at which the event takes place.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"cheeheng"},"content":"                        }","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"cheeheng"},"content":"                        taskAdded \u003d new Event(description, false, when);","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"cheeheng"},"content":"                    } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"cheeheng"},"content":"                        throw new IllegalCommandException(\"An event task must have a time at \" +","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"cheeheng"},"content":"                                \"which the event takes place.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"cheeheng"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"cheeheng"},"content":"                if (taskAdded !\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"cheeheng"},"content":"                    tasks.add(taskAdded);","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"cheeheng"},"content":"                    storage.save(tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"cheeheng"},"content":"                    System.out.printf(\"The following %s task has been added:\\n  \", tokens[0]);","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"cheeheng"},"content":"                    System.out.println(taskAdded);","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"cheeheng"},"content":"                    System.out.printf(\"The task list now contains %d task(s).\\n\", tasks.size());","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"cheeheng"},"content":"            } else if (tokens[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"cheeheng"},"content":"                int index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"cheeheng"},"content":"                Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"cheeheng"},"content":"                // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"cheeheng"},"content":"                // https://nus-cs2103-ay2223s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"cheeheng"},"content":"                task.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"cheeheng"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"cheeheng"},"content":"                System.out.println(\"The following task has been marked as done\");","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"cheeheng"},"content":"                System.out.println(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"cheeheng"},"content":"            } else if (tokens[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"cheeheng"},"content":"                int index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"cheeheng"},"content":"                Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"cheeheng"},"content":"                task.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"cheeheng"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"cheeheng"},"content":"                System.out.println(\"The following task has been marked as undone\");","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"cheeheng"},"content":"                System.out.println(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"cheeheng"},"content":"            } else if (tokens[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"cheeheng"},"content":"                int index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"cheeheng"},"content":"                Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"cheeheng"},"content":"                tasks.delete(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"cheeheng"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"cheeheng"},"content":"                System.out.println(\"The following task has been removed:\");","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"cheeheng"},"content":"                System.out.println(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"cheeheng"},"content":"                System.out.printf(\"The task list now contains %d task(s).\\n\", tasks.size());","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"cheeheng"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"cheeheng"},"content":"                for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"cheeheng"},"content":"                    Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"cheeheng"},"content":"                    System.out.printf(\"%d.%s\\n\", i, task);","lastModifiedDate":"2022-08-21"},{"lineNumber":186,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"cheeheng"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"cheeheng"},"content":"                System.out.println(\"Goodbye! Have a nice day!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":189,"author":{"gitId":"cheeheng"},"content":"                return false;","lastModifiedDate":"2022-08-21"},{"lineNumber":190,"author":{"gitId":"cheeheng"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"cheeheng"},"content":"                System.out.println(\"Sorry, I don\u0027t understand what this means!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"cheeheng"},"content":"            System.out.println(ex.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":195,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"cheeheng"},"content":"        return true;","lastModifiedDate":"2022-08-21"},{"lineNumber":197,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":198}},{"path":"src/main/java/jude/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"import jude.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"import jude.task.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"import jude.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"import jude.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    private String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"            // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"            // https://stackoverflow.com/questions/3634853/how-to-create-a-directory-in-java","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"            // https://stackoverflow.com/questions/8197049/","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"            // how-to-get-just-the-parent-directory-name-of-a-specific-file","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"            Path parentDirectory \u003d Paths.get(filePath).getParent();","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"            if (parentDirectory !\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"                Files.createDirectories(parentDirectory);","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"            // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"            // https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"        } catch (FileAlreadyExistsException ex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"     * Loads file in order to load the tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"     * The format is as follows (in separate lines, no extra newlines in between):","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"     * - typeOfTask (which can be \u0027T\u0027, \u0027D\u0027 or \u0027E\u0027), representing todo, deadline and event tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"     *   respectively.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     * - Name of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"     * - Whether the task is marked as done, 1 if so and 0 otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"     * - Any dates which may be required by the type. For events, the start date is stored on top","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"     *   of the end date.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"     * In between two tasks, there can be extra newlines.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"     * @return A {@code TaskList} object depicting the list of {@code Tasks} found by the loader.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"        Scanner sc \u003d new Scanner(Paths.get(filePath));","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"            String taskType \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"            if (taskType.isBlank()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"                // ignore blank lines in between tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"                continue;","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"            String taskName \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"            String done \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"            boolean isDone \u003d Integer.parseInt(done) \u003d\u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"            Task task \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"                task \u003d new Todo(taskName, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"                String deadline \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"                task \u003d new Deadline(taskName, isDone, deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"            } else if (taskType.equals(\"E\")){","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"                String eventTime \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"                task \u003d new Event(taskName, isDone, eventTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"                throw new RuntimeException(\"Jude cannot understand the input file.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"    // Saves list of tasks as a file.","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"        FileWriter fw \u003d new FileWriter(Paths.get(filePath).toFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"cheeheng"},"content":"            fw.write(task.toFileSaveString());","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"cheeheng"},"content":"        fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":93}},{"path":"src/main/java/jude/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import jude.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":" * TaskList is a class which stores a list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * Creates a new empty {@code TaskList}.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * Adds a {@code Task} to the end of the {@code TaskList}.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    // checks if the index range is out of bounds","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"    private void checkIndex(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.size()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(\"Invalid index\");","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"     * Deletes a task at a particular index (1-based).","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"     * @param index The index","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException If index range is out of bounds.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"        checkIndex(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"        tasks.remove(index-1);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"     * Returns the task corresponding to the specified index (1-based).","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"     * @param index The index","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"     * @return The {@code Task} corresponding to the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"        checkIndex(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"        return tasks.get(index-1);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"     * Returns the number of elements in the {@code TaskList} object.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"     * @return The number of elements.","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"    public int size() {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":66}},{"path":"src/main/java/jude/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"public class Ui {","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"    // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"    // https://stackoverflow.com/questions/5287538/how-to-get-the-user-input-in-java","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"     * Creates a new UI instance.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"    public Ui() {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"        System.out.println(\"Hello! I\u0027m Jude.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"    public void showCommandReadReady() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"        System.out.println();","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":29}},{"path":"src/main/java/jude/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":" * A Deadline object is a Task object that has an associated deadline by which the task should be","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":" * completed.","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"    private final String deadline;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     * Creates a new Deadline object with a given description, whether it has been done and the","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     * corresponding deadline.","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     * @param isDone      whether the task is marked as done","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"     * @param deadline    the date/time by which the task should be completed","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    public Deadline(String description, boolean isDone, String deadline) {","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     * Returns the deadline of the task the Deadline object is associated with","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"     * @return the deadline of the task the Deadline object is associated with","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"        return this.deadline;","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"     * The task type code for a Deadline object is \"D\". Hence, this method returns \"D\".","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"     * @return \"D\"","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"    public String getTaskTypeCode() {","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"        return \"D\";","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     * Returns the String representation of the Deadline object, i.e.","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"     *   a string in the format \"[task type code][get status icon] description (by: deadline)\".","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"     * @return String representation of the Deadline object","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.deadline);","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"    public String toFileSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"        return String.format(\"%s%s\\n\", super.toFileSaveString(), deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":58}},{"path":"src/main/java/jude/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":" * An Event object is a Task which has a start time and an end time.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"    private final String when;","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"     * Creates a new Event object with a given description, whether it has been done, the start","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"     * time and the end time.","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     * @param isDone      whether the event is marked as done","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * @param when   the time of the event","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    public Event(String description, boolean isDone, String when) {","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"        this.when \u003d when;","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     * Returns when the Event is scheduled to take place.","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     * @return the time range which the Event is scheduled to take table.","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    public String getStartTime() {","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"        return this.when;","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     * The task type code for an Event object is \"E\". Hence, this method returns \"E\".","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"     * @return \"E\"","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    public String getTaskTypeCode() {","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"        return \"E\";","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"     * Returns the String representation of the Event object, i.e.","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     *   a string in the format \"[task type code][get status icon] description (at: time of event)\".","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"     * @return String representation of the Event object","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), this.when);","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"    public String toFileSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"        return String.format(\"%s%s\\n\", super.toFileSaveString(), when);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":57}},{"path":"src/main/java/jude/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":" * The Task class models a task. A task has a description and an indicator depicting whether it has","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":" * been done.","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"    private String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     * Creates a new Task object with a given description and whether it has been done.","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * @param isDone whether the task is marked as done","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     * Returns whether the given Task object is marked as done.","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     * @return whether the task is done","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     * Returns the description of the Task object","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"     * @return description of the Task object","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"        return this.description;","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"     * Sets whether the Task is done.","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"     * @param isDone whether the Task is done","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"     * Returns the status icon depicting whether the Task has been done.","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"     * @return \u0027X\u0027 if Task is done, \u0027 \u0027 otherwise","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //@@author cheeheng-reused","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //Reused from https://nus-cs2103-ay2223s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the status of the Task to \u0027done\u0027.","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.setIsDone(true);","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the status of the Task to \u0027not done\u0027.","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.setIsDone(false);","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns the task type code of the Task object. The task type code will be displayed on the","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * command line interface.","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @return the task type code of the Task object","lastModifiedDate":"2022-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public abstract String getTaskTypeCode();","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the String representation of the Task object, i.e.","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   a string in the format \"[task type code][get status icon] description\".","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return String representation of the Task object","lastModifiedDate":"2022-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return String.format(\"[%s][%s] %s\", this.getTaskTypeCode(), this.getStatusIcon(),","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                this.description);","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    // Internal method used to save a task as a string in a file.","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    // This should be consistent with the documentation of loadFile in Main class.","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public String toFileSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return String.format(\"%s\\n%s\\n%d\\n\", getTaskTypeCode(), description, isDone ? 1 : 0);","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"-":47,"cheeheng":53}},{"path":"src/main/java/jude/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":" * A Todo is a Task without an associated date/time.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"     * Creates a new Todo object with a given description and whether it has been done.","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     * @param isDone      whether the task is marked as done","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"     * The task type code of a Todo object is T. Hence, this method returns T.","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * @return \"T\"","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"    public String getTaskTypeCode() {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"        return \"T\";","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    public String toFileSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"        return super.toFileSaveString();","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":32}},{"path":"src/test/java/jude/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"// Test template adapted from https://se-education.org/guides/tutorials/junit.html","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":" * Tests functionality of Deadline class.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"     * Test Case 1: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate1() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"1 Jan 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"     * Test Case 2: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate2() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"Jan 4 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"     * Test Case 3: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate3() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"2022-04-14\");","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"     * Test Case 4: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate4() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"23 Aug 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"     * Test Case 5: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate5() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"Jul 15 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"     * Test Case 6: Tests conversion of invalid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate6() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(\"Apr 32 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"     * Test Case 7: Tests conversion of nonsensical strings.","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate7() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(\"Monday\");","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"cheeheng"},"content":"     * Test Case 8: Tests for null string.","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate8() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(null);","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"cheeheng"},"content":"     * Test Case 9: Test 12-hour clock.","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_withTime1() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"22 Aug 2022 3:01 am\");","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"cheeheng"},"content":"     * Test Case 10: Test 24-hour clock.","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_withTime2() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"2022-08-23 13:01\");","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"cheeheng"},"content":"     * Test Case 11: Test invalid 12-hour clock.","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":143,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_invalidTime1() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":146,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(\"22 Aug 2022 13:01 am\");","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"cheeheng"},"content":"     * Test Case 12: Test invalid 24-hour clock.","lastModifiedDate":"2022-08-22"},{"lineNumber":155,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":156,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":157,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":158,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":159,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_invalidTime2() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":160,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":161,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":162,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(\"Aug 24 2022 24:01\");","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":168,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":169,"author":{"gitId":"cheeheng"},"content":"     * Test Case 13: Test valid ISO Date","lastModifiedDate":"2022-08-22"},{"lineNumber":170,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":171,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":172,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":173,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":174,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_isoDate() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":175,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":176,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"2022-02-28T22:31\");","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":178,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"cheeheng":178}},{"path":"src/test/java/jude/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":" * Test stub in Storage class.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"     * Creates an instance of the StorageStub test class.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     * @param filePath The specified filepath, parameter not actually used.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"    public StorageStub(String filePath) throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"        super(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"     * This is a mock method which returns a {@code TaskListStub}.\u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * The superclass method does the following:\u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     * @return A dummy {@code TaskListStub}.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    public TaskListStub load() {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"        return new TaskListStub();","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"cheeheng":29}},{"path":"src/test/java/jude/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import jude.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import jude.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":" * Test class for TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"class TaskListStub extends TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"    // @inheritDoc adapted from https://github.com/nus-cs2103-AY2223S1/forum/issues/44","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     * This is a mock method which does nothing. \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     * In the parent method, the following is done: \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    public void add(Task task) {}","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * This is a mock method which does nothing. \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     * In the parent method, the following is done: \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    public void delete(int index) {}","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"     * This is a mock method which returns a dummy completed todo task. \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"     * In the parent method, the following is done: \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"        return new Todo(\"Todo Task 1\", true);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"cheeheng":37}},{"path":"src/test/java/jude/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"// Test template adapted from https://se-education.org/guides/tutorials/junit.html","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import jude.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":" * Tests functionality of Deadline class.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * Test Case 1 of toString method.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where deadline task is complete.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    public void testToString1() {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Task 1\", true, \"22 Aug 2022 00:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"        assertEquals(\"[D][X] Deadline Task 1 (by: 22 Aug 2022 00:00)\", deadline.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     * Test Case 2 of toString method.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where deadline task is incomplete.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    public void testToString2() {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Task 2\", false, \"23 Aug 2022 21:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"        assertEquals(\"[D][ ] Deadline Task 2 (by: 23 Aug 2022 21:00)\", deadline.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"     * Test Case 3 of toString method.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where {@code Deadline} task description is null, to ensure that the program","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"     * does not crash.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"    public void testToString3() {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(null, false, \"23 Aug 2022 21:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"     * Test Case 1 of testToFileString1.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where deadline task is complete.","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    public void testToFileSaveString1() {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Task 4\", true, \"24 Aug 2022 12:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"        assertEquals(\"D\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"                \"Deadline Task 4\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"                \"1\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"                \"24 Aug 2022 12:00\\n\", deadline.toFileSaveString());","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"     * Test Case 2 of testToFileString1.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where deadline task is incomplete.","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"    public void testToFileSaveString2() {","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Task 5\", false, \"8 Dec 2022 15:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"        assertEquals(\"D\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"                \"Deadline Task 5\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"                \"0\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"                \"8 Dec 2022 15:00\\n\", deadline.toFileSaveString());","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"cheeheng":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"jude","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"todo task1","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"todo task2","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"todo task3","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"deadline task4 /by Monday","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"deadline task4 /by 2022-08-22","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"event task5 /at Monday 4pm-5pm","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"mark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"mark 5","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"mark 4","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"mark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"unmark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"unmark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"unmark 5","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"unmark 4","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"unmark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"unmark 6","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"unmark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"unmark -1","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"mark 6","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"mark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"mark -1","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"todo","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"deadline","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"deadline  /by","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"event  /at","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"deadline t /by","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"event t /at","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"deadline /by t","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"event /at t","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"deadline   /by t","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"event   /at t","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"deadline   Task 6 /by  Tuesday","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"deadline   Task 6 /by  23 Aug 2022","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"event   Task 7 /at  Tuesday 1am-2am","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"delete 2","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"delete 7","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"delete 0","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"delete -1","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"mark 3","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"mark 5","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":62}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"bye","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jude\\task\\*.java","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jude\\*.java","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"REM idea adapted from https://github.com/nus-cs2103-AY2223S1/forum/issues/36","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"java -classpath ..\\bin jude.Jude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"java -classpath ..\\bin jude.Jude \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"cheeheng":6}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    //@@author cheeheng-reused","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/checkstyle.html","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    //@@author cheeheng-reused","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // Reused from https://openjfx.io/openjfx-docs/#gradle","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"// @@author cheeheng-reused","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// Reused from https://openjfx.io/openjfx-docs/#gradle","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"javafx {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    mainClassName \u003d \"jude.Launcher\"","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"    archiveBaseName \u003d \"jude\"","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"    archiveVersion \u003d \"0.2\"","lastModifiedDate":"2022-09-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // @@author cheeheng-reused","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/gradle.html#creating-a-jar-file","lastModifiedDate":"2022-09-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"// @@author cheeheng-reused","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"// Reused from https://se-education.org/guides/tutorials/checkstyle.html with minor modifications","lastModifiedDate":"2022-09-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.3.2\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"-":64,"cheeheng":8}},{"path":"src/main/java/jude/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author cheeheng-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Text dialog;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a dialog box component, which contains a profile picture representing a user, and","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * some text which represents what the user says.","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param text What the user is saying.","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param img The profile picture of the user.","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assert(dialog !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assert(displayPicture !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assert(this.getChildren() !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e nodes \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Collections.reverse(nodes);","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        getChildren().setAll(nodes);","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a DialogBox node which corresponds to the user command, i.e. what the user","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * provided as input to the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param text The text which represents the user command.","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param img The image which represents the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @return The DialogBox node corresponding to the user command.","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a DialogBox node which corresponds to the response made by the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param text The text which represents the reply made by the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param img The image which represents the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @return The DialogBox node corresponding to the response by the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static DialogBox getChatbotDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"-":89,"cheeheng":2}},{"path":"src/main/java/jude/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":" * An unchecked exception thrown when user passes in invalid command to the task tracker chatbot.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"public class IllegalCommandException extends RuntimeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"     * Creates instance of {@code IllegalCommandException}.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"     * @param message The message accompanying the exception.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"        super(message);","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":16}},{"path":"src/main/java/jude/Jude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":" * Jude is a task tracker which appears like a command line interface. The name is a Beatles","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":" * reference, referring to the hit song Hey Jude.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":" * There are two modes, GUI mode (default).","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":" * GUI mode shows a GUI while console mode shows a command-line interface.","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":" * In console mode, when \u003e shows up, you can type a command.","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":" * \u003cbr\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":" * There are three types of tasks, namely the todo, deadline and event.","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":" * Todo tasks are tasks without an associated date/time.","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":" * Deadline tasks have a specific deadline by which the task must be completed.","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":" * Event tasks have a start time and an end time.","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":" * \u003cbr\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":" * Here are the list of commands:","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":" * todo (description) - adds a todo task with some description","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":" * deadline (description) /by (deadline) - adds a deadline task with the specified description and","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":" *   deadline. The deadline needs to be a valid date (e.g., 21 Aug 2022, Aug 21 2022 or","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":" *   2022-08-21), with time optional. If time is provided, it must be provided after the date,","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":" *   with exactly one space in between.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":" * event (description) /from (start date/time) /to (end date/time) - adds an event task with start","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":" *   time and end time","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":" * list - lists all tasks","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":" * mark - mark the task with a specified index (from list command) as done","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":" *   e.g. mark 2 marks second task as done","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":" * unmark - mark the task with a specified index (from list command) as undone,","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":" *   e.g. unmark 2 marks second task as undone","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":" * find (keyword) - searches for tasks whose description matches the provided keyword (can be","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":" *   multiple words, case-insensitive match)","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":" * delete - delete the task corresponding to a specified index (from list command)","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":" *   e.g. delete 2 deletes second task","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":" * remindme - reminds the user of any event about to begin and any deadlines of tasks, which are","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":" *   not marked as complete, coming soon (default: within the next 24 hours)","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":" * bye - exits the program","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":" * \u003cbr\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":" * If the command does not have these prefixes, an error will be thrown saying that the bot does","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":" * not understand.","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"public class Jude {","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"     * Creates an instance of Jude the chatbot.","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"     * @param filePath The file path in which the list of tasks is stored.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"    public Jude(String filePath) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"        parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"     * Returns the UI associated with this Jude the chatbot instance.","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"     * @return The UI associated with this Jude the chatbot instance.","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"    public Ui getUi() {","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"        return this.ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"     * Returns whether the command terminates the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"     * @param command The user input command.","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"     * @return true if the command terminates the chatbot, i.e. bye command, false otherwise.","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"    public boolean isTerminationCommand(String command) {","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"        return parser.isTerminationCommand(command);","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"     * Returns the reply from the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"     * @param input The user command input.","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"     * @return The reply from the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"        return parser.parse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":91,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":92,"author":{"gitId":"cheeheng"},"content":"     * Runs the chatbot in console mode.","lastModifiedDate":"2022-09-05"},{"lineNumber":93,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":94,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-09-05"},{"lineNumber":95,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":96,"author":{"gitId":"cheeheng"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":97,"author":{"gitId":"cheeheng"},"content":"        // Overall project structure code for main class adapted from","lastModifiedDate":"2022-09-05"},{"lineNumber":98,"author":{"gitId":"cheeheng"},"content":"        // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-09-05"},{"lineNumber":99,"author":{"gitId":"cheeheng"},"content":"        TaskList tasks \u003d storage.load();","lastModifiedDate":"2022-09-05"},{"lineNumber":100,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2022-09-05"},{"lineNumber":101,"author":{"gitId":"cheeheng"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2022-09-05"},{"lineNumber":102,"author":{"gitId":"cheeheng"},"content":"        parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2022-09-05"},{"lineNumber":103,"author":{"gitId":"cheeheng"},"content":"        System.out.println(ui.getWelcomeMessage());","lastModifiedDate":"2022-09-05"},{"lineNumber":104,"author":{"gitId":"cheeheng"},"content":"        System.out.println(parser.remindMe());","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":106,"author":{"gitId":"cheeheng"},"content":"        while (true) {","lastModifiedDate":"2022-09-05"},{"lineNumber":107,"author":{"gitId":"cheeheng"},"content":"            ui.showCommandReadReady();","lastModifiedDate":"2022-09-05"},{"lineNumber":108,"author":{"gitId":"cheeheng"},"content":"            String str \u003d ui.readCommand();","lastModifiedDate":"2022-09-05"},{"lineNumber":109,"author":{"gitId":"cheeheng"},"content":"            boolean isTerminationCommand \u003d parser.isTerminationCommand(str);","lastModifiedDate":"2022-09-05"},{"lineNumber":110,"author":{"gitId":"cheeheng"},"content":"            if (isTerminationCommand) {","lastModifiedDate":"2022-09-05"},{"lineNumber":111,"author":{"gitId":"cheeheng"},"content":"                ui.showByeMessage();","lastModifiedDate":"2022-09-05"},{"lineNumber":112,"author":{"gitId":"cheeheng"},"content":"                break;","lastModifiedDate":"2022-09-05"},{"lineNumber":113,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":114,"author":{"gitId":"cheeheng"},"content":"            String response \u003d parser.parse(str);","lastModifiedDate":"2022-09-05"},{"lineNumber":115,"author":{"gitId":"cheeheng"},"content":"            System.out.println(response);","lastModifiedDate":"2022-09-05"},{"lineNumber":116,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":117,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":118,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"cheeheng"},"content":"     * Returns the parser object associated with this instance of Jude the chatbot.","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"cheeheng"},"content":"     * @return The parser object associated with this instance of Jude the chatbot.","lastModifiedDate":"2022-09-08"},{"lineNumber":123,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"cheeheng"},"content":"    public Parser getParser() {","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"cheeheng"},"content":"        return this.parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":127}},{"path":"src/main/java/jude/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author cheeheng-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart1.html with minor modifications","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String CONSOLE_MODE_FLAG \u003d \"console-test\";","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_CONSOLE_DATA_STORAGE_PATH \u003d \"text-ui-test/data/tasks.txt\";","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Solution below adapted from https://github.com/nus-cs2103-AY2223S1/forum/issues/129","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Launches the GUI unless the first argument is console-test.","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * If the first argument is console-test, then the application runs in console mode.","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * If the first argument is console-test and a second argument is provided, the second","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * argument will determine the file to save to in the output, otherwise the default of","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * /text-ui-test/data/tasks.txt will be used to facilitate regression testing","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param args Determines whether to run in GUI mode or test in console-test mode.","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert(args !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (args.length \u003e\u003d 1 \u0026\u0026 args[0].equalsIgnoreCase(CONSOLE_MODE_FLAG)) {","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            // The directory has been chosen to facilitate regression testing.","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            if (args.length \u003d\u003d 1 || args[1].isBlank()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Main(DEFAULT_CONSOLE_DATA_STORAGE_PATH).runConsole();","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Main(args[1].trim()).runConsole();","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"-":38,"cheeheng":4}},{"path":"src/main/java/jude/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author cheeheng-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//modifications.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A GUI for Jude the chatbot using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_GUI_DATA_STORAGE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String MAIN_WINDOW_TITLE \u003d \"Jude the chatbot\";","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Jude jude \u003d new Jude(DEFAULT_GUI_DATA_STORAGE_PATH);","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a new GUI instance for Jude the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Main() throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new GUI instance for Jude the chatbot, where the data is stored in the given","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * filepath.","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param filePath The storage directory of the task tracker data.","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Main(String filePath) throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        jude \u003d new Jude(filePath);","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assert(stage !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assert(ap !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJude(jude);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            //@@author cheeheng-reused","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            // Reused from https://stackoverflow.com/questions/29055792/javafx-window-settitle","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            // with minor modifications.","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            stage.setTitle(MAIN_WINDOW_TITLE);","lastModifiedDate":"2022-09-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            //@@author","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"            stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"     * Runs Jude the chatbot on console mode.","lastModifiedDate":"2022-09-05"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-09-05"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"    public void runConsole() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"        jude.run();","lastModifiedDate":"2022-09-05"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"-":48,"cheeheng":27}},{"path":"src/main/java/jude/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author cheeheng-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The class modelling the main GUI of Jude the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class MainWindow {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Jude jude;","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Image userImage;","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Image chatbotImage;","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initialises the MainWindow, i.e. the main GUI for Jude the chatbot.","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        InputStream userImageResource \u003d this.getClass().getResourceAsStream(\"/images/User.png\");","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        InputStream chatbotImageResource \u003d this.getClass().getResourceAsStream(\"/images\"","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"/ManSmilingBehindWall.jpg\");","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assert(userImageResource !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assert(chatbotImageResource !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userImage \u003d new Image(userImageResource);","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        chatbotImage \u003d new Image(chatbotImageResource);","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assert(scrollPane !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assert(dialogContainer !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assert(userInput !\u003d null);","lastModifiedDate":"2022-09-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the instance of Jude the chatbot attached to this MainWindow. Also displays welcome","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * message.","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param jude The instance of Jude the chatbot to use.","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setJude(Jude jude) {","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.jude \u003d jude;","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Ui ui \u003d this.jude.getUi();","lastModifiedDate":"2022-09-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Parser parser \u003d this.jude.getParser();","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String firstMessageString \u003d ui.getWelcomeMessage();","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(DialogBox.getChatbotDialog(firstMessageString,","lastModifiedDate":"2022-09-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                chatbotImage));","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Handles the user input when the user presses the Enter button or clicks the Send button.","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param actionEvent An event which triggers the method call, such as pressing Enter and","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *                    clicking the Send button.","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void handleUserInput(ActionEvent actionEvent) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String command \u003d userInput.getText();","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (command.trim().equals(\"\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            // ignore empty command","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (jude.isTerminationCommand(command)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            //Code adapted from","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            //https://www.javaguides.net/2020/09/javafx-quit-button-example-terminate.html","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            // Exit the program when a termination command such as \u0027bye\u0027 is passed to the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Platform.exit();","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String response \u003d jude.getResponse(command);","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(command, userImage),","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                DialogBox.getChatbotDialog(response, chatbotImage)","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"-":97,"cheeheng":2}},{"path":"src/main/java/jude/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"import jude.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"import jude.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"import jude.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"import jude.task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":" * The {@code Parser} class parses user commands in the task tracker chatbot and executes them.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    public static final String DEFAULT_DATE_FORMAT \u003d \"dd MMM yyyy HH:mm\";","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"    private static final String TERMINATION_COMMAND \u003d \"bye\";","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"    private static final long DEFAULT_REMINDER_SECONDS \u003d 86400; // corresponding to 24 hours","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    private static final String NO_TASKS_STRING \u003d \"No tasks found\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"    private static final String INVALID_EVENT_TIME_ERROR \u003d \"An event task must have a start time and an end time.\";","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"     * Creates a new Parser which will parse user commands in the chatbot and execute them.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"     * @param tasks The initial list of tasks which will be used by the parser.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     * @param storage The file which the list of tasks will be saved to.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"     * Parses date in ISO 8601 format or DD MMM YYYY format (e.g. 21 Aug 2022) or MMM DD YYYY","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"     * format (e.g. Aug 21 2022) and returns a string in DD MMM YYYY format. If date parse fails,","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"     * throws IllegalCommandException.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"     * Time, if provided, should be given in 12 or 24-hour format, and provided after the date","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     * string, which is not in ISO format.","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"     * This parser is not case-sensitive.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    String convertToDate(String date) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"        // Solution adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"        // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(\"Date cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"        LocalDateTime dateObject \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"            dateObject \u003d LocalDateTime.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"            String[] dateTimeFormats \u003d {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"                \"yyyy-MM-dd\", \"yyyy-MM-dd H:mm\", \"yyyy-MM-dd h:mm a\", \"yyyy-MM-dd h:mma\",","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"                \"d MMM yyyy\", \"d MMM yyyy H:mm\", \"d MMM yyyy h:mm a\", \"d MMM yyyy h:mma\",","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"                \"MMM d yyyy\", \"MMM d yyyy H:mm\", \"MMM d yyyy h:mm a\", \"MMM d yyyy h:mma\",","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"            };","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"            boolean[] isDateFormats \u003d {","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"                true, false, false, false,","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"                true, false, false, false,","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"                true, false, false, false","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"            };","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"            for (int i \u003d 0; i \u003c dateTimeFormats.length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"                // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"                // https://stackoverflow.com/questions/44925840/","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"                // java-time-format-datetimeparseexception-text-could-not-be-parsed-at-index-3","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"                DateTimeFormatter dateFormat \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"                        .parseCaseInsensitive()","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"                        .appendPattern(dateTimeFormats[i])","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"                        .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"                try {","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"                    if (isDateFormats[i]) {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"                        // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"                        // https://stackoverflow.com/questions/27454025/","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"                        // unable-to-obtain-localdatetime-from-temporalaccessor-when-parsing-localdatetime","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"                        dateObject \u003d LocalDate.parse(date, dateFormat).atStartOfDay();","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"                    } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"                        dateObject \u003d LocalDateTime.parse(date, dateFormat);","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"                    isValid \u003d true;","lastModifiedDate":"2022-09-12"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"                } catch (DateTimeParseException ignored) {","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"cheeheng"},"content":"                    /*","lastModifiedDate":"2022-09-05"},{"lineNumber":90,"author":{"gitId":"cheeheng"},"content":"                     * The date may be in a recognised format which is different from the one being","lastModifiedDate":"2022-09-05"},{"lineNumber":91,"author":{"gitId":"cheeheng"},"content":"                     * tested.","lastModifiedDate":"2022-09-05"},{"lineNumber":92,"author":{"gitId":"cheeheng"},"content":"                     */","lastModifiedDate":"2022-09-05"},{"lineNumber":93,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"cheeheng"},"content":"            if (!isValid) {","lastModifiedDate":"2022-09-12"},{"lineNumber":96,"author":{"gitId":"cheeheng"},"content":"                throw new IllegalCommandException(\"Please input a valid date/time, e.g. 21 Aug \"","lastModifiedDate":"2022-09-12"},{"lineNumber":97,"author":{"gitId":"cheeheng"},"content":"                        + \"2022 14:00, Aug 21 2022 2:00PM or 2022-08-21.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":98,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"cheeheng"},"content":"        assert dateObject !\u003d null : \"Date object cannot be null\";","lastModifiedDate":"2022-09-12"},{"lineNumber":101,"author":{"gitId":"cheeheng"},"content":"        return dateObject.format(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT));","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"cheeheng"},"content":"     * Returns whether the command terminates the program.","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":107,"author":{"gitId":"cheeheng"},"content":"     * @param command The user input command.","lastModifiedDate":"2022-08-29"},{"lineNumber":108,"author":{"gitId":"cheeheng"},"content":"     * @return true if the command terminates the program, i.e. bye command, false otherwise.","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":110,"author":{"gitId":"cheeheng"},"content":"    public boolean isTerminationCommand(String command) {","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"cheeheng"},"content":"        return command.equals(TERMINATION_COMMAND);","lastModifiedDate":"2022-09-05"},{"lineNumber":112,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":113,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"cheeheng"},"content":"     * Parses the command provided and executes it. The return value will be the response by the","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"cheeheng"},"content":"     * chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":117,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"cheeheng"},"content":"     * @param command The command which will be provided to the parser.","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"cheeheng"},"content":"     * @return true if the command terminates the program, i.e. bye command, false otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"cheeheng"},"content":"    public String parse(String command) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":123,"author":{"gitId":"cheeheng"},"content":"        command \u003d command.trim();","lastModifiedDate":"2022-09-05"},{"lineNumber":124,"author":{"gitId":"cheeheng"},"content":"        String[] tokens \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"cheeheng"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"cheeheng"},"content":"            if (tokens[0].equals(\"todo\") || tokens[0].equals(\"deadline\")","lastModifiedDate":"2022-08-29"},{"lineNumber":128,"author":{"gitId":"cheeheng"},"content":"                    || tokens[0].equals(\"event\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":129,"author":{"gitId":"cheeheng"},"content":"                Task taskAdded \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"cheeheng"},"content":"                if (tokens.length \u003d\u003d 1 || tokens[1].isBlank()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"cheeheng"},"content":"                    throw new IllegalCommandException(","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"cheeheng"},"content":"                            String.format(\"Description of %s cannot be empty.\", tokens[0]));","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":135,"author":{"gitId":"cheeheng"},"content":"                if (tokens[0].equals(\"todo\")) {","lastModifiedDate":"2022-09-05"},{"lineNumber":136,"author":{"gitId":"cheeheng"},"content":"                    taskAdded \u003d new Todo(tokens[1], false);","lastModifiedDate":"2022-09-05"},{"lineNumber":137,"author":{"gitId":"cheeheng"},"content":"                } else if (tokens[0].equals(\"deadline\")) {","lastModifiedDate":"2022-09-05"},{"lineNumber":138,"author":{"gitId":"cheeheng"},"content":"                    taskAdded \u003d addDeadline(tokens[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":139,"author":{"gitId":"cheeheng"},"content":"                } else if (tokens[0].equals(\"event\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"cheeheng"},"content":"                    taskAdded \u003d addEvent(tokens[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":141,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"cheeheng"},"content":"                if (taskAdded !\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"cheeheng"},"content":"                    tasks.add(taskAdded);","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"cheeheng"},"content":"                    storage.save(tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"cheeheng"},"content":"                    response \u003d String.format(\"%sThe following %s task has been added:\\n  %s\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":147,"author":{"gitId":"cheeheng"},"content":"                                            + \"The task list now contains %d task(s).\\n\",","lastModifiedDate":"2022-08-29"},{"lineNumber":148,"author":{"gitId":"cheeheng"},"content":"                            response, tokens[0], taskAdded, tasks.size());","lastModifiedDate":"2022-08-29"},{"lineNumber":149,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"cheeheng"},"content":"            } else if (tokens[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"cheeheng"},"content":"                int index \u003d parseIndex(tokens[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":152,"author":{"gitId":"cheeheng"},"content":"                response \u003d String.format(\"%sThe following task has been marked as done:\\n  %s\\n\",","lastModifiedDate":"2022-09-05"},{"lineNumber":153,"author":{"gitId":"cheeheng"},"content":"                        response, markTask(index));","lastModifiedDate":"2022-09-05"},{"lineNumber":154,"author":{"gitId":"cheeheng"},"content":"            } else if (tokens[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"cheeheng"},"content":"                int index \u003d parseIndex(tokens[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":156,"author":{"gitId":"cheeheng"},"content":"                response \u003d String.format(\"%sThe following task has been marked as undone:\\n  %s\\n\",","lastModifiedDate":"2022-09-05"},{"lineNumber":157,"author":{"gitId":"cheeheng"},"content":"                        response, unmarkTask(index));","lastModifiedDate":"2022-09-05"},{"lineNumber":158,"author":{"gitId":"cheeheng"},"content":"            } else if (tokens[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"cheeheng"},"content":"                int index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"cheeheng"},"content":"                Task task \u003d deleteTask(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":161,"author":{"gitId":"cheeheng"},"content":"                response \u003d String.format(\"%sThe following task has been removed:\\n  %s\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":162,"author":{"gitId":"cheeheng"},"content":"                                + \"The task list now contains %d task(s).\\n\",","lastModifiedDate":"2022-08-29"},{"lineNumber":163,"author":{"gitId":"cheeheng"},"content":"                        response, task, tasks.size());","lastModifiedDate":"2022-08-29"},{"lineNumber":164,"author":{"gitId":"cheeheng"},"content":"            } else if (tokens[0].equals(\"find\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"cheeheng"},"content":"                if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"cheeheng"},"content":"                    throw new IllegalCommandException(\"Please enter a keyword to search.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"cheeheng"},"content":"                response \u003d String.format(\"%s%s\\n\", response, find(tokens[1].trim()));","lastModifiedDate":"2022-08-29"},{"lineNumber":169,"author":{"gitId":"cheeheng"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":170,"author":{"gitId":"cheeheng"},"content":"                response \u003d String.format(\"%s%s\\n\", response, list(tasks));","lastModifiedDate":"2022-08-29"},{"lineNumber":171,"author":{"gitId":"cheeheng"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"cheeheng"},"content":"                response \u003d String.format(\"%sGoodbye! Have a nice day!\", response);","lastModifiedDate":"2022-08-29"},{"lineNumber":173,"author":{"gitId":"cheeheng"},"content":"                return response;","lastModifiedDate":"2022-08-29"},{"lineNumber":174,"author":{"gitId":"cheeheng"},"content":"            } else if (command.equals(\"remindme\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":175,"author":{"gitId":"cheeheng"},"content":"                response \u003d String.format(\"%s%s\\n\", response, remindMe());","lastModifiedDate":"2022-09-08"},{"lineNumber":176,"author":{"gitId":"cheeheng"},"content":"                return response;","lastModifiedDate":"2022-09-08"},{"lineNumber":177,"author":{"gitId":"cheeheng"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"cheeheng"},"content":"                response \u003d String.format(\"%sSorry, I don\u0027t understand what this means!\\n\", response);","lastModifiedDate":"2022-08-29"},{"lineNumber":179,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"cheeheng"},"content":"            response \u003d String.format(\"%s%s\\n\", response, ex.getMessage());","lastModifiedDate":"2022-08-29"},{"lineNumber":182,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"cheeheng"},"content":"        return response;","lastModifiedDate":"2022-08-29"},{"lineNumber":184,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":186,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":187,"author":{"gitId":"cheeheng"},"content":"     * Returns list of tasks to remind the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":188,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":189,"author":{"gitId":"cheeheng"},"content":"     * @return List of tasks to remind the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":190,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":191,"author":{"gitId":"cheeheng"},"content":"    String remindMe() {","lastModifiedDate":"2022-09-08"},{"lineNumber":192,"author":{"gitId":"cheeheng"},"content":"        final String remindString \u003d \"I will remind you of the important tasks you have:\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":193,"author":{"gitId":"cheeheng"},"content":"        return remindString + list(tasks.getTasksToRemind(DEFAULT_REMINDER_SECONDS));","lastModifiedDate":"2022-09-08"},{"lineNumber":194,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":195,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":196,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":197,"author":{"gitId":"cheeheng"},"content":"     * Deletes the task corresponding to the specified index.","lastModifiedDate":"2022-09-05"},{"lineNumber":198,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":199,"author":{"gitId":"cheeheng"},"content":"     * @param index The index of which the corresponding task is to be deleted.","lastModifiedDate":"2022-09-05"},{"lineNumber":200,"author":{"gitId":"cheeheng"},"content":"     * @return The task which is deleted.","lastModifiedDate":"2022-09-05"},{"lineNumber":201,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When System I/O fails.","lastModifiedDate":"2022-09-05"},{"lineNumber":202,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException When index is invalid.","lastModifiedDate":"2022-09-05"},{"lineNumber":203,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":204,"author":{"gitId":"cheeheng"},"content":"    private Task deleteTask(int index) throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":205,"author":{"gitId":"cheeheng"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":206,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":207,"author":{"gitId":"cheeheng"},"content":"        tasks.delete(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":208,"author":{"gitId":"cheeheng"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":209,"author":{"gitId":"cheeheng"},"content":"        return task;","lastModifiedDate":"2022-09-05"},{"lineNumber":210,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":211,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":212,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":213,"author":{"gitId":"cheeheng"},"content":"     * Marks the task corresponding to the specified index as incomplete (in other words, unmarks","lastModifiedDate":"2022-09-05"},{"lineNumber":214,"author":{"gitId":"cheeheng"},"content":"     * the task).","lastModifiedDate":"2022-09-05"},{"lineNumber":215,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":216,"author":{"gitId":"cheeheng"},"content":"     * @param index The index of which the corresponding task is to be marked as incomplete.","lastModifiedDate":"2022-09-05"},{"lineNumber":217,"author":{"gitId":"cheeheng"},"content":"     * @return The task which is marked as incomplete.","lastModifiedDate":"2022-09-05"},{"lineNumber":218,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When System I/O fails.","lastModifiedDate":"2022-09-05"},{"lineNumber":219,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException When index is invalid.","lastModifiedDate":"2022-09-05"},{"lineNumber":220,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":221,"author":{"gitId":"cheeheng"},"content":"    private Task unmarkTask(int index) throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":222,"author":{"gitId":"cheeheng"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":223,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":224,"author":{"gitId":"cheeheng"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-09-05"},{"lineNumber":225,"author":{"gitId":"cheeheng"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":226,"author":{"gitId":"cheeheng"},"content":"        return task;","lastModifiedDate":"2022-09-05"},{"lineNumber":227,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":228,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":229,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":230,"author":{"gitId":"cheeheng"},"content":"     * Marks the task corresponding to the specified index as complete.","lastModifiedDate":"2022-09-05"},{"lineNumber":231,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":232,"author":{"gitId":"cheeheng"},"content":"     * @param index The index of which the corresponding task is to be marked as complete.","lastModifiedDate":"2022-09-05"},{"lineNumber":233,"author":{"gitId":"cheeheng"},"content":"     * @return The task which is marked as complete.","lastModifiedDate":"2022-09-05"},{"lineNumber":234,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When System I/O fails.","lastModifiedDate":"2022-09-05"},{"lineNumber":235,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException When index is invalid.","lastModifiedDate":"2022-09-05"},{"lineNumber":236,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":237,"author":{"gitId":"cheeheng"},"content":"    private Task markTask(int index) throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":238,"author":{"gitId":"cheeheng"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":239,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":240,"author":{"gitId":"cheeheng"},"content":"        // Solution below adapted from","lastModifiedDate":"2022-09-05"},{"lineNumber":241,"author":{"gitId":"cheeheng"},"content":"        // https://nus-cs2103-ay2223s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2022-09-05"},{"lineNumber":242,"author":{"gitId":"cheeheng"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-05"},{"lineNumber":243,"author":{"gitId":"cheeheng"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":244,"author":{"gitId":"cheeheng"},"content":"        return task;","lastModifiedDate":"2022-09-05"},{"lineNumber":245,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":246,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":247,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":248,"author":{"gitId":"cheeheng"},"content":"     * Processes the deadline command and returns the task created.","lastModifiedDate":"2022-09-05"},{"lineNumber":249,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":250,"author":{"gitId":"cheeheng"},"content":"     * @param args The arguments of the deadline command.","lastModifiedDate":"2022-09-05"},{"lineNumber":251,"author":{"gitId":"cheeheng"},"content":"     * @return Task created as a result of the command.","lastModifiedDate":"2022-09-05"},{"lineNumber":252,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException When command arguments are invalid.","lastModifiedDate":"2022-09-05"},{"lineNumber":253,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":254,"author":{"gitId":"cheeheng"},"content":"    private Task addDeadline(String args) {","lastModifiedDate":"2022-09-05"},{"lineNumber":255,"author":{"gitId":"cheeheng"},"content":"        String[] remTextTokens \u003d \"  \".concat(args).split(\" /by \", 2);","lastModifiedDate":"2022-09-05"},{"lineNumber":256,"author":{"gitId":"cheeheng"},"content":"        if (remTextTokens.length !\u003d 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":257,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(\"A deadline task must have a \"","lastModifiedDate":"2022-09-05"},{"lineNumber":258,"author":{"gitId":"cheeheng"},"content":"                    + \"deadline.\");","lastModifiedDate":"2022-09-05"},{"lineNumber":259,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":260,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":261,"author":{"gitId":"cheeheng"},"content":"        String description \u003d remTextTokens[0].trim();","lastModifiedDate":"2022-09-05"},{"lineNumber":262,"author":{"gitId":"cheeheng"},"content":"        String deadline \u003d remTextTokens[1].trim();","lastModifiedDate":"2022-09-05"},{"lineNumber":263,"author":{"gitId":"cheeheng"},"content":"        if (description.isBlank() || description.isEmpty()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":264,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2022-09-05"},{"lineNumber":265,"author":{"gitId":"cheeheng"},"content":"                    \"Description of deadline task cannot be empty.\");","lastModifiedDate":"2022-09-05"},{"lineNumber":266,"author":{"gitId":"cheeheng"},"content":"        } else if (deadline.isBlank()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":267,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(\"A deadline task must have a \"","lastModifiedDate":"2022-09-05"},{"lineNumber":268,"author":{"gitId":"cheeheng"},"content":"                    + \"deadline.\");","lastModifiedDate":"2022-09-05"},{"lineNumber":269,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":270,"author":{"gitId":"cheeheng"},"content":"        deadline \u003d convertToDate(deadline);","lastModifiedDate":"2022-09-05"},{"lineNumber":271,"author":{"gitId":"cheeheng"},"content":"        Task taskAdded \u003d new Deadline(description, false, deadline);","lastModifiedDate":"2022-09-05"},{"lineNumber":272,"author":{"gitId":"cheeheng"},"content":"        return taskAdded;","lastModifiedDate":"2022-09-05"},{"lineNumber":273,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":274,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":275,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":276,"author":{"gitId":"cheeheng"},"content":"     * Processes the event command and returns the event created.","lastModifiedDate":"2022-09-05"},{"lineNumber":277,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":278,"author":{"gitId":"cheeheng"},"content":"     * @param args The arguments of the event command.","lastModifiedDate":"2022-09-05"},{"lineNumber":279,"author":{"gitId":"cheeheng"},"content":"     * @return Task created as a result of the command.","lastModifiedDate":"2022-09-05"},{"lineNumber":280,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException When command arguments are invalid.","lastModifiedDate":"2022-09-05"},{"lineNumber":281,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":282,"author":{"gitId":"cheeheng"},"content":"    private Task addEvent(String args) {","lastModifiedDate":"2022-09-12"},{"lineNumber":283,"author":{"gitId":"cheeheng"},"content":"        String[] remTextTokens \u003d \"  \".concat(args).split(\" /from \", 2);","lastModifiedDate":"2022-09-12"},{"lineNumber":284,"author":{"gitId":"cheeheng"},"content":"        if (remTextTokens.length !\u003d 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":285,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(INVALID_EVENT_TIME_ERROR);","lastModifiedDate":"2022-09-12"},{"lineNumber":286,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":287,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":288,"author":{"gitId":"cheeheng"},"content":"        String description \u003d remTextTokens[0].strip();","lastModifiedDate":"2022-09-05"},{"lineNumber":289,"author":{"gitId":"cheeheng"},"content":"        String[] startAndEndTime \u003d remTextTokens[1].strip().split(\" /to \", 2);","lastModifiedDate":"2022-09-12"},{"lineNumber":290,"author":{"gitId":"cheeheng"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":291,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(","lastModifiedDate":"2022-09-05"},{"lineNumber":292,"author":{"gitId":"cheeheng"},"content":"                    \"Description of event task cannot be empty.\");","lastModifiedDate":"2022-09-05"},{"lineNumber":293,"author":{"gitId":"cheeheng"},"content":"        } else if (startAndEndTime.length !\u003d 2 || startAndEndTime[0].isBlank()","lastModifiedDate":"2022-09-12"},{"lineNumber":294,"author":{"gitId":"cheeheng"},"content":"                || startAndEndTime[1].isBlank()) {","lastModifiedDate":"2022-09-12"},{"lineNumber":295,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(INVALID_EVENT_TIME_ERROR);","lastModifiedDate":"2022-09-12"},{"lineNumber":296,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":297,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":298,"author":{"gitId":"cheeheng"},"content":"        String startTime \u003d convertToDate(startAndEndTime[0].strip());","lastModifiedDate":"2022-09-12"},{"lineNumber":299,"author":{"gitId":"cheeheng"},"content":"        String endTime \u003d convertToDate(startAndEndTime[1].strip());","lastModifiedDate":"2022-09-12"},{"lineNumber":300,"author":{"gitId":"cheeheng"},"content":"        Task taskAdded \u003d new Event(description, false, startTime, endTime);","lastModifiedDate":"2022-09-12"},{"lineNumber":301,"author":{"gitId":"cheeheng"},"content":"        return taskAdded;","lastModifiedDate":"2022-09-05"},{"lineNumber":302,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":303,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":304,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":305,"author":{"gitId":"cheeheng"},"content":"     * Attempts to parse the index as an integer and returns the integer if successful.","lastModifiedDate":"2022-09-05"},{"lineNumber":306,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":307,"author":{"gitId":"cheeheng"},"content":"     * @param index The string to parse as an integer.","lastModifiedDate":"2022-09-05"},{"lineNumber":308,"author":{"gitId":"cheeheng"},"content":"     * @return The string to parse as an integer.","lastModifiedDate":"2022-09-05"},{"lineNumber":309,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException When input is invalid.","lastModifiedDate":"2022-09-05"},{"lineNumber":310,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":311,"author":{"gitId":"cheeheng"},"content":"    private static int parseIndex(String index) {","lastModifiedDate":"2022-09-05"},{"lineNumber":312,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-09-05"},{"lineNumber":313,"author":{"gitId":"cheeheng"},"content":"            return Integer.parseInt(index);","lastModifiedDate":"2022-09-05"},{"lineNumber":314,"author":{"gitId":"cheeheng"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-09-05"},{"lineNumber":315,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(\"Invalid index.\");","lastModifiedDate":"2022-09-05"},{"lineNumber":316,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":317,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":318,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":319,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":320,"author":{"gitId":"cheeheng"},"content":"     * Lists the tasks in a user-friendly format.","lastModifiedDate":"2022-09-12"},{"lineNumber":321,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":322,"author":{"gitId":"cheeheng"},"content":"     * @param tasks The tasks to display.","lastModifiedDate":"2022-08-22"},{"lineNumber":323,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":324,"author":{"gitId":"cheeheng"},"content":"    private String list(TaskList tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":325,"author":{"gitId":"cheeheng"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-08"},{"lineNumber":326,"author":{"gitId":"cheeheng"},"content":"            return NO_TASKS_STRING;","lastModifiedDate":"2022-09-08"},{"lineNumber":327,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":328,"author":{"gitId":"cheeheng"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-08-29"},{"lineNumber":329,"author":{"gitId":"cheeheng"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":330,"author":{"gitId":"cheeheng"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":331,"author":{"gitId":"cheeheng"},"content":"            response \u003d String.format(\"%s%d.%s\\n\", response, i, task);","lastModifiedDate":"2022-08-29"},{"lineNumber":332,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":333,"author":{"gitId":"cheeheng"},"content":"        return response;","lastModifiedDate":"2022-08-29"},{"lineNumber":334,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":335,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":336,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":337,"author":{"gitId":"cheeheng"},"content":"     * Finds tasks which has a description which has a case-insensitive substring match to the","lastModifiedDate":"2022-08-22"},{"lineNumber":338,"author":{"gitId":"cheeheng"},"content":"     * provided string, and prints the result, via {@code list} method.","lastModifiedDate":"2022-08-22"},{"lineNumber":339,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":340,"author":{"gitId":"cheeheng"},"content":"     * @param str The string to search for.","lastModifiedDate":"2022-08-22"},{"lineNumber":341,"author":{"gitId":"cheeheng"},"content":"     * @return The string which will be printed by the chatbot.","lastModifiedDate":"2022-08-29"},{"lineNumber":342,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":343,"author":{"gitId":"cheeheng"},"content":"    private String find(String str) {","lastModifiedDate":"2022-08-29"},{"lineNumber":344,"author":{"gitId":"cheeheng"},"content":"        TaskList results \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":345,"author":{"gitId":"cheeheng"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":346,"author":{"gitId":"cheeheng"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":347,"author":{"gitId":"cheeheng"},"content":"            boolean isSubstring \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":348,"author":{"gitId":"cheeheng"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2022-08-22"},{"lineNumber":349,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":350,"author":{"gitId":"cheeheng"},"content":"            // checks that description contains str as a substring (ignoring case)","lastModifiedDate":"2022-09-05"},{"lineNumber":351,"author":{"gitId":"cheeheng"},"content":"            for (int j \u003d 0; j \u003c\u003d description.length() - str.length(); j++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":352,"author":{"gitId":"cheeheng"},"content":"                if (description.substring(j, j + str.length()).equalsIgnoreCase(str)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":353,"author":{"gitId":"cheeheng"},"content":"                    isSubstring \u003d true;","lastModifiedDate":"2022-08-22"},{"lineNumber":354,"author":{"gitId":"cheeheng"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":355,"author":{"gitId":"cheeheng"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":356,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":357,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":358,"author":{"gitId":"cheeheng"},"content":"            if (isSubstring) {","lastModifiedDate":"2022-08-22"},{"lineNumber":359,"author":{"gitId":"cheeheng"},"content":"                results.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":360,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":361,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":362,"author":{"gitId":"cheeheng"},"content":"        String response \u003d String.format(\"Here are the matching results in your task list (%d in \"","lastModifiedDate":"2022-08-29"},{"lineNumber":363,"author":{"gitId":"cheeheng"},"content":"                + \"total):\\n%s\", results.size(), list(results));","lastModifiedDate":"2022-08-29"},{"lineNumber":364,"author":{"gitId":"cheeheng"},"content":"        return response;","lastModifiedDate":"2022-08-29"},{"lineNumber":365,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":366,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":366}},{"path":"src/main/java/jude/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"import jude.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"import jude.task.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"import jude.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"import jude.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":" * Loads list of tasks from a specified file in the task tracker chatbot.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"    private String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     * Creates an instance of class {@code Storage} where the file to read from is specified in","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     * the argument {@code filePath}.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"     * @param filePath File which is read from.","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"            // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"            // https://stackoverflow.com/questions/3634853/how-to-create-a-directory-in-java","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"            // https://stackoverflow.com/questions/8197049/","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"            // how-to-get-just-the-parent-directory-name-of-a-specific-file","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"            Path parentDirectory \u003d Paths.get(filePath).getParent();","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"            if (parentDirectory !\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"                Files.createDirectories(parentDirectory);","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"            // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"            // https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"        } catch (FileAlreadyExistsException ex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"            // If file already exists, then the new file should not be created.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"            return;","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"     * Loads tasks from the file specified in the constructor.","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"     * The format is as follows (in separate lines, no extra newlines in between):","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"     * - typeOfTask (which can be \u0027T\u0027, \u0027D\u0027 or \u0027E\u0027), representing todo, deadline and event tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"     *   respectively.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"     * - Name of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"     * - Whether the task is marked as done, 1 if so and 0 otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"     * - Any dates which may be required by the type. For events, the start date is stored on top","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"     *   of the end date.","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"     * In between two tasks, there can be extra newlines.","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"     * @return A {@code TaskList} object depicting the list of {@code Tasks} found by the loader.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"        Scanner sc \u003d new Scanner(Paths.get(filePath));","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"            String taskType \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"            if (taskType.isBlank()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"                // ignore blank lines in between tasks","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"                continue;","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"            String taskName \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"            String done \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"            boolean isDone \u003d Integer.parseInt(done) \u003d\u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"            Task task;","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"                task \u003d new Todo(taskName, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"                String deadline \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"                task \u003d new Deadline(taskName, isDone, deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"                String eventStartTime \u003d sc.nextLine();","lastModifiedDate":"2022-09-12"},{"lineNumber":89,"author":{"gitId":"cheeheng"},"content":"                String eventEndTime \u003d sc.nextLine();","lastModifiedDate":"2022-09-12"},{"lineNumber":90,"author":{"gitId":"cheeheng"},"content":"                task \u003d new Event(taskName, isDone, eventStartTime, eventEndTime);","lastModifiedDate":"2022-09-12"},{"lineNumber":91,"author":{"gitId":"cheeheng"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"cheeheng"},"content":"                throw new RuntimeException(String.format(","lastModifiedDate":"2022-09-12"},{"lineNumber":93,"author":{"gitId":"cheeheng"},"content":"                        \"Jude cannot understand the input file %s.\", filePath));","lastModifiedDate":"2022-09-12"},{"lineNumber":94,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"cheeheng"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"cheeheng"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"cheeheng"},"content":"     * Saves an updated list of tasks in the file indicated in the constructor when the {@code","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"cheeheng"},"content":"     * Storage} instance was created.","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"cheeheng"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"cheeheng"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"cheeheng"},"content":"        FileWriter fw \u003d new FileWriter(Paths.get(filePath).toFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"cheeheng"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"cheeheng"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"cheeheng"},"content":"            fw.write(task.toFileSaveString());","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"cheeheng"},"content":"        fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":115}},{"path":"src/main/java/jude/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import jude.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":" * TaskList is a class which stores a list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * Creates a new empty {@code TaskList}.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * Adds a {@code Task} to the end of the {@code TaskList}.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"     * Checks if the provided index is out of bounds, and throws IllegalCommandException if so.","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     * @param index The index to check.","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException If the provided index is out of bounds.","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"    private void checkIndex(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.size()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"            throw new IllegalCommandException(\"Invalid index\");","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"     * Deletes a task at a particular index (1-based).","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     * @param index The index.","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"     * @throws IllegalCommandException If index range is out of bounds.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"        checkIndex(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"     * Returns the task corresponding to the specified index (1-based).","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"     * @param index The index.","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"     * @return The {@code Task} corresponding to the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"        checkIndex(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"     * Returns the number of elements in the {@code TaskList} object.","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"     * @return The number of elements.","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"    public int size() {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"     * Returns the list of deadlines within the specified number of seconds from","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"     * the current moment, or less.","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"     * @param seconds The number of seconds.","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"     * @returns List of tasks to remind.","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"    public TaskList getTasksToRemind(long seconds) {","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"        TaskList reminderTasks \u003d new TaskList();","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"            if (task.needsReminder(seconds)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"                reminderTasks.add(task);","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"        return reminderTasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":88}},{"path":"src/main/java/jude/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":" * Deals with the user interface of the chatbot.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"public class Ui {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Jude, named after the Beatles\u0027 hit \"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"            + \"song \u0027Hey Jude\u0027.\\nWhat can I do for you?\";","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"    // Solution below adapted from","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"    // https://stackoverflow.com/questions/5287538/how-to-get-the-user-input-in-java","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"     * Creates a new UI instance.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    public Ui() {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     * Returns the welcome message of the chatbot, which should be done when the chatbot starts up.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     * @return The welcome message of the chatbot.","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     * Prints a new empty line followed by the string \"\u003e \", indicating that the chatbot is ready","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     * to receive a response from the user. This method is for use in console mode only.","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"    void showCommandReadReady() {","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"        System.out.println();","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"     * Reads the command entered by the user and returns it.","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"    public String readCommand() {","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"     * Displays the reply when bye command is executed. This method should only be called on","lastModifiedDate":"2022-09-05"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"     * console mode.","lastModifiedDate":"2022-09-05"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"    public void showByeMessage() {","lastModifiedDate":"2022-09-05"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"        System.out.println(\"Goodbye! Have a nice day!\");","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":56}},{"path":"src/main/java/jude/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import jude.Parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"import jude.util.DateUtils;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":" * A {@code Deadline} object is a Task object that has an associated deadline by which the task","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":" * should be completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    private final String deadline;","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"     * Creates a new {@code Deadline} object with a given description, whether it has been done","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"     * and the corresponding deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     * @param deadline The date/time by which the task should be completed.","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"    public Deadline(String description, boolean isDone, String deadline) {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"     * Returns the deadline of the task the {@code Deadline} object is associated with.","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     * @return the deadline of the task the {@code Deadline} object is associated with.","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"        return deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"     * Returns the task type code for an {@code Deadline} object, i.e. \"D\".","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"     * @return \"D\".","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"    public String getTaskTypeCode() {","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"        return \"D\";","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"     * Returns the String representation of the {@code Deadline} object, i.e.","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"     * a string in the format \"[task type code][get status icon] description (by: deadline)\".","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"     * @return String representation of the {@code Deadline} object.","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), deadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"     * Returns a String representation of the {@code Deadline} object which in a format convenient","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"     * to save and load files.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"     * The string returned is in the following format (with newlines in between components and in","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"     * the end):","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"     * Task Type Code, i.e. \"D\" for {@code Deadline} objects","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"     * Description","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"     * 1 if the task is done, and 0 otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"     * Deadline by which the task should be completed","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"     * @return The String representation of the {@code Deadline} object.","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"    public String toFileSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"        return String.format(\"%s%s\\n\", super.toFileSaveString(), deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"     * Returns whether the {@code Deadline} objects have a deadline which is coming soon (within","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"     * {@code seconds} of the current time) and is not marked as complete.","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"     * Also reminds of tasks which are overdue.","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"     * @param seconds Number of seconds of reminder notice.","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"     * @return True if the {@code Deadline} is not marked as complete and has a deadline no greater","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"     *     than {@code seconds} seconds away or is overdue, and false otherwise.","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"    public boolean needsReminder(long seconds) {","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"        long timeToDeadline \u003d DateUtils.calculateTimeDifference(LocalDateTime.now(),","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"cheeheng"},"content":"                LocalDateTime.parse(this.deadline,","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"cheeheng"},"content":"                DateTimeFormatter.ofPattern(Parser.DEFAULT_DATE_FORMAT)));","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"cheeheng"},"content":"        boolean isDeadlineComingSoon \u003d timeToDeadline \u003c\u003d seconds;","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"cheeheng"},"content":"        return !getIsDone() \u0026\u0026 isDeadlineComingSoon;","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":94}},{"path":"src/main/java/jude/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import static jude.Parser.DEFAULT_DATE_FORMAT;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"import jude.util.DateUtils;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":" * An {@code Event} object is a Task which has a start time and an end time.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    private final String start;","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"    private final String end;","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"     * Creates a new {@code Event} object with a given description, whether it has been done, the","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"     * start time and the end time.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     * @param isDone Whether the event is marked as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     * @param start The start time of the event.","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     * @param end The end time of the event.","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"        this.start \u003d start;","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     * Returns the task type code for an {@code Event} object, i.e. \"E\".","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"     * @return \"E\".","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    public String getTaskTypeCode() {","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"        return \"E\";","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"     * Returns the String representation of the {@code Event} object, i.e.","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     * a string in the format \"[task type code][get status icon] description (at: time of event)\".","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"     * @return String representation of the {@code Event} object.","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"        return String.format(\"%s (from %s to %s)\", super.toString(), start, end);","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"     * Returns a String representation of the {@code Event} object which in a format convenient to","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"     * save and load files.","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"     * The string returned is in the following format (with newlines in between components and in","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"     * the end):","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"     * Task Type Code, i.e. \"E\" for {@code Event} objects","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"     * Description","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"     * 1 if the task is done, and 0 otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"     * The time which the {@code Event} takes place","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"     * @return The String representation of the {@code Event} object.","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"    public String toFileSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"        return String.format(\"%s%s\\n%s\\n\", super.toFileSaveString(), start, end);","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"     * Returns true if and only if {@code Event} has not started yet or is about to start, and is","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"     * at most the indicated number of seconds away from the start time.","lastModifiedDate":"2022-09-12"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"     * @param seconds Number of seconds time notice required.","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"     * @return True if and only if event to start within the number of seconds indicated in the","lastModifiedDate":"2022-09-12"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"     * parameter {@code seconds}.","lastModifiedDate":"2022-09-12"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"    public boolean needsReminder(long seconds) {","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(this.start, DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT));","lastModifiedDate":"2022-09-12"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"        long timeDifference \u003d DateUtils.calculateTimeDifference(LocalDateTime.now(), startTime);","lastModifiedDate":"2022-09-12"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"        return 0 \u003c\u003d timeDifference \u0026\u0026 timeDifference \u003c\u003d seconds;","lastModifiedDate":"2022-09-12"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":85}},{"path":"src/main/java/jude/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author cheeheng-reused","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//Solution reused from https://nus-cs2103-ay2223s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//with major modifications, including significant enhancement to functionality","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * The {@code Task} class models a task. A task has a description and an indicator depicting whether","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * it has been done.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Creates a new {@code Task} object with a given description and whether it has been done.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param description The description of the {@code Task}.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param isDone      Whether the {@code Task} is marked as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns whether the given {@code Task} object is marked as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return Whether the task is done.","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the description of the {@code Task} object.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return Description of the {@code Task} object.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return description;","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the status icon depicting whether the {@code Task} has been done.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return \u0027X\u0027 if {@code Task} is done, \u0027 \u0027 otherwise.","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the status of the {@code Task} to \u0027done\u0027.","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the status of the {@code Task} to \u0027not done\u0027.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns the task type code of the {@code Task} object. The task type code will be displayed","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * on the command line interface.","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @return The task type code of the {@code Task} object.","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public abstract String getTaskTypeCode();","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns the String representation of the {@code Task} object, i.e.","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * a string in the format \"[task type code][get status icon] description\".","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @return String representation of the {@code Task} object.","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return String.format(\"[%s][%s] %s\", getTaskTypeCode(), getStatusIcon(),","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                description);","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns a String representation of the {@code Task} object which in a format convenient to","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * save and load files.","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The string returned is in the following format (with newlines in between components and in","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * the end):","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Task Type Code","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Description","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * 1 if the task is done, and 0 otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The String representation of the {@code Task} object.","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toFileSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return String.format(\"%s\\n%s\\n%d\\n\", getTaskTypeCode(), description, isDone ? 1 : 0);","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns whether the task requires given number of seconds time interval notice required.","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param seconds Number of seconds time notice required.","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return Whether the task needs reminder.","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public abstract boolean needsReminder(long seconds);","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"-":110,"cheeheng":2}},{"path":"src/main/java/jude/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":" * A Todo is a Task without an associated date/time.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"     * Creates a new Todo object with a given description and whether it has been done.","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     * @param isDone      Whether the task is marked as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"     * Returns the task type code for a {@code Todo} object, i.e. \"T\".","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * @return \"T\".","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"    public String getTaskTypeCode() {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"        return \"T\";","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"     * Returns false because {@code Todo} objects do not require reminders.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"     * @param seconds Number of seconds time notice required.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     * @return False","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"    public boolean needsReminder(long seconds) {","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":38}},{"path":"src/main/java/jude/util/DateUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.util;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import java.time.ZoneId;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":" * DateUtils is a utilities class which helps to deal with dates.","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"public class DateUtils {","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     * Returns the epoch time (time since 1 January 1970, 0:00 UTC) assuming the time zone is the","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     * same as the system default time.","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * @param time The time to be converted to epoch time.","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     * @return The epoch time corresponding to the input time.","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    private static long getEpochTime(LocalDateTime time) {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        //@@author cheeheng-reused","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // Reused from","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // https://stackoverflow.com/questions/22990067/how-to-extract-epoch-from-localdate-and-localdatetime","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // with minor modifications.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ZoneId zoneId \u003d ZoneId.systemDefault();","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return time.atZone(zoneId).toEpochSecond();","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        //@author","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Calculates the time from {@code from} to {@code to} in seconds.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * If {@code from} is after {@code to}, then the result is negative.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param from Starting time.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param to Ending time.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return The time from {@code from} to {@code to} in seconds.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static long calculateTimeDifference(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return getEpochTime(to) - getEpochTime(from);","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"-":21,"cheeheng":18}},{"path":"src/main/resources/images/Credits.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"User.png taken from https://www.iconfinder.com/search?q\u003dperson\u0026price\u003dfree (original author Bombasticon Studio) under Free for commercial use licence.","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"ManSmilingBehindWall taken from https://www.pexels.com/photo/man-smiling-behind-wall-220453/ licenced under CC0. Original author Pixabay.","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"cheeheng":3}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"\u003c!--","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"    @@author cheeheng-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"    Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications.","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"--\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"      \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" wrappingWidth\u003d\"280.0\"\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"         \u003c/HBox.margin\u003e\u003c/Text\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"\u003c!--","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    @@author","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"--\u003e","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"cheeheng":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"\u003c!--","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"    @@author cheeheng-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"    Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications.","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"--\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"jude.MainWindow\"\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.leftAnchor\u003d\"2.0\" AnchorPane.rightAnchor\u003d\"80.0\" /\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.rightAnchor\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"46.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"\u003c!--","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    @@author","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"--\u003e","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"cheeheng":28}},{"path":"src/test/java/jude/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"// Test template adapted from https://se-education.org/guides/tutorials/junit.html","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":" * Tests functionality of Deadline class.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * Test Case 1: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_validDateFormatDMmmYyyy_success() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"1 Jan 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     * Test Case 2: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_validDateFormatMmmDYyyy_success() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"Jan 4 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"     * Test Case 3: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_validDateFormatYyyyMmDd_success() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"2022-04-14\");","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"     * Test Case 4: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_validDateFormatDdMmmYyyy_success() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"23 Aug 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"     * Test Case 5: Tests conversion of valid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_validDateFormatMmmDdYyyy_success() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"Jul 15 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"     * Test Case 6: Tests conversion of invalid dates.","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_invalidDate32April_exceptionThrown() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(\"Apr 32 2022\");","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"cheeheng"},"content":"            return;","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"cheeheng"},"content":"     * Test Case 7: Tests conversion of nonsensical strings.","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_invalidDateMonday_exceptionThrown() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":92,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(\"Monday\");","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"cheeheng"},"content":"            return;","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"cheeheng"},"content":"     * Test Case 8: Tests for null string.","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_invalidDateNull_exceptionThrown() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":108,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(null);","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"cheeheng"},"content":"            return;","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"cheeheng"},"content":"     * Test Case 9: Test 12-hour clock.","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_validDateWith12HourTime_success() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":124,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"22 Aug 2022 3:01 am\");","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"cheeheng"},"content":"     * Test Case 10: Test 24-hour clock.","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_validDateWith24HourTime_success() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":135,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"2022-08-23 13:01\");","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"cheeheng"},"content":"     * Test Case 11: Test invalid 12-hour clock.","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":143,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_invalid12HourTime_exceptionThrown() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":146,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(\"22 Aug 2022 13:01 am\");","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"cheeheng"},"content":"            return;","lastModifiedDate":"2022-08-29"},{"lineNumber":152,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":155,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":156,"author":{"gitId":"cheeheng"},"content":"     * Test Case 12: Test invalid 24-hour clock.","lastModifiedDate":"2022-08-22"},{"lineNumber":157,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":158,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":159,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":160,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":161,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_invalid24HourTime_exceptionThrown() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":162,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"cheeheng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"cheeheng"},"content":"            parser.convertToDate(\"Aug 24 2022 24:01\");","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"cheeheng"},"content":"            Assertions.fail();","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"cheeheng"},"content":"        } catch (IllegalCommandException ex) {","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"cheeheng"},"content":"            return;","lastModifiedDate":"2022-08-29"},{"lineNumber":168,"author":{"gitId":"cheeheng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":169,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":170,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":171,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":172,"author":{"gitId":"cheeheng"},"content":"     * Test Case 13: Test valid ISO Date","lastModifiedDate":"2022-08-22"},{"lineNumber":173,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":174,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-08-22"},{"lineNumber":175,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":176,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"cheeheng"},"content":"    public void testConvertToDate_validIsoDate_success() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":178,"author":{"gitId":"cheeheng"},"content":"        Parser parser \u003d new Parser(new TaskListStub(), new StorageStub(\"testing.txt\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":179,"author":{"gitId":"cheeheng"},"content":"        parser.convertToDate(\"2022-02-28T22:31\");","lastModifiedDate":"2022-08-22"},{"lineNumber":180,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":181,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"cheeheng":181}},{"path":"src/test/java/jude/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":" * Test stub in Storage class.","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"     * Creates an instance of the StorageStub test class.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     * @param filePath The specified filepath, parameter not actually used.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"    public StorageStub(String filePath) throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"        super(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"     * This is a mock method which returns a {@code TaskListStub}.\u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * The superclass method does the following:\u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     * @return A dummy {@code TaskListStub}.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    public TaskListStub load() {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"        return new TaskListStub();","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"cheeheng":29}},{"path":"src/test/java/jude/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import jude.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"import jude.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":" * Test class for TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"class TaskListStub extends TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"    // @inheritDoc adapted from https://github.com/nus-cs2103-AY2223S1/forum/issues/44","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"     * This is a mock method which does nothing. \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     * In the parent method, the following is done: \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    public void add(Task task) {}","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * This is a mock method which does nothing. \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     * In the parent method, the following is done: \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"    public void delete(int index) {}","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"     * This is a mock method which returns a dummy completed todo task. \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"     * In the parent method, the following is done: \u003cbr\u003e","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"        return new Todo(\"Todo Task 1\", true);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"cheeheng":37}},{"path":"src/test/java/jude/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"// Test template adapted from https://se-education.org/guides/tutorials/junit.html","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":" * Tests functionality of Deadline class.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"     * Test Case 1 of toString method.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where deadline task is complete.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    public void testToString_completedDeadlineTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Task 1\", true, \"22 Aug 2022 00:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"        assertEquals(\"[D][X] Deadline Task 1 (by: 22 Aug 2022 00:00)\", deadline.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"     * Test Case 2 of toString method.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where deadline task is incomplete.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    public void testToString_incompleteDeadlineTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Task 2\", false, \"23 Aug 2022 21:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"        assertEquals(\"[D][ ] Deadline Task 2 (by: 23 Aug 2022 21:00)\", deadline.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"     * Test Case 3 of toString method.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where {@code Deadline} task description is null, to ensure that the program","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"     * does not crash.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"    public void testToString_nullDeadlineTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(null, false, \"23 Aug 2022 21:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"     * Test Case 1 of toFileSaveString.","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where deadline task is complete.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"    public void testToFileSaveString_completedDeadlineTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Task 4\", true, \"24 Aug 2022 12:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"        assertEquals(\"D\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"                + \"Deadline Task 4\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"                + \"1\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"                + \"24 Aug 2022 12:00\\n\", deadline.toFileSaveString());","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"     * Test Case 2 of toFileSaveString() method.","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"     * Tests for case where deadline task is incomplete.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"    public void testToFileSaveString_incompleteDeadlineTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Task 5\", false, \"8 Dec 2022 15:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"        assertEquals(\"D\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"                + \"Deadline Task 5\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"                + \"0\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"                + \"8 Dec 2022 15:00\\n\", deadline.toFileSaveString());","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"cheeheng":68}},{"path":"src/test/java/jude/util/DateUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"package jude;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"// Test template adapted from https://se-education.org/guides/tutorials/junit.html","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"import jude.util.DateUtils;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":" * Tests functionality of Deadline class.","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"public class DateUtilsTest {","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"     * Test Case 1: Tests interval between dates, from earlier than to.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"    public void testIntervalBetweenDates_fromBeforeTo() throws IOException {","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"        long result \u003d DateUtils.calculateTimeDifference(LocalDateTime.of(2022, 9, 8, 16, 0, 0),","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"                LocalDateTime.of(2022, 9, 8, 16, 0, 5));","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"        assertEquals(result, 5);","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"     * Test Case 1: Tests interval between dates, from after to.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"    @Test","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"    public void testIntervalBetweenDates_fromAfterTo() throws IOException {","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"        long result \u003d DateUtils.calculateTimeDifference(LocalDateTime.of(2022, 9, 8, 16, 0, 15),","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"                LocalDateTime.of(2022, 9, 8, 16, 0, 5));","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"        assertEquals(result, -10);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"cheeheng":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"jude","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"cheeheng"},"content":"todo task1","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"cheeheng"},"content":"todo task2","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cheeheng"},"content":"todo task3","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cheeheng"},"content":"deadline task4 /by Monday","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"deadline task4 /by 2022-08-22","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"cheeheng"},"content":"event task5 /at Monday 4pm-5pm","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"event task5 /from 2022-08-12 4:00PM /to 2022-08-12 5:00PM","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"mark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"mark 5","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"mark 4","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"mark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"unmark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"unmark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cheeheng"},"content":"unmark 5","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cheeheng"},"content":"unmark 4","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cheeheng"},"content":"unmark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"unmark 6","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"unmark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"unmark -1","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"mark 6","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"cheeheng"},"content":"mark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"cheeheng"},"content":"mark -1","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"cheeheng"},"content":"todo","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"cheeheng"},"content":"deadline","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"cheeheng"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"cheeheng"},"content":"deadline  /by","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"cheeheng"},"content":"event  /from","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"cheeheng"},"content":"deadline t /by","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"cheeheng"},"content":"event t /to","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"cheeheng"},"content":"deadline /by t","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"cheeheng"},"content":"event /from t","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"cheeheng"},"content":"deadline   /by t","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"cheeheng"},"content":"event   /from t","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"cheeheng"},"content":"event   /from t /to","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"cheeheng"},"content":"event   /from /to t","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"cheeheng"},"content":"deadline   Task 6 /by  Tuesday","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"cheeheng"},"content":"deadline   Task 6 /by  23 Aug 2022","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"cheeheng"},"content":"event   Task 7 /at  Tuesday 1am-2am","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"cheeheng"},"content":"event   Task 7 /at  2022-09-13 01:00-02:00","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"cheeheng"},"content":"event   Task 7 /from  2022-08-13 01:00 /to 2022-08-13 02:00","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"cheeheng"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"cheeheng"},"content":"delete 2","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"cheeheng"},"content":"delete 7","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"cheeheng"},"content":"delete 0","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"cheeheng"},"content":"delete -1","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"cheeheng"},"content":"find 7","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"cheeheng"},"content":"find Task 6","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"cheeheng"},"content":"find Task 5","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"cheeheng"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"cheeheng"},"content":"mark 3","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"cheeheng"},"content":"mark 5","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"cheeheng"},"content":"find A","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"cheeheng"},"content":"find   tAsK","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"cheeheng"},"content":"find","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"cheeheng"},"content":"remindme","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"cheeheng"},"content":"unmark 5","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"cheeheng"},"content":"remindme","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"cheeheng"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"cheeheng":76}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeheng"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"cheeheng"},"content":"bye","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"cheeheng":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"cheeheng"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"cheeheng"},"content":"REM compile the code","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"cheeheng"},"content":"call \"..\\gradlew.bat\" build","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"cheeheng"},"content":"   echo ********** BUILD FAILURE **********","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"   exit /b 1","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"cheeheng"},"content":"REM idea adapted from https://github.com/nus-cs2103-AY2223S1/forum/issues/36","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"REM idea also adapted from https://github.com/nus-cs2103-AY2223S1/forum/issues/129","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"REM idea also adapted from https://stackoverflow.com/questions/24722757/how-to-call-a-batch-file-that-is-one-level-up-from-the-current-directory","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"call \"..\\gradlew.bat\" run -p .. --args console-test -q \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"call \"..\\gradlew.bat\" run -p .. --args console-test -q \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":16,"cheeheng":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"cheeheng"},"content":"if [ -e \"data/tasks.txt\" ]","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"cheeheng"},"content":"then","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"cheeheng"},"content":"    rm data/tasks.txt","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"cheeheng"},"content":"fi","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"cheeheng"},"content":"# Solution adapted from https://stackoverflow.com/questions/31011069/executing-a-script-from-a-parent-directory","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"cheeheng"},"content":"# ./gradlew adapted from https://stackoverflow.com/questions/41700798/gradlew-command-not-found","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"cheeheng"},"content":"cd ..","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"cheeheng"},"content":"if ! (./gradlew build)","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"cheeheng"},"content":"# https://linuxize.com/post/bash-append-to-file/","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"cheeheng"},"content":"./gradlew run --args console-test -q \u003c text-ui-test/input.txt \u003e text-ui-test/ACTUAL.TXT","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"cheeheng"},"content":"./gradlew run --args console-test -q \u003c text-ui-test/input2.txt \u003e\u003e text-ui-test/ACTUAL.TXT","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"cheeheng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"cheeheng"},"content":"cd text-ui-test","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"cheeheng":13}}]

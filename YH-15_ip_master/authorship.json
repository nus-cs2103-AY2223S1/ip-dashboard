[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YH-15":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"plugins {","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"repositories {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"dependencies {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"test {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"    testLogging {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"        showExceptions true","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"        showCauses true","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"application {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"shadowJar {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"run{","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"YH-15":47}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"T | 1 | borrow book","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"D | 0 | return book | 2022-06-06","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"E | 0 | project meeting | 2022-08-06 14:00","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"D | 0 | BoA SnT Application | 2022-08-29","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"YH-15":5}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"echo.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"echo.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"goto fail","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"echo.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"echo.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"goto fail","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":":init","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":":win9xME_args","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":":execute","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":":end","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":":fail","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"exit /b 1","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":":mainEnd","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":":omega","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"YH-15":103}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.IncomplateCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.NoSuchCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.TaskCompletionException;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.TaskOutOfBoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import duke.parser.CommandType;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"import duke.storage.Cache;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":" * The main class for personal assistant bot Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"    private static TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    public Duke() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"     * Launches the bot and says hello. Reads in the previous task list in cache and take user inputs to.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"     * @param args User inputs.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"        Cache cache \u003d new Cache(System.getProperty(\"user.dir\") + \"\\\\data\\\\duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"        taskList \u003d cache.printPath();","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"        run();","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"        cache.update(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"     * Executes commands:","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"     * 1. Greetings on opening.","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"     * 2. todo [task name]: to add a ToDo Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"     * 3. deadline [task name] /by yyyy-MM-dd: to add a Deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"     * 4. event [task name] /at yyyy-MM-dd hh:mm: to add a Event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"     * 5. bye: to exit.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"     * 6. mark [index]: to mark done for the task with given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"     * 7. unmark [index]: to unmark done for the task with given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"     * 8. delete [index]: to delete the task with given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"     * 9. find [String]: to find the corresponding task.","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"     * 10. list: to list all ongoing tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"    public static void run() throws IncomplateCommandException, TaskOutOfBoundException,","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"            NoSuchCommandException, TaskCompletionException, DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"        boolean lastCommandOrNot \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"        Task task;","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"        String command;","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"        String suggestion;","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"        String[] commandList;","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"        Integer taskIndex \u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"        Integer i;","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"        CommandType type;","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"        Ui.greet();","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"        while (!lastCommandOrNot) {","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"            command \u003d in.nextLine().trim();","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"            commandList \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"            command \u003d (Parser.multipleVariable(commandList[0])) ? commandList[0] : command;","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"            type \u003d CommandType.map(command);","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"            try {","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"                switch (type) {","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"                case BYE: {","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"                    Ui.bye();","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"                    lastCommandOrNot \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"                case MARK:","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"                case UNMARK: {","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"                    taskIndex \u003d Parser.strToInt(commandList[1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"                    task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"                    switch (type) {","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"                    case MARK: {","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"                        if (!task.checkDone()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"                            Ui.mark(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"                        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"                            System.out.println(\"     :( OOPS!!! The task specified is already done\");","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"                            throw new TaskCompletionException(\"\");","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"                        }","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"                        break;","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":"                    }","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"                    case UNMARK: {","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"                        if (task.checkDone()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"                            Ui.unmark(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"                        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"                            System.out.println(\"     :( OOPS!!! The task specified is not done yet\");","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"YH-15"},"content":"                            throw new TaskCompletionException(\"\");","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"YH-15"},"content":"                        }","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"                        break;","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"                    }","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"YH-15"},"content":"                    default:","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"                        throw new NoSuchCommandException(","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"YH-15"},"content":"                                \"     :( Unfortunately, but I cannot understand what that means :-(\");","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"YH-15"},"content":"                    }","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"YH-15"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"                case DELETE: {","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"                    taskIndex \u003d Parser.strToInt(commandList[1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"                    task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"                    Ui.delete(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"                    taskList.remove(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"                    for (i \u003d taskIndex; i \u003c taskList.countTask(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"YH-15"},"content":"                        taskList.get(i).updateRemoval();","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"                    }","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"YH-15"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":125,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"YH-15"},"content":"                case LIST: {","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"YH-15"},"content":"                    Ui.list(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"YH-15"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":130,"author":{"gitId":"YH-15"},"content":"                case TODO: {","lastModifiedDate":"2022-08-19"},{"lineNumber":131,"author":{"gitId":"YH-15"},"content":"                    taskList.add(Ui.addToDo(commandList[1]));","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"YH-15"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":133,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":134,"author":{"gitId":"YH-15"},"content":"                case DEADLINE: {","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"YH-15"},"content":"                    taskList.add(Ui.addDeadline(commandList[1]));","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"YH-15"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":138,"author":{"gitId":"YH-15"},"content":"                case EVENT: {","lastModifiedDate":"2022-08-19"},{"lineNumber":139,"author":{"gitId":"YH-15"},"content":"                    taskList.add(Ui.addEvent(commandList[1]));","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"YH-15"},"content":"                    break;","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":142,"author":{"gitId":"YH-15"},"content":"                case FIND: {","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"YH-15"},"content":"                    Ui.find(commandList[1].trim(), taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"YH-15"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"YH-15"},"content":"                default:","lastModifiedDate":"2022-08-19"},{"lineNumber":147,"author":{"gitId":"YH-15"},"content":"                    throw new NoSuchCommandException(","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"YH-15"},"content":"                            \"     :( Unfortunately, but I cannot understand what that means :-(\");","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":150,"author":{"gitId":"YH-15"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"YH-15"},"content":"                if (command.equals(\"mark\") || command.equals(\"unmark\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":152,"author":{"gitId":"YH-15"},"content":"                    System.out.println(\"     :( OOPS!!! The index of a task cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"YH-15"},"content":"                    suggestion \u003d \"Try again with a task index\";","lastModifiedDate":"2022-08-19"},{"lineNumber":154,"author":{"gitId":"YH-15"},"content":"                } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":155,"author":{"gitId":"YH-15"},"content":"                    System.out.println(\"     :( OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"YH-15"},"content":"                    suggestion \u003d \"Try again with a task description that you wanna track\";","lastModifiedDate":"2022-08-19"},{"lineNumber":157,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"YH-15"},"content":"                throw new IncomplateCommandException(e.getMessage(), suggestion);","lastModifiedDate":"2022-08-19"},{"lineNumber":159,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"YH-15"},"content":"                //IndexOutOfBoundsException mark 1 \u003e totalNumber","lastModifiedDate":"2022-08-19"},{"lineNumber":161,"author":{"gitId":"YH-15"},"content":"                //check mark/ unmark","lastModifiedDate":"2022-08-19"},{"lineNumber":162,"author":{"gitId":"YH-15"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"YH-15"},"content":"                if (command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":164,"author":{"gitId":"YH-15"},"content":"                    System.out.println(\"     :( OOPS!!! You have less than \" + (taskIndex + 1) + \" task(s).\");","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"YH-15"},"content":"                    suggestion \u003d \"Try again with a task index\";","lastModifiedDate":"2022-08-19"},{"lineNumber":166,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":167,"author":{"gitId":"YH-15"},"content":"                throw new TaskOutOfBoundException(e.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":168,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":169,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":170,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"YH-15":162,"-":9}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import duke.storage.Cache;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":" * The user interface.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"     *  Greets.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    public static void greet() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Hello! I\u0027m Duke.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"     *  Says goodbye.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    public static void bye() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"     * Add a new duke.Tasks.Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"     * @param str the description of ddl + by when","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"     * @return a newly created duke.Tasks.Deadline class for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"    public static Deadline addDeadline(String str) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"        String name \u003d str.split(\" /\", 2)[0];","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"        String by \u003d str.split(\" /\", 2)[1].split(\"by \", 2)[1];","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"        Deadline task \u003d Deadline.addTask(name, by);","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"        Deadline.countTaskLeft();","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"        return task;","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"     * Adds a new duke.Tasks.Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"     * @param str The description of event + at what time","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"     * @return A newly created duke.Tasks.Event class for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"    public static Event addEvent(String str) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"        String name \u003d str.split(\" /\", 2)[0];","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"        String at \u003d str.split(\" /\", 2)[1].split(\"at \", 2)[1];","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"        Event task \u003d Event.addTask(name, at);","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"        Event.countTaskLeft();","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"        return task;","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"     * Adds a new duke.Tasks.ToDo task.","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"     * @param str The description of to do task.","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"     * @return A newly created duke.Tasks.ToDo class for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"    public static ToDo addToDo(String str) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"        ToDo task \u003d ToDo.addTask(str);","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"        ToDo.countTaskLeft();","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"        return task;","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"     * Prints current task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"     * @param taskList The task list retrieved directly from the storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"    public static void list(TaskList taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"        for (Task task : taskList.getList()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"            System.out.println(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"     * Marks task with index specified as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"     * @param task Mark task with index specified fetched from the task list.","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"    public static void mark(Task task) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"YH-15"},"content":"        task.changeStatus(); // flip status","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"       \" + task.printSelf());","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"YH-15"},"content":"     * Marks task with index specified as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"YH-15"},"content":"     * @param task Mark task with index specified fetched from the task list.","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"    public static void unmark(Task task) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"        task.changeStatus(); // flip status","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"       \" + task.printSelf());","lastModifiedDate":"2022-08-19"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":125,"author":{"gitId":"YH-15"},"content":"     * Deletes a task from the list and prints out the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"YH-15"},"content":"     * @param task The duke.Tasks.Task object which the user wants to delete","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"YH-15"},"content":"    public static void delete(Task task) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":130,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":131,"author":{"gitId":"YH-15"},"content":"        Task.removeTask(task); // change total number of task.","lastModifiedDate":"2022-08-19"},{"lineNumber":132,"author":{"gitId":"YH-15"},"content":"        ToDo.countTaskLeft();","lastModifiedDate":"2022-08-19"},{"lineNumber":133,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":134,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"YH-15"},"content":"     * Syncs a duke.Tasks.Deadline from cache file.","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"YH-15"},"content":"     * @param str The description of ddl + by when.","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"YH-15"},"content":"     * @param isDone A boolean indicator to show if the task is marked done.","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"YH-15"},"content":"     * @return A newly created duke.Tasks.Deadline class for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"YH-15"},"content":"    public static Deadline syncDeadline(String str, boolean isDone) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"YH-15"},"content":"        String name \u003d str.split(\" \\\\| \", 2)[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"YH-15"},"content":"        String by \u003d str.split(\" \\\\| \", 2)[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"YH-15"},"content":"        Deadline task \u003d Deadline.addTask(name, by);","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"YH-15"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"YH-15"},"content":"            task.changeStatus();","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"YH-15"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"YH-15"},"content":"     * Syncs a duke.Tasks.Event from cache file.","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"YH-15"},"content":"     * @param str The description of duke.Tasks.Event + at what time.","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"YH-15"},"content":"     * @param isDone A boolean indicator to show if the task is marked done.","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"YH-15"},"content":"     * @return A newly created duke.Tasks.Event class for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"YH-15"},"content":"    public static Event syncEvent(String str, boolean isDone) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"YH-15"},"content":"        String name \u003d str.split(\" \\\\| \", 2)[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"YH-15"},"content":"        String at \u003d str.split(\" \\\\| \", 2)[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"YH-15"},"content":"        Event task \u003d Event.addTask(name, at);","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"YH-15"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"YH-15"},"content":"            task.changeStatus();","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"YH-15"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"YH-15"},"content":"     * Syncs a Todo from cache file.","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"YH-15"},"content":"     * @param name The description of Todo","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"YH-15"},"content":"     * @param isDone A boolean indicator to show if the task is marked done.","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"YH-15"},"content":"     * @return A newly created Todo class for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"YH-15"},"content":"    public static ToDo syncToDo(String name, boolean isDone) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"YH-15"},"content":"        ToDo task \u003d ToDo.addTask(name);","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"YH-15"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":179,"author":{"gitId":"YH-15"},"content":"            task.changeStatus();","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":181,"author":{"gitId":"YH-15"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"YH-15"},"content":"     * Loads previous cache file contents and adds to current task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"YH-15"},"content":"     * @param file The duke.txt in .\\data\\ folder","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"YH-15"},"content":"     * @return The synced task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":188,"author":{"gitId":"YH-15"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"YH-15"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"YH-15"},"content":"    public static TaskList loading(File file) throws DukeException, FileNotFoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":192,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     :) Heyyo!!! Some saved work found in: \"","lastModifiedDate":"2022-08-26"},{"lineNumber":194,"author":{"gitId":"YH-15"},"content":"                + file.getAbsolutePath() + \"\\n     Loading...\");","lastModifiedDate":"2022-08-26"},{"lineNumber":195,"author":{"gitId":"YH-15"},"content":"        TaskList taskList \u003d Cache.recovery(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":196,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     :) Done loading~ Thanks for waiting!!!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":198,"author":{"gitId":"YH-15"},"content":"        return taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":199,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":200,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":201,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":202,"author":{"gitId":"YH-15"},"content":"     * Prints list of tasks that satisfies the requirements.","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"YH-15"},"content":"     * @param str The substring.","lastModifiedDate":"2022-08-27"},{"lineNumber":204,"author":{"gitId":"YH-15"},"content":"     * @param taskList The TaskList storage.","lastModifiedDate":"2022-08-27"},{"lineNumber":205,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":206,"author":{"gitId":"YH-15"},"content":"    public static void find(String str, TaskList taskList) throws DateTimeFormatException {","lastModifiedDate":"2022-08-27"},{"lineNumber":207,"author":{"gitId":"YH-15"},"content":"        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":208,"author":{"gitId":"YH-15"},"content":"        Integer index \u003d 0;","lastModifiedDate":"2022-08-27"},{"lineNumber":209,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":210,"author":{"gitId":"YH-15"},"content":"        for (Task task : taskList.getList()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":211,"author":{"gitId":"YH-15"},"content":"            if (task.findName(str)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":212,"author":{"gitId":"YH-15"},"content":"                findList.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":213,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":214,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":215,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":216,"author":{"gitId":"YH-15"},"content":"        for (Task task : findList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":217,"author":{"gitId":"YH-15"},"content":"            index \u003d index + 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":218,"author":{"gitId":"YH-15"},"content":"            System.out.println(\"     \" + index + \".\" + task.printSelf());","lastModifiedDate":"2022-08-27"},{"lineNumber":219,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":220,"author":{"gitId":"YH-15"},"content":"        printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":221,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":222,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":223,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":224,"author":{"gitId":"YH-15"},"content":"     * Helper func to print a horizontal line.","lastModifiedDate":"2022-08-25"},{"lineNumber":225,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":226,"author":{"gitId":"YH-15"},"content":"    private static void printLine() {","lastModifiedDate":"2022-08-18"},{"lineNumber":227,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"    ------------------------------------------------------------------------------------\");","lastModifiedDate":"2022-08-26"},{"lineNumber":228,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":229,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"YH-15":229}},{"path":"src/main/java/duke/dukeexception/DateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" * The error shown when user entered Date / Time in wrong format.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"public class DateTimeFormatException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"     * The error shown when user entered Date / Time in wrong format.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"     * @param msg error message.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"    public DateTimeFormatException(String msg) {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"        super(msg + \"\\n     :( OOPS!!! This date format is not supported. PLease check!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"YH-15":15}},{"path":"src/main/java/duke/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":" * DukeException with no additional feature.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"     * duke.DukeException with no additional feature.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"     * @param msg error message.","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"        super(msg);","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":14}},{"path":"src/main/java/duke/dukeexception/IncomplateCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":" * The exception shown when user entered commands that needs (multiple) input, but input not found.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"public class IncomplateCommandException extends DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"     * The error shown when user entered commands that needs (multiple) input, but input not found.","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"     * 1. mark/unmark without index","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"     * 2. todo/deadline/event without any description","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"     * @param msg error message.","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    public IncomplateCommandException(String msg, String suggestion) {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"        super(msg + \"\\nYou may need to enter additional information for this command to be executed. PLease check!\"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"                + \"\\n* Suggestion: \" + suggestion);","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":17}},{"path":"src/main/java/duke/dukeexception/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":" * The exception shown when user entered sth random.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"public class NoSuchCommandException extends DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"     * The exception shown when user entered sth random.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"     * @param msg error message.","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    public NoSuchCommandException(String msg) {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"        super(msg + \"\\nThis is a invalid command code. PLease check!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":14}},{"path":"src/main/java/duke/dukeexception/TaskCompletionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":" * The exception shown when user wants to mark tasks that are done/ unmark tasks that are not done yet.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"public class TaskCompletionException extends DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"     * The exception shown when user wants to mark tasks that are done/ unmark tasks that are not done yet.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"     * @param msg error message.","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    public TaskCompletionException(String msg) {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"        super(msg + \"\\nThe task status alr satisfies your requirement. PLease check!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":14}},{"path":"src/main/java/duke/dukeexception/TaskOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":" * The exception raised when user wants to mark/unmark unspecified task.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"public class TaskOutOfBoundException extends DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"     * The exception raised when user wants to mark/unmark unspecified task.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"     * @param msg error message.","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    public TaskOutOfBoundException(String msg) {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"        super(msg + \"\\nYou may need to enter additional information for this command to be executed. PLease check!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":14}},{"path":"src/main/java/duke/dukeexception/TypeNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":" * The Exception shown when the task type retrieved from the cache file is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"public class TypeNotExistException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"     * The error shown when the task type retrieved from the cache file is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"     * @param msg error message.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    public TypeNotExistException(String msg) {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"        super(msg + \"\\n     :( OOPS!!! The task type is invalid, it must be one of T/D/E. PLease check!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"YH-15":14}},{"path":"src/main/java/duke/parser/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"package duke.parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":" * Enum class for command types","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"    TODO,","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"    EVENT,","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    BYE,","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    MARK,","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"    UNMARK,","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"    DELETE,","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"    FIND,","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"    LIST;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"     * Helper function to incorporate enum so that the input could be case-insensitive.","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"     * @param str User command input.","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"     * @return the corresponding enum type.","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    public static CommandType map(String str) {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"        HashMap\u003cString, CommandType\u003e mapping \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"        int i;","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"        String[] inputList \u003d {\"bye\", \"mark\", \"unmark\", \"todo\", \"deadline\", \"event\", \"delete\", \"find\", \"list\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"        CommandType[] commandList \u003d {BYE, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, LIST};","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"        for (i \u003d 0; i \u003c inputList.length; i++) {","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"            mapping.put(inputList[i], commandList[i]);","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"        return mapping.get(str.toLowerCase());","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":36}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":" * The parser class helps to convert user input into correct format.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"     * Converts integer string to integer.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"     * @param str The integer string.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"     * @return The integer implied.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    public static Integer strToInt(String str) {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"        Integer result \u003d null;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"            result \u003d Integer.valueOf(str);","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"            System.out.println(\"Conversion from String to Integer failed. Please check!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"        return result;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    public static boolean multipleVariable (String str) {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"        String[] commands \u003d {\"mark\", \"unmark\", \"todo\", \"deadline\", \"event\", \"delete\", \"find\"};","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"     * Detects the commands that needs more than 1 variables.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"     * @param str The command input by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"     * @return A boolean value to indicate if the command needs another input.","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"    public static boolean multipleVariable(String str) {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"        String[] commands \u003d {\"mark\", \"unmark\", \"todo\", \"deadline\", \"event\", \"delete\"};","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-CodingStandard","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"        HashSet\u003cString\u003e checkList \u003d new HashSet\u003cString\u003e(Arrays.asList(commands));","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"        return checkList.contains(str.toLowerCase());","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"     * Converts a datetime string to a LocalDateTime Object.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"     * @param dateTime A string in format: yyyy-MM-dd hh:mm.","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"     * @return A LocalDateTime variable implied by the string.","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"     * @throws DateTimeFormatException","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"    public static LocalDateTime strToDateTime(String dateTime) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"        String[] dateAndTime \u003d dateTime.trim().split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"        String hour;","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"        String min;","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"        if (dateAndTime.length !\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"            throw new DateTimeFormatException(\"The correct Format: YYYY-MM-DD HH:mm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"            String[] components \u003d dateAndTime[1].strip().split(\":\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"            if (components.length !\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"                throw new DateTimeFormatException(\"The correct Format: HH:MM\");","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"                hour \u003d components[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"                min \u003d components[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"                if (hour.length() \u003d\u003d 2 \u0026\u0026 min.length() \u003d\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"                    try {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"                        LocalDate date \u003d strToDate(dateAndTime[0]);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"                        LocalTime time \u003d LocalTime.parse(dateAndTime[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"                        return LocalDateTime.of(date, time);","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"                    } catch (DateTimeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"                        throw new DateTimeFormatException(\"The correct Format: YYYY-MM-DD\");","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"                } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"                    throw new DateTimeFormatException(\"The correct Format: YYYY-MM-DD\");","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"     * Converts a datetime string to a LocalDate Object.","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"     * @param date A string in format: yyyy-MM-dd.","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"     * @return A LocalDate variable implied by the string.","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"     * @throws DateTimeFormatException","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"    public static LocalDate strToDate(String date) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"        String[] components \u003d date.strip().split(\"-\", 3);","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"        String year;","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"        String month;","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"        String day;","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"        if (components.length !\u003d 3) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"            throw new DateTimeFormatException(\"The correct Format: YYYY-MM-DD\");","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"            year \u003d components[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"            month \u003d components[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":"            day \u003d components[2];","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"            if (year.length() \u003d\u003d 4 \u0026\u0026 month.length() \u003d\u003d 2 \u0026\u0026 day.length() \u003d\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"                    return LocalDate.parse(date);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"                    throw new DateTimeFormatException(\"The correct Format: YYYY-MM-DD\");","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"YH-15"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"                throw new DateTimeFormatException(\"The correct Format: YYYY-MM-DD\");","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"YH-15"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"YH-15"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"    public static String dateToString(LocalDate date) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":120}},{"path":"src/main/java/duke/storage/Cache.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"package duke.storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.TypeNotExistException;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":" * A class represents a duke.Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"public class Cache {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"     * Constructs a duke.Storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"     * @param path The file path specified by the duke.Duke bot.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"    public Cache(String path) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"        filePath \u003d path;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"     * Alerts the user that there are some previously saved work and recover,","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"     * otherwise create a new file for future cache.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"     * @return A recovered list of previous work or a blank list if no cache.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"     * @throws DukeException If IOException occurs during the process.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"    public TaskList printPath() throws DukeException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"            // Create path if not exist","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"            File file \u003d new File(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"                Path path \u003d Paths.get(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"                assert (file.exists());","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"            // Create file if not exist","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"            file \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"                return Ui.loading(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"                assert (file.exists());","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"                return new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"     * Returns an ArrayList of previously recorded tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"     * @return A recovered list of previous work or a blank list if no cache.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"     * @throws DukeException If IOException occurs during the process.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"    public static TaskList recovery(File f) throws DukeException, FileNotFoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"        String[] commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"        String type;","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"        String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"        boolean isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"        Scanner sc;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"            sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"                commands \u003d line.split(\" \\\\| \", 3);","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"                type \u003d commands[0].trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"                isDone \u003d commands[1].trim().equals(\"1\") ? true : false;","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"                description \u003d commands[2].trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"                // sync task using duke.Ui functions","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"                    taskList.add(Ui.syncToDo(description, isDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"                    taskList.add(Ui.syncDeadline(description, isDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"                    taskList.add(Ui.syncEvent(description, isDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"                } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"                    throw new TypeNotExistException(\"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"            return new TaskList(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"            throw new DukeException(\"     :( OOPS!!! Cannot be read cos the file doesn\u0027t exist\");","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"     * Updates the records in cache file once for all before closing duke.Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"     * @param taskList A duke.Tasks.Task list to be recorded.","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"YH-15"},"content":"    public void update(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"YH-15"},"content":"            StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"            for (Task task : taskList.getList()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"YH-15"},"content":"                builder.append(task.recordString());","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"YH-15"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"YH-15"},"content":"            writer.write(builder.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"            writer.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"            throw new DukeException(\"     :( OOPS!!! Cannot be written cos the file doesn\u0027t exist\");","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"YH-15":121}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":" * A class to store ongoing Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"     * Default constructor which generates an empty list for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"     * Constructs a taskList using previous cache.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"     * @param list The list of tasks retrieved from cache.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"        taskList \u003d list;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"     * Adds one task.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"     * @param task The task being added.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"     * Returns a task corresponding to the given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"     * @param index The index of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"     * @return A task corresponding to the given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"     * Returns a ArrayList of duke.Tasks.Task for iteration.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"     * @return A ArrayList of duke.Tasks.Task","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"        return this.taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"     * Returns the size of ArrayList.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"     * @return The size.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"    public int countTask() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"     * Removes the task being passed in.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"     * @param task The task user wants to remove.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"    public void remove(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"        this.taskList.remove(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"YH-15":68}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":" * Sub-class of task, which has an additional ddl date.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"     * Constructs a Deadline object given description string and date string.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"     * @param description The name of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"     * @param by A date in format: yyyy-MM-dd.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"     * @throws DateTimeFormatException","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    public Deadline(String description, String by) throws DateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"        super(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"        this.by \u003d Parser.strToDate(by);","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"     * Adds a new Deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"     * @param name The name of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"     * @param by A date in format: yyyy-MM-dd.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"     * @return The generated Deadline Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"     * @throws DateTimeFormatException","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    public static Deadline addTask(String name, String by) throws DateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"        Deadline newDdl \u003d new Deadline(name, by);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"       \" + newDdl.printSelf());","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"        return newDdl;","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"    public String printSelf() throws DateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"        return \"[D]\" + super.printSelf() + \" (by: \" + Parser.dateToString(this.by) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"    public String recordString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"        return \"D | \" + super.recordString() + \" | \" + by;","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"YH-15":49}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":" * Sub-class of task, which has additional event date and time.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"     * Constructs a Event object given description string and datetime string.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"     * @param description The name of task.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"     * @param at A datetime in format: yyyy-MM-dd hh:mm.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"     * @throws DateTimeFormatException","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    public Event(String description, String at) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"        this.at \u003d Parser.strToDateTime(at);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"     * Adds a new Event task.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"     * @param name The name of task.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"     * @param at A datetime in format: yyyy-MM-dd hh:mm.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"     * @return The generated Event Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"     * @throws DateTimeFormatException","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    public static Event addTask(String name, String at) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"        Event newEvent \u003d new Event(name, at);","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"       \" + newEvent.printSelf());","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"        return newEvent;","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"    public String recordString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"        return \"E | \" + super.recordString() + \" | \"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"    public String printSelf() throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"        return \"[E]\" + super.printSelf() + \" (at: \" + Parser.dateTimeToString(this.at) + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":51}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":" * The base class for Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"    protected static Integer totalNumber \u003d 0;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"    protected String name;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    protected Integer index;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"     * Constructs a Task object.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"     * @param name The description of task.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"        totalNumber++;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"        this.index \u003d totalNumber;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"     * Helper function to call while adding a new task.","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"     * @param name the new task description.","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"     * @return the duke.Tasks.Task class being created.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"    public static Task addTask(String name) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"        Task newTask \u003d new Task(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"       \" + newTask.printSelf());","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"        return newTask;","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"     * Helper function to call while deleting a task, to keep track of the total number of tasks.","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"     * @param task The task being deleted.","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    public static void removeTask(Task task) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"        totalNumber--;","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"       \" + task.printSelf());","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"     * Update the index of a particular task to be index -1 after removal.","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"    public void updateRemoval() {","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"        index--;","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"     * Gets the icon depending on isDone status.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"     * @return [X] if not done, [ ] is done.","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"     * Gets the \"1\" or \"0\" depending on isDone status.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"     * @return 1 if not done, 0 is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"    public String getStatusString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"        return (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"     * Flips the status of isDone","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"    public void changeStatus() {","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"     * @return True if done, False if have not yet done.","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"    public boolean checkDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"     * Prints this line at the end of task adding/deleting for alert.","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"    public static void countTaskLeft() {","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"     Now you have \" + totalNumber + \" tasks in the list.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"     * Returns an indicator of whether some string is a substring of task name.","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"     * @param str the substring for searching.","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"     * @return The indicator.","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"    public boolean findName(String str) {","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"        return this.name.contains(str);","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":"     * helper func for toString method","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"     * @return string like: [icon] task name","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"    public String printSelf() throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"        output.append(this.getStatusIcon() + \" \" + this.name);","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"YH-15"},"content":"        return output.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"    public String recordString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"YH-15"},"content":"        return getStatusString() + \" | \" + name;","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"YH-15"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"YH-15"},"content":"        StringBuilder output \u003d new StringBuilder(\"     \");","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"            output.append(this.index + \".\" + this.printSelf());","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"        } catch (DateTimeFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"        return output.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"YH-15":124}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":" * Sub-class of task.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"     * Constructs a ToDo object given description string.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"     * @param name The name of task.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"     * @return The generated ToDo Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"     * @throws DateTimeFormatException","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    public static ToDo addTask(String name) throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"        ToDo newToDo \u003d new ToDo(name);","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"        System.out.println(\"       \" + newToDo.printSelf());","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"        return newToDo;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"    public String printSelf() throws DateTimeFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"        return \"[T]\" + super.printSelf();","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"    public String recordString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"        return \"T | \" + super.recordString();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":36}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"    public void testToString() throws DateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"        Deadline deadline \u003d new Deadline(\"Job Application\", \"2022-06-29\");","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"        deadline.changeStatus();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"        assertEquals(\"     1.[D][X] Job Application (by: Jun 29 2022)\", deadline.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"YH-15":24}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import duke.dukeexception.DateTimeFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"public class UiTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    public void testAddEvent() throws DateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"        Event event \u003d Ui.addEvent(\"Job Application /at 2022-06-29 12:26\");","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"        assertEquals(\"[E][ ] Job Application (at: Jun 29 2022 12:26)\", event.toString().trim().substring(2));","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    public void testMark() throws DateTimeFormatException {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"        Deadline deadline \u003d Ui.addDeadline(\"Random Task /by 2022-06-30\");","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"        assertEquals(\"[D][ ] Random Task (by: Jun 30 2022)\", deadline.toString().trim().substring(2));","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"        Ui.mark(deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"        assertEquals(\"     1.[D][X] Random Task (by: Jun 30 2022)\", deadline.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"YH-15":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"todo read book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"todo join sports club","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"mark 4","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"mark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"unmark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"todo borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"YH-15":14}}]

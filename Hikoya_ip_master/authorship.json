[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"# Skylark project template","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"4. After that, locate the `src/main/java/skylark/main/Launcher.java` file, right-click it, and choose `Run Launcher.main()` (if the code editor is showing compile errors, try restarting the IDE). ","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"If the setup is correct, you should see something similar to the UI as shown ![here](https://github.com/Hikoya/ip/blob/master/docs/Ui.png?raw\u003dtrue)","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"  ","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"Hikoya":6,"-":12}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"checkstyle {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    mainClassName \u003d \"skylark.main.Launcher\"","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"    archiveBaseName \u003d \"Skylark\"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Hikoya":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"Skylark is a desktop application used for you to keep track of your tasks easily. It provides an easy-to-use Graphical User Interface for users to input their commands quickly.","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"1. Ensure that you have `Java 11` or above installed on your local machine","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"2. Download the latest `Skylark.jar` from [here](https://github.com/Hikoya/ip/releases)","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"3. Copy the file to the folder you want to use as the home folder for Skylark. This folder should preferably be empty.","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"4. Double-click the file to start Skylark.","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"* Keep track of your tasks easily","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"* Mark each task as done/not done","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"* Delete each task when not needed anymore","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"* Tag each task with an easy-to-remember tag if necessary","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"* Filter tasks by keywords","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"* Saves all details into text file for easily retrieval","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"## Usage","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"### Adding a task: `Todo`, `Event`, `Deadline`","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"Adds a task into Skylark.","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"The format for the command is as per follows:","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"1. `Todo`: `todo DESCRIPTION`","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"2. `Event`: `event DESCRIPTION /at DATE TIME`","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"3. `Deadline`: `deadline DESCRIPTION /by DATE TIME`","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"**NOTE** the following formats for the `DATE` and `TIME` descriptor mentioned above","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"* `TIME`: `HHmm`","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"* `DATE`: `yyyy-MM-dd`","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"Example of usage:","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"* `todo return book`","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"* `event Formal Hall Dinner /at 2022-09-14 1800`","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"* `deadline CS2103 IP /by 2022-09-18 1800`","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"Expected outcome: ","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"* After running `todo return book`","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"  ```","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"  Got it. I\u0027ve added this task.","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"  [T][ ] return book","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"  Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"  ```","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"* After running `event Formal Hall Dinner /at 2022-09-14 1800`","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"  ```","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"  Got it. I\u0027ve added this task.","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"  [E][ ] Formal Hall Dinner (at: Sep 14 2022)","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"  Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"  ```","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"* After running `deadline CS2103 IP /by 2022-09-18 1800`","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"  ```","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"  Got it. I\u0027ve added this task.","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"  [D][ ] CS2103 IP (by: Sep 18 2022)","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"  Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"  ```","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"  ","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"### Lists the current tasks in Skylark - `list`","lastModifiedDate":"2022-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"Shows the list of tasks saved in Skylark","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"Example of usage:","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"* `list`","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"1. [T][X] return book","lastModifiedDate":"2022-09-11"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"2. [E][ ] Formal Hall Dinner (at: Sep 14 2022)","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"3. [D][ ] CS2103 IP (by: Sep 18 2022)","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"### Delete a Task - `delete`","lastModifiedDate":"2022-09-11"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"Delete a particular task from Skylark","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"Example of usage:","lastModifiedDate":"2022-09-11"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"* `delete INDEX`","lastModifiedDate":"2022-09-11"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"**NOTE:** The index must be an `integer` representing the index of the task","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"Expected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"* After running `delete 2`","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-11"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"    [E][ ] Formal Hall Dinner (at: Sep 14 2022)","lastModifiedDate":"2022-09-11"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"    Now you have 2 tasks in the list","lastModifiedDate":"2022-09-11"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"**NOTE:** If the index does not exist in Skylark, Skylark will simply reply with a:","lastModifiedDate":"2022-09-11"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"* After running `delete 99`","lastModifiedDate":"2022-09-11"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"    Sorry, index does not exist!","lastModifiedDate":"2022-09-11"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"### Marking/Un-marking a Task as complete - `unmark`, `mark`","lastModifiedDate":"2022-09-11"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"Marks/Un-marks a particular task from Skylark as done/not-done","lastModifiedDate":"2022-09-11"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"Example of usage:","lastModifiedDate":"2022-09-11"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"* `mark INDEX`","lastModifiedDate":"2022-09-11"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"* `unmark INDEX`","lastModifiedDate":"2022-09-11"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"**NOTE:** The index must be an `integer` representing the index of the task","lastModifiedDate":"2022-09-11"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"Expected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":106,"author":{"gitId":"Hikoya"},"content":"* After running `mark 2`","lastModifiedDate":"2022-09-11"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":108,"author":{"gitId":"Hikoya"},"content":"    Noted. I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-11"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"    [D][X] CS2103 IP (by: Sep 18 2022)","lastModifiedDate":"2022-09-11"},{"lineNumber":110,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":111,"author":{"gitId":"Hikoya"},"content":"* Running `unmark 2` again","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":113,"author":{"gitId":"Hikoya"},"content":"    Noted. I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"    [D][ ] CS2103 IP (by: Sep 18 2022)","lastModifiedDate":"2022-09-11"},{"lineNumber":115,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":116,"author":{"gitId":"Hikoya"},"content":"**NOTE:** If the index does not exist in Skylark, Skylark will simply reply with a:","lastModifiedDate":"2022-09-11"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"* After running `mark 99`","lastModifiedDate":"2022-09-11"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":119,"author":{"gitId":"Hikoya"},"content":"    Sorry, index does not exist!","lastModifiedDate":"2022-09-11"},{"lineNumber":120,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"Hikoya"},"content":"### Tagging a particular task - `tag`","lastModifiedDate":"2022-09-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"Hikoya"},"content":"Tags a particular task with a keyword given by the user","lastModifiedDate":"2022-09-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"* `tag INDEX TAG`","lastModifiedDate":"2022-09-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"**NOTE:** The index must be an `integer` representing the index of the task","lastModifiedDate":"2022-09-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"Hikoya"},"content":"* After running `tag 1 URGENT`","lastModifiedDate":"2022-09-11"},{"lineNumber":133,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":134,"author":{"gitId":"Hikoya"},"content":"    Noted. I\u0027ve tagged this task:","lastModifiedDate":"2022-09-11"},{"lineNumber":135,"author":{"gitId":"Hikoya"},"content":"    [T][ ] return book TAG: URGENT","lastModifiedDate":"2022-09-11"},{"lineNumber":136,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"Hikoya"},"content":"**NOTE:** If the index does not exist in Skylark, Skylark will simply reply with a:","lastModifiedDate":"2022-09-11"},{"lineNumber":139,"author":{"gitId":"Hikoya"},"content":"* After running `tag 99 URGENT`","lastModifiedDate":"2022-09-11"},{"lineNumber":140,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":141,"author":{"gitId":"Hikoya"},"content":"    Sorry, index does not exist!","lastModifiedDate":"2022-09-11"},{"lineNumber":142,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":143,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":144,"author":{"gitId":"Hikoya"},"content":"### Finding a particular task - `find`","lastModifiedDate":"2022-09-11"},{"lineNumber":145,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":146,"author":{"gitId":"Hikoya"},"content":"Finds any task from Skylark that contains the keywords given by the user","lastModifiedDate":"2022-09-11"},{"lineNumber":147,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":148,"author":{"gitId":"Hikoya"},"content":"Example of usage:","lastModifiedDate":"2022-09-11"},{"lineNumber":149,"author":{"gitId":"Hikoya"},"content":"* `find KEYWORD`","lastModifiedDate":"2022-09-11"},{"lineNumber":150,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":151,"author":{"gitId":"Hikoya"},"content":"Expected outcome:","lastModifiedDate":"2022-09-11"},{"lineNumber":152,"author":{"gitId":"Hikoya"},"content":"* After running `find CS2103`","lastModifiedDate":"2022-09-11"},{"lineNumber":153,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":154,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":155,"author":{"gitId":"Hikoya"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2022-09-11"},{"lineNumber":156,"author":{"gitId":"Hikoya"},"content":"    1. [D][ ] CS2103 IP (by: Sep 18 2022)","lastModifiedDate":"2022-09-11"},{"lineNumber":157,"author":{"gitId":"Hikoya"},"content":"    ```","lastModifiedDate":"2022-09-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":159,"author":{"gitId":"Hikoya"},"content":"**NOTE:** If there are no matching tasks, Skylark will simply reply with a:","lastModifiedDate":"2022-09-11"},{"lineNumber":160,"author":{"gitId":"Hikoya"},"content":"* After running `find asdasdsada`","lastModifiedDate":"2022-09-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2021-07-17"},{"lineNumber":162,"author":{"gitId":"Hikoya"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2022-09-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2021-07-17"},{"lineNumber":164,"author":{"gitId":"Hikoya"},"content":"  ","lastModifiedDate":"2022-09-11"},{"lineNumber":165,"author":{"gitId":"Hikoya"},"content":"### Exiting the program - `bye`","lastModifiedDate":"2022-09-11"},{"lineNumber":166,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":167,"author":{"gitId":"Hikoya"},"content":"Exits the program","lastModifiedDate":"2022-09-11"},{"lineNumber":168,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":169,"author":{"gitId":"Hikoya"},"content":"Example of usage:","lastModifiedDate":"2022-09-11"},{"lineNumber":170,"author":{"gitId":"Hikoya"},"content":"* `bye`","lastModifiedDate":"2022-09-11"},{"lineNumber":171,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":172,"author":{"gitId":"Hikoya"},"content":"### Saving data to and from Skylark","lastModifiedDate":"2022-09-11"},{"lineNumber":173,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":174,"author":{"gitId":"Hikoya"},"content":"Tasks stored in Skylark are saved in the hard disk automatically after any command that changes the data. ","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"Hikoya":147,"-":27}},{"path":"src/main/java/skylark/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import skylark.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Todo;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":" * Represents a command based on user input. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":" * A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":" * a particular command selected by the user e.g., user selects \u003ccode\u003elist\u003c/code\u003e.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    private static final int MIN_LENGTH_DONE \u003d 4;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    private static final int MIN_LENGTH_UNDONE \u003d 6;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    private static final int MIN_LENGTH_TODO \u003d 4;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    private static final int MIN_LENGTH_DEADLINE \u003d 8;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    private static final int MIN_LENGTH_EVENT \u003d 5;","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    private static final int MIN_LENGTH_DELETE \u003d 6;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    private static final int MIN_LENGTH_FIND \u003d 5;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    private static final int MIN_LENGTH_TAG \u003d 5;","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    /** String representing the input keyed by the user. */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    private final String input;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    /** Returns the exact input keyed by the user. */","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"    private Command(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"     * Interprets the command based on keywords.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"     * If there are no matching commands, a UnknownCommand is returned.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"     * @param command Input string from the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"     * @return A Command object based on interpreted input.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"    public static Command createCommand(String command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        if (command.equals(CommandList.COMMAND_LIST.toString())) {","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"            return new ListCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        } else if (command.length() \u003e\u003d Command.MIN_LENGTH_DONE","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 command.startsWith(CommandList.COMMAND_DONE.toString())) {","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"            return new DoneCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        } else if (command.length() \u003e\u003d Command.MIN_LENGTH_UNDONE","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 command.startsWith(CommandList.COMMAND_UNDONE.toString())) {","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"            return new UndoneCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        } else if (command.length() \u003e\u003d Command.MIN_LENGTH_TODO","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 command.startsWith(CommandList.COMMAND_TODO.toString())) {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"            return new TodoCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"        } else if (command.length() \u003e\u003d Command.MIN_LENGTH_DEADLINE","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 command.startsWith(CommandList.COMMAND_DEADLINE.toString())) {","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"            return new DeadlineCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        } else if (command.length() \u003e\u003d Command.MIN_LENGTH_EVENT","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 command.startsWith(CommandList.COMMAND_EVENT.toString())) {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"            return new EventCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"        } else if (command.length() \u003e\u003d Command.MIN_LENGTH_DELETE","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 command.startsWith(CommandList.COMMAND_DELETE.toString())) {","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"        } else if (command.length() \u003e\u003d Command.MIN_LENGTH_FIND","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 command.startsWith(CommandList.COMMAND_FIND.toString())) {","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"            return new FindCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"        } else if (command.length() \u003e\u003d Command.MIN_LENGTH_TAG","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 command.startsWith(CommandList.COMMAND_TAG.toString())) {","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"            return new TagCommand(command);","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"            return new UnknownCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"     * Throws a SkylarkException if there is an error.","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"     * @param taskList List of Tasks that already exists.","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"     * @return String representation of response from executing the command","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"     * @throws SkylarkException When there is an unexpected exception","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"    public abstract String run(TaskList taskList) throws SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"    public String getInput() {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"        return this.input;","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"    private static class ListCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"         * Returns a ListCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"        public ListCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) {","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"            stringBuilder.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"            stringBuilder.append(System.lineSeparator());","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"                Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"                stringBuilder.append(i + 1).append(\". \").append(currentTask.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"                stringBuilder.append(System.lineSeparator());","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"Hikoya"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"Hikoya"},"content":"    private static class DoneCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION \u003d 5;","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"         * Returns a DoneCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"        public DoneCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"Hikoya"},"content":"            String response;","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"Hikoya"},"content":"            String command \u003d super.getInput();","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"Hikoya"},"content":"            try {","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"                int index \u003d Integer.parseInt(command.substring(DoneCommand.POSITION)) - 1;","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"                if (!taskList.doesIndexExist(index)) {","lastModifiedDate":"2022-09-11"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"                    throw new SkylarkException(\"Sorry, index does not exist!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":130,"author":{"gitId":"Hikoya"},"content":"                }","lastModifiedDate":"2022-09-11"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"                Task currentTask \u003d taskList.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"Hikoya"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"Hikoya"},"content":"                response \u003d \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"Hikoya"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"Hikoya"},"content":"                        + currentTask;","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"Hikoya"},"content":"                taskList.saveToFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"Hikoya"},"content":"            } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-09-03"},{"lineNumber":138,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"Input is not a number!\");","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"Hikoya"},"content":"            return response;","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"Hikoya"},"content":"    private static class UndoneCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION \u003d 7;","lastModifiedDate":"2022-09-03"},{"lineNumber":146,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"Hikoya"},"content":"         * Returns a UndoneCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"Hikoya"},"content":"        public UndoneCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":158,"author":{"gitId":"Hikoya"},"content":"            String command \u003d super.getInput();","lastModifiedDate":"2022-09-03"},{"lineNumber":159,"author":{"gitId":"Hikoya"},"content":"            String response;","lastModifiedDate":"2022-08-28"},{"lineNumber":160,"author":{"gitId":"Hikoya"},"content":"            try {","lastModifiedDate":"2022-09-03"},{"lineNumber":161,"author":{"gitId":"Hikoya"},"content":"                int index \u003d Integer.parseInt(command.substring(UndoneCommand.POSITION)) - 1;","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"Hikoya"},"content":"                if (!taskList.doesIndexExist(index)) {","lastModifiedDate":"2022-09-11"},{"lineNumber":163,"author":{"gitId":"Hikoya"},"content":"                    throw new SkylarkException(\"Sorry, index does not exist!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":164,"author":{"gitId":"Hikoya"},"content":"                }","lastModifiedDate":"2022-09-11"},{"lineNumber":165,"author":{"gitId":"Hikoya"},"content":"                Task currentTask \u003d taskList.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"Hikoya"},"content":"                currentTask.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"Hikoya"},"content":"                response \u003d \"OK, I\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"Hikoya"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":169,"author":{"gitId":"Hikoya"},"content":"                        + currentTask;","lastModifiedDate":"2022-08-28"},{"lineNumber":170,"author":{"gitId":"Hikoya"},"content":"                taskList.saveToFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"Hikoya"},"content":"            } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-09-03"},{"lineNumber":172,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"Input is not a number!\");","lastModifiedDate":"2022-09-03"},{"lineNumber":173,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":174,"author":{"gitId":"Hikoya"},"content":"            return response;","lastModifiedDate":"2022-08-28"},{"lineNumber":175,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"Hikoya"},"content":"    private static class TodoCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION \u003d 5;","lastModifiedDate":"2022-09-03"},{"lineNumber":180,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":181,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"Hikoya"},"content":"         * Returns a Todo object.","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":186,"author":{"gitId":"Hikoya"},"content":"        public TodoCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":189,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":190,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":192,"author":{"gitId":"Hikoya"},"content":"            String command \u003d super.getInput();","lastModifiedDate":"2022-09-03"},{"lineNumber":193,"author":{"gitId":"Hikoya"},"content":"            if (command.equals(CommandList.COMMAND_TODO.toString())) {","lastModifiedDate":"2022-09-03"},{"lineNumber":194,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":195,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"Hikoya"},"content":"            String description \u003d command.substring(TodoCommand.POSITION);","lastModifiedDate":"2022-09-11"},{"lineNumber":197,"author":{"gitId":"Hikoya"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2022-09-11"},{"lineNumber":198,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-11"},{"lineNumber":199,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-11"},{"lineNumber":200,"author":{"gitId":"Hikoya"},"content":"            Todo toDoTask \u003d new Todo(description);","lastModifiedDate":"2022-09-11"},{"lineNumber":201,"author":{"gitId":"Hikoya"},"content":"            taskList.add(toDoTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"Hikoya"},"content":"            String response \u003d \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2022-08-28"},{"lineNumber":203,"author":{"gitId":"Hikoya"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":204,"author":{"gitId":"Hikoya"},"content":"                    + toDoTask","lastModifiedDate":"2022-08-28"},{"lineNumber":205,"author":{"gitId":"Hikoya"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":206,"author":{"gitId":"Hikoya"},"content":"                    + \"Now you have \"","lastModifiedDate":"2022-08-28"},{"lineNumber":207,"author":{"gitId":"Hikoya"},"content":"                    + taskList.size()","lastModifiedDate":"2022-08-28"},{"lineNumber":208,"author":{"gitId":"Hikoya"},"content":"                    + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":209,"author":{"gitId":"Hikoya"},"content":"            taskList.saveToFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":210,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":211,"author":{"gitId":"Hikoya"},"content":"            return response;","lastModifiedDate":"2022-08-28"},{"lineNumber":212,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":213,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":214,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":215,"author":{"gitId":"Hikoya"},"content":"    private static class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":216,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION \u003d 9;","lastModifiedDate":"2022-09-03"},{"lineNumber":217,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION_DATE \u003d 4;","lastModifiedDate":"2022-09-03"},{"lineNumber":218,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":219,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":220,"author":{"gitId":"Hikoya"},"content":"         * Returns a DeadlineCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":221,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":222,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":223,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":224,"author":{"gitId":"Hikoya"},"content":"        public DeadlineCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":225,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":226,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":227,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":228,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":229,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":230,"author":{"gitId":"Hikoya"},"content":"            String command \u003d super.getInput();","lastModifiedDate":"2022-08-21"},{"lineNumber":231,"author":{"gitId":"Hikoya"},"content":"            int slashIndex \u003d command.lastIndexOf(\"/\");","lastModifiedDate":"2022-08-21"},{"lineNumber":232,"author":{"gitId":"Hikoya"},"content":"            String desc \u003d command.substring(DeadlineCommand.POSITION, slashIndex - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":233,"author":{"gitId":"Hikoya"},"content":"            String endDate \u003d command.substring(slashIndex + DeadlineCommand.POSITION_DATE);","lastModifiedDate":"2022-09-03"},{"lineNumber":234,"author":{"gitId":"Hikoya"},"content":"            if (desc.isEmpty() || endDate.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":235,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"The description or end date of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":236,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":237,"author":{"gitId":"Hikoya"},"content":"            Deadline deadlineTask \u003d new Deadline(desc, endDate);","lastModifiedDate":"2022-08-21"},{"lineNumber":238,"author":{"gitId":"Hikoya"},"content":"            taskList.add(deadlineTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":239,"author":{"gitId":"Hikoya"},"content":"            String response \u003d \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2022-08-28"},{"lineNumber":240,"author":{"gitId":"Hikoya"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":241,"author":{"gitId":"Hikoya"},"content":"                    + deadlineTask","lastModifiedDate":"2022-08-28"},{"lineNumber":242,"author":{"gitId":"Hikoya"},"content":"                    + \"Now you have \"","lastModifiedDate":"2022-08-28"},{"lineNumber":243,"author":{"gitId":"Hikoya"},"content":"                    + taskList.size()","lastModifiedDate":"2022-08-28"},{"lineNumber":244,"author":{"gitId":"Hikoya"},"content":"                    + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":245,"author":{"gitId":"Hikoya"},"content":"            taskList.saveToFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":246,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":247,"author":{"gitId":"Hikoya"},"content":"            return response;","lastModifiedDate":"2022-08-28"},{"lineNumber":248,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":249,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":250,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":251,"author":{"gitId":"Hikoya"},"content":"    private static class EventCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":252,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION \u003d 6;","lastModifiedDate":"2022-09-03"},{"lineNumber":253,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION_DATE \u003d 4;","lastModifiedDate":"2022-09-03"},{"lineNumber":254,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":255,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":256,"author":{"gitId":"Hikoya"},"content":"         * Returns a EventCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":257,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":258,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":259,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":260,"author":{"gitId":"Hikoya"},"content":"        public EventCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":261,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":262,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":263,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":264,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":265,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":266,"author":{"gitId":"Hikoya"},"content":"            String command \u003d super.getInput();","lastModifiedDate":"2022-08-21"},{"lineNumber":267,"author":{"gitId":"Hikoya"},"content":"            int slashIndex \u003d command.lastIndexOf(\"/\");","lastModifiedDate":"2022-08-21"},{"lineNumber":268,"author":{"gitId":"Hikoya"},"content":"            String desc \u003d command.substring(EventCommand.POSITION, slashIndex - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":269,"author":{"gitId":"Hikoya"},"content":"            String timing \u003d command.substring(slashIndex + EventCommand.POSITION_DATE);","lastModifiedDate":"2022-09-03"},{"lineNumber":270,"author":{"gitId":"Hikoya"},"content":"            if (desc.isEmpty() || timing.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":271,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"The description or timing of an event cannot be empty.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":272,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":273,"author":{"gitId":"Hikoya"},"content":"            Event eventTask \u003d new Event(desc, timing);","lastModifiedDate":"2022-08-21"},{"lineNumber":274,"author":{"gitId":"Hikoya"},"content":"            taskList.add(eventTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":275,"author":{"gitId":"Hikoya"},"content":"            String response \u003d \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2022-08-28"},{"lineNumber":276,"author":{"gitId":"Hikoya"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":277,"author":{"gitId":"Hikoya"},"content":"                    + eventTask","lastModifiedDate":"2022-08-28"},{"lineNumber":278,"author":{"gitId":"Hikoya"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":279,"author":{"gitId":"Hikoya"},"content":"                    + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":280,"author":{"gitId":"Hikoya"},"content":"            taskList.saveToFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":281,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":282,"author":{"gitId":"Hikoya"},"content":"            return response;","lastModifiedDate":"2022-08-28"},{"lineNumber":283,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":284,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":285,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":286,"author":{"gitId":"Hikoya"},"content":"    private static class DeleteCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":287,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION \u003d 7;","lastModifiedDate":"2022-09-03"},{"lineNumber":288,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":289,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":290,"author":{"gitId":"Hikoya"},"content":"         * Returns a DeleteCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":291,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":292,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":293,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":294,"author":{"gitId":"Hikoya"},"content":"        public DeleteCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":295,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":296,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":297,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":298,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":299,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":300,"author":{"gitId":"Hikoya"},"content":"            String response;","lastModifiedDate":"2022-08-28"},{"lineNumber":301,"author":{"gitId":"Hikoya"},"content":"            try {","lastModifiedDate":"2022-09-03"},{"lineNumber":302,"author":{"gitId":"Hikoya"},"content":"                String command \u003d super.getInput();","lastModifiedDate":"2022-09-03"},{"lineNumber":303,"author":{"gitId":"Hikoya"},"content":"                int index \u003d Integer.parseInt(command.substring(DeleteCommand.POSITION)) - 1;","lastModifiedDate":"2022-09-03"},{"lineNumber":304,"author":{"gitId":"Hikoya"},"content":"                if (!taskList.doesIndexExist(index)) {","lastModifiedDate":"2022-09-11"},{"lineNumber":305,"author":{"gitId":"Hikoya"},"content":"                    throw new SkylarkException(\"Sorry, index does not exist!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":306,"author":{"gitId":"Hikoya"},"content":"                }","lastModifiedDate":"2022-09-11"},{"lineNumber":307,"author":{"gitId":"Hikoya"},"content":"                Task currentTask \u003d taskList.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":308,"author":{"gitId":"Hikoya"},"content":"                taskList.remove(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":309,"author":{"gitId":"Hikoya"},"content":"                response \u003d \"Noted. I\u0027ve removed this task:\"","lastModifiedDate":"2022-08-28"},{"lineNumber":310,"author":{"gitId":"Hikoya"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":311,"author":{"gitId":"Hikoya"},"content":"                        + currentTask","lastModifiedDate":"2022-08-28"},{"lineNumber":312,"author":{"gitId":"Hikoya"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2022-08-28"},{"lineNumber":313,"author":{"gitId":"Hikoya"},"content":"                        + \"Now you have \"","lastModifiedDate":"2022-08-28"},{"lineNumber":314,"author":{"gitId":"Hikoya"},"content":"                        + taskList.size()","lastModifiedDate":"2022-08-28"},{"lineNumber":315,"author":{"gitId":"Hikoya"},"content":"                        + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":316,"author":{"gitId":"Hikoya"},"content":"                taskList.saveToFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":317,"author":{"gitId":"Hikoya"},"content":"            } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-09-03"},{"lineNumber":318,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"Input is not a number!\");","lastModifiedDate":"2022-09-03"},{"lineNumber":319,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":320,"author":{"gitId":"Hikoya"},"content":"            return response;","lastModifiedDate":"2022-08-28"},{"lineNumber":321,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":322,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":323,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":324,"author":{"gitId":"Hikoya"},"content":"    private static class FindCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":325,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION \u003d 5;","lastModifiedDate":"2022-09-03"},{"lineNumber":326,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":327,"author":{"gitId":"Hikoya"},"content":"        public FindCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":328,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":329,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":330,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":331,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":332,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":333,"author":{"gitId":"Hikoya"},"content":"            String command \u003d super.getInput();","lastModifiedDate":"2022-08-21"},{"lineNumber":334,"author":{"gitId":"Hikoya"},"content":"            String query \u003d command.substring(FindCommand.POSITION);","lastModifiedDate":"2022-09-03"},{"lineNumber":335,"author":{"gitId":"Hikoya"},"content":"            if (query.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":336,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"The find query cannot be empty.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":337,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":338,"author":{"gitId":"Hikoya"},"content":"            StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2022-09-04"},{"lineNumber":339,"author":{"gitId":"Hikoya"},"content":"            response.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-09-04"},{"lineNumber":340,"author":{"gitId":"Hikoya"},"content":"            response.append(System.lineSeparator());","lastModifiedDate":"2022-09-04"},{"lineNumber":341,"author":{"gitId":"Hikoya"},"content":"            int count \u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":342,"author":{"gitId":"Hikoya"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":343,"author":{"gitId":"Hikoya"},"content":"                Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":344,"author":{"gitId":"Hikoya"},"content":"                if (currentTask.toString().contains(query)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":345,"author":{"gitId":"Hikoya"},"content":"                    response.append(count);","lastModifiedDate":"2022-09-04"},{"lineNumber":346,"author":{"gitId":"Hikoya"},"content":"                    response.append(\". \");","lastModifiedDate":"2022-09-04"},{"lineNumber":347,"author":{"gitId":"Hikoya"},"content":"                    response.append(currentTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":348,"author":{"gitId":"Hikoya"},"content":"                    response.append(System.lineSeparator());","lastModifiedDate":"2022-09-04"},{"lineNumber":349,"author":{"gitId":"Hikoya"},"content":"                    count +\u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":350,"author":{"gitId":"Hikoya"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":351,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":352,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":353,"author":{"gitId":"Hikoya"},"content":"            return response.toString();","lastModifiedDate":"2022-09-04"},{"lineNumber":354,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":355,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":356,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":357,"author":{"gitId":"Hikoya"},"content":"    private static class TagCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":358,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION \u003d 4;","lastModifiedDate":"2022-09-04"},{"lineNumber":359,"author":{"gitId":"Hikoya"},"content":"        private static final int POSITION_END \u003d 5;","lastModifiedDate":"2022-09-04"},{"lineNumber":360,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":361,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-09-04"},{"lineNumber":362,"author":{"gitId":"Hikoya"},"content":"         * Returns a TagCommand object.","lastModifiedDate":"2022-09-04"},{"lineNumber":363,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-09-04"},{"lineNumber":364,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":365,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-09-04"},{"lineNumber":366,"author":{"gitId":"Hikoya"},"content":"        public TagCommand(String input) {","lastModifiedDate":"2022-09-04"},{"lineNumber":367,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-09-04"},{"lineNumber":368,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":369,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":370,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-09-04"},{"lineNumber":371,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-09-04"},{"lineNumber":372,"author":{"gitId":"Hikoya"},"content":"            String response;","lastModifiedDate":"2022-09-04"},{"lineNumber":373,"author":{"gitId":"Hikoya"},"content":"            try {","lastModifiedDate":"2022-09-04"},{"lineNumber":374,"author":{"gitId":"Hikoya"},"content":"                String command \u003d super.getInput();","lastModifiedDate":"2022-09-04"},{"lineNumber":375,"author":{"gitId":"Hikoya"},"content":"                int index \u003d Integer.parseInt(command.substring(TagCommand.POSITION, TagCommand.POSITION_END)) - 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":376,"author":{"gitId":"Hikoya"},"content":"                String tag \u003d command.substring(TagCommand.POSITION_END).strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":377,"author":{"gitId":"Hikoya"},"content":"                if (tag.isEmpty()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":378,"author":{"gitId":"Hikoya"},"content":"                    throw new SkylarkException(\"Sorry, the tag is empty!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":379,"author":{"gitId":"Hikoya"},"content":"                }","lastModifiedDate":"2022-09-04"},{"lineNumber":380,"author":{"gitId":"Hikoya"},"content":"                if (!taskList.doesIndexExist(index)) {","lastModifiedDate":"2022-09-11"},{"lineNumber":381,"author":{"gitId":"Hikoya"},"content":"                    throw new SkylarkException(\"Sorry, index does not exist!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":382,"author":{"gitId":"Hikoya"},"content":"                }","lastModifiedDate":"2022-09-11"},{"lineNumber":383,"author":{"gitId":"Hikoya"},"content":"                Task currentTask \u003d taskList.get(index);","lastModifiedDate":"2022-09-04"},{"lineNumber":384,"author":{"gitId":"Hikoya"},"content":"                currentTask.setTag(tag);","lastModifiedDate":"2022-09-04"},{"lineNumber":385,"author":{"gitId":"Hikoya"},"content":"                response \u003d \"Noted. I\u0027ve tagged this task:\"","lastModifiedDate":"2022-09-04"},{"lineNumber":386,"author":{"gitId":"Hikoya"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2022-09-04"},{"lineNumber":387,"author":{"gitId":"Hikoya"},"content":"                        + currentTask;","lastModifiedDate":"2022-09-04"},{"lineNumber":388,"author":{"gitId":"Hikoya"},"content":"                taskList.saveToFile();","lastModifiedDate":"2022-09-04"},{"lineNumber":389,"author":{"gitId":"Hikoya"},"content":"            } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-09-04"},{"lineNumber":390,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"Input is not a number!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":391,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":392,"author":{"gitId":"Hikoya"},"content":"            return response;","lastModifiedDate":"2022-09-04"},{"lineNumber":393,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":394,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":395,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":396,"author":{"gitId":"Hikoya"},"content":"    private static class UnknownCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":397,"author":{"gitId":"Hikoya"},"content":"        /** Text that is displayed when the user issues an unknown command. */","lastModifiedDate":"2022-08-21"},{"lineNumber":398,"author":{"gitId":"Hikoya"},"content":"        private static final String TEXT \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":399,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":400,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":401,"author":{"gitId":"Hikoya"},"content":"         * Returns a UnknownCommand object.","lastModifiedDate":"2022-08-21"},{"lineNumber":402,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-08-21"},{"lineNumber":403,"author":{"gitId":"Hikoya"},"content":"         * @param input String that is input by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":404,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":405,"author":{"gitId":"Hikoya"},"content":"        public UnknownCommand(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":406,"author":{"gitId":"Hikoya"},"content":"            super(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":407,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":408,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":409,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":410,"author":{"gitId":"Hikoya"},"content":"        public String run(TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":411,"author":{"gitId":"Hikoya"},"content":"            throw new SkylarkException(TEXT);","lastModifiedDate":"2022-08-21"},{"lineNumber":412,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":413,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":414,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":415,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":415}},{"path":"src/main/java/skylark/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"/** List of commands available for the user. */","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"public enum CommandList {","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"    COMMAND_BYE(\"bye\"), COMMAND_LIST(\"list\"), COMMAND_DONE(\"mark\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"    COMMAND_UNDONE(\"unmark\"), COMMAND_DEADLINE(\"deadline\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"    COMMAND_TODO(\"todo\"), COMMAND_EVENT(\"event\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"    COMMAND_DELETE(\"delete\"), COMMAND_FIND(\"find\"), COMMAND_TAG(\"tag\");","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"    private final String name;","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    CommandList(String name) {","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        return this.name;","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":19}},{"path":"src/main/java/skylark/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.main;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"     * Represents the main entry point of the Skylark program. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"     * Creates an application view and show a GUI to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"     * @param args Command-line parameters that can be passed into Skylark.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hikoya":19}},{"path":"src/main/java/skylark/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.main;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.Skylark;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import skylark.ui.MainWindow;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":" * A GUI for Skylark using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    private final Skylark skylark \u003d new Skylark();","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    private final InputStream imageStream \u003d this.getClass().getResourceAsStream(\"/images/User.png\");","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(imageStream));","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSkylark(skylark);","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"            stage.getIcons().add(userImage);","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"            stage.setTitle(Skylark.TITLE);","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"            stage.show();","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hikoya":41}},{"path":"src/main/java/skylark/skylark/Skylark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.skylark;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import skylark.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import skylark.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"/** Represents the main entry point of Skylark. */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"public class Skylark {","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"    /** Text that is shown to the user when they first access Skylark. */","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"    public static final String TITLE \u003d \"Skylark\";","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    /** Text that is shown to the user when they first access Skylark. */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"    public static final String TEXT_HELLO \u003d \"Hello, I am Skylark, how can I help you today?\";","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    /** Represents the TaskList object that stores the list of Tasks created by the user. */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"     * Represents a Skylark object. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"     * Initialises the scanner to retrieve user input from the command line,","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"     * and creates a new TaskList object to read the current list of the tasks stored in a file path","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"     * specified. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"     * Prints a hello message to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    public Skylark() {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"data\" + File.separator + \"text.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"        this.taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"     * Parses the command input and creates the relevant Command object. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"     * Runs the command by executing the run function of the Command object.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"     * @param input Input from the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"     * @return Result of the command.","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"     * @throws SkylarkException If there is an exception that occurred when running the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"    private String response(String input, TaskList taskList) throws SkylarkException {","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        assert this.taskList !\u003d null : \"TaskList should be initialised!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"        Command command \u003d Command.createCommand(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        return command.run(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"     * Returns the response from the user after parsing the command.","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"     * @param input Input from the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"     * @return Result of the command.","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"            return response(input, this.taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"        } catch (SkylarkException skylarkException) {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"            return skylarkException.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Hikoya":61,"-":1}},{"path":"src/main/java/skylark/skylark/SkylarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.skylark;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"/** Represents an Exception whenever an error occurs in Skylark. */","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"public class SkylarkException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"    /** Description of the Exception that occurs. */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"    private final String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"     * Represents a SkylarkException object.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the Exception that occurred.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    public SkylarkException(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"        assert description.length() \u003e 0 : \"Description should not be empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"        return this.description;","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Hikoya":23}},{"path":"src/main/java/skylark/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"/** Represents a Deadline Task. */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"     * Symbol that represents a Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"    private static final char SYMBOL_DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"     * Input format required when parsing input from the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    private final String inputFormat \u003d \"yyyy-MM-dd HHmm\"; // 2019-10-15 1800","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"     * Date-time object that represents the end date of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"     * Returns a Deadline object.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"     * Throws a SkylarkException if the endDate is not parsable.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the Task","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"     * @param endDate     Date in yyyy-MM-dd HHmm format","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"     * @throws SkylarkException If date is not parsable","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    public Deadline(String description, String endDate) throws SkylarkException {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        assert endDate.length() \u003e 0 : \"End Date should not be empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"            this.endDate \u003d LocalDateTime.parse(endDate, DateTimeFormatter.ofPattern(inputFormat));","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"            throw new SkylarkException(\"Cannot parse date\");","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"     * Returns a Deadline object.","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"     * Throws a SkylarkException if the endDate is not parsable.","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the Task","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"     * @param endDate     Date in yyyy-MM-dd HHmm format","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"     * @param tag         Tag of the Task","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"     * @throws SkylarkException If date is not parsable","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"    public Deadline(String description, String endDate, String tag) throws SkylarkException {","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"        super(description, tag);","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        assert endDate.length() \u003e 0 : \"End Date should not be empty!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"            this.endDate \u003d LocalDateTime.parse(endDate, DateTimeFormatter.ofPattern(inputFormat));","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"            throw new SkylarkException(\"Cannot parse date\");","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"     * \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"     * Returns the String representation of a Deadline task.","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"        // Oct 15 2019","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"        String outputFormat \u003d \"MMM dd yyyy\";","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"        return String.format(\"[%c] %s (by: %s)\",","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"                Deadline.SYMBOL_DEADLINE, super.toString(),","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(outputFormat)));","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"     * \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"     * Returns the String representation of a Deadline task that can be written to a file.","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"    public String toStringFile() {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"        return String.format(\"%c | %s | %s\", Deadline.SYMBOL_DEADLINE,","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"                super.toStringFile(),","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(inputFormat)));","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Hikoya":90}},{"path":"src/main/java/skylark/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"/** Represents a Deadline Task. */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"    /** Symbol that represents a Deadline task. */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    private static final char SYMBOL_EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"    /** Input format required when parsing input from the user. */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    private final String inputFormat \u003d \"yyyy-MM-dd HHmm\"; // 2019-10-15 1800","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    /** Date-time object that represents the end date of the task. */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    private final LocalDateTime timing;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"     * Returns an Event object.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"     * Throws a SkylarkException if the timing is not parsable.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the Task","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"     * @param timing Date in yyyy-MM-dd HHmm format","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"     * @throws SkylarkException If date is not parsable","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    public Event(String description, String timing) throws SkylarkException {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"        assert timing.length() \u003e 0 : \"Timing should not be empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"            this.timing \u003d LocalDateTime.parse(timing, DateTimeFormatter.ofPattern(inputFormat));","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"            throw new SkylarkException(\"Cannot parse date\");","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"     * Returns an Event object.","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"     * Throws a SkylarkException if the timing is not parsable.","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the Task","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"     * @param timing Date in yyyy-MM-dd HHmm format","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"     * @param tag    Tag of the Task","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"     * @throws SkylarkException If date is not parsable","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    public Event(String description, String timing, String tag) throws SkylarkException {","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"        super(description, tag);","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        assert timing.length() \u003e 0 : \"Timing should not be empty!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"            this.timing \u003d LocalDateTime.parse(timing, DateTimeFormatter.ofPattern(inputFormat));","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"            throw new SkylarkException(\"Cannot parse date\");","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"     * \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"     * Returns the String representation of a Event task.","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"        String outputFormat \u003d \"MMM dd yyyy\"; // Oct 15 2019","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"        return String.format(\"[%c] %s (at: %s)\", Event.SYMBOL_EVENT,","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"                super.toString(), this.timing.format(DateTimeFormatter.ofPattern(outputFormat)));","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"     * \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"     * Returns the String representation of a Event task that can be written to a file.","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"    public String toStringFile() {","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"        return String.format(\"%c | %s | %s\", Event.SYMBOL_EVENT,","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"                super.toStringFile(),","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"                this.timing.format(DateTimeFormatter.ofPattern(inputFormat)));","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Hikoya":82}},{"path":"src/main/java/skylark/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"/** Represents a Task that is created by the user. */","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"    /** Description of the task inputted by the user. */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"    private final String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"    /** Represents whether the task is marked as done. */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"    /** Represents the tagging for the task, if any. */","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    private String tag;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"     * Returns a Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"     * Initialises the description variable and marks the Task as undone.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the task inputted by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"        assert description.length() \u003e 0 : \"Description should not be empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        this.tag \u003d \"\";","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"     * Returns a Task object.","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"     * Initialises the description variable and marks the Task as undone.","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the task inputted by the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"     * @param tag Tag of the task if any","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    public Task(String description, String tag) {","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        assert description.length() \u003e 0 : \"Description should not be empty!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        assert tag.length() \u003e 0 : \"Tag should not be empty!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"     * Returns a string representation on whether the task is done.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"     * @return \"X\" if the task is done, \" \" if the task is undone.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"     * @return Description inputted by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"        return this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"     * Adds a new Tag to the task","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"     * @param newTag New tag of the Task","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"    public void setTag(String newTag) {","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"        this.tag \u003d newTag;","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"     * Returns the String representation of a particular task.","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"        return String.format(\"[%s] %s%s\", this.getStatusIcon(),","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"                this.description,","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"                this.tag.isEmpty() ? \"\" : \" TAG: \" + this.tag);","lastModifiedDate":"2022-09-04"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"     * This string is used to save the task into the file for storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"     * @return String representation of the task that is parsable by the Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"    public String toStringFile() {","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"        return String.format(\"%d | %s%s\",","lastModifiedDate":"2022-09-04"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"                this.getStatusIcon().equals(\"X\") ? 1 : 0,","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"                this.description,","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"                this.tag.isEmpty() ? \"\" : \" | \" + this.tag);","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Hikoya":105}},{"path":"src/main/java/skylark/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import skylark.utils.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"/** Represents a list of Tasks that is stored in the system. */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"    /** Data structure that is used to store the Tasks */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"    private final ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    /** Represents a Storage object used for file operations */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"     * Represents a TaskList object. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"     * Initialises a new Storage object and call its readFromFile function to store","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"     * tasks into the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"     * @param filePath File path to the text file that contains the stored tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    public TaskList(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"        this.taskArrayList \u003d this.storage.readFromFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"     * The number represents the number of tasks currently stored in the system.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"     * @return Size of the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    public int size() {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        assert this.taskArrayList !\u003d null : \"ArrayList should be initialised!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        return this.taskArrayList.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"     * Returns the Task object stored at the particular index of the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"     * @param index Index of the Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"     * @return Task object that is stored at the index.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        assert this.taskArrayList !\u003d null : \"ArrayList should be initialised!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"        if (!doesIndexExist(index)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"            return null;","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        return this.taskArrayList.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"     * Adds the Task object into the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"     * @param task Task object that is to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"        assert this.taskArrayList !\u003d null : \"ArrayList should be initialised!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"        this.taskArrayList.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"     * Removes the Task object from the TaskList.","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"     * @param index Index of the Task object in the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"        this.taskArrayList.remove(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"     * Returns whether the particular index exists in the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"     * @param index Index of the Task object in the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"     * @return Boolean whether the index exists in the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"    public boolean doesIndexExist(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"        assert this.taskArrayList !\u003d null : \"ArrayList should be initialized already!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c this.taskArrayList.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"     * Saves the current TaskList into the storage file.","lastModifiedDate":"2022-09-11"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"     * Throws a SkylarkException in an event of a file operation exception.","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"     * @throws SkylarkException If file operation fails.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"    public void saveToFile() throws SkylarkException {","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"        this.storage.saveToFile(this.taskArrayList);","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":92}},{"path":"src/main/java/skylark/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"/** Represents a ToDo Task. */","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"    /** Symbol that represents a ToDo task. */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"    private static final char SYMBOL_TODO \u003d \u0027T\u0027;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"     * Returns a ToDo object.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the Task","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"     * Returns a ToDo object.","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"     * @param description Description of the Task","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"     * @param tag         Tag of the Task","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    public Todo(String description, String tag) {","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        super(description, tag);","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"     * \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"     * Returns the String representation of a ToDo task.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        return String.format(\"[%c] %s\", Todo.SYMBOL_TODO, super.toString());","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"     * \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"     * Returns the String representation of a ToDo task that can be written to a file.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"    public String toStringFile() {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        return String.format(\"%c | %s\", Todo.SYMBOL_TODO, super.toStringFile());","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Hikoya":48}},{"path":"src/main/java/skylark/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    private static final Font userFont \u003d Font.font(\"Verdana\", FontWeight.BOLD, 12);","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    private static final Font skylarkFont \u003d Font.font(\"Verdana\", FontWeight.MEDIUM, 10);","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    private DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"        if (isUser) {","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"            dialog.setFont(userFont);","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        } else {","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"            dialog.setFont(skylarkFont);","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"    private void flip() {","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"    public static DialogBox getSkylarkDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"        db.flip();","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"        return db;","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hikoya":70}},{"path":"src/main/java/skylark/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import skylark.command.CommandList;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.Skylark;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    private Skylark skylark;","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    private Stage stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    private final Image skylarkImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Skylark.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"     * Initialises the MainWindow by setting the scroll pane with the height of the container.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"     * Displays a Hello message to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"                DialogBox.getSkylarkDialog(Skylark.TEXT_HELLO, skylarkImage)","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"    public void setSkylark(Skylark skylark) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        this.skylark \u003d skylark;","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"        if (input.equals(CommandList.COMMAND_BYE.toString())) {","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"            this.stage.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"        String response \u003d skylark.getResponse(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"        assert response.length() \u003e 0 : \"Response should not be empty\";","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"                DialogBox.getSkylarkDialog(response, skylarkImage)","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hikoya":74}},{"path":"src/main/java/skylark/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.utils;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Todo;","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"/** Represents a Storage object used for file operations such as read and write. */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    /** File path of the text file used for storage. */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    private final String regexString \u003d \" \\\\| \";","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"     * Returns a Storage object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"     * @param filePath File path of the text file used for storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"        assert filePath.length() \u003e 0 : \"FilePath should not be empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"     * Reads from the text file in the file path specified. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"     * Creates the relevant Task objects based on the symbols.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    public ArrayList\u003cTask\u003e readFromFile() {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"            if (file.isDirectory()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"This path is a directory!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"            createFile(file);","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"                    String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"                    String[] splitStrings \u003d nextLine.split(regexString, -1);","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"                    if (splitStrings.length \u003c 3) {","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"                        throw new SkylarkException(\"Not enough parameters!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"                    Task currentTask;","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"                    String desc \u003d splitStrings[2].strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"                    switch (splitStrings[0]) {","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"                    case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"                        if (splitStrings.length \u003e 3) {","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"                            String tag \u003d splitStrings[3].strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"                            currentTask \u003d new Todo(desc, tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"                        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"                            currentTask \u003d new Todo(desc);","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"                        }","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"                    case \"D\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"                        if (splitStrings.length \u003e 4) {","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"                            String endDate \u003d splitStrings[4].strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"                            String tag \u003d splitStrings[3].strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"                            currentTask \u003d new Deadline(desc, endDate, tag);","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"                        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"                            String endDate \u003d splitStrings[3].strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"                            currentTask \u003d new Deadline(desc, endDate);","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"                        }","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"                    case \"E\": {","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"                        if (splitStrings.length \u003e 4) {","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"                            String timing \u003d splitStrings[4].strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"                            String tag \u003d splitStrings[3].strip();","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"                            currentTask \u003d new Event(desc, timing, tag);","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"                        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"                            String timing \u003d splitStrings[3];","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"                            currentTask \u003d new Event(desc, timing);","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"                        }","lastModifiedDate":"2022-09-04"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"                        break;","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"                    default:","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"                        throw new SkylarkException(\"No suitable task found!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"                    boolean isDone \u003d Integer.parseInt(splitStrings[1]) \u003d\u003d 1;","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"                    if (isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"                        currentTask.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"                    } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"                        currentTask.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"                    taskArrayList.add(currentTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"Hikoya"},"content":"            } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"Cannot find file!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"        } catch (SkylarkException skylarkException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"Hikoya"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"Hikoya"},"content":"        return taskArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"     * Saves the current TaskList into the file path specified by the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"Hikoya"},"content":"     * @param taskArrayList ArrayList of Task objects.","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"Hikoya"},"content":"     * @throws SkylarkException If an exception is thrown while performing file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"Hikoya"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e taskArrayList) throws SkylarkException {","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"Hikoya"},"content":"        assert this.filePath.length() \u003e 0 : \"FilePath should not be empty!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"Hikoya"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"            createFile(file);","lastModifiedDate":"2022-09-04"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"            if (file.exists() \u0026\u0026 !file.canWrite()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"                boolean isWritable \u003d file.setWritable(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"Hikoya"},"content":"                if (!isWritable) {","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"                    throw new SkylarkException(\"File is not writable!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"Hikoya"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"Hikoya"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"Hikoya"},"content":"            for (Task currentTask : taskArrayList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"Hikoya"},"content":"                // Reference: https://www.baeldung.com/java-string-newline","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"Hikoya"},"content":"                fileWriter.write(currentTask.toStringFile() + System.lineSeparator());","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"Hikoya"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"Hikoya"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"Hikoya"},"content":"            throw new SkylarkException(\"IOException occurred when writing to file\");","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"Hikoya"},"content":"        } catch (SecurityException securityException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"Hikoya"},"content":"            throw new SkylarkException(\"SecurityException occurred when writing to file\");","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"Hikoya"},"content":"    private void createFile(File file) throws SkylarkException {","lastModifiedDate":"2022-09-04"},{"lineNumber":148,"author":{"gitId":"Hikoya"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":149,"author":{"gitId":"Hikoya"},"content":"            return;","lastModifiedDate":"2022-09-04"},{"lineNumber":150,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":151,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":152,"author":{"gitId":"Hikoya"},"content":"            // https://stackoverflow.com/questions/9620683/java-fileoutputstream-create-file-if-not-exists","lastModifiedDate":"2022-09-04"},{"lineNumber":153,"author":{"gitId":"Hikoya"},"content":"            // https://stackoverflow.com/a/4040667","lastModifiedDate":"2022-09-04"},{"lineNumber":154,"author":{"gitId":"Hikoya"},"content":"            File parent \u003d file.getParentFile();","lastModifiedDate":"2022-09-04"},{"lineNumber":155,"author":{"gitId":"Hikoya"},"content":"            if (parent !\u003d null \u0026\u0026 !parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":156,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"Error creating directory!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":157,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":158,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":159,"author":{"gitId":"Hikoya"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":160,"author":{"gitId":"Hikoya"},"content":"                throw new SkylarkException(\"Error creating new file!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":161,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":162,"author":{"gitId":"Hikoya"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-09-04"},{"lineNumber":163,"author":{"gitId":"Hikoya"},"content":"            throw new SkylarkException(\"IOException occurred when creating new file\");","lastModifiedDate":"2022-09-04"},{"lineNumber":164,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":165,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":166,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":166}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"            \u003cInsets right\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hikoya":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"skylark.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hikoya":19}},{"path":"src/test/java/skylark/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    public void instantiate_dateTime_exceptionThrown() {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"            new Deadline(\"Make tea\", \"Invalid time\");","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        } catch (SkylarkException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"            assertEquals(\"Cannot parse date\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    public void toString_dateTime_success() throws SkylarkException {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        Deadline task \u003d new Deadline(\"Make tea\", \"2019-10-15 1800\");","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[D] [ ] Make tea (by: Oct 15 2019)\", task.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[D] [X] Make tea (by: Oct 15 2019)\", task.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    public void toStringFile_dateTime_success() throws SkylarkException {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"        Deadline task \u003d new Deadline(\"Make tea\", \"2019-10-15 1800\");","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"D | 0 | Make tea | 2019-10-15 1800\", task.toStringFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"D | 1 | Make tea | 2019-10-15 1800\", task.toStringFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"    public void toString_dateTimeWTag_success() throws SkylarkException {","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        Deadline task \u003d new Deadline(\"Make tea\", \"2019-10-15 1800\", \"Test tag!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[D] [ ] Make tea TAG: Test tag! (by: Oct 15 2019)\", task.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[D] [X] Make tea TAG: Test tag! (by: Oct 15 2019)\", task.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    public void toStringFile_dateTimeWTag_success() throws SkylarkException {","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"        Deadline task \u003d new Deadline(\"Make tea\", \"2019-10-15 1800\", \"Test tag!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"D | 0 | Make tea | Test tag! | 2019-10-15 1800\", task.toStringFile());","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"D | 1 | Make tea | Test tag! | 2019-10-15 1800\", task.toStringFile());","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":53}},{"path":"src/test/java/skylark/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"public class EventTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    public void instantiate_dateTime_exceptionThrown() {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"            new Event(\"Make tea\", \"Invalid time\");","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        } catch (SkylarkException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"            assertEquals(\"Cannot parse date\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    public void toString_dateTime_success() throws SkylarkException {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        Event task \u003d new Event(\"Make tea\", \"2019-10-15 1800\");","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[E] [ ] Make tea (at: Oct 15 2019)\", task.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[E] [X] Make tea (at: Oct 15 2019)\", task.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    public void toStringFile_dateTime_success() throws SkylarkException {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"        Event task \u003d new Event(\"Make tea\", \"2019-10-15 1800\");","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"E | 0 | Make tea | 2019-10-15 1800\", task.toStringFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"E | 1 | Make tea | 2019-10-15 1800\", task.toStringFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"    public void toString_dateTimeWTag_success() throws SkylarkException {","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        Event task \u003d new Event(\"Make tea\", \"2019-10-15 1800\", \"Test tag!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[E] [ ] Make tea TAG: Test tag! (at: Oct 15 2019)\", task.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[E] [X] Make tea TAG: Test tag! (at: Oct 15 2019)\", task.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    public void toStringFile_dateTimeWTag_success() throws SkylarkException {","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"        Event task \u003d new Event(\"Make tea\", \"2019-10-15 1800\", \"Test tag!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"E | 0 | Make tea | Test tag! | 2019-10-15 1800\", task.toStringFile());","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"E | 1 | Make tea | Test tag! | 2019-10-15 1800\", task.toStringFile());","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":53}},{"path":"src/test/java/skylark/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    public void instantiate_nonExistFile_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"empty.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"        TaskList taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    public void instantiate_existFile_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"result.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"        TaskList taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"        assertEquals(6, taskList.size());","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    public void get_existFile_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"result.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        TaskList taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        Task currentTask \u003d taskList.get(0);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"Make Coffee\", currentTask.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"    public void add_existFile_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"result.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"        TaskList taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        Task currentTask \u003d new Todo(\"Test Add!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"        taskList.add(currentTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"Test Add!\", taskList.get(taskList.size() - 1).getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"    public void remove_existFile_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"result.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        TaskList taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        assertEquals(6, taskList.size());","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"        taskList.remove(0);","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"        taskList.remove(0);","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"        assertEquals(4, taskList.size());","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    public void doesIndexExist_existFile_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"result.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"        TaskList taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"        assertTrue(taskList.doesIndexExist(0));","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"        assertFalse(taskList.doesIndexExist(taskList.size() + 1));","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"    public void saveToFile_existFile_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"result.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"        TaskList taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"            taskList.saveToFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"        } catch (SkylarkException skylarkException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"    public void saveToFile_directory_exceptionThrown() {","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\";","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"        TaskList taskList \u003d new TaskList(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"            taskList.saveToFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"        } catch (SkylarkException skylarkException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"            String result \u003d \"IOException occurred when writing to file\";","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"            assertEquals(result, skylarkException.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":96}},{"path":"src/test/java/skylark/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"    public void toString_description_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask \u003d new Todo(\"Make tea\");","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[T] [ ] Make tea\", toDoTask.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"        toDoTask.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[T] [X] Make tea\", toDoTask.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    public void toStringFile_description_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask \u003d new Todo(\"Make tea\");","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"T | 0 | Make tea\", toDoTask.toStringFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"        toDoTask.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"T | 1 | Make tea\", toDoTask.toStringFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"        toDoTask.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"T | 0 | Make tea\", toDoTask.toStringFile());","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    public void toString_descriptionWTag_success() {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask \u003d new Todo(\"Make tea\", \"Test tag!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[T] [ ] Make tea TAG: Test tag!\", toDoTask.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"        toDoTask.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[T] [X] Make tea TAG: Test tag!\", toDoTask.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    public void toStringFile_descriptionWTag_success() {","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask \u003d new Todo(\"Make tea\", \"Test tag!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"T | 0 | Make tea | Test tag!\", toDoTask.toStringFile());","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        toDoTask.markAsDone();","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"T | 1 | Make tea | Test tag!\", toDoTask.toStringFile());","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        toDoTask.markAsUndone();","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"T | 0 | Make tea | Test tag!\", toDoTask.toStringFile());","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"    public void getStatusIcon_description_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask \u003d new Todo(\"Make tea\");","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\" \", toDoTask.getStatusIcon());","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        toDoTask.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"X\", toDoTask.getStatusIcon());","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        toDoTask.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\" \", toDoTask.getStatusIcon());","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"    public void getDescription_description_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask \u003d new Todo(\"Make tea\");","lastModifiedDate":"2022-09-11"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"Make tea\", toDoTask.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask2 \u003d new Todo(\"Make coffee\");","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"Make coffee\", toDoTask2.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask3 \u003d new Todo(\"Make cereal\");","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"Make cereal\", toDoTask3.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"    public void setTag_tag_success() {","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"        Todo toDoTask \u003d new Todo(\"Make tea\", \"Old tag!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[T] [ ] Make tea TAG: Old tag!\", toDoTask.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"        toDoTask.setTag(\"New tag!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[T] [ ] Make tea TAG: New tag!\", toDoTask.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"        toDoTask.setTag(\"New tag again!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"        assertEquals(\"[T] [ ] Make tea TAG: New tag again!\", toDoTask.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":74}},{"path":"src/test/java/skylark/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package skylark.utils;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import skylark.skylark.SkylarkException;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import skylark.task.Todo;","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"public class StorageTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    public void readFromFile_whenFileNotExist_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"empty.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d storage.readFromFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"        assertEquals(0, taskArrayList.size());","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"    public void saveToFile_whenArrayExist_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"        String filePath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"                + File.separator + \"test\" + File.separator + \"result.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"            taskArrayList.add(new Todo(\"Make Coffee\"));","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"            taskArrayList.add(new Todo(\"Make Cereal\"));","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"            taskArrayList.add(new Event(\"Attend Splashdown\", \"2022-08-21 1800\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"            taskArrayList.add(new Event(\"Attend Lecture\", \"2022-08-21 1800\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"            taskArrayList.add(new Deadline(\"Finish CS2100\", \"2022-08-21 1800\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"            taskArrayList.add(new Deadline(\"Finish CS2103\", \"2022-08-21 1800\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"            storage.saveToFile(taskArrayList);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        } catch (SkylarkException skylarkException) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Hikoya":48}},{"path":"test/result.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"T | 0 | Make Coffee","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"T | 0 | Make Cereal","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"E | 0 | Attend Splashdown | 2022-08-21 1800","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"E | 0 | Attend Lecture | 2022-08-21 1800","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"D | 0 | Finish CS2100 | 2022-08-21 1800","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"D | 0 | Finish CS2103 | 2022-08-21 1800","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Hikoya":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"todo borrow book","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"event project meeting /at Mon 2-4","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"Hikoya":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"javac  -cp ..\\src\\skylark\\skylark -Xlint:none -d ..\\bin ..\\src\\skylark\\skylark\\*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"java -classpath ..\\bin Skylark \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Hikoya":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"java -classpath ../bin Skylark \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Hikoya":1,"-":37}}]

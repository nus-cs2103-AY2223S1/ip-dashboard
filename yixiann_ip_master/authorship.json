[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"    mainClassName \u003d \"Duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    archiveClassifier \u003d \"v0\"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yixiann":17,"-":39}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidDateException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidFindException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidIndexException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidSecondaryCommandException;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidTaskNameException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"import Duke.store.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"import Duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"import Duke.task.TaskDeadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"import Duke.task.TaskEvent;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"import Duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"import Duke.task.TaskTodo;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"import Duke.ui.DukeResponses;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"import Duke.ui.GuiUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"import Duke.utils.Utils;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"import java.util.Date;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"import java.util.Timer;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":" * The {@code Duke} class enables users to store and indicated various","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":" * types of tasking, check and uncheck them, delete them and view a list","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":" * of all present tasks. It has a command line interface and does not","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":" * store data from each run.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"    // Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"    // Stores all the current task created by the user.","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    // Handles how to respond to user inputs.","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"    private final DukeResponses dukeResponses \u003d new DukeResponses();","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    // Handles how to display the UI.","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"    private GuiUi dukeUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"    // String to specify location of previous information.","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    private static final String filepath \u003d \"data\" + File.separator + \"dukeData.txt\";","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        GuiUi guiUi \u003d new GuiUi(stage, this);","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        dukeUi \u003d guiUi;","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"        initialiseStorage();","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"        welcomeUser();","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"        guiUi.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"    private void initialiseStorage() {","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"            storage \u003d new Storage(filepath);","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"            if (tasks.getNumberOfTask() \u003e 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"                dukeUi.handleOutput(dukeResponses.loadFileSuccessfully() +","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"                        \u0027\\n\u0027 + dukeResponses.listTasks(tasks));","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"            dukeUi.handleOutput(dukeResponses.loadFileFailed() + \u0027\\n\u0027 + e.getMessage());","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"    private void welcomeUser() {","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"        dukeUi.handleOutput(dukeResponses.startPrompt());","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"    public String receiveInput(String inputString) {","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"            if (inputString.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"                return \"Hmm I did not quite catch that\";","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"            Parser input \u003d Parser.formatInput(inputString.trim());","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"            switch (input.getCommand()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"            case BYE:","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"                terminate();","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"                return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"            case LIST:","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"yixiann"},"content":"                response \u003d listTasks();","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"yixiann"},"content":"            case FIND:","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"                response \u003d findTasks(input.getMainData());","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"            case CHECK:","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"yixiann"},"content":"                response \u003d checkTask(input.getMainData());","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"yixiann"},"content":"            case UNCHECK:","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"                response \u003d uncheckTask(input.getMainData());","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"            case DELETE:","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"                response \u003d deleteTask(input.getMainData());","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"yixiann"},"content":"            case TODO:","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"                response \u003d addTask(new TaskTodo(input.getMainData()));","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"yixiann"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"yixiann"},"content":"                response \u003d addTask(new TaskDeadline(input.getMainData(), input.getSecondaryData()));","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"yixiann"},"content":"            case EVENT:","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"yixiann"},"content":"                response \u003d addTask(new TaskEvent(input.getMainData(), input.getSecondaryData()));","lastModifiedDate":"2022-09-02"},{"lineNumber":108,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"yixiann"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"yixiann"},"content":"        } catch (InvalidCommandException err) {","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"yixiann"},"content":"            response \u003d String.format(\"%s is not a valid command\\n%s\", err.getMessage(),","lastModifiedDate":"2022-09-02"},{"lineNumber":114,"author":{"gitId":"yixiann"},"content":"                    dukeResponses.listValidInstructions());","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"yixiann"},"content":"        } catch (InvalidTaskNameException | InvalidIndexException | InvalidFindException err) {","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"yixiann"},"content":"            response \u003d err.getMessage();","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"yixiann"},"content":"        } catch (InvalidSecondaryCommandException err) {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"yixiann"},"content":"            response \u003d String.format(\"Please include %s command and the necessary information\", err.getMessage());","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"        } catch (InvalidDateException err) {","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"yixiann"},"content":"            response \u003d String.format(\"%s\\n%s\", err.getMessage(), dukeResponses.listValidDateFormats());","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"yixiann"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"yixiann"},"content":"            response \u003d String.format(\"Unhandled Duke Exception: %s\", err.getMessage());","lastModifiedDate":"2022-09-02"},{"lineNumber":123,"author":{"gitId":"yixiann"},"content":"        } catch (Exception err) {","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"yixiann"},"content":"            response \u003d String.format(\"Unhandled Exception: %s\", err.getMessage());","lastModifiedDate":"2022-09-02"},{"lineNumber":125,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"yixiann"},"content":"        return response;","lastModifiedDate":"2022-09-02"},{"lineNumber":127,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"yixiann"},"content":"    private void terminate() {","lastModifiedDate":"2022-09-02"},{"lineNumber":130,"author":{"gitId":"yixiann"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":131,"author":{"gitId":"yixiann"},"content":"            storage.storeTask(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":132,"author":{"gitId":"yixiann"},"content":"            dukeUi.handleOutput(dukeResponses.endPrompt());","lastModifiedDate":"2022-09-02"},{"lineNumber":133,"author":{"gitId":"yixiann"},"content":"            TimerTask exitApp \u003d new TimerTask() {","lastModifiedDate":"2022-09-02"},{"lineNumber":134,"author":{"gitId":"yixiann"},"content":"                @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":135,"author":{"gitId":"yixiann"},"content":"                public void run() {","lastModifiedDate":"2022-09-02"},{"lineNumber":136,"author":{"gitId":"yixiann"},"content":"                    System.exit(0);","lastModifiedDate":"2022-09-02"},{"lineNumber":137,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"yixiann"},"content":"            };","lastModifiedDate":"2022-09-02"},{"lineNumber":139,"author":{"gitId":"yixiann"},"content":"            new Timer().schedule(exitApp, new Date(System.currentTimeMillis() + 1000));","lastModifiedDate":"2022-09-02"},{"lineNumber":140,"author":{"gitId":"yixiann"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"yixiann"},"content":"            String response \u003d String.format(\"IO Exception: %s\", err.getMessage());","lastModifiedDate":"2022-09-02"},{"lineNumber":142,"author":{"gitId":"yixiann"},"content":"            dukeUi.handleOutput(response);","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":144,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"yixiann"},"content":"     * List all current task in the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"yixiann"},"content":"    private String listTasks() {","lastModifiedDate":"2022-09-02"},{"lineNumber":150,"author":{"gitId":"yixiann"},"content":"        return dukeResponses.listTasks(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"yixiann"},"content":"     * Find all current task in the taskList base on a string.","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"yixiann"},"content":"    private String findTasks(String string) {","lastModifiedDate":"2022-09-02"},{"lineNumber":157,"author":{"gitId":"yixiann"},"content":"        return dukeResponses.findTasks(tasks, string);","lastModifiedDate":"2022-09-02"},{"lineNumber":158,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"yixiann"},"content":"     * Mark a task as done given the index of it in the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"yixiann"},"content":"     * @param index an integer representing the index of task in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"yixiann"},"content":"    private String checkTask(String index) throws InvalidIndexException {","lastModifiedDate":"2022-09-02"},{"lineNumber":166,"author":{"gitId":"yixiann"},"content":"        if (Utils.isNotParsable(index)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"yixiann"},"content":"            throw new InvalidIndexException(String.format(\"%s is not a number\", index));","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"yixiann"},"content":"        Task task \u003d tasks.checkTask(Integer.parseInt(index));","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"yixiann"},"content":"        return dukeResponses.markDone(task.getTaskName()) + \"\\n\" + dukeResponses.listTasks(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":171,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"yixiann"},"content":"     * Mark a task as undone given the index of it in the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"yixiann"},"content":"     * @param index an integer representing the index of task in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"yixiann"},"content":"    private String uncheckTask(String index) throws InvalidIndexException {","lastModifiedDate":"2022-09-02"},{"lineNumber":179,"author":{"gitId":"yixiann"},"content":"        if (Utils.isNotParsable(index)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"yixiann"},"content":"            throw new InvalidIndexException(String.format(\"%s is not a number\", index));","lastModifiedDate":"2022-08-25"},{"lineNumber":181,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"yixiann"},"content":"        Task task \u003d tasks.uncheckTask(Integer.parseInt(index));","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"yixiann"},"content":"        return dukeResponses.markUndone(task.getTaskName()) + \"\\n\" + dukeResponses.listTasks(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":184,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":186,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":187,"author":{"gitId":"yixiann"},"content":"     * Delete a task given the index of it in the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":188,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":189,"author":{"gitId":"yixiann"},"content":"     * @param index an integer representing the index of task in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":190,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":191,"author":{"gitId":"yixiann"},"content":"    private String deleteTask(String index) throws InvalidIndexException {","lastModifiedDate":"2022-09-02"},{"lineNumber":192,"author":{"gitId":"yixiann"},"content":"        if (Utils.isNotParsable(index)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"yixiann"},"content":"            throw new InvalidIndexException(String.format(\"%s is not a number\", index));","lastModifiedDate":"2022-08-25"},{"lineNumber":194,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":195,"author":{"gitId":"yixiann"},"content":"        Task task \u003d tasks.deleteTask(Integer.parseInt(index));","lastModifiedDate":"2022-08-25"},{"lineNumber":196,"author":{"gitId":"yixiann"},"content":"        return dukeResponses.deleteTask(task) + \"\\n\" + dukeResponses.listTasks(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":197,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":198,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":199,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":200,"author":{"gitId":"yixiann"},"content":"     * Add the task given into the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":201,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":202,"author":{"gitId":"yixiann"},"content":"     * @param \u003cT\u003e  the type of the task we would like to add to the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":203,"author":{"gitId":"yixiann"},"content":"     * @param task the task we would like to add to the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":204,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":205,"author":{"gitId":"yixiann"},"content":"    private \u003cT extends Task\u003e String addTask(T task) {","lastModifiedDate":"2022-09-02"},{"lineNumber":206,"author":{"gitId":"yixiann"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":207,"author":{"gitId":"yixiann"},"content":"        return dukeResponses.addTask(task) + \"\\n\" + dukeResponses.listTasks(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":208,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":209,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"yixiann":209}},{"path":"src/main/java/Duke/LauncherGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"public class LauncherGui {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"yixiann":12}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.enums.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import Duke.enums.SecondaryCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidFindException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidIndexException;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidSecondaryCommandException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidTaskNameException;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":" * The {@code Parser} class formats a string input into an input object.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    private Command command;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    private String mainData;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    private String secondaryData;","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"     * Constructor for a parser object.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    private Parser() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"        mainData \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"        secondaryData \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"     * Returns the command of the parser.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"     * @return the command of the parser.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"    public Command getCommand() {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"        return command;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"     * Returns the string representing the main data of the parser.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"     * @return the string representing the main data of the parser.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"    public String getMainData() {","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"        return mainData;","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"     * Returns the string representing the secondary data of the parser.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"     * @return the string representing the secondary data of the parser.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"    public String getSecondaryData() {","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"        return secondaryData;","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"     * Returns a parser object that contains the input from the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"     * @param input a string containing text provided by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"     * @return an input object containing important information from the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"    public static Parser formatInput(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"        Parser result \u003d new Parser();","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"        int maxParameters \u003d 2;","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"        String[] commandWithInfo \u003d input.split(\" \", maxParameters);","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"        String commandString \u003d commandWithInfo[0];","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"        Command command \u003d Command.getCommandFromValue(commandString);","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"            result.command \u003d command;","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"        } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"            throw new InvalidCommandException(commandString);","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"        switch (command) {","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"        case LIST:","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"        case BYE:","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"        case CHECK:","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"        case UNCHECK:","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"        case DELETE:","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"            if (commandWithInfo.length !\u003d maxParameters) {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"                throw new InvalidIndexException(\"Please enter an index\");","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"yixiann"},"content":"            result.mainData \u003d commandWithInfo[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"yixiann"},"content":"        case FIND:","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"            if (commandWithInfo.length !\u003d maxParameters) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"yixiann"},"content":"                throw new InvalidFindException();","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"yixiann"},"content":"            result.mainData \u003d commandWithInfo[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"yixiann"},"content":"        case TODO:","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"            if (commandWithInfo.length !\u003d maxParameters) {","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"yixiann"},"content":"                throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"            result.mainData \u003d commandWithInfo[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"            if (result.mainData.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"yixiann"},"content":"                throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"yixiann"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"yixiann"},"content":"        case EVENT:","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"yixiann"},"content":"            if (commandWithInfo.length !\u003d maxParameters) {","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"                throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"yixiann"},"content":"            String info \u003d commandWithInfo[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"yixiann"},"content":"            SecondaryCommand at \u003d SecondaryCommand.AT;","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"yixiann"},"content":"            if (!info.contains(SecondaryCommand.AT.getValue() + \u0027 \u0027)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"yixiann"},"content":"                throw new InvalidSecondaryCommandException(at.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"yixiann"},"content":"            int atIndex \u003d info.lastIndexOf(at.getValue());","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"yixiann"},"content":"            if (atIndex \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"yixiann"},"content":"                throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"yixiann"},"content":"            result.mainData \u003d info.substring(0, atIndex);","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"yixiann"},"content":"            result.secondaryData \u003d info.substring(atIndex + 1 + at.getLength());","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"yixiann"},"content":"            if (result.secondaryData.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"yixiann"},"content":"                throw new InvalidSecondaryCommandException(at.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"yixiann"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"yixiann"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"yixiann"},"content":"            if (commandWithInfo.length !\u003d maxParameters) {","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"yixiann"},"content":"                throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"yixiann"},"content":"            info \u003d commandWithInfo[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"yixiann"},"content":"            SecondaryCommand by \u003d SecondaryCommand.BY;","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"yixiann"},"content":"            if (!info.contains(SecondaryCommand.BY.getValue() + \u0027 \u0027)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"yixiann"},"content":"                throw new InvalidSecondaryCommandException(by.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"yixiann"},"content":"            int byIndex \u003d info.lastIndexOf(by.getValue());","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"yixiann"},"content":"            if (byIndex \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":141,"author":{"gitId":"yixiann"},"content":"                throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":142,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":143,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":144,"author":{"gitId":"yixiann"},"content":"            result.mainData \u003d info.substring(0, byIndex);","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"yixiann"},"content":"            result.secondaryData \u003d info.substring(byIndex + 1 + by.getLength());","lastModifiedDate":"2022-08-20"},{"lineNumber":146,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":147,"author":{"gitId":"yixiann"},"content":"            if (result.secondaryData.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"yixiann"},"content":"                throw new InvalidSecondaryCommandException(by.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":149,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":150,"author":{"gitId":"yixiann"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":151,"author":{"gitId":"yixiann"},"content":"        default:","lastModifiedDate":"2022-08-20"},{"lineNumber":152,"author":{"gitId":"yixiann"},"content":"            throw new InvalidCommandException(\"Command not implemented :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":153,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":154,"author":{"gitId":"yixiann"},"content":"        result.mainData \u003d result.mainData.trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":155,"author":{"gitId":"yixiann"},"content":"        result.secondaryData \u003d result.secondaryData.trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":156,"author":{"gitId":"yixiann"},"content":"        return result;","lastModifiedDate":"2022-08-20"},{"lineNumber":157,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":158,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":158}},{"path":"src/main/java/Duke/enums/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.enums;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * Command enum represents the possible commands that a user can provide to duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * The value of these commands are the string the user requires inputting.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public enum Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    FIND(\"find\"),","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    CHECK(\"check\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    UNCHECK(\"uncheck\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    BYE(\"bye\");","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    private final String value; // Value provided by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"     * The constructor for the Command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"     * @param commandString the value representing the string value of the enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"    Command(String commandString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"        value \u003d commandString;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     * Returns the Command object from the string value of the enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     * @param value a string value of the enum represented by the value provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"     * @return a command object of the command represented by the string.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"    public static Command getCommandFromValue(String value) {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        for (Command e : values()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"            if (e.getValue().equals(value)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"                return e;","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"        return null;","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     * Returns the value of the command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"     * @return the string representation of a command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"    public String getValue() {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"        return value;","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":53}},{"path":"src/main/java/Duke/enums/SecondaryCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.enums;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * Secondary commands that can be used by users in the duke application.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"public enum SecondaryCommand {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    BY(\"/by\", 3),","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"    AT(\"/at\", 3);","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    private final String value; // Value provided by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    private final int length;   // Length of the string provided by the user","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"     * The constructor for the Secondary Command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     * @param secondaryCommandString the value representing the string value of the enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * @param secondaryCommandLength the length of the string representing the value of the enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    SecondaryCommand(String secondaryCommandString, int secondaryCommandLength) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        value \u003d secondaryCommandString;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"        length \u003d secondaryCommandLength;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     * Returns the value of the secondary command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     * @return the string representation of a secondary command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"    public String getValue() {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"        return value;","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"     * Returns the length of the secondary command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"     * @return the integer value of the length of the secondary command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"        return length;","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":42}},{"path":"src/main/java/Duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code DukeException} is the superclass of those","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * exceptions that can be thrown during the operation of the Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The constructor for a Duke exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"     * @param message the message to be displayed to the users in the event of the exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":16}},{"path":"src/main/java/Duke/exceptions/FileFailedToLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code FileFailedToLoadException} is an exception thrown when a","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * file fails to load.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class FileFailedToLoadException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The constructor for a file failed to load exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    public FileFailedToLoadException() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"        super(\"File failed to load!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"yixiann":14}},{"path":"src/main/java/Duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidCommandException} is an exception thrown when a","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * command provided by the user is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The constructor for an invalid command exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":14}},{"path":"src/main/java/Duke/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidDateException} is an exception thrown when a","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * dateString provided by the user is invalid.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The constructor for an invalid date exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    public InvalidDateException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"        super(\"Please include a valid date string\");","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"yixiann":14}},{"path":"src/main/java/Duke/exceptions/InvalidFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidFindException} is an exception thrown when a","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * search string provided by the user is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidFindException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    public InvalidFindException() {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"        super(\"Please include a valid search text\");","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"yixiann":11}},{"path":"src/main/java/Duke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidIndexException} is an exception thrown when an","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * index provided by the user is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The constructor for an invalid index exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"     * @param message the message to be displayed to the users in the event of the exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":16}},{"path":"src/main/java/Duke/exceptions/InvalidSecondaryCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidSecondaryCommandException} is an exception thrown when a","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * secondary command provided by the user is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidSecondaryCommandException extends DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The constructor for an invalid secondary command exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"     * @param message the message to be displayed to the users in the event of the exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    public InvalidSecondaryCommandException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":16}},{"path":"src/main/java/Duke/exceptions/InvalidTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidTaskNameException} is an exception thrown when a","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * task name provided by the user is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidTaskNameException extends DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The constructor for an invalid task name exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    public InvalidTaskNameException() {","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"        super(\"Please include a valid task name\");","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":14}},{"path":"src/main/java/Duke/store/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.store;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.FileFailedToLoadException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import Duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import Duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":" * The {@code Storage} class enables users to store tasks in a file.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":" * This file enables saving of tasks to ensure users do not need to","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":" * recreate all tasks during every run of duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    private final Scanner scanner; // Scanner that reads the tasks from a text file.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    private final String filepath; // Path name of file that tasks are stored in.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"     * Constructor for a duke class.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"     * @param path String containing filepath to store tasks in.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    public Storage(String path) throws FileFailedToLoadException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"        filepath \u003d path;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"            boolean isMakeDirectorySuccessful \u003d file.getParentFile().mkdirs();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"            boolean isFileCreatedSuccessful \u003d file.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"            if (!isFileCreatedSuccessful || !isMakeDirectorySuccessful) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"                throw new FileFailedToLoadException();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"     * Return a scanner that outputs content in the saved file.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"    public Scanner load() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"        return scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"     * Stores all tasks in the taskList into a text file.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"    public void storeTask(TaskList taskList) throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"        FileWriter fileWriter \u003d new FileWriter(filepath);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"        StringBuilder input \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"        for (Object o : taskList.getTasks()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"            Task task \u003d (Task) o;","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"            input.append(task.toStorageString());","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"        fileWriter.write(input.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"        fileWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"yixiann":60}},{"path":"src/main/java/Duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * The {@code Task} stores relevant information for a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * It contains the {@link Task#taskName task name}, and a {@link Task#done boolean} to indicate if","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" * it is done or not.","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    final private String taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    private boolean done;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    public static final String DONE \u003d \"DONE\";","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    public static final String UNDONE \u003d \"UNDONE\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task. All task and undone from the start.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task specifying if it is already done.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"     * @param done     a boolean specifying if a task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"    public Task(String taskName, boolean done) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing the task name.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the task name.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"        return taskName;","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        done \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"     * Marks a task as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"        done \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"        String checkbox \u003d done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"        return checkbox + taskName;","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing the task for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the task for storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"        String doneString \u003d done ? DONE : UNDONE;","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"        return doneString + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":79}},{"path":"src/main/java/Duke/task/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.enums.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import Duke.enums.SecondaryCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidDateException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import Duke.utils.Utils;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" * The {@code TaskDeadline} class stores relevant information for a taskDeadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"public class TaskDeadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    private final LocalDate taskBy; // The date the task is supposed to be completed by.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"     * @param by       a string representing the deadline for the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    public TaskDeadline(String taskName, String by) throws InvalidDateException {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"        super(taskName);","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"        taskBy \u003d Utils.formatStringToDate(by);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"     * @param by       a string representing the deadline for the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     * @param done     a boolean representing if the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    public TaskDeadline(String taskName, String by, boolean done) throws InvalidDateException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        super(taskName, done);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        taskBy \u003d Utils.formatStringToDate(by);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing the taskDeadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the taskDeadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), Utils.formatDateToString(taskBy));","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing of a task deadline for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"     * @return a string representing a task deadline for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"        return String.format(\"%s %s %s %s\\n%s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"                Command.DEADLINE.getValue(),","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"                getTaskName(),","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"                SecondaryCommand.BY.getValue(),","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"                taskBy,","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"                super.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":64}},{"path":"src/main/java/Duke/task/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.enums.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import Duke.enums.SecondaryCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidDateException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import Duke.utils.Utils;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" * The {@code TaskEvent} class stores relevant information for a taskEvent.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"public class TaskEvent extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    private final LocalDate taskAt; // The date the task is supposed to occur at.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task event object.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"     * @param at       a string representing the time of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    public TaskEvent(String taskName, String at) throws InvalidDateException {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"        super(taskName);","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"        taskAt \u003d Utils.formatStringToDate(at);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task event.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"     * @param at       a string representing the time of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     * @param done     a boolean representing if the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    public TaskEvent(String taskName, String at, boolean done) throws InvalidDateException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        super(taskName, done);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        taskAt \u003d Utils.formatStringToDate(at);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing the taskEvent.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the taskEvent.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"        return String.format(\"[E] %s (at: %s)\", super.toString(), Utils.formatDateToString(taskAt));","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing of a task event for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"     * @return a string representing of a task event for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"        return String.format(\"%s %s %s %s\\n%s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"                Command.EVENT.getValue(),","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"                getTaskName(),","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"                SecondaryCommand.AT.getValue(),","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"                taskAt,","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"                super.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":64}},{"path":"src/main/java/Duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidIndexException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" * The {@code TaskList} stores relevant information for all tasks in the application.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":" * It contains the {@link TaskList#tasks task list}.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    private final ArrayList\u003c? super Task\u003e tasks; // Stores the task created by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task list with no task.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task list with task loaded from storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"    public TaskList(Scanner scanner) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"            String inputString \u003d scanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"            Parser input \u003d Parser.formatInput(inputString);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"            String additionalInputString \u003d scanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"            boolean done \u003d additionalInputString.equals(Task.DONE);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"            switch (input.getCommand()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"            case TODO:","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"                tasks.add(new TaskTodo(input.getMainData(), done));","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"                tasks.add(new TaskDeadline(input.getMainData(), input.getSecondaryData(), done));","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"            case EVENT:","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"                tasks.add(new TaskEvent(input.getMainData(), input.getSecondaryData(), done));","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"     * Returns an arraylist of all tasks created by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"     * @return an arraylist of all tasks created by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"    public ArrayList\u003c? super Task\u003e getTasks() {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"     * Returns a task created by the user given the index of it in the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"     * @param index an integer representing the index of task in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"     * @return the task having the index provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"        return (Task) tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"     * Returns an integer representing the number of tasks in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"     * @return an integer representing the number of tasks in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"    public int getNumberOfTask() {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"     * Adds a task into the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"     * @param task a task that will be added into the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"yixiann"},"content":"     * Delete a task given the index of it in the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"yixiann"},"content":"     * @param index an integer representing the index of task in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"yixiann"},"content":"    public Task deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"        validateIndex(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"yixiann"},"content":"        return (Task) tasks.remove(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"     * Check a task as done given the index of it in the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"yixiann"},"content":"     * @param index an integer representing the index of task in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"yixiann"},"content":"    public Task checkTask(int index) throws InvalidIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"yixiann"},"content":"        validateIndex(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"yixiann"},"content":"        Task task \u003d (Task) tasks.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"        task.markDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"yixiann"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"yixiann"},"content":"     * Uncheck a task as not done given the index of it in the taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"yixiann"},"content":"     * @param index an integer representing the index of task in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"yixiann"},"content":"    public Task uncheckTask(int index) throws InvalidIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"yixiann"},"content":"        validateIndex(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"yixiann"},"content":"        Task task \u003d (Task) tasks.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"yixiann"},"content":"        task.markUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"yixiann"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"yixiann"},"content":"     * Validate if the index is valid.","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"yixiann"},"content":"     * @param index an integer representing the index of task in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"yixiann"},"content":"     * @throws InvalidIndexException the error thrown when the index is invalid.","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"yixiann"},"content":"    private void validateIndex(int index) throws InvalidIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"yixiann"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"yixiann"},"content":"            String message;","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"yixiann"},"content":"            switch (tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"yixiann"},"content":"            case 0:","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"yixiann"},"content":"                message \u003d \"Please add a task first!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"yixiann"},"content":"            case 1:","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"yixiann"},"content":"                message \u003d \"Please choose the index 1\";","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"yixiann"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"yixiann"},"content":"                message \u003d \"Please choose an index between 1 and \" + tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"yixiann"},"content":"            throw new InvalidIndexException(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"yixiann":144}},{"path":"src/main/java/Duke/task/TaskTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.enums.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" * The {@code TaskTodo} class stores relevant information for a todoTask.","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"public class TaskTodo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"     * Constructor for a taskTodo.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    public TaskTodo(String taskName) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"        super(taskName);","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     * Constructor for a taskTodo.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"     * @param done     a boolean representing if the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    public TaskTodo(String taskName, boolean done) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"        super(taskName, done);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing the taskTodo.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the taskTodo.","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing of a taskTodo for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"     * @return a string representing of a taskTodo for storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"        return String.format(\"%s %s\\n%s\", Command.TODO.getValue(), getTaskName(), super.toStorageString());","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":48}},{"path":"src/main/java/Duke/ui/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"public class DukeDialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    public DukeDialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"        l.setWrapText(true);","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"        iv.setFitWidth(100.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"        iv.setFitHeight(100.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"        this.getChildren().addAll(iv, l);","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"yixiann":19}},{"path":"src/main/java/Duke/ui/DukeResponses.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.enums.Command;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import Duke.enums.SecondaryCommand;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import Duke.task.Task;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import Duke.task.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":" * The {@code CliUi} class contains string outputs used throughout the application for Cli.","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"public class DukeResponses {","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the messages to be seen when the application is started.","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"     * It contains an introduction before showing a","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     * {@link #listValidInstructions() list of valid instructions}","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * @return a string of the messages to be seen when the application is started.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    public String startPrompt() {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        return String.format(\"%s \\n %s\", \"Hi from Yi Xian\", listValidInstructions());","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the messages to be seen when the application is started.","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"     * @return a string of the messages to be seen when the application is started.","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"    public String listValidInstructions() {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"        return \"What can I do for you?\\n\" +","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s (task name)%n\", Command.TODO.getValue()) +","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s (task name) %s (date) \\n\",","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"                        Command.DEADLINE.getValue(), SecondaryCommand.BY.getValue()) +","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s (task name) %s (date) \\n\",","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"                        Command.EVENT.getValue(), SecondaryCommand.AT.getValue()) +","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s\\n\", Command.LIST.getValue()) +","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s\\n\", Command.FIND.getValue()) +","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s (index)\\n\", Command.CHECK.getValue()) +","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s (index)\\n\", Command.UNCHECK.getValue()) +","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s (index)\\n\", Command.DELETE.getValue()) +","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"                String.format(\"- %s\", Command.BYE.getValue());","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the messages to be seen when the application is started.","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"     * @return a string of the messages to be seen when the application is started.","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"    public String listValidDateFormats() {","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        return \"These are the following accepted formats: \\n 1) yyyy-mm-dd\";","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the messages to be seen when the application is started.","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"     * @return a string of the messages to be seen when the application is started.","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"    public String markDone(String taskName) {","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"        return \"Nice! I have marked (\" + taskName + \") as done!\";","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the message after marking a task as undone.","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"     * @return a string of the message after marking a task as undone.","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"    public String markUndone(String taskName) {","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"        return \"Nice! I have marked (\" + taskName + \") as undone!\";","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"     * Returns a string of all the tasks in the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"     * @param taskList task list that contains tasks to be displayed.","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"     * @return a string of all the tasks in the list.","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"    public String listTasks(TaskList taskList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"        output.append(\"Current Tasking\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTask(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"            output.append(String.format(\"%d) %s\\n\", i + 1, taskList.getTask(i)));","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"        output.append(\"Number of tasking: \").append(taskList.getNumberOfTask());","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"        return output.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"yixiann"},"content":"     * Returns a string of all tasks in the list based on a search.","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"yixiann"},"content":"     * @param taskList task list that contains tasks to be displayed.","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"     * @param search   contains the string we are interested in.","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"yixiann"},"content":"     * @return a string of all tasks in the list based on a search.","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":94,"author":{"gitId":"yixiann"},"content":"    public String findTasks(TaskList taskList, String search) {","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"yixiann"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"        output.append(\"Search Results\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTask(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"yixiann"},"content":"            if (task.getTaskName().contains(search)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"                output.append(String.format(\"%d) %s\\n\", i + 1, task));","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"yixiann"},"content":"                count +\u003d 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":104,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"        output.append(\"Number of tasking: \").append(count);","lastModifiedDate":"2022-09-02"},{"lineNumber":106,"author":{"gitId":"yixiann"},"content":"        return output.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":107,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":108,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":109,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":110,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the message after marking adding a task.","lastModifiedDate":"2022-09-02"},{"lineNumber":111,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":112,"author":{"gitId":"yixiann"},"content":"     * @param task the task that was added.","lastModifiedDate":"2022-09-02"},{"lineNumber":113,"author":{"gitId":"yixiann"},"content":"     * @return a string of the message after marking adding a task.","lastModifiedDate":"2022-09-02"},{"lineNumber":114,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"yixiann"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"yixiann"},"content":"        return String.format(\"Successfully added: %s\", task.getTaskName());","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":118,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the message after marking deleting a task.","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":122,"author":{"gitId":"yixiann"},"content":"     * @param task the task that was deleted.","lastModifiedDate":"2022-09-02"},{"lineNumber":123,"author":{"gitId":"yixiann"},"content":"     * @return a string of the message after marking deleting a task.","lastModifiedDate":"2022-09-02"},{"lineNumber":124,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":125,"author":{"gitId":"yixiann"},"content":"    public String deleteTask(Task task) {","lastModifiedDate":"2022-09-02"},{"lineNumber":126,"author":{"gitId":"yixiann"},"content":"        return String.format(\"Successfully deleted: %s\", task.getTaskName());","lastModifiedDate":"2022-09-02"},{"lineNumber":127,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":128,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":129,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":130,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the message that should be displayed before closing the application.","lastModifiedDate":"2022-09-02"},{"lineNumber":131,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":132,"author":{"gitId":"yixiann"},"content":"     * @return a string of the message that should be displayed before closing the application.","lastModifiedDate":"2022-09-02"},{"lineNumber":133,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":134,"author":{"gitId":"yixiann"},"content":"    public String endPrompt() {","lastModifiedDate":"2022-09-02"},{"lineNumber":135,"author":{"gitId":"yixiann"},"content":"        return \"Goodbye\";","lastModifiedDate":"2022-09-02"},{"lineNumber":136,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":137,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":139,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the success message when a file is successfully loaded.","lastModifiedDate":"2022-09-02"},{"lineNumber":140,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"yixiann"},"content":"     * @return a string of the success message when a file is successfully loaded.","lastModifiedDate":"2022-09-02"},{"lineNumber":142,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"yixiann"},"content":"    public String loadFileSuccessfully() {","lastModifiedDate":"2022-09-02"},{"lineNumber":144,"author":{"gitId":"yixiann"},"content":"        return \"File loaded successfully!\";","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":146,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":147,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":148,"author":{"gitId":"yixiann"},"content":"     * Returns a string of the success message when a file failed to load.","lastModifiedDate":"2022-09-02"},{"lineNumber":149,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":150,"author":{"gitId":"yixiann"},"content":"     * @return a string of the success message when a file failed to load.","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":152,"author":{"gitId":"yixiann"},"content":"    public String loadFileFailed() {","lastModifiedDate":"2022-09-02"},{"lineNumber":153,"author":{"gitId":"yixiann"},"content":"        return \"There seems to be an issue with the data file. Will clear the current list\";","lastModifiedDate":"2022-09-02"},{"lineNumber":154,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":155,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":156,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"yixiann":156}},{"path":"src/main/java/Duke/ui/GuiUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.Duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"public class GuiUi {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    private final Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    private final Stage stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    private final Image userImage","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"            \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/cat.jpeg\")));","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"    private final Image dukeImage","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"            \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/neko.jpeg\")));","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"    public GuiUi(Stage stage, Duke duke) {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        AnchorPane mainLayout \u003d setUpComponents();","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        formatWindow(mainLayout);","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        addUserInputHandler();","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"    private AnchorPane setUpComponents() {","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"        return mainLayout;","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"    private void formatWindow(AnchorPane mainLayout) {","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"yixiann"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"    private void addUserInputHandler() {","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"yixiann"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"yixiann"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":94,"author":{"gitId":"yixiann"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"    public void show() {","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"        stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"yixiann"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-02"},{"lineNumber":104,"author":{"gitId":"yixiann"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":106,"author":{"gitId":"yixiann"},"content":"    public void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":107,"author":{"gitId":"yixiann"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-02"},{"lineNumber":108,"author":{"gitId":"yixiann"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":109,"author":{"gitId":"yixiann"},"content":"        if (!input.trim().isBlank()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":110,"author":{"gitId":"yixiann"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2022-09-02"},{"lineNumber":111,"author":{"gitId":"yixiann"},"content":"                    new UserDialogBox(userText, new ImageView(userImage))","lastModifiedDate":"2022-09-02"},{"lineNumber":112,"author":{"gitId":"yixiann"},"content":"            );","lastModifiedDate":"2022-09-02"},{"lineNumber":113,"author":{"gitId":"yixiann"},"content":"            String output \u003d duke.receiveInput(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":114,"author":{"gitId":"yixiann"},"content":"            if (output !\u003d null) {","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"yixiann"},"content":"                handleOutput(output);","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"yixiann"},"content":"            userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":118,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"yixiann"},"content":"    public void handleOutput(String output) {","lastModifiedDate":"2022-09-02"},{"lineNumber":122,"author":{"gitId":"yixiann"},"content":"        Label dukeText \u003d new Label(output);","lastModifiedDate":"2022-09-02"},{"lineNumber":123,"author":{"gitId":"yixiann"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-09-02"},{"lineNumber":124,"author":{"gitId":"yixiann"},"content":"                new DukeDialogBox(dukeText, new ImageView(dukeImage))","lastModifiedDate":"2022-09-02"},{"lineNumber":125,"author":{"gitId":"yixiann"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":126,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":127,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"yixiann":127}},{"path":"src/main/java/Duke/ui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    public UserDialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"        l.setWrapText(true);","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"        iv.setFitWidth(100.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"        iv.setFitHeight(100.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"        this.getChildren().addAll(l, iv);","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"yixiann":19}},{"path":"src/main/java/Duke/utils/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package Duke.utils;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import Duke.exceptions.InvalidDateException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":" * The {@code Utils} class contains useful utilities used throughout the application.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"public class Utils {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"     * Returns a boolean indicating if an input can be parsed into an integer","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     * @param input String that we want to test","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if the string cannot be parsed into an integer","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     * \u003ccode\u003efalse\u003c/code\u003e otherwise.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    public static boolean isNotParsable(String input) {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"            return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"            return true;","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     * Returns a localDate object representing the provided date.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"     * The format of the date provided is of yyyy-mm-dd.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"     * @param dateString a string that we want to convert to a localDate.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"     * @return a localDate object representing the dateString.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"    public static LocalDate formatStringToDate(String dateString) throws InvalidDateException {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        LocalDate date;","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"            date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"        return date;","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"     * Returns a string representing the provided localDate.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"     * @param date the localDate that we want to convert to a string.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the date provided.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    public static String formatDateToString(LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":56}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"import Duke.task.TaskTodo;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"import Duke.ui.DukeResponses;","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"public class UiTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    public void lineDividerTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"        assertEquals(\"-\".repeat(60) + \"\\n\", outputStream.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    public void endPromptTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        DukeResponses ui \u003d new DukeResponses();","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"        ui.endPrompt();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"        assertEquals(\"Goodbye\" + \"\\n\", outputStream.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    public void markDoneTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"        TaskTodo taskTodo \u003d new TaskTodo(\"Test\");","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"        taskTodo.markDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"        assertEquals(taskTodo.toStorageString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"                new TaskTodo(\"Test\", true).toStorageString());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"    public void markUnDoneTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        TaskTodo taskTodo \u003d new TaskTodo(\"Test\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        taskTodo.markUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"        assertEquals(taskTodo.toStorageString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"                new TaskTodo(\"Test\").toStorageString());","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"yixiann":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"todo Read book","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yixiann":1,"-":37}}]

[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"import exceptions.*;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"import task.*;","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import utils.Input;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import utils.Prompt;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import utils.Utils;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" * The {@code Duke} class enables users to store and indicated various","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" * types of tasking, check and uncheck them, delete them and view a list","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":" * of all present tasks. It has a command line interface and does not","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":" * store data from each run.","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     * TaskList stores all the current task created by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    private static final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"        Prompt.startPrompt();","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"                String inputString \u003d scanner.nextLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"                if (inputString.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"                    continue;","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"                Input input \u003d Input.formatInput(inputString.trim());","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"                switch (input.getCommand()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"                    case BYE:","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"                        Prompt.endPrompt();","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"                        return;","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"                    case LIST:","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"                        listTasks();","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"                        break;","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"                    case CHECK:","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"                        checkTask(input.getMainData());","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"                        break;","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"                    case UNCHECK:","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"                        uncheckTask(input.getMainData());","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"                        break;","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"                    case DELETE:","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"                        deleteTask(input.getMainData());","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"                        break;","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"                    case TODO:","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"                        addTask(new TaskTodo(input.getMainData()));","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"                        break;","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"                    case DEADLINE:","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"                        addTask(new TaskDeadline(input.getMainData(), input.getSecondaryData()));","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"                        break;","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"                    case EVENT:","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"                        addTask(new TaskEvent(input.getMainData(), input.getSecondaryData()));","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"                        break;","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"                    default:","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"                        break;","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"            } catch (InvalidCommandException err) {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"                System.out.printf(\"%s is not a valid command\\n\", err.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"            } catch (InvalidTaskNameException | InvalidIndexException err) {","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"            } catch (InvalidSecondaryCommandException err) {","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"                System.out.printf(\"Please include %s command and the necessary information\\n\", err.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"                System.out.println(\"Unhandled Duke Exception\");","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"            } catch (Exception err) {","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"                System.out.println(\"Unhandled Exception\");","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"            } finally {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"                Prompt.lineDivider();","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"     * List all current task in the taskList.","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"    private static void listTasks() {","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"        taskList.listTask();","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"yixiann"},"content":"     * Given an index, mark a task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"yixiann"},"content":"     * @param index index of the task we would like to mark as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"yixiann"},"content":"    private static void checkTask(String index) throws InvalidIndexException {","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"        if (Utils.isNotParsable(index)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"yixiann"},"content":"            throw new InvalidIndexException(String.format(\"%s is not a number\", index));","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"yixiann"},"content":"        taskList.checkTask(Integer.parseInt(index));","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"        taskList.listTask();","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"     * Given an index, mark a task as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"yixiann"},"content":"     * @param index index of the task we would like to mark as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"    private static void uncheckTask(String index) throws InvalidIndexException {","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"yixiann"},"content":"        if (Utils.isNotParsable(index)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"yixiann"},"content":"            throw new InvalidIndexException(String.format(\"%s is not a number\", index));","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"yixiann"},"content":"        taskList.uncheckTask(Integer.parseInt(index));","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"yixiann"},"content":"        taskList.listTask();","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"yixiann"},"content":"     * Given an index, delete a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"yixiann"},"content":"     * @param index index of the task we would like to delete.","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"yixiann"},"content":"    private static void deleteTask(String index) throws InvalidIndexException {","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"        if (Utils.isNotParsable(index)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"yixiann"},"content":"            throw new InvalidIndexException(String.format(\"%s is not a number\", index));","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"yixiann"},"content":"        taskList.deleteTask(Integer.parseInt(index));","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"yixiann"},"content":"        taskList.listTask();","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"yixiann"},"content":"     * Given a task, add it to the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"yixiann"},"content":"     * @param \u003cT\u003e  type of the task we would like to add to the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"yixiann"},"content":"     * @param task the task we would like to add to the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"yixiann"},"content":"    private static \u003cT extends Task\u003e void addTask(T task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"yixiann"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"yixiann"},"content":"        taskList.listTask();","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yixiann":132,"-":4}},{"path":"src/main/java/enums/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package enums;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"public enum Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"    CHECK(\"check\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"    UNCHECK(\"uncheck\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    BYE(\"bye\");","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    private final String value;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    Command(String value) {","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    public static Command getCommandFromValue(String value) {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        for (Command e : values()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"            if (e.getValue().equals(value)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"                return e;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"        return null;","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"    public String getValue() {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"        return value;","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":33}},{"path":"src/main/java/enums/SecondaryCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package enums;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"public enum SecondaryCommand {","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"    BY(\"/by\", 3),","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"    AT(\"/at\", 3);","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    private final String value;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"    private final int length;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    SecondaryCommand(String value, int length) {","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"        this.length \u003d length;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    public String getValue() {","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"        return value;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        return length;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":23}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package exceptions;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code DukeException} is the superclass of those","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * exceptions that can be thrown during the operation of the Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":11}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package exceptions;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidCommandException} is an exception thrown when a","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * command provided by the user is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":11}},{"path":"src/main/java/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package exceptions;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidIndexException} is an exception thrown when an","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * index provided by the user is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":11}},{"path":"src/main/java/exceptions/InvalidSecondaryCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package exceptions;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidSecondaryCommandException} is an exception thrown when a","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * secondary command provided by the user is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidSecondaryCommandException extends DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    public InvalidSecondaryCommandException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":11}},{"path":"src/main/java/exceptions/InvalidTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package exceptions;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * {@code InvalidTaskNameException} is an exception thrown when a","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" * task name provided by the user is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"public class InvalidTaskNameException extends DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    public InvalidTaskNameException() {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"        super(\"Please include a valid task name\");","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":11}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import utils.Prompt;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":" * The {@code Task} stores relevant information for a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":" * It contains the {@link Task#taskName task name}, and a {@link Task#done boolean} to indicate if","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":" * it is done or not.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    final private String taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    private boolean done;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task deadline. All task and undone from the start.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"        return this.taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"        Prompt.markDone(this.taskName);","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"     * Marks a task as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"        Prompt.markUndone(this.taskName);","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     * Returns string representation of a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"        String checkbox \u003d this.done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"        return checkbox + this.taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":55}},{"path":"src/main/java/task/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * The {@code TaskDeadline} class stores relevant information for a taskDeadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"public class TaskDeadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The deadline for the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    private final String taskBy;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     * @param taskBy   a string representing the deadline for the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    public TaskDeadline(String taskName, String taskBy) {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"        super(taskName);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        this.taskBy \u003d taskBy;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"     * Returns string representation of a taskDeadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the taskDeadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), this.taskBy);","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":33}},{"path":"src/main/java/task/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * The {@code TaskEvent} class stores relevant information for a taskEvent.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"public class TaskEvent extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     * The time the task is supposed to occur.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"    private final String taskAt;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task event.","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     * @param taskName a string representing the name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     * @param taskAt   a string representing the time of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    public TaskEvent(String taskName, String taskAt) {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"        super(taskName);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        this.taskAt \u003d taskAt;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"     * Returns string representation of a taskEvent.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the taskEvent.","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"        return String.format(\"[E] %s (at: %s)\", super.toString(), this.taskAt);","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":33}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import exceptions.InvalidIndexException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import utils.Prompt;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":" * The {@code TaskList} stores relevant information for all tasks in the application.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" * It contains the {@link TaskList#taskList task list}.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"public class TaskList {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    private final ArrayList\u003c? super Task\u003e taskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"     * Constructor for a task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     * A function that list all the tasks in the list.","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    public void listTask() {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"        System.out.println(\"\\nCurrent Tasking\");","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"            System.out.println(i + \") \" + taskList.get(i - 1));","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"        System.out.println(\"Number of tasking: \" + taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"        Prompt.addTask(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     * Given an index, delete a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"     * @param index index of the task we would like to delete.","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"    public void deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"        validateIndex(index - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        Task task \u003d (Task) taskList.remove(index - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        Prompt.deleteTask(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"     * Given an index, mark a task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"     * @param index index of the task we would like to mark as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"    public void checkTask(int index) throws InvalidIndexException {","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"        validateIndex(index - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"        Task task \u003d (Task) taskList.get(index - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"        task.markDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"     * Given an index, mark a task as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"     * @param index index of the task we would like to mark as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"    public void uncheckTask(int index) throws InvalidIndexException {","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"        validateIndex(index - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"        Task task \u003d (Task) taskList.get(index - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"        task.markUndone();","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"     * Given an index, check if the index is valid.","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"     * @param index index of the task we would like to check.","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"     * @throws InvalidIndexException error thrown when the index is invalid.","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"    private void validateIndex(int index) throws InvalidIndexException {","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"            String message;","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"            switch (taskList.size()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"                case 0:","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"yixiann"},"content":"                    message \u003d \"Please add a task first!\";","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"                    break;","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"yixiann"},"content":"                case 1:","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"                    message \u003d \"Please choose the index 1\";","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"yixiann"},"content":"                    break;","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"                default:","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"yixiann"},"content":"                    message \u003d \"Please choose an index between 1 and \" + taskList.size();","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"                    break;","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"yixiann"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"            throw new InvalidIndexException(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":98}},{"path":"src/main/java/task/TaskTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * The {@code TaskTodo} class stores relevant information for a todoTask.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"public class TaskTodo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"    public TaskTodo(String taskName) {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"        super(taskName);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"     * Returns string representation of a taskTodo.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"     * @return a string representing the taskTodo.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":21}},{"path":"src/main/java/utils/Input.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package utils;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import enums.Command;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import enums.SecondaryCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"import exceptions.InvalidSecondaryCommandException;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"import exceptions.InvalidTaskNameException;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":" * The {@code Input} class formats a string input into an input object.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"public class Input {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"    private Command command;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"    private String mainData;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"    private String secondaryData;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"    private Input() {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"        this.mainData \u003d \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        this.secondaryData \u003d \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    public Command getCommand() {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"        return command;","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"    public String getMainData() {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"        return mainData;","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"    public String getSecondaryData() {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"        return secondaryData;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"     * A method that formats a string input into an input object","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"     * @param input A string containing text provided by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"     * @return An input object containing important information from the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"    public static Input formatInput(String input) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"        Input result \u003d new Input();","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"        int maxParameters \u003d 2;","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"        String[] commandWithInfo \u003d input.split(\" \", maxParameters);","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"        String commandString \u003d commandWithInfo[0];","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"        Command command \u003d Command.getCommandFromValue(commandString);","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"            result.command \u003d command;","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"        } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"            throw new InvalidCommandException(commandString);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"        switch (command) {","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"            case LIST:","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"            case BYE:","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"            case CHECK:","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"            case UNCHECK:","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"            case DELETE:","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"            case TODO:","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"                if (commandWithInfo.length !\u003d maxParameters) {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"                result.mainData \u003d commandWithInfo[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"                if (result.mainData.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"            case EVENT:","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"                if (commandWithInfo.length !\u003d maxParameters) {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"                String info \u003d commandWithInfo[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"                SecondaryCommand at \u003d SecondaryCommand.AT;","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"                int atIndex \u003d info.lastIndexOf(at.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"                if (atIndex \u003d\u003d -1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidSecondaryCommandException(at.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"yixiann"},"content":"                if (atIndex \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"yixiann"},"content":"                result.mainData \u003d info.substring(0, atIndex - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"yixiann"},"content":"                if (atIndex + at.getLength() \u003d\u003d info.length()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidSecondaryCommandException(at.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"yixiann"},"content":"                result.secondaryData \u003d info.substring(atIndex + 1 + at.getLength());","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"yixiann"},"content":"                if (result.mainData.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"yixiann"},"content":"                if (result.secondaryData.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidSecondaryCommandException(at.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"yixiann"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"yixiann"},"content":"                if (commandWithInfo.length !\u003d maxParameters) {","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"yixiann"},"content":"                info \u003d commandWithInfo[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"yixiann"},"content":"                SecondaryCommand by \u003d SecondaryCommand.BY;","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"yixiann"},"content":"                int byIndex \u003d info.lastIndexOf(by.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"yixiann"},"content":"                if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidSecondaryCommandException(by.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"yixiann"},"content":"                if (byIndex \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"yixiann"},"content":"                result.mainData \u003d info.substring(0, byIndex - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"yixiann"},"content":"                if (byIndex + by.getLength() \u003d\u003d info.length()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidSecondaryCommandException(by.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"yixiann"},"content":"                result.secondaryData \u003d info.substring(byIndex + 1 + by.getLength());","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"yixiann"},"content":"                if (result.mainData.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidTaskNameException();","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"yixiann"},"content":"                if (result.secondaryData.isEmpty()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"yixiann"},"content":"                    throw new InvalidSecondaryCommandException(by.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"yixiann"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"yixiann"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"yixiann"},"content":"            default:","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"yixiann"},"content":"                throw new InvalidCommandException(\"Command not implemented :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"yixiann"},"content":"        result.mainData \u003d result.mainData.trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"yixiann"},"content":"        result.secondaryData \u003d result.secondaryData.trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":140,"author":{"gitId":"yixiann"},"content":"        return result;","lastModifiedDate":"2022-08-20"},{"lineNumber":141,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":142,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":142}},{"path":"src/main/java/utils/Prompt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package utils;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"import enums.Command;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":"import enums.SecondaryCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":"import task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":" * The {@code Prompt} class contains outputs used throughout the application.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"public class Prompt {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"     * Prints messages to be seen when the application is started.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"     * It contains an introduction before showing a","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"     * {@link #listValidInstructions() list of valid instructions} and a","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"     * {@link #lineDivider() line divider }.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"    public static void startPrompt() {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"        System.out.println(\"Hi from Yi Xian\");","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"        listValidInstructions();","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"        lineDivider();","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yixiann"},"content":"     * Prints a list of valid instructions that can be executed by the application.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yixiann"},"content":"    public static void listValidInstructions() {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yixiann"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"- %s (task name)%n\", Command.TODO.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"- %s (task name) %s (date) \\n\",","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"yixiann"},"content":"                Command.DEADLINE.getValue(), SecondaryCommand.BY.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"- %s (task name) %s (date) \\n\",","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"yixiann"},"content":"                Command.EVENT.getValue(), SecondaryCommand.AT.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"- %s\\n\", Command.LIST.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"- %s (index)\\n\", Command.CHECK.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"- %s (index)\\n\", Command.UNCHECK.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"- %s (index)\\n\", Command.DELETE.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"- %s\\n\", Command.BYE.getValue());","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"yixiann"},"content":"     * Prints a message after marking a task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"yixiann"},"content":"    public static void markDone(String taskName) {","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yixiann"},"content":"        System.out.println(\"Nice! I have marked (\" + taskName + \") as done!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"yixiann"},"content":"     * Prints a message after marking a task as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"yixiann"},"content":"    public static void markUndone(String taskName) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"yixiann"},"content":"        System.out.println(\"Nice! I have marked (\" + taskName + \") as undone!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"yixiann"},"content":"     * Prints a message after marking adding a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"yixiann"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"Successfully added: %s\", task.getTaskName());","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"yixiann"},"content":"     * Prints a message after marking deleting a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"yixiann"},"content":"    public static void deleteTask(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"yixiann"},"content":"        System.out.printf(\"Successfully deleted: %s\", task.getTaskName());","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"yixiann"},"content":"     * Prints a message that should be displayed before closing the application.","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"yixiann"},"content":"    public static void endPrompt() {","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"yixiann"},"content":"        System.out.println(\"Goodbye\");","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"yixiann"},"content":"     * Prints a line to divide outputs from the application.","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"yixiann"},"content":"    public static void lineDivider() {","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"yixiann"},"content":"        System.out.println(\"-------------------------------------------------------------\");","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":82}},{"path":"src/main/java/utils/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"package utils;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yixiann"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"yixiann"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"yixiann"},"content":" * The {@code Utils} class contains useful utilities used throughout the application.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"yixiann"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"yixiann"},"content":"public class Utils {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"yixiann"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"yixiann"},"content":"     * Returns a boolean indicating if an input can be parsed into an integer","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"yixiann"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"yixiann"},"content":"     * @param input String that we want to test","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"yixiann"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if the string cannot be parsed into an integer","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yixiann"},"content":"     * \u003ccode\u003efalse\u003c/code\u003e otherwise.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yixiann"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"yixiann"},"content":"    public static boolean isNotParsable(String input) {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yixiann"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"yixiann"},"content":"            return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"yixiann"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"yixiann"},"content":"            return true;","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"yixiann"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"yixiann"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"yixiann"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yixiann":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yixiann"},"content":"todo Read book","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yixiann":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"yixiann"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yixiann":1,"-":37}}]

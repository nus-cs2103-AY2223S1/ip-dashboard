[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"ThomasHoooo":15}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public enum Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"    EVENT,","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"    TODO,","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"    DELETE,","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"    MARK,","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    UNMARK,","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    QUIT,","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    LIST,","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    INVALID,","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    FIND,","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    UPDATE","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":15}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"        String[] splitStr \u003d by.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        LocalDate date \u003d LocalDate.parse(splitStr[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        LocalTime time \u003d LocalTime.parse(splitStr[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"     * Converts the deadline in tasks.txt into a Deadline object.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    public static Deadline parse(String task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        boolean isDone \u003d task.substring(4, 5).equals(\" \") ? false : true;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\] (?\u003cdescription\u003e[^\\\\(]*)\\\\(by: (?\u003ctime\u003e.*)\\\\)\");","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"        matcher.find();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"        String time \u003d matcher.group(\"time\");","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"        time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\", Locale.ENGLISH))","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"        return new Deadline(description, isDone, time);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\").withLocale(Locale.ENGLISH));","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        String formattedTime \u003d this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"        // [D][ ] task (by: dd MMM yyyy HHmm)","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \" \" + formattedTime + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":49}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"    private void flip() {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"        db.flip();","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"        return db;","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"ThomasHoooo":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"    public void run() {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"        Ui.printInitialMessage();","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"        while (true) {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"            String command \u003d ui.readCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"            switch (Parser.parse(command)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"            case TODO: {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"                Todo todo \u003d new Todo(command.replace(\"todo\", \"\").trim(), false);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printAddedMessage(todo, tasks.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"            case DEADLINE: {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"                String[] splitStr \u003d command.trim().split(\"/by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"                String date \u003d splitStr[1].replace(\"by\", \"\").trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"                Deadline deadline \u003d new Deadline(splitStr[0].replace(\"deadline\", \"\").trim(),","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"                        false, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printAddedMessage(deadline, tasks.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"            case EVENT: {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"                String[] splitStr \u003d command.trim().split(\"/at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"ThomasHoooo"},"content":"                String date \u003d splitStr[1].replace(\"at\", \"\").trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ThomasHoooo"},"content":"                Event event \u003d new Event(splitStr[0].replace(\"event\", \"\").trim(), false, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printAddedMessage(event, tasks.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ThomasHoooo"},"content":"            case DELETE: {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"ThomasHoooo"},"content":"                String[] splitStr \u003d command.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ThomasHoooo"},"content":"                int deleteItem \u003d Integer.parseInt(splitStr[splitStr.length - 1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"ThomasHoooo"},"content":"                Task deletedTask \u003d tasks.remove(deleteItem);","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printDeletedMessage(deletedTask, tasks.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ThomasHoooo"},"content":"            case MARK:","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.markDone(Integer.parseInt(command.replace(\"mark \", \"\").trim()));","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ThomasHoooo"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.unmark(Integer.parseInt(command.replace(\"unmark \", \"\").trim()));","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"ThomasHoooo"},"content":"            case QUIT:","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printGoodbyeMessage();","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"ThomasHoooo"},"content":"                return;","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"ThomasHoooo"},"content":"            case LIST:","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printTasks(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ThomasHoooo"},"content":"            case INVALID:","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printErrorMessage(new DukeException(","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ThomasHoooo"},"content":"                        \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"ThomasHoooo"},"content":"            case FIND:","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"ThomasHoooo"},"content":"                TaskList filtered \u003d tasks.find(command.replace(\"find\", \"\").trim());","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printTasks(filtered);","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"ThomasHoooo"},"content":"            case UPDATE:","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"ThomasHoooo"},"content":"                Pattern pattern \u003d Pattern.compile(\"update (?\u003cindex\u003e\\\\d+) (?\u003cnewTask\u003e.*)\");","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"ThomasHoooo"},"content":"                Matcher matcher \u003d pattern.matcher(command);","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"ThomasHoooo"},"content":"                matcher.find();","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"ThomasHoooo"},"content":"                int index \u003d Integer.parseInt(matcher.group(\"index\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"ThomasHoooo"},"content":"                String newTask \u003d matcher.group(\"newTask\");","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"ThomasHoooo"},"content":"                switch (Parser.parse(newTask)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"ThomasHoooo"},"content":"                case TODO:","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"ThomasHoooo"},"content":"                    Todo todo \u003d new Todo(newTask.replace(\"todo\", \"\").trim(), false);","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.update(index, todo);","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"ThomasHoooo"},"content":"                    Ui.printAddedMessage(todo, tasks.getSize());","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"ThomasHoooo"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"ThomasHoooo"},"content":"                case DEADLINE: {","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"ThomasHoooo"},"content":"                    String[] splitStr \u003d newTask.trim().split(\"/by\");","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"ThomasHoooo"},"content":"                    String date \u003d splitStr[1].replace(\"by\", \"\").trim();","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"ThomasHoooo"},"content":"                    Deadline deadline \u003d new Deadline(splitStr[0].replace(\"deadline\", \"\").trim(),","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"ThomasHoooo"},"content":"                            false, date);","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.update(index, deadline);","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"ThomasHoooo"},"content":"                    Ui.printAddedMessage(deadline, tasks.getSize());","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"ThomasHoooo"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"ThomasHoooo"},"content":"                }","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"ThomasHoooo"},"content":"                case EVENT: {","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"ThomasHoooo"},"content":"                    String[] splitStr \u003d newTask.trim().split(\"/at\");","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"ThomasHoooo"},"content":"                    String date \u003d splitStr[1].replace(\"at\", \"\").trim();","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"ThomasHoooo"},"content":"                    Event event \u003d new Event(splitStr[0].replace(\"event\", \"\").trim(), false, date);","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.update(index, event);","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"ThomasHoooo"},"content":"                    Ui.printAddedMessage(event, tasks.getSize());","lastModifiedDate":"2022-09-09"},{"lineNumber":124,"author":{"gitId":"ThomasHoooo"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"ThomasHoooo"},"content":"                }","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"ThomasHoooo"},"content":"                default:","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"ThomasHoooo"},"content":"                    assert false : command;","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"ThomasHoooo"},"content":"                }","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"ThomasHoooo"},"content":"            default:","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"ThomasHoooo"},"content":"                assert false : command;","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":136,"author":{"gitId":"ThomasHoooo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":137,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"ThomasHoooo"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-02"},{"lineNumber":139,"author":{"gitId":"ThomasHoooo"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-02"},{"lineNumber":140,"author":{"gitId":"ThomasHoooo"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":142,"author":{"gitId":"ThomasHoooo"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"ThomasHoooo"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-02"},{"lineNumber":144,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"ThomasHoooo"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-02"},{"lineNumber":146,"author":{"gitId":"ThomasHoooo"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-02"},{"lineNumber":147,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":148,"author":{"gitId":"ThomasHoooo"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-02"},{"lineNumber":149,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":150,"author":{"gitId":"ThomasHoooo"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"ThomasHoooo"},"content":"        stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":152,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":153,"author":{"gitId":"ThomasHoooo"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-02"},{"lineNumber":154,"author":{"gitId":"ThomasHoooo"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-02"},{"lineNumber":155,"author":{"gitId":"ThomasHoooo"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":156,"author":{"gitId":"ThomasHoooo"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":157,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":158,"author":{"gitId":"ThomasHoooo"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":159,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":160,"author":{"gitId":"ThomasHoooo"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-02"},{"lineNumber":161,"author":{"gitId":"ThomasHoooo"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-02"},{"lineNumber":162,"author":{"gitId":"ThomasHoooo"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-02"},{"lineNumber":163,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":164,"author":{"gitId":"ThomasHoooo"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":165,"author":{"gitId":"ThomasHoooo"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-02"},{"lineNumber":166,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":167,"author":{"gitId":"ThomasHoooo"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-02"},{"lineNumber":168,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":169,"author":{"gitId":"ThomasHoooo"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":170,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":171,"author":{"gitId":"ThomasHoooo"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":172,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":173,"author":{"gitId":"ThomasHoooo"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":174,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":175,"author":{"gitId":"ThomasHoooo"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":176,"author":{"gitId":"ThomasHoooo"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":177,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":178,"author":{"gitId":"ThomasHoooo"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":179,"author":{"gitId":"ThomasHoooo"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":180,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":181,"author":{"gitId":"ThomasHoooo"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-02"},{"lineNumber":182,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":183,"author":{"gitId":"ThomasHoooo"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-09-02"},{"lineNumber":184,"author":{"gitId":"ThomasHoooo"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-02"},{"lineNumber":185,"author":{"gitId":"ThomasHoooo"},"content":"        });","lastModifiedDate":"2022-09-02"},{"lineNumber":186,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":187,"author":{"gitId":"ThomasHoooo"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-09-02"},{"lineNumber":188,"author":{"gitId":"ThomasHoooo"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-02"},{"lineNumber":189,"author":{"gitId":"ThomasHoooo"},"content":"        });","lastModifiedDate":"2022-09-02"},{"lineNumber":190,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":191,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":192,"author":{"gitId":"ThomasHoooo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":193,"author":{"gitId":"ThomasHoooo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":194,"author":{"gitId":"ThomasHoooo"},"content":"                DialogBox.getUserDialog(userInput.getText(), user),","lastModifiedDate":"2022-09-02"},{"lineNumber":195,"author":{"gitId":"ThomasHoooo"},"content":"                DialogBox.getDukeDialog(getResponse(userInput.getText()), duke)","lastModifiedDate":"2022-09-02"},{"lineNumber":196,"author":{"gitId":"ThomasHoooo"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":197,"author":{"gitId":"ThomasHoooo"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":198,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":199,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":200,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":201,"author":{"gitId":"ThomasHoooo"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":202,"author":{"gitId":"ThomasHoooo"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-02"},{"lineNumber":203,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":204,"author":{"gitId":"ThomasHoooo"},"content":"    String getResponse(String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":205,"author":{"gitId":"ThomasHoooo"},"content":"        switch (Parser.parse(input)) {","lastModifiedDate":"2022-09-11"},{"lineNumber":206,"author":{"gitId":"ThomasHoooo"},"content":"        case TODO: {","lastModifiedDate":"2022-09-11"},{"lineNumber":207,"author":{"gitId":"ThomasHoooo"},"content":"            Todo todo \u003d new Todo(input.replace(\"todo\", \"\").trim(), false);","lastModifiedDate":"2022-09-11"},{"lineNumber":208,"author":{"gitId":"ThomasHoooo"},"content":"            tasks.add(todo);","lastModifiedDate":"2022-09-11"},{"lineNumber":209,"author":{"gitId":"ThomasHoooo"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":210,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printAddedMessage(todo, tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":211,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":212,"author":{"gitId":"ThomasHoooo"},"content":"        case DEADLINE: {","lastModifiedDate":"2022-09-11"},{"lineNumber":213,"author":{"gitId":"ThomasHoooo"},"content":"            String[] splitStr \u003d input.trim().split(\"/by\");","lastModifiedDate":"2022-09-11"},{"lineNumber":214,"author":{"gitId":"ThomasHoooo"},"content":"            String date \u003d splitStr[1].replace(\"by\", \"\").trim();","lastModifiedDate":"2022-09-11"},{"lineNumber":215,"author":{"gitId":"ThomasHoooo"},"content":"            Deadline deadline \u003d new Deadline(splitStr[0].replace(\"deadline\", \"\").trim(),","lastModifiedDate":"2022-09-11"},{"lineNumber":216,"author":{"gitId":"ThomasHoooo"},"content":"                    false, date);","lastModifiedDate":"2022-09-11"},{"lineNumber":217,"author":{"gitId":"ThomasHoooo"},"content":"            tasks.add(deadline);","lastModifiedDate":"2022-09-11"},{"lineNumber":218,"author":{"gitId":"ThomasHoooo"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":219,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printAddedMessage(deadline, tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":220,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":221,"author":{"gitId":"ThomasHoooo"},"content":"        case EVENT: {","lastModifiedDate":"2022-09-11"},{"lineNumber":222,"author":{"gitId":"ThomasHoooo"},"content":"            String[] splitStr \u003d input.trim().split(\"/at\");","lastModifiedDate":"2022-09-11"},{"lineNumber":223,"author":{"gitId":"ThomasHoooo"},"content":"            String date \u003d splitStr[1].replace(\"at\", \"\").trim();","lastModifiedDate":"2022-09-11"},{"lineNumber":224,"author":{"gitId":"ThomasHoooo"},"content":"            Event event \u003d new Event(splitStr[0].replace(\"event\", \"\").trim(), false, date);","lastModifiedDate":"2022-09-11"},{"lineNumber":225,"author":{"gitId":"ThomasHoooo"},"content":"            tasks.add(event);","lastModifiedDate":"2022-09-11"},{"lineNumber":226,"author":{"gitId":"ThomasHoooo"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":227,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printAddedMessage(event, tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":228,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":229,"author":{"gitId":"ThomasHoooo"},"content":"        case DELETE: {","lastModifiedDate":"2022-09-11"},{"lineNumber":230,"author":{"gitId":"ThomasHoooo"},"content":"            String[] splitStr \u003d input.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-09-11"},{"lineNumber":231,"author":{"gitId":"ThomasHoooo"},"content":"            int deleteItem \u003d Integer.parseInt(splitStr[splitStr.length - 1]) - 1;","lastModifiedDate":"2022-09-11"},{"lineNumber":232,"author":{"gitId":"ThomasHoooo"},"content":"            Task deletedTask \u003d tasks.remove(deleteItem);","lastModifiedDate":"2022-09-11"},{"lineNumber":233,"author":{"gitId":"ThomasHoooo"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":234,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printDeletedMessage(deletedTask, tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":235,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":236,"author":{"gitId":"ThomasHoooo"},"content":"        case MARK: {","lastModifiedDate":"2022-09-11"},{"lineNumber":237,"author":{"gitId":"ThomasHoooo"},"content":"            int taskIndex \u003d Integer.parseInt(input.replace(\"mark \", \"\").trim());","lastModifiedDate":"2022-09-11"},{"lineNumber":238,"author":{"gitId":"ThomasHoooo"},"content":"            tasks.markDone(taskIndex);","lastModifiedDate":"2022-09-11"},{"lineNumber":239,"author":{"gitId":"ThomasHoooo"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":240,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printMarkMessage(tasks.getTaskDescription(taskIndex));","lastModifiedDate":"2022-09-11"},{"lineNumber":241,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":242,"author":{"gitId":"ThomasHoooo"},"content":"        case UNMARK: {","lastModifiedDate":"2022-09-11"},{"lineNumber":243,"author":{"gitId":"ThomasHoooo"},"content":"            int taskIndex \u003d Integer.parseInt(input.replace(\"unmark \", \"\").trim());","lastModifiedDate":"2022-09-11"},{"lineNumber":244,"author":{"gitId":"ThomasHoooo"},"content":"            tasks.unmark(taskIndex);","lastModifiedDate":"2022-09-11"},{"lineNumber":245,"author":{"gitId":"ThomasHoooo"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":246,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printUnmarkMessage(tasks.getTaskDescription(taskIndex));","lastModifiedDate":"2022-09-11"},{"lineNumber":247,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":248,"author":{"gitId":"ThomasHoooo"},"content":"        case QUIT:","lastModifiedDate":"2022-09-11"},{"lineNumber":249,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printGoodbyeMessage();","lastModifiedDate":"2022-09-11"},{"lineNumber":250,"author":{"gitId":"ThomasHoooo"},"content":"        case LIST:","lastModifiedDate":"2022-09-11"},{"lineNumber":251,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printTasks(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":252,"author":{"gitId":"ThomasHoooo"},"content":"        case INVALID:","lastModifiedDate":"2022-09-11"},{"lineNumber":253,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printErrorMessage(new DukeException(","lastModifiedDate":"2022-09-11"},{"lineNumber":254,"author":{"gitId":"ThomasHoooo"},"content":"                    \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2022-09-11"},{"lineNumber":255,"author":{"gitId":"ThomasHoooo"},"content":"        case FIND:","lastModifiedDate":"2022-09-11"},{"lineNumber":256,"author":{"gitId":"ThomasHoooo"},"content":"            TaskList filtered \u003d tasks.find(input.replace(\"find\", \"\").trim());","lastModifiedDate":"2022-09-11"},{"lineNumber":257,"author":{"gitId":"ThomasHoooo"},"content":"            return Ui.printTasks(filtered);","lastModifiedDate":"2022-09-11"},{"lineNumber":258,"author":{"gitId":"ThomasHoooo"},"content":"        case UPDATE:","lastModifiedDate":"2022-09-11"},{"lineNumber":259,"author":{"gitId":"ThomasHoooo"},"content":"            Pattern pattern \u003d Pattern.compile(\"update (?\u003cindex\u003e\\\\d+) (?\u003cnewTask\u003e.*)\");","lastModifiedDate":"2022-09-11"},{"lineNumber":260,"author":{"gitId":"ThomasHoooo"},"content":"            Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":261,"author":{"gitId":"ThomasHoooo"},"content":"            matcher.find();","lastModifiedDate":"2022-09-11"},{"lineNumber":262,"author":{"gitId":"ThomasHoooo"},"content":"            int index \u003d Integer.parseInt(matcher.group(\"index\"));","lastModifiedDate":"2022-09-11"},{"lineNumber":263,"author":{"gitId":"ThomasHoooo"},"content":"            String newTask \u003d matcher.group(\"newTask\");","lastModifiedDate":"2022-09-11"},{"lineNumber":264,"author":{"gitId":"ThomasHoooo"},"content":"            System.out.print(\"update\");","lastModifiedDate":"2022-09-14"},{"lineNumber":265,"author":{"gitId":"ThomasHoooo"},"content":"            switch (Parser.parse(newTask)) {","lastModifiedDate":"2022-09-11"},{"lineNumber":266,"author":{"gitId":"ThomasHoooo"},"content":"            case TODO:","lastModifiedDate":"2022-09-11"},{"lineNumber":267,"author":{"gitId":"ThomasHoooo"},"content":"                Task todo \u003d new Todo(newTask.replace(\"todo\", \"\").trim(), false);","lastModifiedDate":"2022-09-14"},{"lineNumber":268,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.update(index, todo);","lastModifiedDate":"2022-09-11"},{"lineNumber":269,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":270,"author":{"gitId":"ThomasHoooo"},"content":"                return Ui.printAddedMessage(todo, tasks.getSize());","lastModifiedDate":"2022-09-14"},{"lineNumber":271,"author":{"gitId":"ThomasHoooo"},"content":"            case DEADLINE: {","lastModifiedDate":"2022-09-11"},{"lineNumber":272,"author":{"gitId":"ThomasHoooo"},"content":"                String[] splitStr \u003d newTask.trim().split(\"/by\");","lastModifiedDate":"2022-09-11"},{"lineNumber":273,"author":{"gitId":"ThomasHoooo"},"content":"                String date \u003d splitStr[1].replace(\"by\", \"\").trim();","lastModifiedDate":"2022-09-11"},{"lineNumber":274,"author":{"gitId":"ThomasHoooo"},"content":"                Deadline deadline \u003d new Deadline(splitStr[0].replace(\"deadline\", \"\").trim(),","lastModifiedDate":"2022-09-11"},{"lineNumber":275,"author":{"gitId":"ThomasHoooo"},"content":"                        false, date);","lastModifiedDate":"2022-09-11"},{"lineNumber":276,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.update(index, deadline);","lastModifiedDate":"2022-09-11"},{"lineNumber":277,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":278,"author":{"gitId":"ThomasHoooo"},"content":"                return Ui.printAddedMessage(deadline, tasks.getSize());","lastModifiedDate":"2022-09-14"},{"lineNumber":279,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-09-11"},{"lineNumber":280,"author":{"gitId":"ThomasHoooo"},"content":"            case EVENT: {","lastModifiedDate":"2022-09-11"},{"lineNumber":281,"author":{"gitId":"ThomasHoooo"},"content":"                String[] splitStr \u003d newTask.trim().split(\"/at\");","lastModifiedDate":"2022-09-11"},{"lineNumber":282,"author":{"gitId":"ThomasHoooo"},"content":"                String date \u003d splitStr[1].replace(\"at\", \"\").trim();","lastModifiedDate":"2022-09-11"},{"lineNumber":283,"author":{"gitId":"ThomasHoooo"},"content":"                Event event \u003d new Event(splitStr[0].replace(\"event\", \"\").trim(), false, date);","lastModifiedDate":"2022-09-11"},{"lineNumber":284,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.update(index, event);","lastModifiedDate":"2022-09-11"},{"lineNumber":285,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":286,"author":{"gitId":"ThomasHoooo"},"content":"                return Ui.printAddedMessage(event, tasks.getSize());","lastModifiedDate":"2022-09-14"},{"lineNumber":287,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-09-11"},{"lineNumber":288,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-09-11"},{"lineNumber":289,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":290,"author":{"gitId":"ThomasHoooo"},"content":"        return \"\";","lastModifiedDate":"2022-09-14"},{"lineNumber":291,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":292,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":293,"author":{"gitId":"ThomasHoooo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":294,"author":{"gitId":"ThomasHoooo"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2022-08-24"},{"lineNumber":295,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":296,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"-":2,"ThomasHoooo":294}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"    public DukeException(String exception) {","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"        super(exception);","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"ThomasHoooo":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"    public Event(String description, boolean isDone, String timeline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"        String[] splitStr \u003d timeline.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        LocalDate date \u003d LocalDate.parse(splitStr[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        LocalTime time \u003d LocalTime.parse(splitStr[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"     * Converts the event in tasks.txt into an Event object.","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"    public static Event parse(String task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"        boolean isDone \u003d task.substring(4, 5).equals(\" \") ? false : true;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\] (?\u003cdescription\u003e[^\\\\(]*)\\\\(at: (?\u003ctime\u003e.*)\\\\)\");","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        matcher.find();","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"        String time \u003d matcher.group(\"time\");","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"        time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\", Locale.ENGLISH))","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"        return new Event(description, isDone, time);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\").withLocale(Locale.ENGLISH));","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"        String formattedTime \u003d this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        //[D][ ] task (by: dd MMM yyyy HHmm)","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \" \" + formattedTime + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":48}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"public class Launcher {","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"ThomasHoooo":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"    private Duke duke \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"            stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"ThomasHoooo":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"ThomasHoooo":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"     * Checks command and make sense of the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"     * @param command The command passed in by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"     * @return enum type of the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    public static Command parse(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"        if (command.startsWith(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.QUIT;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"list\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.LIST;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.UNMARK;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.MARK;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.TODO;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.EVENT;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.DELETE;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.FIND;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"update\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.UPDATE;","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.INVALID;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":36}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    private String filePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"            Ui.printErrorMessage(new DukeException(\"Error loading file\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"     * Loads the file into a tasklist.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"     * @return Tasklist containing all the files.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    public TaskList load() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"            Scanner sc \u003d new Scanner(fis);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"                if (nextLine.startsWith(\"[T]\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.add(Todo.parse(nextLine));","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"                } else if (nextLine.startsWith(\"[D]\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.add(Deadline.parse(nextLine));","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"                } else if (nextLine.startsWith(\"[E]\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.add(Event.parse(nextLine));","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"            sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"    public void writeToFile(TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"            Files.write(Paths.get(filePath), tasks.convertToStringList(), StandardOpenOption.WRITE);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"            Ui.printErrorMessage(new DukeException(\"Error writing to file\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":59}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"    public Task(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":36}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    public TaskList(ArrayList list) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        tasks \u003d list;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    public List\u003cString\u003e convertToStringList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks.stream().map(task -\u003e Objects.toString(task)).collect(Collectors.toList());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    public Task remove(int taskNum) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks.remove(taskNum);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"    public void markDone(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"    public void unmark(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"        tasks.get(index - 1).unmark();","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"    public TaskList find(String task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"        return new TaskList((ArrayList) tasks.stream().filter(s -\u003e s.toString().contains(task)).collect(Collectors.\u003cTask\u003etoList()));","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"    public void update(int index, Task task) {","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"        tasks.set(index - 1, task);","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"    public String getTaskDescription(int index) {","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks.get(index - 1).description;","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":55}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    public Todo(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"     * Converts the todo in tasks.txt into a Todo object.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    public static Todo parse(String task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        boolean isDone \u003d task.substring(4, 5).equals(\" \") ? false : true;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        return new Todo(task.substring(7), isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"    private Scanner in;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    public Ui() {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"     * Reads command from the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"     * @return the command parsed in by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        return in.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints initial message.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    public static String printInitialMessage() {","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        return logo + \"Hello! I\u0027m Yale\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints goodbye message.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"    public static String printGoodbyeMessage() {","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints the task added message.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"     * @param newTask The task added by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"     * @param size Total number of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"    public static String printAddedMessage(Task newTask, int size) {","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"        String message \u003d String.format(\"\\tGot it. I\u0027ve added this task:\\n\\t  %s\\n\", newTask)","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"                + String.format(\"\\tNow you have %s tasks in the list\\n\", size);","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"        return message;","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints the error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"     * @param e The exception returned by Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"    public static String printErrorMessage(DukeException e) {","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"        String errorMessage \u003d e.getMessage() + \"\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"ThomasHoooo"},"content":"        return errorMessage;","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints the deleted task message.","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"ThomasHoooo"},"content":"     * @param deletedTask The deleted task.","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"ThomasHoooo"},"content":"     * @param size Total number of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"ThomasHoooo"},"content":"    public static String printDeletedMessage(Task deletedTask, int size) {","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"ThomasHoooo"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"ThomasHoooo"},"content":"                + deletedTask","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ThomasHoooo"},"content":"                + String.format(\"\\nNow you have %s tasks in the list.\\n\", size);","lastModifiedDate":"2022-09-11"},{"lineNumber":73,"author":{"gitId":"ThomasHoooo"},"content":"        return message;","lastModifiedDate":"2022-09-11"},{"lineNumber":74,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"ThomasHoooo"},"content":"     * List out all tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"ThomasHoooo"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"ThomasHoooo"},"content":"    public static String printTasks(TaskList tasks) {","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"ThomasHoooo"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"ThomasHoooo"},"content":"        for (String task : tasks.convertToStringList()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"ThomasHoooo"},"content":"            tasksString +\u003d task + \"\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":85,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"ThomasHoooo"},"content":"        return tasksString;","lastModifiedDate":"2022-09-11"},{"lineNumber":87,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ThomasHoooo"},"content":"    public static String printMarkMessage(String task) {","lastModifiedDate":"2022-09-11"},{"lineNumber":90,"author":{"gitId":"ThomasHoooo"},"content":"        return \"Mark \" + task + \" as done\";","lastModifiedDate":"2022-09-11"},{"lineNumber":91,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":92,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"ThomasHoooo"},"content":"    public static String printUnmarkMessage(String task) {","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"ThomasHoooo"},"content":"        return \"Already unmark \" + task;","lastModifiedDate":"2022-09-11"},{"lineNumber":95,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":96}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"ThomasHoooo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"ThomasHoooo":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    public void parseTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(Command.QUIT, Parser.parse(\"bye\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"ThomasHoooo":13}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.After;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.Before;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"public class UiTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    public void printInitialMessageTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        Ui.printInitialMessage();","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"        String expected \u003d logo + \"Hello! I\u0027m Yale\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"ThomasHoooo":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"deadline return book /by 02/12/2019 18:00","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":6}}]

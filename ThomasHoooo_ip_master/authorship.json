[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"ThomasHoooo":15}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public enum Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"    EVENT,","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"    TODO,","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"    DELETE,","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"    MARK,","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    UNMARK,","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    QUIT,","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    LIST,","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    INVALID,","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    FIND","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":14}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"        String[] splitStr \u003d by.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        LocalDate date \u003d LocalDate.parse(splitStr[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        LocalTime time \u003d LocalTime.parse(splitStr[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"     * Converts the deadline in tasks.txt into a Deadline object.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    public static Deadline parse(String task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        boolean isDone \u003d task.substring(4, 5).equals(\" \") ? false : true;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\] (?\u003cdescription\u003e[^\\\\(]*)\\\\(by: (?\u003ctime\u003e.*)\\\\)\");","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"        matcher.find();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"        String time \u003d matcher.group(\"time\");","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"        time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\", Locale.ENGLISH))","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"        return new Deadline(description, isDone, time);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\").withLocale(Locale.ENGLISH));","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        String formattedTime \u003d this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"        // [D][ ] task (by: dd MMM yyyy HHmm)","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \" \" + formattedTime + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":49}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    public void run() {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"        Ui.printInitialMessage();","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        while (true) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"            String command \u003d ui.readCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"            switch (Parser.parse(command)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"            case TODO: {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"                Todo todo \u003d new Todo(command.replace(\"todo\", \"\").trim(), false);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printAddedMessage(todo, tasks.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"            case DEADLINE: {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"                String[] splitStr \u003d command.trim().split(\"/by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"                String date \u003d splitStr[1].replace(\"by\", \"\").trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"                Deadline deadline \u003d new Deadline(splitStr[0].replace(\"deadline\", \"\").trim(),","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"                        false, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printAddedMessage(deadline, tasks.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"            case EVENT: {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"                String[] splitStr \u003d command.trim().split(\"/at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"                String date \u003d splitStr[1].replace(\"at\", \"\").trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"                Event event \u003d new Event(splitStr[0].replace(\"event\", \"\").trim(), false, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printAddedMessage(event, tasks.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"            case DELETE: {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"                String[] splitStr \u003d command.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"                int deleteItem \u003d Integer.parseInt(splitStr[splitStr.length - 1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"                Task deletedTask \u003d tasks.remove(deleteItem);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printDeletedMessage(deletedTask, tasks.getSize());","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"            case MARK:","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.markDone(Integer.parseInt(command.replace(\"mark \", \"\").trim()));","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"                tasks.unmark(Integer.parseInt(command.replace(\"mark \", \"\").trim()));","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ThomasHoooo"},"content":"            case QUIT:","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printGoodbyeMessage();","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"ThomasHoooo"},"content":"                return;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ThomasHoooo"},"content":"            case LIST:","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printTasks(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ThomasHoooo"},"content":"            case INVALID:","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printErrorMessage(new DukeException(","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ThomasHoooo"},"content":"                        \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ThomasHoooo"},"content":"            case FIND:","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"ThomasHoooo"},"content":"                TaskList filtered \u003d tasks.find(command.replace(\"find\", \"\").trim());","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"ThomasHoooo"},"content":"                Ui.printTasks(filtered);","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"ThomasHoooo"},"content":"                continue;","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"ThomasHoooo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"ThomasHoooo"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"-":3,"ThomasHoooo":79}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"    public DukeException(String exception) {","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"        super(exception);","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"ThomasHoooo":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"    public Event(String description, boolean isDone, String timeline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"        String[] splitStr \u003d timeline.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        LocalDate date \u003d LocalDate.parse(splitStr[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        LocalTime time \u003d LocalTime.parse(splitStr[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"     * Converts the event in tasks.txt into an Event object.","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"    public static Event parse(String task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"        boolean isDone \u003d task.substring(4, 5).equals(\" \") ? false : true;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\] (?\u003cdescription\u003e[^\\\\(]*)\\\\(at: (?\u003ctime\u003e.*)\\\\)\");","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        matcher.find();","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"        String time \u003d matcher.group(\"time\");","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"        time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\", Locale.ENGLISH))","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"        return new Event(description, isDone, time);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\").withLocale(Locale.ENGLISH));","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"        String formattedTime \u003d this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        //[D][ ] task (by: dd MMM yyyy HHmm)","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \" \" + formattedTime + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":48}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"     * Checks command and make sense of the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"     * @param command The command passed in by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"     * @return enum type of the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    public static Command parse(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"        if (command.startsWith(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.QUIT;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"list\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.LIST;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.UNMARK;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.MARK;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.TODO;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.EVENT;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.DELETE;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.FIND;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"            return Command.INVALID;","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":34}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    private String filePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"            Ui.printErrorMessage(new DukeException(\"Error loading file\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"     * Loads the file into a tasklist.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"     * @return Tasklist containing all the files.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    public TaskList load() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"            Scanner sc \u003d new Scanner(fis);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"                if (nextLine.startsWith(\"[T]\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.add(Todo.parse(nextLine));","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"                } else if (nextLine.startsWith(\"[D]\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.add(Deadline.parse(nextLine));","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"                } else if (nextLine.startsWith(\"[E]\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"                    tasks.add(Event.parse(nextLine));","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"            sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"    public void writeToFile(TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"            Files.write(Paths.get(filePath), tasks.convertToStringList(), StandardOpenOption.WRITE);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"            Ui.printErrorMessage(new DukeException(\"Error writing to file\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":59}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"    public Task(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":36}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    public TaskList(ArrayList list) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        tasks \u003d list;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    public List\u003cString\u003e convertToStringList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks.stream().map(task -\u003e Objects.toString(task)).collect(Collectors.toList());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    public Task remove(int taskNum) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks.remove(taskNum);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"    public void markDone(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"    public void unmark(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"    public TaskList find(String task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"        return new TaskList((ArrayList) tasks.stream().filter(s -\u003e s.toString().contains(task)).collect(Collectors.\u003cTask\u003etoList()));","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":47}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"    public Todo(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"     * Converts the todo in tasks.txt into a Todo object.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    public static Todo parse(String task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        boolean isDone \u003d task.substring(4, 5).equals(\" \") ? false : true;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        return new Todo(task.substring(7), isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"    private static String DIVIDER \u003d \"__________________________________________________________\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"    private Scanner in;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    public Ui() {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"     * Reads command from the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"     * @return the command parsed in by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        return in.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints initial message.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    public static void printInitialMessage() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        System.out.print(logo + \"Hello! I\u0027m Yale\\nWhat can I do for you?\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints goodbye message.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints the task added message.","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"     * @param newTask The task added by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"     * @param size Total number of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"    public static void printAddedMessage(Task newTask, int size) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"        String message \u003d DIVIDER","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"                + String.format(\"\\tGot it. I\u0027ve added this task:\\n\\t  %s\\n\", newTask)","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"                + String.format(\"\\tNow you have %s tasks in the list\\n\", size)","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"                + DIVIDER;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"        System.out.print(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints the error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"     * @param e The exception returned by Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"ThomasHoooo"},"content":"    public static void printErrorMessage(DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ThomasHoooo"},"content":"        String errorMessage \u003d DIVIDER + e.getMessage() + \"\\n\" + DIVIDER;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"ThomasHoooo"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"ThomasHoooo"},"content":"     * Prints the deleted task message.","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"ThomasHoooo"},"content":"     * @param deletedTask The deleted task.","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"ThomasHoooo"},"content":"     * @param size Total number of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"ThomasHoooo"},"content":"    public static void printDeletedMessage(Task deletedTask, int size) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"ThomasHoooo"},"content":"        String message \u003d DIVIDER + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ThomasHoooo"},"content":"                + deletedTask","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ThomasHoooo"},"content":"                + String.format(\"\\nNow you have %s tasks in the list.\\n\", size) + DIVIDER;","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ThomasHoooo"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"ThomasHoooo"},"content":"     * List out all tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"ThomasHoooo"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"ThomasHoooo"},"content":"     * @param tasks The tasklist.","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"ThomasHoooo"},"content":"    public static void printTasks(TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"ThomasHoooo"},"content":"        for (String task : tasks.convertToStringList()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"ThomasHoooo"},"content":"            System.out.println(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"ThomasHoooo"},"content":"    public static void printMarkMessage() {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ThomasHoooo":93}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    public void parseTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(Command.QUIT, Parser.parse(\"bye\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"ThomasHoooo":13}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.After;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.Before;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"public class UiTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    public void printInitialMessageTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"        Ui.printInitialMessage();","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"        String expected \u003d logo + \"Hello! I\u0027m Yale\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"ThomasHoooo":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"deadline return book /by 02/12/2019 18:00","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ThomasHoooo":6}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"parnikkapore":2,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import duke.modules.Todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static duke.Ui.readLine;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static duke.Ui.say;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" * Entrypoint for the Duke chatbot.","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"     * Entrypoint.","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"        // intro string","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"        say(\"Hello, Duke here! What can I do for you?\");","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        // initialize plugins","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"        Todos todos \u003d new Todos();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"        boolean fExit \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        while (!fExit) {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"            String line \u003d readLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"            fExit \u003d Parser.execute(line, todos).shouldExitAfter();","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"parnikkapore":26,"-":4}},{"path":"src/main/java/duke/FallibleFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":" * Represents a function that can either complete and return a value or throw a MessagefulException for the","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":" * caller to handle.","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * @param \u003cT\u003e the type of the input to the function.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" * @param \u003cR\u003e the type of the input to the function.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"@FunctionalInterface","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"public interface FallibleFunction\u003cT, R\u003e {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"     * Applies this function to the given argument.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * @param t The function argument.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     * @return The function result.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException when thrown by the wrapped function.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    R apply(T t) throws MessagefulException;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"parnikkapore":21}},{"path":"src/main/java/duke/MessagefulException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":" * An exception with both developer-facing and user-facing messages.","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"public class MessagefulException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"    private final String hint;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"     * @param message Developer-facing message. Example: \"Missing name\".","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"     * @param hint    User-facing message. Example: \"Please enter a name\".","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    public MessagefulException(String message, String hint) {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"        this.hint \u003d hint;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     * Retrieves the user-facing message.","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * @return The user-facing message.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public String getHint() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        return this.hint;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"parnikkapore":28}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import duke.modules.Todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import duke.modules.todos.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import duke.modules.todos.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import duke.modules.todos.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import static duke.Ui.say;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import static duke.Ui.sayAsError;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import static duke.Ui.sayError;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" * Command parser cum evaluator.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"     * Represents the result of an execution.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    static class ExecuteResult {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"        /** Whether the program should exit after this command */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"        private final boolean shouldExitAfter;","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        /**","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"         * Constructor","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"         * @param shouldExitAfter Whether the program should exit after this command","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"         */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        public ExecuteResult(boolean shouldExitAfter) {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"            this.shouldExitAfter \u003d shouldExitAfter;","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        public boolean shouldExitAfter() {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"            return shouldExitAfter;","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"     * Parses and executes the given input using the given module instances.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"     * @param line The input given to the bot.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"     * @param todos The Todos module instance to use.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"     * @return Whether the process should exit after this command.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    public static ExecuteResult execute(String line, Todos todos) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"            Scanner scanner \u003d new Scanner(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"            String command \u003d scanner.hasNext() ? scanner.next() : \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"            switch (command) {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"            case \"\":","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"                sayAsError(\"Sorry, I didn\u0027t catch that?\");","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"            case \"bye\":","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"                say(\"OK. See you next time! *boings away*\");","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"                return new ExecuteResult(true);","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"                todos.cmdAdd(scanner, Todo::fromChat);","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"                todos.cmdAdd(scanner, Deadline::fromChat);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"            case \"event\":","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"                todos.cmdAdd(scanner, Event::fromChat);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"            case \"list\":","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"                todos.cmdList();","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"            case \"mark\":","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"                todos.cmdMark(scanner);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"            case \"unmark\":","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"                todos.cmdUnmark(scanner);","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"            case \"delete\":","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"                todos.cmdDelete(scanner);","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"            case \"find\":","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"                todos.cmdFind(scanner);","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"            default:","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"                sayAsError(\"Sorry, I didn\u0027t understand what you said :(\");","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        } catch (MessagefulException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"            sayError(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        return new ExecuteResult(false);","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"parnikkapore":90}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Functions for interacting with the user.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"     * Output a line of text according to the format for bot messages.","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"     * Do not use \\n for multiline text - use the list version.","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"     * @param text The text to output.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    public static void say(String text) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"        say(List.of(text));","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     * Output some multiline text according to the format for bot messages.","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * @param lines A list of lines of text to output.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public static void say(List\u003cString\u003e lines) {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"                System.out.println(\"\\uD83D\\uDCAC \" + lines.get(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"                System.out.println(\"   \" + lines.get(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        System.out.println(\"─────\");","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    private static final boolean DEV_MODE \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"     * Output an error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"     * @param e The MessagefulException to output.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    public static void sayError(MessagefulException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        if (DEV_MODE) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"            sayAsError(e.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"            sayAsError(e.getHint());","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     * Output an arbitrary string as if it is an error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"     * @param message The message to output.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    public static void sayAsError(String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        System.out.println(\"\\uD83D\\uDFE1 \" + message);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        System.out.println(\"─────\");","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    private static final Scanner stdin \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"     * Reads a line of text from standard input.","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"     * @return The read line of text.","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    public static String readLine() {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        return stdin.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"parnikkapore":71}},{"path":"src/main/java/duke/modules/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke.modules;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import duke.FallibleFunction;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import duke.MessagefulException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import duke.modules.todos.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import duke.modules.todos.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import duke.modules.todos.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import static duke.Ui.say;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"import static java.lang.String.format;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":" * Module handling tracking tasks, optionally with dates or timeranges.","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"public class Todos {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    private final TaskList todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     * constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    public Todos() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        this.todos \u003d new TaskList(storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    private String taskCountMessage() {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        return format(\"Now you have %d %s in the list.\", todos.size(), todos.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    private int readTodoID(Scanner rest, String missingNumberPrompt) throws MessagefulException {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        if (!rest.hasNextInt()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"            throw new MessagefulException(\"Missing task number\", missingNumberPrompt);","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        int taskID \u003d rest.nextInt() - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"        if (taskID \u003c 0 || taskID \u003e\u003d todos.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"            throw new MessagefulException(","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"                    \"Task number out of bounds\",","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"                    \"Hmm... a task with that number doesn\u0027t seem to exist. \" +","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"                            \"You can see a list of all tasks by saying \\\"list\\\".\");","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        return taskID;","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     * Command for adding a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"     * @param rest        The scanner with the remaining text in the message.","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"     * @param constructor The fromChat factory function of the given task.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException if there is an issue.","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    public void cmdAdd(Scanner rest, FallibleFunction\u003cScanner, Task\u003e constructor) throws MessagefulException {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        final Task task \u003d constructor.apply(rest);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"        todos.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        say(List.of(","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"                \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"                task.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"                taskCountMessage()","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        ));","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"        storage.saveList(todos);","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"     * Command for listing all tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    public void cmdList() {","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e(todos.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        output.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        for (int i \u003d 0; i \u003c todos.size(); i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"            output.add(format(\"%d. %s\", i + 1, todos.get(i).toString()));","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        say(output);","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"     * Command for marking a task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"     * @param rest The scanner with the remaining text in the message.","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException if there is an issue.","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    public void cmdMark(Scanner rest) throws MessagefulException {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"        final int taskID \u003d readTodoID(rest, \"Please give me a task number to mark!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"        todos.get(taskID).setDone(true);","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        say(List.of(","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"                \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"                todos.get(taskID).toString()));","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        storage.saveList(todos);","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"     * Command for marking a task as not done.","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"     * @param rest The scanner with the remaining text in the message.","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException if there is an issue.","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"    public void cmdUnmark(Scanner rest) throws MessagefulException {","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"        final int taskID \u003d readTodoID(rest, \"Please give me a task number to unmark!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"        todos.get(taskID).setDone(false);","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"        say(List.of(\"Alright, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"                todos.get(taskID).toString()));","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"        storage.saveList(todos);","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"     * Command for deleting a task.","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"     * @param rest The scanner with the remaining text in the message.","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException if there is an issue.","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"    public void cmdDelete(Scanner rest) throws MessagefulException {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"        final int taskID \u003d readTodoID(rest, \"Please give me a task number to delete!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"        Task taskToDelete \u003d todos.get(taskID);","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"        todos.remove(taskID);","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"        say(List.of(","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"                \"OK, I\u0027ve deleted this task:\",","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"                taskToDelete.toString(),","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"                taskCountMessage()));","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"        storage.saveList(todos);","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"     * Command for showing tasks that match certain keywords.","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"     * @param rest The scanner with the remaining text in the message.","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException if there is an issue.","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"    public void cmdFind(Scanner rest) throws MessagefulException {","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"parnikkapore"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"        while (rest.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"parnikkapore"},"content":"            keywords.add(rest.next());","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"parnikkapore"},"content":"        if (keywords.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"            throw new MessagefulException(\"no keywords\", \"Please give me some words to find!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"parnikkapore"},"content":"        TaskList matches \u003d todos.filter(keywords);","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"parnikkapore"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e(matches.size());","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"parnikkapore"},"content":"        output.add(format(\"Here are the tasks that match \\\"%s\\\":\", String.join(\"\\\", \\\"\", keywords)));","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"        for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"parnikkapore"},"content":"            output.add(format(\"%d. %s\", i + 1, matches.get(i).toString()));","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"parnikkapore"},"content":"        say(output);","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"parnikkapore":156}},{"path":"src/main/java/duke/modules/todos/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke.modules.todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import duke.MessagefulException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"import static java.lang.String.format;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":" * Deadlines - tasks with a due date.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        this(name, false, deadline);","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"     * @param name     The name of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"     * @param done     Whether the task is done.","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    public Deadline(String name, boolean done, LocalDateTime deadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"        super(name, done);","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //@@author parnikkapore-reused","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Adapted from https://stackoverflow.com/questions/54593569/#54593895","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final static Pattern chatPattern \u003d Pattern.compile(\"(?\u003cname\u003e.*) /by (?\u003ctime\u003e.*)\");","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a Deadline from a Scanner with arguments.","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param sc The scanner with the remaining text in the message.","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return The constructed deadline.","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws MessagefulException There is an issue with the arguments.","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Deadline fromChat(Scanner sc) throws MessagefulException {","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String rest \u003d sc.hasNextLine() ? sc.nextLine() : \"\";","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher match \u003d chatPattern.matcher(rest);","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (match.matches()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                return new Deadline(","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        match.group(\"name\"),","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                        LocalDateTime.parse(match.group(\"time\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new MessagefulException(","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                        \"datetime parse failure\" + e,","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                        e.getParsedString() + \" doesn\u0027t look like a date and time to me...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new MessagefulException(","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    \"Deadline syntax no match\",","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    \"Deadlines are added like this: deadline return book /by Sunday\"","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String typeCode \u003d \"D\";","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Packs the task\u0027s data into a List.","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @return The packed data.","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e flatPack() {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e(super.flatPack());","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        result.set(0, typeCode);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        result.add(deadline.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Unpacks the task\u0027s data from a List.","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param l The packed data.","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Deadline(List\u003c? extends String\u003e l) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        super(l);","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!l.get(0).equals(typeCode)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Trying to hydrate non-deadline as deadline: \" + l);","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.deadline \u003d LocalDateTime.parse(l.get(3), DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return format(","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \"[D]%s (by: %s)\",","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                super.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                this.deadline.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)));","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"parnikkapore":44,"-":69}},{"path":"src/main/java/duke/modules/todos/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke.modules.todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import duke.MessagefulException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import static java.lang.String.format;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" * Events - tasks with a time range.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    private String timeRange;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * @param timeRange The time range of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public Event(String name, String timeRange) {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        this(name, false, timeRange);","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"     * @param name      The name of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"     * @param done      Whether the task is done.","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     * @param timeRange The time range of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    public Event(String name, boolean done, String timeRange) {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        super(name, done);","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //@@author parnikkapore-reused","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Adapted from https://stackoverflow.com/questions/54593569/#54593895","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final static Pattern chatPattern \u003d Pattern.compile(\"(?\u003cname\u003e.*) /at (?\u003ctimeRange\u003e.*)\");","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs an Event from a Scanner with arguments.","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param sc The scanner with the remaining text in the message.","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return The constructed event.","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws MessagefulException There is an issue with the arguments.","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Event fromChat(Scanner sc) throws MessagefulException {","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String rest \u003d sc.hasNextLine() ? sc.nextLine() : \"\";","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Matcher match \u003d chatPattern.matcher(rest);","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (match.matches()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new Event(match.group(\"name\"), match.group(\"timeRange\"));","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new MessagefulException(","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    \"Event syntax no match\",","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    \"Events are added like this: event project meeting /at Mon 2-4pm\"","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String typeCode \u003d \"E\";","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Packs the task\u0027s data into a List.","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return The packed data.","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e flatPack() {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e(super.flatPack());","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        result.set(0, typeCode);","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        result.add(timeRange);","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Unpacks the task\u0027s data from a List.","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param l The packed data.","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Event(List\u003c? extends String\u003e l) {","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        super(l);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!l.get(0).equals(typeCode)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Trying to hydrate non-event as event: \" + l);","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.timeRange \u003d l.get(3);","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return format(\"[E]%s (at: %s)\", super.toString(), this.timeRange);","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"parnikkapore":40,"-":58}},{"path":"src/main/java/duke/modules/todos/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke.modules.todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import duke.MessagefulException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" * Task list saving and loading functionalities.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    private final String fileDir;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     * @param fileDir The path, relative to the current directory, of the save file.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     * @param fileName The name of the save file.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    public Storage(String fileDir, String fileName) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        this.filePath \u003d fileDir + \"/\" + fileName;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"     * Constructor using the default savefile location.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public Storage() {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        this(\"data\", \"tasks.csv\");","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"     * Saves the given TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"     * @param todos The TaskList to save.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException when saving fails.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    public void saveList(TaskList todos) throws MessagefulException {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"            File fileDir \u003d new File(this.fileDir);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"            if (!fileDir.isDirectory() \u0026\u0026 !fileDir.mkdirs()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"                throw new MessagefulException(\"cannot create task save dir\", \"Uh oh! I cannot save the task list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"            for (Task task : todos) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"                fw.write(String.join(\",\", task.flatPack()) + System.lineSeparator());","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"            throw new MessagefulException(","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"                    \"file writing error\",","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"                    \"Uh oh! I cannot save the task list. This might help: \" + e);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"     * Loads the TaskList from the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"     * @return The loaded TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException when loading fails.","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    public ArrayList\u003cTask\u003e loadList() throws MessagefulException {","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"            ArrayList\u003cTask\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"            Scanner file \u003d new Scanner(new File(filePath));","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"            while (file.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"                List\u003cString\u003e line \u003d Arrays.asList(file.nextLine().split(\",\", -1));","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"                final Task newTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"                switch (line.get(0)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"                case Task.typeCode:","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"                case Todo.typeCode:","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"                    newTask \u003d new Todo(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"                case Deadline.typeCode:","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"                    newTask \u003d new Deadline(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"                case Event.typeCode:","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"                    newTask \u003d new Event(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"                default:","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"                    throw new MessagefulException(","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"                            \"unknown task type\",","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"                            \"Uh oh! I cannot load the task list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"                todos.add(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"            return todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"            throw new MessagefulException(","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"                    \"tasks file missing\",","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"                    \"I have gotten you started with an empty task list. Welcome!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"parnikkapore":102}},{"path":"src/main/java/duke/modules/todos/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke.modules.todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static java.lang.String.format;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" * Parent class for tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    private final String name;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    private boolean done;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"        this(name, false);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     * @param name The name of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"     * @param done Whether the task is done.","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    public Task(String name, boolean done) {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     * Sets whether the task is done.","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"     * @param done Whether the task is done.","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"     * Returns the name of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"     * @return The name of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    public String getName() {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        return this.name;","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    public static final String typeCode \u003d \"B\";","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    private final String doneSer \u003d \"X\";","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    private final String undoneSer \u003d \"-\";","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"     * Packs the task\u0027s data into a List.","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"     * @return The packed data.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    public List\u003cString\u003e flatPack() {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        return List.of(typeCode, this.done ? doneSer : undoneSer, this.name);","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"     * Unpacks the task\u0027s data from a List.","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"     * @param l The packed data.","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    public Task(List\u003c? extends String\u003e l) {","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        this.name \u003d l.get(2);","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"        final String doneStr \u003d l.get(1);","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        if (doneSer.equals(doneStr)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"            this.done \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        } else if (undoneSer.equals(doneStr)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"            this.done \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"            throw new IllegalArgumentException(\"Invalid done value found while hydrating task: \" + doneStr);","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        return format(\"[%s] %s\", this.done ? \"X\" : \" \", this.name);","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"parnikkapore":87}},{"path":"src/main/java/duke/modules/todos/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke.modules.todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import duke.MessagefulException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import static duke.Ui.sayError;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"// \"We will add validation to this later\" - No one","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    private final List\u003cTask\u003e todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"     * Constructor for creating a TaskList from a save file.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     * @param storage The Storage used to load the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"            todos \u003d storage.loadList();","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        } catch (MessagefulException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"            sayError(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"            todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        this.todos \u003d todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"     * Constructor for creating an empty TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"        this.todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"     * Gets the task with the given index.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"     * @param index The index of the task to load.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"     * @return The specified task.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        return todos.get(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"     * @return The size of the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    public int size() {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        return todos.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"     * @return Whether the task is successfully added.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        return todos.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     * Removes a task from the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"     * @return The removed task.","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        return todos.remove(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"     * Returns a sub-TaskList containing only tasks whose names contain all the given segments.","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"     * @param segments The string segments the return tasks will contain.","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"     * @return The matching tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"    public TaskList filter(List\u003cString\u003e segments) {","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"        for (Task task : this.todos) {","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"            String name \u003d task.getName();","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"            if (segments.stream().allMatch(name::contains)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"                result.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"     * Returns an iterator for the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"     * @return An iterator for the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"        return todos.iterator();","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"parnikkapore":109}},{"path":"src/main/java/duke/modules/todos/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke.modules.todos;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import duke.MessagefulException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import static java.lang.String.format;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Todos - tasks with no attached timing.","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        this(name, false);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     * Constructor","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"     * @param name The name of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"     * @param done Whether the task is done.","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public Todo(String name, boolean done) {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        super(name, done);","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a Todo from a Scanner with arguments.","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"     * @param sc The scanner with the remaining text in the message.","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"     * @return The constructed todo.","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"     * @throws MessagefulException There is an issue with the arguments.","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    public static Todo fromChat(Scanner sc) throws MessagefulException {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        if (!sc.hasNextLine()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"            throw new MessagefulException(\"Missing name\", \"Please give your todo a name.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        return new Todo(sc.nextLine());","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    public static final String typeCode \u003d \"T\";","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     * Packs the task\u0027s data into a List.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"     * @return The packed data.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    public List\u003cString\u003e flatPack() {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e(super.flatPack());","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        result.set(0, typeCode);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"     * Unpacks the task\u0027s data from a List.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"     * @param l The packed data.","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    public Todo(List\u003c? extends String\u003e l) {","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"        super(l);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        if (!l.get(0).equals(typeCode)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"            throw new IllegalArgumentException(\"Trying to hydrate non-todo as todo: \" + l);","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        return format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"parnikkapore":80}},{"path":"src/test/java/duke/MessagefulExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"public class MessagefulExceptionTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"    public void getMessage_smokeTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"        MessagefulException me \u003d new MessagefulException(\"A\", \"B\");","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(\"A\", me.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    public void getHint_smokeTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"        MessagefulException me \u003d new MessagefulException(\"A\", \"B\");","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(\"B\", me.getHint());","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"parnikkapore":19}},{"path":"src/test/java/duke/modules/todos/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package duke.modules.todos;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertIterableEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    public void toString_notDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"        Todo todo \u003d new Todo(\"Abacaba\", false);","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(\"[T][ ] Abacaba\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public void toString_done() {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        Todo todo \u003d new Todo(\"Peanuts\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(\"[T][X] Peanuts\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    public void toString_default() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        Todo todo \u003d new Todo(\"Cherries\");","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(\"[T][ ] Cherries\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    public void flatPack_smokeTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        Todo todo \u003d new Todo(\"Mangoes\");","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertIterableEquals(List.of(\"T\", \"-\", \"Mangoes\"), todo.flatPack());","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    public void hydrate_smokeTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"        Todo todo \u003d new Todo(List.of(\"T\", \"-\", \"Bananas\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(\"[T][ ] Bananas\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    public void hydrate_wrongType_illegalArgumentException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"            Todo todo \u003d new Todo(List.of(\"X\", \"-\", \"Oranges\")); /* should throw */","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"            System.out.println(todo);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"            fail(\"Did not throw exception\");","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"            assertTrue(e.getMessage().startsWith(\"Trying to hydrate non-todo as todo: \"));","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"parnikkapore":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"hello","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"deadline return book","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"deadline return book /by 2022-08-30T12:34:56","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"deadline The significance of this date is left as an exercise for the reader /by 2006-01-02T15:04:05","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"deadline This deadline has an invalid date /by nussu","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"event returning interns meeting","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"event returning interns meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"mark ","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"unmark","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"mark 0","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"mark 55","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"unmark 0","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"unmark 55","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"find","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"find return","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"find book return","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"find    date      an        ","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"delete 0","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"parnikkapore":33}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"then","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    rm -r ./data","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"fi","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"parnikkapore":7,"-":36}}]

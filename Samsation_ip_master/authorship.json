[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"# Duke","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"\u003e\"A computer once beat me at chess, but it was no match for me at kick boxing.\" â€“ Emo Philips","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"([source](https://www.brainyquote.com/quotes/emo_philips_128993))","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"Duke frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"- text-based","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"- easy to learn","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"- ~~FAST~~ _SUPER FAST_ to use","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"All you need to do is, ","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"1. download it from [here](https://github.com/Samsation/ip)","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"2. double-click it","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"3. add your tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"4. let it manage your tasks for you :wink:","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"And it is **FREE**!","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"## Features","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"- [x] Managing tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"- [ ] Managing deadlines","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        new Duke(System.getProperty(\"user.home\") + \"/data/duke.txt\").run();","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Samsation":22,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"checkstyle {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Samsation":19,"-":42}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * A constructor for DialogBox","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     * @param img The display image.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"     * A method that flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"    private void flip() {","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"     * A method that retrieves the user\u0027s dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"     * @param img The display image.","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"     * @return A DialogBox with the specified text and image.","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"     * A method that retrieves Duke\u0027s dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"     * @param img The display image.","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"     * @return A DialogBox with the specified text and image.","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"        db.flip();","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"        return db;","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Samsation":84}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * Duke is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    private boolean isTerminated \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     * A constructor for Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     * @param stage The current Stage of the Application.","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public Duke(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        this.ui \u003d new Ui(stage);","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        this.storage \u003d new Storage(System.getProperty(\"user.home\") + \"/data/duke.txt\");","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"     * A method that generates a response from Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"     * @param fullCommand The input command by the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"    public String getResponse(String fullCommand) {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Samsation":49,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":" * DukeException is an unchecked exception that is thrown when Duke does not recognise the input by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"     * A constructor for DukeException.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"     * @param message The error message.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"        super(message);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":20}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Samsation":15}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * A method to start the Duke Application.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     * @param stage The current Stage of the Application.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        duke \u003d new Duke(stage);","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"            stage.show();","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Samsation":40}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * A method to initialize the MainWindow.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"     * A method to set the Duke object.","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"     * @param d The Duke object.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"     * A method that creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"     * appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Samsation":62}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":" * Parser deals with making sense of the user command.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    private enum CommandTag {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * A method that creates a new Command according to the user input.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     * @param inputCommand Input command from the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     * @return A specific-typed Command corresponding to the user input.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"     * @throws DukeException If the user input is unrecognised.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"    public static Command parse(String inputCommand) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"            String[] splitInputCommand \u003d inputCommand.trim().split(\" \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"            CommandTag ct \u003d CommandTag.valueOf(splitInputCommand[0].toUpperCase());","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"            switch (ct) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"            case BYE:","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"                return new ByeCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"            case LIST:","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"            case MARK:","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"                if (splitInputCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"                    throw new DukeException(\"Please enter the task number to mark!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"                    return new MarkCommand(Integer.parseInt(splitInputCommand[1].trim()) - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"                if (splitInputCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"                    throw new DukeException(\"Please enter the task number to unmark!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"                    return new UnmarkCommand(Integer.parseInt(splitInputCommand[1].trim()) - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"            case TODO:","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"                if (splitInputCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"                    return new ToDoCommand(splitInputCommand[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"                if (splitInputCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"                    String[] splitDescriptionArray \u003d splitInputCommand[1].split(\" /by \");","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"                    if (splitDescriptionArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"                        throw new DukeException(\"OOPS!!! The date of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"                    return new DeadlineCommand(splitDescriptionArray[0], LocalDate.parse(splitDescriptionArray[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"            case EVENT:","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"                if (splitInputCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"                    throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"                    String[] splitDescriptionArray \u003d splitInputCommand[1].split(\" /at \");","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"                    if (splitDescriptionArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"                        throw new DukeException(\"OOPS!!! The date of an event cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"                    return new EventCommand(splitDescriptionArray[0], LocalDate.parse(splitDescriptionArray[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"            case DELETE:","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"                if (splitInputCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"                    throw new DukeException(\"Please enter the task number to delete!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"                    return new DeleteCommand(Integer.parseInt(splitInputCommand[1].trim()) - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"            case FIND:","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"                if (splitInputCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"                    throw new DukeException(\"Please enter a keyword!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"                    return new FindCommand(splitInputCommand[1].split(\" \"));","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"            default:","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"                throw new DukeException(\"ERROR...ERROR...WHAT ARE YOU DOING HERE?!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"            throw new DukeException(\"OOPS!!! Please enter your date in the format yyyy-mm-dd!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":106}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * Storage deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * A constructor for Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     * @param filePath The filepath in which the saved data is stored.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     * A method to write the lines from the list into the save file.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * @param dataArrayList ArrayList containing the data to be written into the save file.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    public void save(ArrayList\u003cString\u003e dataArrayList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"            new File(filePath).getParentFile().mkdirs();","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"            for (String data : dataArrayList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"                fw.write(String.format(\"%s%n\", data));","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"            fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"            System.out.println(\"\\n\\tOOPS!!! I\u0027m sorry, but I\u0027m unable to write to file due to: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"     * A method that returns the list read from the save file.","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"     * @return ArrayList containing the data read from the save file.","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"     * @throws FileNotFoundException If the save file does not exist.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"    public ArrayList\u003cString\u003e load() throws FileNotFoundException {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"            data.add(sc.nextLine());","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"        sc.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"        return data;","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":66}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * TaskList contains the list of Task(s) and operations to modify the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     * A constructor for TaskList without saved Task(s).","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"     * A constructor for TaskList with saved Task(s).","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * @param dataArrayList ArrayList containing the data of saved Task(s).","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    public TaskList(ArrayList\u003cString\u003e dataArrayList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        for (String data : dataArrayList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"            tasks.add(Task.loadToTaskList(data));","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"     * A method that returns if the list is empty.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"     * @return Is the list empty.","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"     * A method that returns the size of the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"     * @return Size of the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"     * A method that retrieves a Task from the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"     * @param index Index of the Task to be retrieved, with respect to the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"     * A method that marks a Task from the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"     * @param index Index of the Task to be marked, with respect to the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"    public void markTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"     * A method that un-marks a Task from the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"     * @param index Index of the Task to be un-marked, with respect to the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"        tasks.get(index).markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"     * A method that adds a ToDo to the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"    public void addToDo(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        ToDo toDo \u003d new ToDo(description, false);","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"        tasks.add(toDo);","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"     * A method that adds a Deadline to the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"     * @param date The due date of the Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"    public void addDeadline(String description, LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"        Deadline deadline \u003d new Deadline(description, false, date);","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"     * A method that adds an Event to the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"     * @param date The due date of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"    public void addEvent(String description, LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"Samsation"},"content":"        Event event \u003d new Event(description, false, date);","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"Samsation"},"content":"        tasks.add(event);","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"Samsation"},"content":"     * A method that deletes a Task from the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"Samsation"},"content":"     * @param index Index of the Task to be deleted, with respect to the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"Samsation"},"content":"     * @return The deleted Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"Samsation"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"Samsation"},"content":"        return tasks.remove(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"Samsation"},"content":"     * A method that searches the TaskList for Task(s) with the specified keyword(s).","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"Samsation"},"content":"     * @param keywords The keyword(s) to search for.","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"Samsation"},"content":"     * @return The list of Task(s) found with the specified keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"Samsation"},"content":"    public ArrayList\u003cTask\u003e findTask(String ... keywords) {","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"Samsation"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"Samsation"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"Samsation"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"Samsation"},"content":"                if (task.hasKeyword(keyword)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"Samsation"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"Samsation"},"content":"        return foundTasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"Samsation"},"content":"     * Converts list into data to be saved in Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"Samsation"},"content":"     * @return List containing data of the Task(s) to be saved in Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"Samsation"},"content":"    public ArrayList\u003cString\u003e saveToStorage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"Samsation"},"content":"        ArrayList\u003cString\u003e dataArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"Samsation"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"Samsation"},"content":"            dataArrayList.add(task.saveStringFormat());","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"Samsation"},"content":"        return dataArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":161,"author":{"gitId":"Samsation"},"content":"     * A method that converts the TaskList into its String representation.","lastModifiedDate":"2022-08-22"},{"lineNumber":162,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"Samsation"},"content":"     * @return String representation of the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"Samsation"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"Samsation"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"Samsation"},"content":"            return \"\\tYou currently have no tasks in your list.\";","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"Samsation"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"Samsation"},"content":"            String lst \u003d \"\";","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"Samsation"},"content":"            int size \u003d tasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"Samsation"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"Samsation"},"content":"                if (i \u003d\u003d size - 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"Samsation"},"content":"                    lst +\u003d String.format(\"\\t%d.%s\", i + 1, tasks.get(i));","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"Samsation"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"Samsation"},"content":"                    lst +\u003d String.format(\"\\t%d.%s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"Samsation"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"Samsation"},"content":"            return lst;","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":183}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * Ui deals with interactions with the user","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"public class Ui {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    private Stage stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * A constructor for Ui.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     * @param stage The current Stage of the Application.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    public Ui(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     * A method that returns the farewell message.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * @return The farewell message.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    public String showBye() {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        delay.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        delay.play();","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        return String.format(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     * A method that returns the TaskList display.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"     * @param tasks TaskList to be displayed.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"     * @return The TaskList display.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    public String showList(TaskList tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"        return String.format(\"%s%n%s%n\", \"Here are the task(s) in your list: \", tasks.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"     * A method that returns the mark-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"     * @param task The Task to be marked.","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"     * @return The mark-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"    public String showMark(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        return String.format(\"%s%s%n\", \"Nice! I\u0027ve marked this task as done:\\n\", task);","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"     * A method that returns the un-mark-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"     * @param task The Task to be un-marked.","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"     * @return The un-mark-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    public String showUnmark(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"        return String.format(\"%s%s%n\", \"OK, I\u0027ve marked this task as not done yet:\\n\", task);","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"     * A method that returns the add-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"     * @param size Size of the TaskList after Task has been added.","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"     * @return The add-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"    public String showAdd(Task task, int size) {","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        return String.format(\"%s%s%s%s%s\", \"Got it. I\u0027ve added this task:\\n  \", task, \"\\nNow you have \",","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"                size, \" task(s) in the list.\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"     * A method that returns the delete-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"     * @param task The Task to be deleted.","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"     * @param size Size of the TaskList after Task has been deleted.","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"     * @return The delete-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"    public String showDelete(Task task, int size) {","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"        return String.format(\"%s%s%s%s%s\", \"Noted. I\u0027ve removed this task:\\n  \", task, \"\\nNow you have \",","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"                size, \" task(s) in the list.\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"     * A method that returns the list of Task(s) containing the specified keyword.","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"     * @param foundTasks The list of Task(s) to be displayed.","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"     * @return The list of Task(s) containing the specified keyword.","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"    public String showFind(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"        String lst \u003d \"\";","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"        int size \u003d foundTasks.size();","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"            if (i \u003d\u003d size - 1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"                lst +\u003d String.format(\"\\t%d.%s\", i + 1, foundTasks.get(i));","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"                lst +\u003d String.format(\"\\t%d.%s\\n\", i + 1, foundTasks.get(i));","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"        return String.format(\"%s%n%s%n\", \"Here are the matching task(s) in your list: \", lst);","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":114}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" * ByeCommand is a Command that ends the session with Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"     * A method that displays the farewell message with Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * @return The farewell message.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        return ui.showBye();","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * Command can be executed according to its type.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"     * A method that executes the Command according to its type.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     * @return A response fron Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     * @throws DukeException Depending on type of Command.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":27}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * DeadlineCommand is a Command that creates a new Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    private String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * A constructor for DeadlineCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     * @param date The date of when the Deadline is due.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public DeadlineCommand(String description, LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * A method that creates a new Deadline and adds it to the TaskList, displays the add-message, and updates the","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     * Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"     * @return The add-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        tasks.addDeadline(description, date);","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        storage.save(tasks.saveToStorage());","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        return ui.showAdd(tasks.getTask(size - 1), size);","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":48}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * DeleteCommand is a Command that deletes a Task from the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * A constructor for DeleteCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     * @param index The index of the Task to be deleted, with respect to the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"     * A method that deletes a Task at the specified index, displays the delete-message, and updates the","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     * Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"     * @return The delete-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"     * @throws DukeException If TaskList is empty, or if index specified is out-of-bounds.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"            throw new DukeException(\"You currently have no tasks in your list to delete.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"                Task deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"                int size \u003d tasks.getSize();","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"                storage.save(tasks.saveToStorage());","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"                return ui.showDelete(deletedTask, size);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"                throw new DukeException(\"Task number does not exist!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":54}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * EventCommand is a Command that creates a new Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    private String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * A constructor for EventCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     * @param date The date of when the Event is at.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public EventCommand(String description, LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * A method that creates a new Event and adds it to the TaskList, displays the add-message, and updates the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"     * @return The add-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"        tasks.addEvent(description, date);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        storage.save(tasks.saveToStorage());","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        return ui.showAdd(tasks.getTask(size - 1), size);","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":47}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * FindCommand is a Command that finds Task(s) with a specified keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    private String[] keywords;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     * A constructor for FindCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     * @param keywords The keywords to search for.","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    public FindCommand(String[] keywords) {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * A method that displays the list of Task(s) with the specified keyword(s).","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"     * @return The list of Task(s) containing the specified keyword.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"     * @throws DukeException If there are no matching Task(s) found with the specified keyword(s).","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTask(keywords);","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"            throw new DukeException(\"No matching tasks found!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"            return ui.showFind(foundTasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":49}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" * ListCommand is a Command that displays the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"     * A method that displays the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * @return The TaskList display.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        return ui.showList(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * MarkCommand is a Command that marks a Task in TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * A constructor for MarkCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * @param index The index of the Task to be marked, with respect to the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"     * A method that marks a Task at the specified index, displays the mark-message, and updates the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * @return The mark-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     * @throws DukeException If index specified is out-of-bounds.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"            tasks.markTask(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"            storage.save(tasks.saveToStorage());","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"            return ui.showMark(tasks.getTask(index));","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"            throw new DukeException(\"Task number does not exist!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":46}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" * ToDoCommand is a Command that creates a new ToDo.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    private String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"     * A constructor for ToDoCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"     * A method that creates a new ToDo and adds it to the TaskList, displays the add-message, and updates the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * @return The add-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        tasks.addToDo(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        storage.save(tasks.saveToStorage());","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"        return ui.showAdd(tasks.getTask(size - 1), size);","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":42}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * UnmarkCommand is a Command that un-marks a Task in TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    private int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * A constructor for UnmarkCommand.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * @param index The index of the Task to be un-marked, with respect to the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"     * A method that un-marks a Task at the specified index, displays the un-mark-message, and updates the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"     * @param tasks The TaskList containing the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     * @param ui The Ui dealing with interactions with the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * @param storage The Storage dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * @return The un-mark-message.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     * @throws DukeException If index specified is out-of-bounds.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"            tasks.unmarkTask(index);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"            storage.save(tasks.saveToStorage());","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"            return ui.showUnmark(tasks.getTask(index));","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"            throw new DukeException(\"Task number does not exist!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":46}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" * Deadline is a Task that has a due date.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"    private LocalDate by;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"     * A constructor for Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * @param isDone Has the Deadline been completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * @param by The date of when the Deadline is due.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"     * A method that converts the Deadline into the String format required to be saved in the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * @return String formatted data of the Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    public String saveStringFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        return String.format(\"D | %s | %s\", super.saveStringFormat(), by);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"     * A method that converts the Deadline into its String representation.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        return \"\\t[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Samsation":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" * Event is a Task that has a date.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"    private LocalDate at;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"     * A constructor for Deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     * @param isDone Has the Event been completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * @param at The date of when the Event is.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    public Event(String description, boolean isDone, LocalDate at) {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"     * A method that converts the Event into the String format required to be saved in the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     * @return String formatted data of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    public String saveStringFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        return String.format(\"E | %s | %s\", super.saveStringFormat(), at);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"     * A method that converts the Event into its String representation.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"        return \"\\tE]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Samsation":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" * Task encapsulates a task to be tracked in the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"public class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    private String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"     * A constructor for Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     * @param isDone Has the Task been completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"     * A method that generates the status icon of the Task depending on whether it is done or not.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * @return The status icon.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"     * A method that converts boolean to int.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"     * @return The int representation of whether the Task is done.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Samsation"},"content":"    public int isDoneToInt() {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Samsation"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"Samsation"},"content":"     * A method that sets the Task to be done.","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"Samsation"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"Samsation"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"Samsation"},"content":"     * A method that sets the Task to be undone.","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"Samsation"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"Samsation"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"Samsation"},"content":"     * A method that checks if a Task description contains the specified keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"Samsation"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"Samsation"},"content":"     * @return Is the keyword in the Task description.","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"Samsation"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Samsation"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"Samsation"},"content":"     * A method that creates a specific Task type given the input details.","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"Samsation"},"content":"     * @param data The String formatted data of the Task retrieved from the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"Samsation"},"content":"     * @return A specific type of Task created from the data.","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"Samsation"},"content":"     * @throws DukeException If Task type from the data is unrecognised.","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"Samsation"},"content":"    public static Task loadToTaskList(String data) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"Samsation"},"content":"        String[] dataSplit \u003d data.split(\" \\\\| \", 4);","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"Samsation"},"content":"        char typeOfTask \u003d dataSplit[0].trim().charAt(0);","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"Samsation"},"content":"        boolean isDone \u003d dataSplit[1].equals(\"1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"Samsation"},"content":"        String description \u003d dataSplit[2];","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Samsation"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Samsation"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Samsation"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Samsation"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"Samsation"},"content":"            return new Deadline(description, isDone, LocalDate.parse(dataSplit[3]));","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"Samsation"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"Samsation"},"content":"            return new Event(description, isDone, LocalDate.parse(dataSplit[3]));","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"Samsation"},"content":"        default:","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"Samsation"},"content":"            throw new DukeException(\"OOPS!!! Unrecognised task type!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"Samsation"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"Samsation"},"content":"     * A method that converts the Task into the String format required to be saved in the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"Samsation"},"content":"     * @return String formatted data of the Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"Samsation"},"content":"    public String saveStringFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"Samsation"},"content":"        return String.format(\"%d | %s\", isDoneToInt(), description);","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"Samsation"},"content":"     * A method that converts the Task into its String representation.","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"Samsation"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":111,"author":{"gitId":"Samsation"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":112,"author":{"gitId":"Samsation"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), description);","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":114,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Samsation":114}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":" * ToDo is a Task that has no date.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":" * @author Samsation","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":" * @version CS2103T AY 22/23 Sem 1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"     * A constructor for ToDo.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"     * @param isDone Has the ToDo been completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"     * A method that converts the ToDo into the String format required to be saved in the Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"     * @return String formatted data of the ToDo.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    public String saveStringFormat() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"        return String.format(\"T | %s\", super.saveStringFormat());","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"     * A method that converts the ToDo into its String representation.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"     * @return String representation of the ToDo.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        return \"\\t[T]\" + super.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Samsation":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Samsation":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Samsation":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"    public void deadlineToStringTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"        Deadline d \u003d new Deadline(\"iP Week 3\", false, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[D][ ] iP Week 3 (by: Aug 21 2022)\", d.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    public void markDeadlineTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"        Deadline d \u003d new Deadline(\"iP Week 3\", false, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"        d.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[D][X] iP Week 3 (by: Aug 21 2022)\", d.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    public void unmarkDeadlineTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        Deadline d \u003d new Deadline(\"iP Week 3\", true, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        d.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[D][ ] iP Week 3 (by: Aug 21 2022)\", d.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    public void deadlineSaveStringFormatTest1() {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"        Deadline d \u003d new Deadline(\"iP Week 3\", false, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"D | 0 | iP Week 3 | 2022-08-21\", d.saveStringFormat());","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    public void deadlineSaveStringFormatTest2() {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        Deadline d \u003d new Deadline(\"iP Week 3\", true, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"D | 1 | iP Week 3 | 2022-08-21\", d.saveStringFormat());","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":42}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"public class EventTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"    public void eventToStringTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"        Event e \u003d new Event(\"iP Week 3\", false, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[E][ ] iP Week 3 (at: Aug 21 2022)\", e.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"    public void markEventTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"        Event e \u003d new Event(\"iP Week 3\", false, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"        e.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[E][X] iP Week 3 (at: Aug 21 2022)\", e.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"    public void unmarkEventTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        Event e \u003d new Event(\"iP Week 3\", true, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"        e.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[E][ ] iP Week 3 (at: Aug 21 2022)\", e.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"    public void eventSaveStringFormatTest1() {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"        Event e \u003d new Event(\"iP Week 3\", false, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"E | 0 | iP Week 3 | 2022-08-21\", e.saveStringFormat());","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"    public void eventSaveStringFormatTest2() {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"        Event e \u003d new Event(\"iP Week 3\", true, LocalDate.parse(\"2022-08-21\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"E | 1 | iP Week 3 | 2022-08-21\", e.saveStringFormat());","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":42}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"    public void toDoToStringTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"        ToDo td \u003d new ToDo(\"iP Week 3\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[T][ ] iP Week 3\", td.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"    public void markToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"        ToDo td \u003d new ToDo(\"iP Week 3\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Samsation"},"content":"        td.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[T][X] iP Week 3\", td.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Samsation"},"content":"    public void unmarkToDoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Samsation"},"content":"        ToDo td \u003d new ToDo(\"iP Week 3\", true);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Samsation"},"content":"        td.markAsUndone();","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"[T][ ] iP Week 3\", td.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Samsation"},"content":"    public void toDoSaveStringFormatTest1() {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Samsation"},"content":"        ToDo td \u003d new ToDo(\"iP Week 3\", false);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"T | 0 | iP Week 3\", td.saveStringFormat());","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Samsation"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Samsation"},"content":"    public void toDoSaveStringFormatTest2() {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"Samsation"},"content":"        ToDo td \u003d new ToDo(\"iP Week 3\", true);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"Samsation"},"content":"        assertEquals(\"T | 1 | iP Week 3\", td.saveStringFormat());","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Samsation"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Samsation"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"Samsation"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Samsation":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Samsation"},"content":"mark 2","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Samsation"},"content":"mark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Samsation"},"content":"unmark 2","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Samsation"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Samsation"},"content":"mark","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"Samsation"},"content":"unmark","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"Samsation"},"content":"mark -1","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"Samsation"},"content":"mark test","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"Samsation"},"content":"unmark -1","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"unmark test","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"Samsation"},"content":"deadline","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"Samsation"},"content":"deadline test","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"Samsation"},"content":"todo","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"Samsation"},"content":"event","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"Samsation"},"content":"event test","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"Samsation"},"content":"bye","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Samsation":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Samsation"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Samsation":1,"-":20}}]

{"authorDailyContributionsMap":{"sarrrdin":[{"date":"2022-08-15","commitResults":[{"hash":"74c908009fbf2ee9046cdda80108797276289999","messageTitle":"Completed Level - 1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"2791df52bec3e7c2a72fb41a745036be95e45d61","messageTitle":"Added one new condition, when user inputs \"list\" ; change method when user inputs a task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":2}}},{"hash":"8094ccfb1eeb44f0d5d22bd2d94ab03d47c9e3f9","messageTitle":"Created new Class to store Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"260d334201b447f4e51b561ccc777657a11c9e2e","messageTitle":"Created new Class TaskList to store list of tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"45027dd2d8dc27d6a59072b07f3b603a3ef8aa5f","messageTitle":"added new condition when user inputs list and change method when user input a task","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8db73128482ad1c6dc19b3f5a1e147eb21d18e09","messageTitle":"Added Condition when user input mark or unmark","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"fd0fd095ff3caaf0831a54a301e218bbc1ad91a1","messageTitle":"changed method getTaskList to check on whether task is done or not done, also added method to mark and unmark","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":1}}},{"hash":"ab76f5dcd22f21cd2e31355c4b6bef00fba75c25","messageTitle":"Changed class documentation, added methods to mark and unmark specific tasks in list based on index","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2022-08-16","commitResults":[{"hash":"53b174e74a76a26a9a8216bdf289d11054e9a35c","messageTitle":"Change if else to switch instead for elegance, also set initial and bye message as final.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":23}}},{"hash":"bc07b82fdd636973c6bc73725a692569ca1fa190","messageTitle":"Add additional variable - type of task.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}},{"hash":"0c9afb65c4fa2ea730778ab5dd871e0696abdbec","messageTitle":"Changed implementation such that Task class handles all String output/message based on task type.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":15}}},{"hash":"e90d4d19f8ff3ac8da72a95c9c9bdf937a657c32","messageTitle":"Changed arguments for Task class constructor based on change in task constructor.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"dd69933d08748d970d443f861eff09e207f694c3","messageTitle":"change in message output.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"dbf8eda29ee7490a5bba636e9325d83337de8563","messageTitle":"added a few exception handling,,, will improvise if have time by creating new exception class to handle errors. exception handled include length of list; invalid argument; not sure if description of deadline and event is required.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":5}}},{"hash":"3c11d3acb622a781dc93863e1b86de4b3ae0a2a5","messageTitle":"Changed Mark and unmark method, realise opposite commadn put lol","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"4e7141ccac80cb804af5893993ad2c3fc45955bf","messageTitle":"Edited the mark part where it displays which task is marked/unmarked","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"eb1910979ca6357128db09e1b7121c1b08083130","messageTitle":"added deletion method, at TaskList class too to handle removal of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"4ab6f2b9d04f214bc710a617383c7acaa3dfe28f","messageTitle":"Added new class DukeException to handle Exceptions thrown for illegal argument/non-existent command, index out of range, as well as empty description","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":96,"deletions":36}}},{"hash":"3579937ceaacdbd5cd97687a2fad3d4165c69130","messageTitle":"Added some JavaDocs, improvised Exception handling","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2022-08-20","commitResults":[{"hash":"ea1de83d94641fd871b029ed3eb719ce85e69fc5","messageTitle":"Added test cases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0}}},{"hash":"848cc38d7af6d4ea5de2414830c3f042bd9d7ed0","messageTitle":"Created Enum Class use Enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"159fae242c337c27023deddcec01d3de85613b00","messageTitle":"Add Save File option","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":155,"deletions":86}}},{"hash":"3d72207a60e27a365cfce0bc17e6494f69ccf29c","messageTitle":"Commit Save File Function","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}},{"hash":"ecc8c486697fc2a4302f2487482b7cdc1591302f","messageTitle":"import date function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"ce87ed806b5cbb7ddbb4370a6cd12ba4268fe742","messageTitle":"import datetimeformatter, will edit oop later","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"ca0cc9ea01159e693e29ef6f8b08ab97a0cb16f5","messageTitle":"Changed implementation by for every case, a new instance of the object is created, new class that extends Tasks - Deadline, Event, Todo","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":80,"deletions":27}}}]},{"date":"2022-08-23","commitResults":[{"hash":"5087c1949249b3dfc460bf65f092c5c40d71640a","messageTitle":"Added Command Classes for greater use of OOP","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":10}}},{"hash":"ca033cd7373de6953f884d64264c0184d4e29cb5","messageTitle":"Created Command PAckage, new classes: UI to handle user interface, parser to handle input, changed implementation of main class at Duke.java","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2},"java":{"insertions":564,"deletions":304}}},{"hash":"4027d28b2f48220688d88418a27a55eef0d8d5e6","messageTitle":"divide classes into package, create new package task to store all task classes: Deadline, Event, Todo, Task; made Task abstract class","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":13}}},{"hash":"505fbb84b3bbf5f5ea46f714e85e27fa39fd4245","messageTitle":"in the midst of figuring out how gradle works...will get back to this later","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":0}}}]},{"date":"2022-08-24","commitResults":[{"hash":"6ba8c16f34241986bf5e26c75692ce4dc50fc5ad","messageTitle":"added Gradle into current project","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":46,"deletions":0},"java":{"insertions":37,"deletions":10},"bat":{"insertions":91,"deletions":0}}},{"hash":"bc19a1079aafaf2d48e1d12c65ffff2443411261","messageTitle":"Added JUnit Test Cases, also did abit of java doc while figuring out how this JUnit thing works.","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":228,"deletions":27}}},{"hash":"c35b47b4506c532f08e8ca501b9ae63e15828113","messageTitle":"edited gitignore file to ignore .jar file so wont commit","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"4ebe607d9d0b2dea2bebb7daa97facb3dcf7186d","messageTitle":"tidy up code, remove all unecessary Imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":8}}},{"hash":"b6b790da3740b16428f6f4fcf744f1d77329f509","messageTitle":"Added Javadocs for all Command Classes (did not add last time)","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":4}}},{"hash":"75f742169b7f6156a087c226d5b9f24531ada9c1","messageTitle":"Change method name and switch format to follow java Coding Standard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":54}}},{"hash":"8ae491d62ef1420033b036a1460196148c4af2b7","messageTitle":"Add find function for Duke chatbot","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":1}}}]},{"date":"2022-08-25","commitResults":[{"hash":"a48526ad03380406e544f304158107620586731f","messageTitle":"Fix bug for compilation error in FindCommand after changing printMessage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2022-08-29","commitResults":[{"hash":"5778d55f7936fe85710f9e9e911a867b2871ffa9","messageTitle":"Add varargs for find function, where it can take in a list of string.","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":12}}}]},{"date":"2022-08-30","commitResults":[{"hash":"5539f097250cdec95e090889ca01cc2b4df0c5fd","messageTitle":"Trying out GUI for Duke.","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":200,"deletions":64}}}]},{"date":"2022-09-01","commitResults":[{"hash":"90fd4b56e9dc8e9b897446b4757e8f3d4155bbf6","messageTitle":"Change some minor formatting","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":3},"java":{"insertions":1,"deletions":0}}},{"hash":"31de9e7d1052c68d4da5041e30d874c7ae118306","messageTitle":"Fix final bug on app.","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"048c4367209cc4ba6912d4889b6cbf89c9f25706","messageTitle":"Edit based on comments given by peer","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":25}}}]},{"date":"2022-09-05","commitResults":[{"hash":"6816112f641e277650ccd7d58ef9fd37d812c8e8","messageTitle":"DialogBox: after every command, dialogbox is unable to show full message","messageBody":"DialogBox: DialogBox should display full command and output\n\nThis helps user to fully comprehend what is going on.\n\nGUI cannot show full message due to height and width restrictions,\nhence updated DialogBox to achieve so\n","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":1}}},{"hash":"89286a152f9ac696d68a975bdd7058d6ae2d95c7","messageTitle":"UI: the lines are present even in GUI","messageBody":"The line may be distraction for users when they read the commands.\n\nHaving the line absent may be more user friendly because user can\nclearly read the output of Duke and the progress of their tasks.\n\nLet\u0027s remove the lines included and tidy up the code.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"java":{"insertions":5,"deletions":6}}},{"hash":"47a742aa18138443fd4fdef3701e47308ebedab1","messageTitle":"#Use Assertions in TaskList and Commands The Commands given by user, handled with methods in TaskList deals with requests from user. They may fail if parameters are invalid.","messageBody":"Adding Assertions to check if input index are valid and check for\nassumptions about the algorithm helps runtime to verify if input\nare valid. This helps programmer detect mistake.\n\nLet\u0027s use Assertions to assist in identifying bugs in code.\n","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":5}}},{"hash":"4257f77d7c93e505e12d9415da734ee18963259d","messageTitle":"#Improve Code Quality","messageBody":"Many public classes and method not only do not have the relevant\njavaDocs or comments. They violate the correct Java Coding Standard\ntoo.\n\nEnsuring that these coding styles are checked and rectified helps\nfuture developers comprehend code better as it improves readability.\n\nThe addition and rectification of code makes it easier for future\nimprovements for understanding the logic of algorithm.\n\nLet\u0027s,\n*rectify relevant violations\n*structure code well and add relevant javaDocs\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":51}}},{"hash":"0823f5254980806ffa46328ec09a4afdb68713cb","messageTitle":"Use streams in TaskList specifically findTask method to match keywords.","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":18}}},{"hash":"b477770ffca74dd87b18ea991194a57289e6e279","messageTitle":"#Add extension C-Priority","messageBody":"Users want to be able to set priority of their tasks, so they can\nsee what needs to be done first.\n\nPriority command function is added to Duke, so users can simply\ncommand:\n```\npriority \u003cpriority level\u003e /for \u003cindex of task in list to update\u003e\n```\n(default priority level is 0)\n\nAs number of command increases, HiCommand is added so users can\nsee the list of instructions. Users can simply type\n```\nhi\n```\nto see the functionality of Duke.\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":16}}},{"hash":"43102748c1cc2991ccf1eeb45bc23ff669973096","messageTitle":"Update some exception handling, such as index out of bounds. Check code and tidy up + optimization to help improve readability and sustainability.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":29}}}]},{"date":"2022-09-12","commitResults":[{"hash":"62e7ea2ed980d43cdf145def4f850709a6849db7","messageTitle":"Improve GUI, change chat colour, font and layout","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"fxml":{"insertions":33,"deletions":7},"java":{"insertions":55,"deletions":30}}},{"hash":"98d39e4cf5a3c3c5facc92b46d953fbf651c7444","messageTitle":"Change personality of Duke (different from original instructions). Now is called DukePro and not Duke!","messageBody":"","tags":["A-Personality"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"6ba5ed9e90d9465379cc544b024b275bbcb8254b","messageTitle":"Fix bugs for DeleteCommand, and certain formatting issues for better Ui","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":18,"deletions":21}}}]}]},"authorFileTypeContributionMap":{"sarrrdin":{"java":1482,"md":0,"fxml":63,"sh":0,"bat":91,"gradle":62,"txt":12}},"authorContributionVariance":{"sarrrdin":52687.895},"authorDisplayNameMap":{"sarrrdin":"CS2103-F14-1 CHEW.. JIN"}}

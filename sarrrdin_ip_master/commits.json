{"authorDailyContributionsMap":{"sarrrdin":[{"date":"2022-08-15","commitResults":[{"hash":"74c908009fbf2ee9046cdda80108797276289999","messageTitle":"Completed Level - 1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"2791df52bec3e7c2a72fb41a745036be95e45d61","messageTitle":"Added one new condition, when user inputs \"list\" ; change method when user inputs a task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":2}}},{"hash":"8094ccfb1eeb44f0d5d22bd2d94ab03d47c9e3f9","messageTitle":"Created new Class to store Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"260d334201b447f4e51b561ccc777657a11c9e2e","messageTitle":"Created new Class TaskList to store list of tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"45027dd2d8dc27d6a59072b07f3b603a3ef8aa5f","messageTitle":"added new condition when user inputs list and change method when user input a task","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8db73128482ad1c6dc19b3f5a1e147eb21d18e09","messageTitle":"Added Condition when user input mark or unmark","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"fd0fd095ff3caaf0831a54a301e218bbc1ad91a1","messageTitle":"changed method getTaskList to check on whether task is done or not done, also added method to mark and unmark","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":1}}},{"hash":"ab76f5dcd22f21cd2e31355c4b6bef00fba75c25","messageTitle":"Changed class documentation, added methods to mark and unmark specific tasks in list based on index","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2022-08-16","commitResults":[{"hash":"53b174e74a76a26a9a8216bdf289d11054e9a35c","messageTitle":"Change if else to switch instead for elegance, also set initial and bye message as final.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":23}}},{"hash":"bc07b82fdd636973c6bc73725a692569ca1fa190","messageTitle":"Add additional variable - type of task.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}},{"hash":"0c9afb65c4fa2ea730778ab5dd871e0696abdbec","messageTitle":"Changed implementation such that Task class handles all String output/message based on task type.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":15}}},{"hash":"e90d4d19f8ff3ac8da72a95c9c9bdf937a657c32","messageTitle":"Changed arguments for Task class constructor based on change in task constructor.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"dd69933d08748d970d443f861eff09e207f694c3","messageTitle":"change in message output.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"dbf8eda29ee7490a5bba636e9325d83337de8563","messageTitle":"added a few exception handling,,, will improvise if have time by creating new exception class to handle errors. exception handled include length of list; invalid argument; not sure if description of deadline and event is required.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":5}}},{"hash":"3c11d3acb622a781dc93863e1b86de4b3ae0a2a5","messageTitle":"Changed Mark and unmark method, realise opposite commadn put lol","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"4e7141ccac80cb804af5893993ad2c3fc45955bf","messageTitle":"Edited the mark part where it displays which task is marked/unmarked","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"eb1910979ca6357128db09e1b7121c1b08083130","messageTitle":"added deletion method, at TaskList class too to handle removal of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"4ab6f2b9d04f214bc710a617383c7acaa3dfe28f","messageTitle":"Added new class DukeException to handle Exceptions thrown for illegal argument/non-existent command, index out of range, as well as empty description","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":96,"deletions":36}}},{"hash":"3579937ceaacdbd5cd97687a2fad3d4165c69130","messageTitle":"Added some JavaDocs, improvised Exception handling","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"sarrrdin":{"java":232,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":1}},"authorContributionVariance":{"sarrrdin":13064.64},"authorDisplayNameMap":{"sarrrdin":"CHEW.. JIN"}}

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"plugins {","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"repositories {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"dependencies {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"test {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    testLogging {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        showExceptions true","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        showCauses true","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"6","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"application {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"shadowJar {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"run{","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Qiaoran-M":57}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"# TaskDive User Guide","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"## Introduction","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"### What is TaskDive?","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"__TaskDive__ is a personalized chatbot designed to arrange tasks for users. It is a __Command-Line Software__ that reads in ","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"user input command and prints out real-time response messages. Three types of tasks are supported by TaskDive, ","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"namely todo, deadline and event. Rich task-related features are provided, ","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"a user can use TaskDive to freely add and delete unlimited number of tasks, list tasks, mark tasks as done/undone, ","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"and tag tasks. TaskDive can be started and stopped by user at any time, ","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"all changes to tasks made by user will be automatically stored.","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"### Tasks in TaskDive","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"There are 3 types of tasks supported by TaskDive, as shown in the table below.","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"|  Task Type  | Task Description | Task status |  Tags    |    Start date     |   End date    |","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"|:-----------:|:----------------:|:-----------:|:--------:|:-----------------:|:-------------:|","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"|   1. ToDo   | \u0026#10003;         | \u0026#10003;    | \u0026#10003; |     \u0026#10007;      |    \u0026#10007;   |","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"| 2. Deadline | \u0026#10003;         | \u0026#10003;    | \u0026#10003; |     \u0026#10007;      |    \u0026#10003;   |","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"|  3. Event   | \u0026#10003;         | \u0026#10003;    | \u0026#10003; |     \u0026#10003;      |    \u0026#10003;   |","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"The attributes of a task includes:","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"- __Task description__: a simple one-line description of the task.","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"- __Task status__: done or undone.","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"- __Tags__: a list of tags attached to the task. A tag is a single word that only contains alphabets,","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"  repeated tags are not allowed in the tag list.","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"- __Start/End Date__: the date that the tasks starts/ends.","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"### User command","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"In this user guide, the user command for each feature is of the format `keyword {argument} (optional argument)`, ","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"all command keywords are case-sensitive. __For simplicity, all example commands listed in the feature section are assumed ","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"to be executed sequentially.__ Please see the Features section for more detailed commands.","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"Please take note that if the command entered by user is invalid (E.g.: missing arguments, invalid arguments, ","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"typo in keyword, etc.), __the command will NOT be executed!__","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"TaskDive will print out a message to inform user what\u0027s wrong with the command, and wait for the next user command.","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"1. View user guide information","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"2. Add task","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"   - add Todo task","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"   - add Deadline Task","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"   - add Event task","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"3. Delete task","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"4. Mark task","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"5. Unmark task","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"6. Add tag to task ","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"7. Delete tag in task ","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"8. List tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"   - list all tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"   - list tasks by date","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"   - list tasks by keyword","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"   - list tasks by tag","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"9. Exit chatbot","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"10. Store tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"### `help` -- View User guide information","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"__Command format__: `help`","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"This command prints out important user guide information related to task types, command formatting ","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"and other cautions about user commands. ","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__`help`","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"There are 3 types of task implemented:","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"  1. todo : tasks without any date/time attached to it","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"  2. deadline : tasks that need to be done before a specific date/time","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"  3. event : tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"Below is all the command you can use with the command format specified:","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"  1.  Add todo : todo {task description}","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"  2.  Add deadline : deadline {task description} /by {end date}","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"  3.  Add event : event {task description} /at {start date} to {end date}","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"  4.  Delete task : delete {task index}","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"  5.  Mark task as done : mark {task index}","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"  6.  Mark task as undone : unmark {task index}","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"  7.  Tag task : tag {task index} /with {tag}","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"  8.  Untag task : untag {task index} /with {tag}","lastModifiedDate":"2022-09-14"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"  9.  List all tasks : list","lastModifiedDate":"2022-09-14"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"  10. List unfinished tasks by date : list {date}","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"  11. List tasks by description keyword : list {keyword}","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"  12. List tasks by tag : list #{tag}","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"  13. Exit TaskDive chatbot : bye","lastModifiedDate":"2022-09-14"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"Other Remarks:","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"  1. Acceptable date formats include dd/MM/yyyy, yyyy/MM/dd, yyyy-MM-dd, dd-MM-yyyy, dd MM yyyy, yyyy MM dd.","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"  2. A tag / keyword must be a case-sensitive word containing only alphabets.","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"  3. A task can contain at most 3 tags, adding repeated tags to a task is not allowed.","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"  4. Task list will be auto-saved after bye command and auto-loaded when TaskDive chatbot starts up.","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"### Add Task","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"This feature allows user to add a ToDo/ Deadline/ Event task to TaskDive. ","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"The command format of adding different types of tasks are different, as shown in the next 3 subsections.","lastModifiedDate":"2022-09-14"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"### `todo` - Add ToDo task","lastModifiedDate":"2022-09-14"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `todo {description}`","lastModifiedDate":"2022-09-14"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"This command adds a new task of type ToDo to TaskDive. To ensure this command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"- The description argument CANNOT be empty.","lastModifiedDate":"2022-09-14"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__ ","lastModifiedDate":"2022-09-14"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"1. `todo go shopping`","lastModifiedDate":"2022-09-14"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"2. `todo  `","lastModifiedDate":"2022-09-14"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__ (Assume there are no tasks in TaskDive before this command)","lastModifiedDate":"2022-09-14"},{"lineNumber":110,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":111,"author":{"gitId":"Qiaoran-M"},"content":"   Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-14"},{"lineNumber":112,"author":{"gitId":"Qiaoran-M"},"content":"     [T][ ] go shopping {}","lastModifiedDate":"2022-09-14"},{"lineNumber":113,"author":{"gitId":"Qiaoran-M"},"content":"   ","lastModifiedDate":"2022-09-14"},{"lineNumber":114,"author":{"gitId":"Qiaoran-M"},"content":"   Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-14"},{"lineNumber":115,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":116,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":117,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The description of a todo task cannot be empty.","lastModifiedDate":"2022-09-14"},{"lineNumber":118,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":119,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":120,"author":{"gitId":"Qiaoran-M"},"content":"### `deadline` - Add Deadline task","lastModifiedDate":"2022-09-14"},{"lineNumber":121,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `deadline {description} /by {date}`","lastModifiedDate":"2022-09-14"},{"lineNumber":122,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":123,"author":{"gitId":"Qiaoran-M"},"content":"This command adds a new task of type Deadline to TaskDive. To ensure this command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":124,"author":{"gitId":"Qiaoran-M"},"content":"- The description argument CANNOT be empty.","lastModifiedDate":"2022-09-14"},{"lineNumber":125,"author":{"gitId":"Qiaoran-M"},"content":"- The date must follow one of the following format: `dd/MM/yyyy`, `yyyy/MM/dd`, `yyyy-MM-dd`, ","lastModifiedDate":"2022-09-14"},{"lineNumber":126,"author":{"gitId":"Qiaoran-M"},"content":"`dd-MM-yyyy`, `dd MM yyyy`, `yyyy MM dd`, for example, `2022-09-14`.","lastModifiedDate":"2022-09-14"},{"lineNumber":127,"author":{"gitId":"Qiaoran-M"},"content":"- The year/ month/ day value in the date must be valid, for example, `2022/13/12` is an invalid date. ","lastModifiedDate":"2022-09-14"},{"lineNumber":128,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":129,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__ ","lastModifiedDate":"2022-09-14"},{"lineNumber":130,"author":{"gitId":"Qiaoran-M"},"content":"1. `deadline short quiz /by 2022-09-15`","lastModifiedDate":"2022-09-14"},{"lineNumber":131,"author":{"gitId":"Qiaoran-M"},"content":"2. `deadline short quiz /by 2022 Sep 15`","lastModifiedDate":"2022-09-14"},{"lineNumber":132,"author":{"gitId":"Qiaoran-M"},"content":"3. `deadline short quiz /by 2022-09-34`","lastModifiedDate":"2022-09-14"},{"lineNumber":133,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":134,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":135,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":136,"author":{"gitId":"Qiaoran-M"},"content":"   Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-14"},{"lineNumber":137,"author":{"gitId":"Qiaoran-M"},"content":"     [D][ ] short quiz (by 2022-09-15) {}","lastModifiedDate":"2022-09-14"},{"lineNumber":138,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":139,"author":{"gitId":"Qiaoran-M"},"content":"   Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-14"},{"lineNumber":140,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":141,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":142,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! This is not a proper date format, year, month or day value is invalid.","lastModifiedDate":"2022-09-14"},{"lineNumber":143,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":144,"author":{"gitId":"Qiaoran-M"},"content":"3. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":145,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! This is not a proper date format, year, month or day value is invalid.","lastModifiedDate":"2022-09-14"},{"lineNumber":146,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"Qiaoran-M"},"content":"### `event` - Add Event task","lastModifiedDate":"2022-09-14"},{"lineNumber":149,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `event {description} /at {start date} to {end date}`","lastModifiedDate":"2022-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":151,"author":{"gitId":"Qiaoran-M"},"content":"This command adds a new task of type Event to TaskDive. To ensure this command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":152,"author":{"gitId":"Qiaoran-M"},"content":"- The description argument CANNOT be empty.","lastModifiedDate":"2022-09-14"},{"lineNumber":153,"author":{"gitId":"Qiaoran-M"},"content":"- The date must follow one of the following format: `dd/MM/yyyy`, `yyyy/MM/dd`, `yyyy-MM-dd`,","lastModifiedDate":"2022-09-14"},{"lineNumber":154,"author":{"gitId":"Qiaoran-M"},"content":"  `dd-MM-yyyy`, `dd MM yyyy`, `yyyy MM dd`, for example, `2022-09-14`.","lastModifiedDate":"2022-09-14"},{"lineNumber":155,"author":{"gitId":"Qiaoran-M"},"content":"- The year/ month/ day value in the date must be valid, for example, `2022/13/12` is an invalid date.","lastModifiedDate":"2022-09-14"},{"lineNumber":156,"author":{"gitId":"Qiaoran-M"},"content":"- The start date CANNOT be after end date.","lastModifiedDate":"2022-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__","lastModifiedDate":"2022-09-14"},{"lineNumber":159,"author":{"gitId":"Qiaoran-M"},"content":"1. `event long ideathon /at 2022-09-15 to 2022-10-01`","lastModifiedDate":"2022-09-14"},{"lineNumber":160,"author":{"gitId":"Qiaoran-M"},"content":"2. `event long ideathon /at 2022-09-15 to 2022-09-14`","lastModifiedDate":"2022-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":162,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":163,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":164,"author":{"gitId":"Qiaoran-M"},"content":"   Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-14"},{"lineNumber":165,"author":{"gitId":"Qiaoran-M"},"content":"     [E][ ] long ideathon (at 2022-09-15 - 2022-10-01) {}","lastModifiedDate":"2022-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"Qiaoran-M"},"content":"   Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-14"},{"lineNumber":168,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":169,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":170,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The start date of a Event task cannot be after end date.","lastModifiedDate":"2022-09-14"},{"lineNumber":171,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":172,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":173,"author":{"gitId":"Qiaoran-M"},"content":"### `delete` - Delete task","lastModifiedDate":"2022-09-14"},{"lineNumber":174,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `delete {task index}`","lastModifiedDate":"2022-09-14"},{"lineNumber":175,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":176,"author":{"gitId":"Qiaoran-M"},"content":"This command deletes a task at index entered by user; list command can be used to see all tasks with indexes (explained later).","lastModifiedDate":"2022-09-14"},{"lineNumber":177,"author":{"gitId":"Qiaoran-M"},"content":"To ensure this command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":178,"author":{"gitId":"Qiaoran-M"},"content":"- The index CANNOT be empty. It can ONLY be positive integers from 1 to the last task index.","lastModifiedDate":"2022-09-14"},{"lineNumber":179,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":180,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__","lastModifiedDate":"2022-09-14"},{"lineNumber":181,"author":{"gitId":"Qiaoran-M"},"content":"1. `delete 2` ","lastModifiedDate":"2022-09-14"},{"lineNumber":182,"author":{"gitId":"Qiaoran-M"},"content":"2. `delete  `","lastModifiedDate":"2022-09-14"},{"lineNumber":183,"author":{"gitId":"Qiaoran-M"},"content":"3. `delete 4`","lastModifiedDate":"2022-09-14"},{"lineNumber":184,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":185,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":186,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":187,"author":{"gitId":"Qiaoran-M"},"content":"   Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-14"},{"lineNumber":188,"author":{"gitId":"Qiaoran-M"},"content":"     [D][ ] short quiz (by 2022-09-15)","lastModifiedDate":"2022-09-14"},{"lineNumber":189,"author":{"gitId":"Qiaoran-M"},"content":"   ","lastModifiedDate":"2022-09-14"},{"lineNumber":190,"author":{"gitId":"Qiaoran-M"},"content":"   Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-14"},{"lineNumber":191,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":192,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":193,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The task index of a delete command cannot be empty.","lastModifiedDate":"2022-09-14"},{"lineNumber":194,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":195,"author":{"gitId":"Qiaoran-M"},"content":"3. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":196,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The task index exceeds task list size limit.","lastModifiedDate":"2022-09-14"},{"lineNumber":197,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":198,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":199,"author":{"gitId":"Qiaoran-M"},"content":"### `mark` - Mark task","lastModifiedDate":"2022-09-14"},{"lineNumber":200,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `mark {task index}`","lastModifiedDate":"2022-09-14"},{"lineNumber":201,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":202,"author":{"gitId":"Qiaoran-M"},"content":"This command marks the status of the task at index as done regardless of the previous status of the task (done/ undone).","lastModifiedDate":"2022-09-14"},{"lineNumber":203,"author":{"gitId":"Qiaoran-M"},"content":"List command can be used to see all tasks with indexes (explained later). The status of the task is represented by:","lastModifiedDate":"2022-09-14"},{"lineNumber":204,"author":{"gitId":"Qiaoran-M"},"content":"- `[x]`: task already done","lastModifiedDate":"2022-09-14"},{"lineNumber":205,"author":{"gitId":"Qiaoran-M"},"content":"- `[ ]`: task not done yet","lastModifiedDate":"2022-09-14"},{"lineNumber":206,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":207,"author":{"gitId":"Qiaoran-M"},"content":"To ensure this command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":208,"author":{"gitId":"Qiaoran-M"},"content":"- The index CANNOT be empty. It can ONLY be positive integers from 1 to the last task index.","lastModifiedDate":"2022-09-14"},{"lineNumber":209,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":210,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__","lastModifiedDate":"2022-09-14"},{"lineNumber":211,"author":{"gitId":"Qiaoran-M"},"content":"1. `mark 2`","lastModifiedDate":"2022-09-14"},{"lineNumber":212,"author":{"gitId":"Qiaoran-M"},"content":"2. `mark  5`","lastModifiedDate":"2022-09-14"},{"lineNumber":213,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":214,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__ ","lastModifiedDate":"2022-09-14"},{"lineNumber":215,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":216,"author":{"gitId":"Qiaoran-M"},"content":"   Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-14"},{"lineNumber":217,"author":{"gitId":"Qiaoran-M"},"content":"     [E][X] long ideathon (at 2022-09-15 - 2022-10-01) {}","lastModifiedDate":"2022-09-14"},{"lineNumber":218,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":219,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":220,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The task index exceeds task list size limit.","lastModifiedDate":"2022-09-14"},{"lineNumber":221,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":222,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":223,"author":{"gitId":"Qiaoran-M"},"content":"### `unmark` - Mark task","lastModifiedDate":"2022-09-14"},{"lineNumber":224,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `unmark {task index}`","lastModifiedDate":"2022-09-14"},{"lineNumber":225,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":226,"author":{"gitId":"Qiaoran-M"},"content":"This command marks the status of the task at index as undone regardless of the previous status of the task (done/ undone).","lastModifiedDate":"2022-09-14"},{"lineNumber":227,"author":{"gitId":"Qiaoran-M"},"content":"list command can be used to see all tasks with indexes (explained later).","lastModifiedDate":"2022-09-14"},{"lineNumber":228,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":229,"author":{"gitId":"Qiaoran-M"},"content":"To ensure this command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":230,"author":{"gitId":"Qiaoran-M"},"content":"- The index CANNOT be empty. It can ONLY be positive integers from 1 to the last task index.","lastModifiedDate":"2022-09-14"},{"lineNumber":231,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":232,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__","lastModifiedDate":"2022-09-14"},{"lineNumber":233,"author":{"gitId":"Qiaoran-M"},"content":"1. `unmark 2`","lastModifiedDate":"2022-09-14"},{"lineNumber":234,"author":{"gitId":"Qiaoran-M"},"content":"2. `unmark  5`","lastModifiedDate":"2022-09-14"},{"lineNumber":235,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":236,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__ (Assume only the commands in previous sections are executed)","lastModifiedDate":"2022-09-14"},{"lineNumber":237,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":238,"author":{"gitId":"Qiaoran-M"},"content":"   OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-14"},{"lineNumber":239,"author":{"gitId":"Qiaoran-M"},"content":"     [E][ ] long ideathon (at 2022-09-15 - 2022-10-01) {}","lastModifiedDate":"2022-09-14"},{"lineNumber":240,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":241,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":242,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The task index exceeds task list size limit.","lastModifiedDate":"2022-09-14"},{"lineNumber":243,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2019-07-29"},{"lineNumber":245,"author":{"gitId":"Qiaoran-M"},"content":"### `tag` - Add tag to task","lastModifiedDate":"2022-09-14"},{"lineNumber":246,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `tag {task index} /with {tag}`","lastModifiedDate":"2022-09-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":248,"author":{"gitId":"Qiaoran-M"},"content":"This command adds a tag to the task at index. If the index is invalid/ tag is invalid/ ","lastModifiedDate":"2022-09-14"},{"lineNumber":249,"author":{"gitId":"Qiaoran-M"},"content":"the tag already exists in the task/ the number of tags in task exceeds 3, the command will not be executed.","lastModifiedDate":"2022-09-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"Qiaoran-M"},"content":"To ensure this command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":252,"author":{"gitId":"Qiaoran-M"},"content":"- The index CANNOT be empty. It can ONLY be positive integers from 1 to the last task index.","lastModifiedDate":"2022-09-14"},{"lineNumber":253,"author":{"gitId":"Qiaoran-M"},"content":"- The tag is a single word __only containing alphabets__; it should be new (i.e. different from all tags existing in the task).","lastModifiedDate":"2022-09-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":255,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__","lastModifiedDate":"2022-09-14"},{"lineNumber":256,"author":{"gitId":"Qiaoran-M"},"content":"1. `tag 2 /with important`","lastModifiedDate":"2022-09-14"},{"lineNumber":257,"author":{"gitId":"Qiaoran-M"},"content":"2. `tag 2 /with important` (executed after command 1)","lastModifiedDate":"2022-09-14"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":259,"author":{"gitId":"Qiaoran-M"},"content":"These 2 tag commands are executed after command 2 and before command 3:","lastModifiedDate":"2022-09-14"},{"lineNumber":260,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":261,"author":{"gitId":"Qiaoran-M"},"content":"tag 2 /with fun","lastModifiedDate":"2022-09-14"},{"lineNumber":262,"author":{"gitId":"Qiaoran-M"},"content":"tag 2 /with team","lastModifiedDate":"2022-09-14"},{"lineNumber":263,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":264,"author":{"gitId":"Qiaoran-M"},"content":"The task no. 2 now has 3 tags: {important, fun, team}.","lastModifiedDate":"2022-09-14"},{"lineNumber":265,"author":{"gitId":"Qiaoran-M"},"content":"3. `tag 2 /with long`","lastModifiedDate":"2022-09-14"},{"lineNumber":266,"author":{"gitId":"Qiaoran-M"},"content":"4. `tag 1 with 2day`","lastModifiedDate":"2022-09-14"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":268,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":269,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":270,"author":{"gitId":"Qiaoran-M"},"content":"   OK, I\u0027ve added this tag important for the task:","lastModifiedDate":"2022-09-14"},{"lineNumber":271,"author":{"gitId":"Qiaoran-M"},"content":"     [E][ ] long ideathon (at 2022-09-15 - 2022-10-01) {important}","lastModifiedDate":"2022-09-14"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2021-07-17"},{"lineNumber":273,"author":{"gitId":"Qiaoran-M"},"content":"   Now the task have 1 tags: {important}","lastModifiedDate":"2022-09-14"},{"lineNumber":274,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":275,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":276,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The tag important is already in the task tag list, same tag cannot be added again.","lastModifiedDate":"2022-09-14"},{"lineNumber":277,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":278,"author":{"gitId":"Qiaoran-M"},"content":"3. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":279,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The tag cannot be added because a task cannot have more than 3 tags.","lastModifiedDate":"2022-09-14"},{"lineNumber":280,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-07-17"},{"lineNumber":281,"author":{"gitId":"Qiaoran-M"},"content":"4. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":282,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The tag can only contain alphabets and it cannot be empty.","lastModifiedDate":"2022-09-14"},{"lineNumber":283,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-07-17"},{"lineNumber":284,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":285,"author":{"gitId":"Qiaoran-M"},"content":"### `untag` - Delete tag in task","lastModifiedDate":"2022-09-14"},{"lineNumber":286,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `untag {task index} /with {tag}`","lastModifiedDate":"2022-09-14"},{"lineNumber":287,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":288,"author":{"gitId":"Qiaoran-M"},"content":"This command deletes a tag to the task at index. If the index is invalid/ tag is invalid/","lastModifiedDate":"2022-09-14"},{"lineNumber":289,"author":{"gitId":"Qiaoran-M"},"content":"the tag doesn\u0027t exist in the task, the command will not be executed.","lastModifiedDate":"2022-09-14"},{"lineNumber":290,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":291,"author":{"gitId":"Qiaoran-M"},"content":"To ensure this command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":292,"author":{"gitId":"Qiaoran-M"},"content":"- The index CANNOT be empty. It can ONLY be positive integers from 1 to the last task index.","lastModifiedDate":"2022-09-14"},{"lineNumber":293,"author":{"gitId":"Qiaoran-M"},"content":"- The tag is a single word __only containing alphabets__; it should already exist in the task so that it can be deleted.","lastModifiedDate":"2022-09-14"},{"lineNumber":294,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":295,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__","lastModifiedDate":"2022-09-14"},{"lineNumber":296,"author":{"gitId":"Qiaoran-M"},"content":"1. `untag 2 /with team`","lastModifiedDate":"2022-09-14"},{"lineNumber":297,"author":{"gitId":"Qiaoran-M"},"content":"2. `untag 2 /w fun`","lastModifiedDate":"2022-09-14"},{"lineNumber":298,"author":{"gitId":"Qiaoran-M"},"content":"3. `untag 1 /with fun`","lastModifiedDate":"2022-09-14"},{"lineNumber":299,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":300,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":301,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":302,"author":{"gitId":"Qiaoran-M"},"content":"   OK, I\u0027ve deleted this tag team for the task:","lastModifiedDate":"2022-09-14"},{"lineNumber":303,"author":{"gitId":"Qiaoran-M"},"content":"     [E][ ] long ideathon (at 2022-09-15 - 2022-10-01) {important,fun}","lastModifiedDate":"2022-09-14"},{"lineNumber":304,"author":{"gitId":"Qiaoran-M"},"content":"   ","lastModifiedDate":"2022-09-14"},{"lineNumber":305,"author":{"gitId":"Qiaoran-M"},"content":"   Now the task have 2 tags: {important,fun}","lastModifiedDate":"2022-09-14"},{"lineNumber":306,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":307,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":308,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The command is not properly formatted. Please follow the format: tag {task index} /with {tag}.","lastModifiedDate":"2022-09-14"},{"lineNumber":309,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":310,"author":{"gitId":"Qiaoran-M"},"content":"3. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":311,"author":{"gitId":"Qiaoran-M"},"content":"   ☹ OOPS!!! The tag fun is not in the task tag list, so it cannot be deleted.","lastModifiedDate":"2022-09-14"},{"lineNumber":312,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":314,"author":{"gitId":"Qiaoran-M"},"content":"### List tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":315,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `list (date) (keyword) (#tag)`","lastModifiedDate":"2022-09-14"},{"lineNumber":316,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":317,"author":{"gitId":"Qiaoran-M"},"content":"This command lists tasks by the argument entered. The task index, status, description, date and tags are shown for each task in the list.","lastModifiedDate":"2022-09-14"},{"lineNumber":318,"author":{"gitId":"Qiaoran-M"},"content":"Please take note that there should be __\u003c\u003d 1 optional argument__ presented in the command, ","lastModifiedDate":"2022-09-14"},{"lineNumber":319,"author":{"gitId":"Qiaoran-M"},"content":"the details of the optional arguments are explained in the next 4 subsections.","lastModifiedDate":"2022-09-14"},{"lineNumber":320,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":321,"author":{"gitId":"Qiaoran-M"},"content":"### `list` - List all tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":322,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `list`","lastModifiedDate":"2022-09-14"},{"lineNumber":323,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":324,"author":{"gitId":"Qiaoran-M"},"content":"This command lists all tasks in TaskDive.","lastModifiedDate":"2022-09-14"},{"lineNumber":325,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":326,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__","lastModifiedDate":"2022-09-14"},{"lineNumber":327,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":328,"author":{"gitId":"Qiaoran-M"},"content":"To make the list longer, 3 other tasks are added after all previous commands.","lastModifiedDate":"2022-09-14"},{"lineNumber":329,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":330,"author":{"gitId":"Qiaoran-M"},"content":"event finish CS2103 project /at 2022-09-12 to 2022-09-16","lastModifiedDate":"2022-09-14"},{"lineNumber":331,"author":{"gitId":"Qiaoran-M"},"content":"deadline DSA3102 pop quiz /by 2022-09-14","lastModifiedDate":"2022-09-14"},{"lineNumber":332,"author":{"gitId":"Qiaoran-M"},"content":"todo team project startup","lastModifiedDate":"2022-09-14"},{"lineNumber":333,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":335,"author":{"gitId":"Qiaoran-M"},"content":"list","lastModifiedDate":"2022-09-14"},{"lineNumber":336,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":337,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":338,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__ ","lastModifiedDate":"2022-09-14"},{"lineNumber":339,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":340,"author":{"gitId":"Qiaoran-M"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-14"},{"lineNumber":341,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":342,"author":{"gitId":"Qiaoran-M"},"content":"1.[T][ ] go shopping {}","lastModifiedDate":"2022-09-14"},{"lineNumber":343,"author":{"gitId":"Qiaoran-M"},"content":"2.[E][ ] long ideathon (at 2022-09-15 - 2022-10-01) {important,fun}","lastModifiedDate":"2022-09-14"},{"lineNumber":344,"author":{"gitId":"Qiaoran-M"},"content":"3.[E][ ] finish CS2103 project (at 2022-09-12 - 2022-09-16) {}","lastModifiedDate":"2022-09-14"},{"lineNumber":345,"author":{"gitId":"Qiaoran-M"},"content":"4.[D][ ] DSA3102 pop quiz (by 2022-09-14) {}","lastModifiedDate":"2022-09-14"},{"lineNumber":346,"author":{"gitId":"Qiaoran-M"},"content":"5.[T][ ] team project startup {}","lastModifiedDate":"2022-09-14"},{"lineNumber":347,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":348,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":349,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":350,"author":{"gitId":"Qiaoran-M"},"content":"### `list` - List tasks by date","lastModifiedDate":"2022-09-14"},{"lineNumber":351,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `list {date}`","lastModifiedDate":"2022-09-14"},{"lineNumber":352,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":353,"author":{"gitId":"Qiaoran-M"},"content":"This command lists the  __unfinished__ tasks in TaskDive that satisfy the following conditions:","lastModifiedDate":"2022-09-14"},{"lineNumber":354,"author":{"gitId":"Qiaoran-M"},"content":"- The task is a Deadline task, with its end date later than /equal to the date entered by user. ","lastModifiedDate":"2022-09-14"},{"lineNumber":355,"author":{"gitId":"Qiaoran-M"},"content":"- The task is a Event task, with the date entered by user between start date and end date inclusively.","lastModifiedDate":"2022-09-14"},{"lineNumber":356,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":357,"author":{"gitId":"Qiaoran-M"},"content":"To ensure the command is valid, the date format must follow the rules in Add deadline task section.","lastModifiedDate":"2022-09-14"},{"lineNumber":358,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":359,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__ `list 2022-09-15`","lastModifiedDate":"2022-09-14"},{"lineNumber":360,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":361,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":362,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":363,"author":{"gitId":"Qiaoran-M"},"content":"Here are unfinished tasks on this date in your list:","lastModifiedDate":"2022-09-14"},{"lineNumber":364,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":365,"author":{"gitId":"Qiaoran-M"},"content":"1.[E][ ] long ideathon (at 2022-09-15 - 2022-10-01) {important,fun}","lastModifiedDate":"2022-09-14"},{"lineNumber":366,"author":{"gitId":"Qiaoran-M"},"content":"2.[E][ ] finish CS2103 project (at 2022-09-12 - 2022-09-16) {}","lastModifiedDate":"2022-09-14"},{"lineNumber":367,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":368,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":369,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":370,"author":{"gitId":"Qiaoran-M"},"content":"### `list` - List tasks by keyword","lastModifiedDate":"2022-09-14"},{"lineNumber":371,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `list {keyword}`","lastModifiedDate":"2022-09-14"},{"lineNumber":372,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":373,"author":{"gitId":"Qiaoran-M"},"content":"This command lists the tasks in TaskDive whose task description contains the keyword. To ensure the command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":374,"author":{"gitId":"Qiaoran-M"},"content":"- The keyword CANNOT be empty, otherwise TaskDive recognize it as a `list` command that lists all tasks. ","lastModifiedDate":"2022-09-14"},{"lineNumber":375,"author":{"gitId":"Qiaoran-M"},"content":"- The keyword is a single word __only containing alphabets__.","lastModifiedDate":"2022-09-14"},{"lineNumber":376,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":377,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__ ","lastModifiedDate":"2022-09-14"},{"lineNumber":378,"author":{"gitId":"Qiaoran-M"},"content":"1. `list project`","lastModifiedDate":"2022-09-14"},{"lineNumber":379,"author":{"gitId":"Qiaoran-M"},"content":"2. `list test`","lastModifiedDate":"2022-09-14"},{"lineNumber":380,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":381,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":382,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":383,"author":{"gitId":"Qiaoran-M"},"content":"   Here are the matching tasks in your list:","lastModifiedDate":"2022-09-14"},{"lineNumber":384,"author":{"gitId":"Qiaoran-M"},"content":"   ","lastModifiedDate":"2022-09-14"},{"lineNumber":385,"author":{"gitId":"Qiaoran-M"},"content":"   1.[E][ ] finish CS2103 project (at 2022-09-12 - 2022-09-16) {}","lastModifiedDate":"2022-09-14"},{"lineNumber":386,"author":{"gitId":"Qiaoran-M"},"content":"   2.[T][ ] team project startup {}","lastModifiedDate":"2022-09-14"},{"lineNumber":387,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":388,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":389,"author":{"gitId":"Qiaoran-M"},"content":"   Here are the matching tasks in your list:","lastModifiedDate":"2022-09-14"},{"lineNumber":390,"author":{"gitId":"Qiaoran-M"},"content":"   ","lastModifiedDate":"2022-09-14"},{"lineNumber":391,"author":{"gitId":"Qiaoran-M"},"content":"   Oops! There\u0027s no matching tasks found :-(","lastModifiedDate":"2022-09-14"},{"lineNumber":392,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":393,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":394,"author":{"gitId":"Qiaoran-M"},"content":"### `list` - List tasks by tag","lastModifiedDate":"2022-09-14"},{"lineNumber":395,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `list #{tag}`","lastModifiedDate":"2022-09-14"},{"lineNumber":396,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":397,"author":{"gitId":"Qiaoran-M"},"content":"This command lists the tasks in TaskDive that has the tag entered by user. To ensure the command is valid:","lastModifiedDate":"2022-09-14"},{"lineNumber":398,"author":{"gitId":"Qiaoran-M"},"content":"- The tag CANNOT be empty, otherwise TaskDive recognize it as a `list` command that lists all tasks.","lastModifiedDate":"2022-09-14"},{"lineNumber":399,"author":{"gitId":"Qiaoran-M"},"content":"- The tag is a single word __only containing alphabets__.","lastModifiedDate":"2022-09-14"},{"lineNumber":400,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":401,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__","lastModifiedDate":"2022-09-14"},{"lineNumber":402,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":403,"author":{"gitId":"Qiaoran-M"},"content":"To make the list output longer, these commands are executed before command 1 and 2.","lastModifiedDate":"2022-09-14"},{"lineNumber":404,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":405,"author":{"gitId":"Qiaoran-M"},"content":"tag 3 /with important","lastModifiedDate":"2022-09-14"},{"lineNumber":406,"author":{"gitId":"Qiaoran-M"},"content":"tag 5 /with important","lastModifiedDate":"2022-09-14"},{"lineNumber":407,"author":{"gitId":"Qiaoran-M"},"content":"tag 4 /with short","lastModifiedDate":"2022-09-14"},{"lineNumber":408,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":409,"author":{"gitId":"Qiaoran-M"},"content":"1. `list #important`","lastModifiedDate":"2022-09-14"},{"lineNumber":410,"author":{"gitId":"Qiaoran-M"},"content":"2. `list #long`","lastModifiedDate":"2022-09-14"},{"lineNumber":411,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":412,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":413,"author":{"gitId":"Qiaoran-M"},"content":"1. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":414,"author":{"gitId":"Qiaoran-M"},"content":"   Here are the matching tasks in your list:","lastModifiedDate":"2022-09-14"},{"lineNumber":415,"author":{"gitId":"Qiaoran-M"},"content":"   ","lastModifiedDate":"2022-09-14"},{"lineNumber":416,"author":{"gitId":"Qiaoran-M"},"content":"   1.[E][ ] long ideathon (at 2022-09-15 - 2022-10-01) {important,fun}","lastModifiedDate":"2022-09-14"},{"lineNumber":417,"author":{"gitId":"Qiaoran-M"},"content":"   2.[E][ ] finish CS2103 project (at 2022-09-12 - 2022-09-16) {important}","lastModifiedDate":"2022-09-14"},{"lineNumber":418,"author":{"gitId":"Qiaoran-M"},"content":"   3.[T][ ] team project startup {important}","lastModifiedDate":"2022-09-14"},{"lineNumber":419,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":420,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":421,"author":{"gitId":"Qiaoran-M"},"content":"2. ```","lastModifiedDate":"2022-09-14"},{"lineNumber":422,"author":{"gitId":"Qiaoran-M"},"content":"   Here are the matching tasks in your list:","lastModifiedDate":"2022-09-14"},{"lineNumber":423,"author":{"gitId":"Qiaoran-M"},"content":"   ","lastModifiedDate":"2022-09-14"},{"lineNumber":424,"author":{"gitId":"Qiaoran-M"},"content":"   Oops! There\u0027s no matching tasks found :-(","lastModifiedDate":"2022-09-14"},{"lineNumber":425,"author":{"gitId":"Qiaoran-M"},"content":"   ```","lastModifiedDate":"2022-09-14"},{"lineNumber":426,"author":{"gitId":"Qiaoran-M"},"content":"   ","lastModifiedDate":"2022-09-14"},{"lineNumber":427,"author":{"gitId":"Qiaoran-M"},"content":"### `bye` - Exit TaskDive","lastModifiedDate":"2022-09-14"},{"lineNumber":428,"author":{"gitId":"Qiaoran-M"},"content":"__Command format:__ `bye`","lastModifiedDate":"2022-09-14"},{"lineNumber":429,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":430,"author":{"gitId":"Qiaoran-M"},"content":"This command allows user to exit TaskDive chatbot. Upon entering `bye` command, TaskDive prints out exiting message, ","lastModifiedDate":"2022-09-14"},{"lineNumber":431,"author":{"gitId":"Qiaoran-M"},"content":"and asks user to type `yes` to confirm exit, after user types `yes`, TaskDive stops itself. ","lastModifiedDate":"2022-09-14"},{"lineNumber":432,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":433,"author":{"gitId":"Qiaoran-M"},"content":"Please take note that if a user doesn\u0027t enter `yes` after he/she enters `bye` command, ","lastModifiedDate":"2022-09-14"},{"lineNumber":434,"author":{"gitId":"Qiaoran-M"},"content":"TaskDive will not recognize the command, and it will not stop itself.","lastModifiedDate":"2022-09-14"},{"lineNumber":435,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":436,"author":{"gitId":"Qiaoran-M"},"content":"__Example of usage:__`bye`","lastModifiedDate":"2022-09-14"},{"lineNumber":437,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":438,"author":{"gitId":"Qiaoran-M"},"content":"__Expected outcome:__","lastModifiedDate":"2022-09-14"},{"lineNumber":439,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":440,"author":{"gitId":"Qiaoran-M"},"content":"TaskDive Chatbot will stop, all previous tasks will be auto-saved :D","lastModifiedDate":"2022-09-14"},{"lineNumber":441,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":442,"author":{"gitId":"Qiaoran-M"},"content":"Bye, Hope to see you again soon!","lastModifiedDate":"2022-09-14"},{"lineNumber":443,"author":{"gitId":"Qiaoran-M"},"content":"Please type \u0027yes\u0027 to confirm exit or close the window.","lastModifiedDate":"2022-09-14"},{"lineNumber":444,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":445,"author":{"gitId":"Qiaoran-M"},"content":"- user types `yes`: TaskDive chatbot exits.","lastModifiedDate":"2022-09-14"},{"lineNumber":446,"author":{"gitId":"Qiaoran-M"},"content":"- user types other random command, e.g. `no`: TaskDive prints out `☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(`","lastModifiedDate":"2022-09-14"},{"lineNumber":447,"author":{"gitId":"Qiaoran-M"},"content":" ","lastModifiedDate":"2022-09-14"},{"lineNumber":448,"author":{"gitId":"Qiaoran-M"},"content":"### Store tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":449,"author":{"gitId":"Qiaoran-M"},"content":"All tasks added to TaskDive are stored as a list of tasks in TaskDive storage. TaskDive auto-saves the tasks ","lastModifiedDate":"2022-09-14"},{"lineNumber":450,"author":{"gitId":"Qiaoran-M"},"content":"immediately after a change is made (i.e.: user enters add/delete/mark/tag related commands), the list of tasks are stored in a ","lastModifiedDate":"2022-09-14"},{"lineNumber":451,"author":{"gitId":"Qiaoran-M"},"content":"text file in the user\u0027s local computer. ","lastModifiedDate":"2022-09-14"},{"lineNumber":452,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":453,"author":{"gitId":"Qiaoran-M"},"content":"The text file directory relatively to TaskDive is `data/Duke.txt`. To customize the text file path for TaskDive storage, a user can change the ","lastModifiedDate":"2022-09-14"},{"lineNumber":454,"author":{"gitId":"Qiaoran-M"},"content":"filepath in the following code in `src/main/java/Main.java` file.","lastModifiedDate":"2022-09-14"},{"lineNumber":455,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":456,"author":{"gitId":"Qiaoran-M"},"content":"private Duke duke \u003d new Duke(\"data/Duke.txt\");","lastModifiedDate":"2022-09-14"},{"lineNumber":457,"author":{"gitId":"Qiaoran-M"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":458,"author":{"gitId":"Qiaoran-M"},"content":"## GUI","lastModifiedDate":"2022-09-14"},{"lineNumber":459,"author":{"gitId":"Qiaoran-M"},"content":"Please refer to `Ui.png` in `docs` folder for sample GUI of TaskDive. Some customizable GUI elements are listed below: ","lastModifiedDate":"2022-09-14"},{"lineNumber":460,"author":{"gitId":"Qiaoran-M"},"content":"- Change background picture: replace `src/main/resources/image/background.png` with a new background image.","lastModifiedDate":"2022-09-14"},{"lineNumber":461,"author":{"gitId":"Qiaoran-M"},"content":"- Change user profile photo: replace `src/main/resources/image/DUser.png` with a new user profile image.","lastModifiedDate":"2022-09-14"},{"lineNumber":462,"author":{"gitId":"Qiaoran-M"},"content":"- Change TaskDive profile picture: replace `src/main/resources/image/DDuke.png` with a new TaskDive profile image.","lastModifiedDate":"2022-09-14"},{"lineNumber":463,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":464,"author":{"gitId":"Qiaoran-M"},"content":"Please take note that the name of the new picture must remain the SAME as the previous picture.","lastModifiedDate":"2022-09-14"},{"lineNumber":465,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":466,"author":{"gitId":"Qiaoran-M"},"content":"## End of User Guide. Enjoy using TaskDive to arrange your tasks :-D","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Qiaoran-M":436,"-":30}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"goto fail","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"goto fail","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":":init","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":":win9xME_args","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":":execute","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":":end","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":":fail","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"exit /b 1","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":":mainEnd","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":":omega","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Qiaoran-M":103}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a TaskDive chatbot object that stores a task list,","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":" * users can add / delete / mark / unmark / list tasks using this chatbot.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    private boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is Duke object constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * A Duke object contains ui, parser, storage and tasklist objects and a boolean attribute isExit.","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * isExit represents the chatbot exit status (true: ready to exit; false: running)","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        tasks \u003d new TaskList(storage.load()); //exception handling ?","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"        isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a getter function, it returns the chatbot exit status (isExit attribute).","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     * @return chatbot exit status (isExit attribute).","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean getExitStatus() {","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        return isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a list of String containing chatbot response ui.","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"     * getResponse function make sense of user input command string, perform command and get response ui texts.","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"     * @param input","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"     * @return list of strings containing chatbot response ui texts.","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e getResponse(String input) {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        if (!input.equals(\"yes\")) isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"            String line \u003d input.trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"            String[] parsedCommand \u003d parser.parseCommand(line, tasks).split(\" \", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"            assert parsedCommand.length \u003e\u003d 1 : \"Parsed command length is incorrect.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"            if (parsedCommand[0].equals(\"mark\") || parsedCommand[0].equals(\"unmark\")","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"                    || parsedCommand[0].equals(\"todo\") || parsedCommand[0].equals(\"event\")","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"                    || parsedCommand[0].equals(\"deadline\") || parsedCommand[0].equals(\"delete\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"                return ui.printAddCommandUi(parsedCommand[0], parsedCommand[1], tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"            } else if (parsedCommand[0].equals(\"tag\") || parsedCommand[0].equals(\"untag\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"                return ui.printTagCommandUi(parsedCommand[0], parsedCommand[1].split(\" \")[0],","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"                        parsedCommand[1].split(\" \")[1], tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"            }else if (parsedCommand[0].equals(\"list\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"                return ui.printListCommandUi(parsedCommand[0], parsedCommand[1], tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"            } else if (parsedCommand[0].equals(\"help\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"                return ui.printDukeInfo();","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"            } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"                isExit \u003d true;","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"                return ui.printEndingUi();","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"Qiaoran-M":74,"-":1}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":" * A GUI for TaskDive using FXML.","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    private Duke duke \u003d new Duke(\"data/Duke.txt\");","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * This is the method to start TaskDive chatbot GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * @param stage the primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * Applications may create other stages, if needed, but they will not be primary stages.","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"            stage.setTitle(\"TaskDive\");","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"            stage.show();","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"            e.getCause().printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"Qiaoran-M":38}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import duke.command.TagCommand;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.*;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":" * Represents TaskDive chatbot parser that make sense of user commands.","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":" * If there is any invalid user input detected, the parser returns the error message (exception)","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":" * instead of the parsed command","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a LocalDate object parsed from a string containing date.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"     * If the string date format is not accepted, exception is thrown.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"     * @param str a string containing a date.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"     * @return LocalDate object.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException If the string date format is not accepted by TaskDive chatbot.","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    public static LocalDate parseDate(String str) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        String time \u003d str.trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"            if (time.matches(\"([0-9]{2})/([0-9]{2})/([0-9]{4})\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"                return LocalDate.parse(time, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"            } else if (time.matches(\"([0-9]{4})/([0-9]{2})/([0-9]{2})\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"                return LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"            } else if (time.matches(\"([0-9]{2})-([0-9]{2})-([0-9]{4})\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"                return LocalDate.parse(time, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"            } else if (time.matches(\"([0-9]{4})-([0-9]{2})-([0-9]{2})\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"                return LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"            } else if (time.matches(\"([0-9]{4}) ([0-9]{2}) ([0-9]{2})\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"                return LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy MM dd\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"            } else if (time.matches(\"([0-9]{2}) ([0-9]{2}) ([0-9]{4})\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"                return LocalDate.parse(time, DateTimeFormatter.ofPattern(\"dd MM yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"                throw new DukeException(INVALID_DATE_FORMAT, \"\");","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_DATE, \"\");","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"     * Checks the validity of user command type, throws DukeException if the command type","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"     * is invalid or required parameter is missing.","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskString a String array containing a user command, the first element in the array is the command type","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException If the command is regarded invalid/incomplete by TaskDive chatbot.","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"    public void parseCommandType(String[] taskString) throws duke.exception.DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        String type \u003d taskString[0];","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"        if (taskString.length \u003d\u003d 1 \u0026\u0026 (type.equals(\"todo\") || type.equals(\"deadline\") || type.equals(\"event\"))) {","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(MISSING_DESCRIPTION, type);","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (taskString.length \u003d\u003d 1 \u0026\u0026 (type.equals(\"mark\") || type.equals(\"unmark\") || type.equals(\"delete\")","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"                || type.equals(\"tag\") || type.equals(\"untag\"))) {","lastModifiedDate":"2022-09-11"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(MISSING_INDEX, type);","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (taskString.length \u003d\u003d 1 \u0026\u0026 !type.equals(\"list\") \u0026\u0026 !type.equals(\"bye\") \u0026\u0026 !type.equals(\"help\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_COMMAND_TYPE, type);","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns simplified command string parsed from a user command.","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"     * If the command is invalid, exception is thrown.","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"     * @param line a string containing a user command.","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList a List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"     * @return command string understandable by other methods/classes.","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException If the command is regarded invalid/incomplete by TaskDive chatbot.","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"    public String parseCommand(String line, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"        String[] taskString \u003d line.split(\" \", 2); //split by first white space","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"        parseCommandType(taskString);","lastModifiedDate":"2022-09-10"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"        String taskType \u003d taskString[0].trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"            return new AddTodoCommand(taskList, taskString[1].trim()).execute();","lastModifiedDate":"2022-09-11"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"            return new AddDeadlineCommand(taskList, taskString[1].trim()).execute();","lastModifiedDate":"2022-09-11"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"            return new AddEventCommand(taskList, taskString[1].trim()).execute();","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (taskType.equals(\"list\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"            if (taskString.length \u003d\u003d 1 || taskString[1].trim().equals(\"\")) { //list all tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"                return \"list 0\";","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"            } else {","lastModifiedDate":"2022-09-12"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"                return new ListCommand(taskList, taskString[1].trim()).execute(); // list by date/ keyword/ tag","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (taskType.equals(\"mark\") || taskType.equals(\"unmark\") || taskType.equals(\"delete\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"            return new MarkCommand(taskList, taskType, taskString[1].trim()).execute();","lastModifiedDate":"2022-09-10"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (taskType.equals(\"tag\") || taskType.equals(\"untag\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"            return new TagCommand(taskList, taskType, taskString[1].trim()).execute();","lastModifiedDate":"2022-09-11"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"        }else if (taskType.equals(\"bye\") || taskType.equals(\"help\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"            return taskType;","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_COMMAND_TYPE, \"\");","lastModifiedDate":"2022-09-10"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Qiaoran-M":111}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a storage for the task list, provides save/load task list methods.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":" * Task list is saved in / loaded from specified file path.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    private String filepath;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is Storage object constructor that creates task list storage.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * @param filepath path to the file that stores the task list","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"     * Saves the task list in the location indicated by filepath as a txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"     * The task list store the status (done/undone), task type, description, date and tag information of each task.","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"        int i \u003d filepath.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"        File dir \u003d new File(filepath.substring(0, i));","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"            dir.mkdirs();","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"            File f \u003d new File(filepath);","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"            if (!f.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"                f.createNewFile();","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"            fw.write(taskList.saveTaskList());","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"            fw.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"            new Ui().showSavingError();","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"     * Loads the task list from the location indicated by filepath.","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"     * If the filepath doesn\u0027t exist, empty task list is loaded.","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"     * @return task list in the storage.","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"    public TaskList load() {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        int i \u003d filepath.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"        assert i \u003e\u003d 0 : \"Incorrect filepath.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"        File dir \u003d new File(filepath.substring(0, i));","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"            dir.mkdirs();","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"        } //create file directory if the directory does not exist","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"        TaskList l \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"            File f \u003d new File(filepath);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"            s.nextLine(); //skip header line","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"                l.addTask(Task.stringToTask(s.nextLine()));","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"            } //convert text String to tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"            return l;","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"            new Ui().showLoadingError();","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"            return new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Qiaoran-M":80}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":" * TaskDive chatbot users can perform add/delete/mark operations on the tasks in the list.","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"    public TaskList(List\u003cTask\u003e l) {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"        this.tasks \u003d l;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    public TaskList(TaskList l) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"        this.tasks \u003d l.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a String representation of all tasks in the task list.","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * String representation of each task consists of task type, status, description, (date), tags.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     * Task types (todo, event, deadline) are represented by [T], [E], [D],","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     * task status (done, undone) are represented by [X], [ ],","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"     * task date is represented as the format yyyy-MM-dd, task tags are represented as {tag1, tag2, tag3} (if any).","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     * @return String representation of TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"    public String printTaskList() {","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        if (this.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"            return \"Oops! There\u0027s no matching tasks found :-(\";","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"            //listString +\u003d String.format(\"%d.%s %s %s\\n\", count, t.getStatusIcon(), t.getDescription(), t.printTags());","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"            listString +\u003d String.format(\"%d.%s\\n\", count, t.printTask());","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"            count +\u003d 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"        return listString;","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the string format of task list to be saved in storage.","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"     * String representation of each task consists of task type, status, description, (date), tags;","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"     * The format is | task type | status | description | time | tags","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"     * @return string format of task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"    public String saveTaskList(){","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        String result \u003d \"Task Type | Status | Description \u0026 Time | Tags\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"            result +\u003d t.toString() + \"\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"        return result;","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"     * @return the number of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"    public Integer getSize() {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the task at an index in the task list (0-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"     * @param index task index.","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.getSize() : \"index out of bound.\" ;","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the task at an index in the task list (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"     * The task at index is then deleted from the task list.","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"     * @param index task index.","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"    public Task deleteTaskAtIndex(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d this.getSize() : \"index out of bound.\" ;","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"        return this.tasks.remove(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"     * Adds a new task at the end of the task list.","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"     * @param task a new task.","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"Qiaoran-M"},"content":"     * Marks the status of the task at task index as done and returns the marked task (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"Qiaoran-M"},"content":"     * @param index task index.","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"Qiaoran-M"},"content":"     * @return marked task.","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"Qiaoran-M"},"content":"    public Task markAsDone(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"Qiaoran-M"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d this.getSize() : \"index out of bound.\" ;","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"Qiaoran-M"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"Qiaoran-M"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"Qiaoran-M"},"content":"        return task;","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"Qiaoran-M"},"content":"     * Marks the status of the task at task index as undone and returns the marked task.","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"Qiaoran-M"},"content":"     * @param index task index.","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"Qiaoran-M"},"content":"     * @return marked task.","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"Qiaoran-M"},"content":"    public Task markAsUndone(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"Qiaoran-M"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d this.getSize() : \"index out of bound.\" ;","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"Qiaoran-M"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"Qiaoran-M"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"Qiaoran-M"},"content":"        return task;","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"Qiaoran-M"},"content":"     * Searches taskList and returns a TaskList containing unfinished tasks on the date.","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"Qiaoran-M"},"content":"     * The task list includes unfinished deadline tasks with end date after/on the date,","lastModifiedDate":"2022-09-13"},{"lineNumber":140,"author":{"gitId":"Qiaoran-M"},"content":"     * and unfinished event tasks with the specified date between start and end date (inclusive).","lastModifiedDate":"2022-09-13"},{"lineNumber":141,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"Qiaoran-M"},"content":"     * @param date LocalDate object.","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"Qiaoran-M"},"content":"     * @return task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"Qiaoran-M"},"content":"    public TaskList searchByDate(LocalDate date) {","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cTask\u003e tasksAtDate \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"Qiaoran-M"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"Qiaoran-M"},"content":"            assert t.equals(\"deadline\") || t.equals(\"todo\") || t.equals(\"event\") : \"Invalid task type.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":149,"author":{"gitId":"Qiaoran-M"},"content":"            if (!t.getStatus() \u0026\u0026 t.taskType().equals(\"event\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"Qiaoran-M"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"Qiaoran-M"},"content":"                if ((date.isAfter(e.getStartDate()) \u0026\u0026 date.isBefore(e.getEndDate()))","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"Qiaoran-M"},"content":"                        || date.isEqual(e.getStartDate()) || date.isEqual(e.getEndDate())) {","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"Qiaoran-M"},"content":"                    tasksAtDate.add(e);","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"Qiaoran-M"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"Qiaoran-M"},"content":"            } else if (!t.getStatus() \u0026\u0026 t.taskType().equals(\"deadline\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"Qiaoran-M"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"Qiaoran-M"},"content":"                if (!date.isAfter(d.getEnd())) {","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"Qiaoran-M"},"content":"                    tasksAtDate.add(d);","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"Qiaoran-M"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"Qiaoran-M"},"content":"        return new TaskList(tasksAtDate);","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":166,"author":{"gitId":"Qiaoran-M"},"content":"     * Searches taskList and returns a new TaskList of tasks that has the tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":167,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":168,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tag task tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":169,"author":{"gitId":"Qiaoran-M"},"content":"     * @return task list.","lastModifiedDate":"2022-09-13"},{"lineNumber":170,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":171,"author":{"gitId":"Qiaoran-M"},"content":"    public TaskList searchByTag(String tag) {","lastModifiedDate":"2022-09-11"},{"lineNumber":172,"author":{"gitId":"Qiaoran-M"},"content":"        TaskList tasksByTag \u003d new duke.TaskList();","lastModifiedDate":"2022-09-11"},{"lineNumber":173,"author":{"gitId":"Qiaoran-M"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-09-11"},{"lineNumber":174,"author":{"gitId":"Qiaoran-M"},"content":"            if (t.containsTag(tag)) {","lastModifiedDate":"2022-09-11"},{"lineNumber":175,"author":{"gitId":"Qiaoran-M"},"content":"                tasksByTag.addTask(t);","lastModifiedDate":"2022-09-11"},{"lineNumber":176,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-09-11"},{"lineNumber":177,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":178,"author":{"gitId":"Qiaoran-M"},"content":"        return tasksByTag;","lastModifiedDate":"2022-09-11"},{"lineNumber":179,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":180,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":181,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"Qiaoran-M"},"content":"     * Searches taskList and returns a TaskList of tasks whose task description contains keyword.","lastModifiedDate":"2022-09-13"},{"lineNumber":183,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"Qiaoran-M"},"content":"     * @param keyword task description keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"Qiaoran-M"},"content":"     * @return task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"Qiaoran-M"},"content":"    public TaskList searchByKeyword(String keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":188,"author":{"gitId":"Qiaoran-M"},"content":"        TaskList tasksByKeyword \u003d new duke.TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"Qiaoran-M"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"Qiaoran-M"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"Qiaoran-M"},"content":"                tasksByKeyword.addTask(t);","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":193,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":194,"author":{"gitId":"Qiaoran-M"},"content":"        return tasksByKeyword;","lastModifiedDate":"2022-08-27"},{"lineNumber":195,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Qiaoran-M":197}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":" * Represents TaskDive chatbot response Ui that user see after he/she send command to chatbot.","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":" * Chatbot response messages are represented as a list of Strings, each String represents a single message.","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive start up messages that a user see when TaskDive is opened.","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"    public java.util.List\u003cString\u003e printStartUpUi() {","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"Hello! I\u0027m TaskDive, your personalized chatbot to arrange your tasks!\");","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"TaskDive allows you to freely add, delete, mark task status, search tasks by time, \"","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"                + \"and list all tasks\");","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"To display full text in a dialog box, please use the scroll bar, \"","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"                + \"or click on the dialog and scroll all the way up.\");","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"Please type \u0027help\u0027 command for more information on accepted task types and command format.\");","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive information message that a user sees when he/her uses help command to see more information","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * about TaskDive chatbot.","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * The information includes task type, command format, and other notes","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     * (TaskDive features and other formatting issues).","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e printDukeInfo() {","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"There are 3 types of task implemented:\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  1. todo : tasks without any date/time attached to it\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  2. deadline : tasks that need to be done before a specific date/time\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  3. event : tasks that start at a specific time and ends at a specific time\");","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"Below is all the command you can use with the command format specified: \\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  1.  Add todo : todo {task description}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  2.  Add deadline : deadline {task description} /by {end date}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  3.  Add event : event {task description} /at {start date} to {end date}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  4.  Delete task : delete {task index}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  5.  Mark task as done : mark {task index}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  6.  Mark task as undone : unmark {task index}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  7.  Tag task : tag {task index} /with {tag}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  8.  Untag task : untag {task index} /with {tag}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  9.  List all tasks : list\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  10. List unfinished tasks by date : list {date}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  11. List tasks by description keyword : list {keyword}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  12. List tasks by tag : list #{tag}\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  13. Exit TaskDive chatbot : bye\");","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"Other Remarks: \\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  1. Acceptable date formats include dd/MM/yyyy, yyyy/MM/dd, yyyy-MM-dd, dd-MM-yyyy, \"","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"                + \"dd MM yyyy, yyyy MM dd.\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  2. A tag / keyword must be a case-sensitive word containing only alphabets.\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  3. A task can contain at most 3 tags, adding repeated tags to a task is not allowed.\\n\"","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"                + \"  4. Task list will be auto-saved after bye command and auto-loaded when TaskDive chatbot starts up.\");","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive response messages after a user add/ delete/ mark/ unmark a ToDo/ Deadline/ Event task.","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"     * @param command String containing user command type (todo/ deadline/ event/ delete/ mark/ unmark).","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"     * @param index index is the index of the task added (1-indexed),","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"     *              specially for delete command, index is a String representation of a task deleted.","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList a TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e printAddCommandUi(String command, String index, TaskList taskList) {","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"        assert !command.equals(\"\") : \"empty command.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"        if (command.equals(\"delete\")) {  //delete (special case): index is a String representation of a task","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(\"Noted. I\u0027ve removed this task:\\n\" + String.format(\"  %s\", index));","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(String.format(\"Now you have %d tasks in the list.\", taskList.getSize()));","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"            return texts;","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"        assert index.matches(\"[0-9]+\") : \"wrong index.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"        assert Integer.parseInt(index) \u003c\u003d taskList.getSize() : \"Index out of bound.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"        Task task \u003d taskList.getTask(Integer.parseInt(index) - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"        if (command.equals(\"todo\") || command.equals(\"event\") || command.equals(\"deadline\")) { //add","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(\"Got it. I\u0027ve added this task:\\n\" + String.format(\"  %s\", task.printTask()));","lastModifiedDate":"2022-09-11"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(String.format(\"Now you have %d tasks in the list.\", taskList.getSize()));","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(\"Nice! I\u0027ve marked this task as done:\\n\" + String.format(\"  %s\", task.printTask()));","lastModifiedDate":"2022-09-11"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"        } else { //unmark","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(\"OK, I\u0027ve marked this task as not done yet:\\n\" + String.format(\"  %s\", task.printTask()));","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-11"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive response messages after a user tag/ untag a ToDo/ Deadline/ Event task.","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"     * @param command String containing user command type (tag/ untag).","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"     * @param index index is the index of the task added (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList a TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e printTagCommandUi(String command, String index, String tag, TaskList taskList) {","lastModifiedDate":"2022-09-11"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-11"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"        Task task \u003d taskList.getTask(Integer.parseInt(index) - 1);","lastModifiedDate":"2022-09-11"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"        if (command.equals(\"tag\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":110,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(String.format(\"OK, I\u0027ve added this tag %s for the task:  %s\", tag, task.printTask()));","lastModifiedDate":"2022-09-11"},{"lineNumber":111,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(String.format(\"Now the task have %d tags: %s\", task.noOfTags(), task.printTags()));","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"Qiaoran-M"},"content":"        } else { //untag","lastModifiedDate":"2022-09-11"},{"lineNumber":113,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(String.format(\"OK, I\u0027ve deleted this tag %s for the task:  %s\", tag, task.printTask()));","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(String.format(\"Now the task have %d tags: %s\", task.noOfTags(), task.printTags()));","lastModifiedDate":"2022-09-11"},{"lineNumber":115,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive response messages after a user enters a list related command,","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"Qiaoran-M"},"content":"     * including list all tasks, list unfinished tasks at a date, list tasks whose description contains a keyword,","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"Qiaoran-M"},"content":"     * list tasks with a tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"Qiaoran-M"},"content":"     * @param command String containing user command type (list).","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"Qiaoran-M"},"content":"     * @param str string containing the list parameter, including 0 (represents all tasks), a date, a keyword or a tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList a TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e printListCommandUi(String command, String str, TaskList taskList) {","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"Qiaoran-M"},"content":"        assert !command.equals(\"\") : \"empty command.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":133,"author":{"gitId":"Qiaoran-M"},"content":"        // for list, list date, search","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"Qiaoran-M"},"content":"        if (str.trim().equals(\"0\")) { //list","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(taskList.printTaskList());","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (str.matches(\"([0-9]{4})-([0-9]{2})-([0-9]{2})\")) { //list date","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(\"Here are unfinished tasks on this date in your list:\");","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(taskList.searchByDate(LocalDate.parse(str)).printTaskList());","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (!str.trim().contains(\"#\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":141,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-09-03"},{"lineNumber":142,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(taskList.searchByKeyword(str).printTaskList());","lastModifiedDate":"2022-09-03"},{"lineNumber":143,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-09-11"},{"lineNumber":144,"author":{"gitId":"Qiaoran-M"},"content":"            String tag \u003d str.substring(1);","lastModifiedDate":"2022-09-11"},{"lineNumber":145,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(String.format(\"Here are the tasks tagged %s:\", tag));","lastModifiedDate":"2022-09-11"},{"lineNumber":146,"author":{"gitId":"Qiaoran-M"},"content":"            texts.add(taskList.searchByTag(tag).printTaskList());","lastModifiedDate":"2022-09-11"},{"lineNumber":147,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":152,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive response messages after a user enters bye command to exit TaskDive.","lastModifiedDate":"2022-09-13"},{"lineNumber":154,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":155,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":156,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e printEndingUi() {","lastModifiedDate":"2022-09-03"},{"lineNumber":158,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":159,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"TaskDive Chatbot will stop, all previous tasks will be auto-saved :D\");","lastModifiedDate":"2022-09-13"},{"lineNumber":160,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"Bye, Hope to see you again soon!\\nPlease type \u0027yes\u0027 to confirm exit or close the window.\");","lastModifiedDate":"2022-09-13"},{"lineNumber":161,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive response messages when task list storage loading error occurs.","lastModifiedDate":"2022-09-13"},{"lineNumber":166,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":167,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":168,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e showLoadingError() {","lastModifiedDate":"2022-09-03"},{"lineNumber":170,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":171,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"☹ OOPS!!! Loading error occurred, new text file is created for task list storage.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":172,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-03"},{"lineNumber":173,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive response messages when task list storage saving error occurs.","lastModifiedDate":"2022-09-13"},{"lineNumber":177,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":178,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":179,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e showSavingError() {","lastModifiedDate":"2022-09-03"},{"lineNumber":181,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":182,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(\"☹ OOPS!!! Saving error occurred, task list not properly saved in the text file.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":183,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-03"},{"lineNumber":184,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns TaskDive response messages after user enters an invalid/ not properly formatted command.","lastModifiedDate":"2022-09-13"},{"lineNumber":188,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"Qiaoran-M"},"content":"     * @param e exception raised from the invalid/ not properly formatted user command.","lastModifiedDate":"2022-09-13"},{"lineNumber":190,"author":{"gitId":"Qiaoran-M"},"content":"     * @return List of messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":191,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"Qiaoran-M"},"content":"    public List\u003cString\u003e showException(Exception e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":193,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":194,"author":{"gitId":"Qiaoran-M"},"content":"        texts.add(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":195,"author":{"gitId":"Qiaoran-M"},"content":"        return texts;","lastModifiedDate":"2022-09-03"},{"lineNumber":196,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Qiaoran-M":198}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a AddCommand to add ToDo/ Deadline/ Event task. This class implements Command Interface.","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    protected String description;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a AddCommand constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"     * A AddCommand consists of a TaskList, a command description string containing add command parameters.","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList a list of tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description command description string containing add command parameters.","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    public AddCommand(TaskList taskList, String description) {","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"     * Executes add command to adda task to the TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    public void execute(Task t) {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"        tasks.addTask(t);","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Qiaoran-M":31}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.INVALID_DEADLINE_COMMAND;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.MISSING_DESCRIPTION;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.MISSING_DATE;","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a AddDeadlineCommand to add Deadline task. This class extends AddCommand class.","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a AddDeadlineCommand constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     * A AddDeadlineCommand consists of a TaskList, a description string containing task description and end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList a list of tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description description string containing task description and end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    public AddDeadlineCommand(duke.TaskList taskList, String description) {","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        super(taskList, description);","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"     * Executes add deadline command to adda Deadline task to the TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string containing commandType \"deadline\" and task index (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * Returned value will be used to call chatbot response message.","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException if the command description string is invalid.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string containing commandType \"deadline\" and task index.","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        if (!description.contains(\"/by\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_DEADLINE_COMMAND, \"\");","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"        String taskDescription \u003d description.split(\"/by\")[0].trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        if (taskDescription.equals(\"\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(MISSING_DESCRIPTION, \"deadline\");","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        } if (description.split(\"/by\").length \u003d\u003d 1) {","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"            throw new duke.exception.DukeException(MISSING_DATE, \"deadline\");","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        LocalDate end \u003d Parser.parseDate(description.split(\"/by\")[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        super.execute(new Deadline(taskDescription, end));","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"deadline %d\", super.tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Qiaoran-M":50}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.*;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a AddEventCommand to add Event task. This class extends AddCommand class.","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a AddEventCommand constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"     * A AddEventCommand consists of a TaskList, a description string containing task description, start date and end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList a list of tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description description string containing task description, start date and end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    public AddEventCommand(duke.TaskList taskList, String description) {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"        super(taskList, description);","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"     * Executes add event command to adda Event task to the TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string containing commandType \"event\" and task index (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"     * Returned value will be used to call chatbot response message.","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException if the command description string is invalid.","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string containing commandType \"event\" and task index.","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"        if ((!description.contains(\"/at\")) || (!description.contains(\" to \"))) {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_EVENT_COMMAND, \"\");","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        String taskDescription \u003d description.split(\"/at\")[0].trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        if (taskDescription.equals(\"\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(MISSING_DESCRIPTION, \"event\");","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (description.split(\"/at\").length \u003d\u003d 1) {","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(MISSING_DATE, \"event\");","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        String[] dates \u003d description.split(\"/at\")[1].trim().split(\"to\");","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        LocalDate start \u003d Parser.parseDate(dates[0]);","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        LocalDate end \u003d Parser.parseDate(dates[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_DATE_RANGE, \"\");","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        super.execute(new Event(taskDescription, start, end));","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"event %d\", super.tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Qiaoran-M":52}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a AddTodoCommand to add ToDo task. This class extends AddCommand class.","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a AddTodoCommand constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"     * A AddTodoCommand consists of a TaskList, a task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"     * @param taskList a list of tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    public AddTodoCommand(duke.TaskList taskList, String description) {","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"        super(taskList, description);","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     * Executes add todo command to adda ToDo task to the TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string containing commandType \"todo\" and task index (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * Returned value will be used to call chatbot response message.","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string containing commandType \"todo\" and task index.","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    public String execute() {","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"        super.execute(new ToDo(super.description));","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"todo %d\", super.tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Qiaoran-M":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":" * Empty Command interface that all types of commands inherits.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"public interface Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Qiaoran-M":7}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.command;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.INVALID_KEYWORD;","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.INVALID_TAG;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a ListCommand to list tasks by date/ description keyword/ tag. This class implements Command Interface.","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":" * The command to list all tasks need not modify/ search TaskList, therefore it is not handled by this class.","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    private String parameter;","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a ListCommand constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     * A ListCommand consists of a TaskList and a parameter string containing date/ keyword/ tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * @param parameter a string containing date/ keyword/ tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    public ListCommand(TaskList tasks, String parameter) {","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        this.parameter \u003d parameter;","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     * Executes list command to list tasks in the TaskList by date/ description keyword/ tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string containing commandType and task index (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * Returned value will be used to call chatbot response message.","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * If tag/ keyword is invalid, the command is not executed.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException if tag/ keyword is invalid.","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string containing commandType and task index.","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        if (parameter.matches(\"^[a-zA-Z0-9]*$\") \u0026\u0026 parameter.matches(\".*\\\\d.*\")) {","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_KEYWORD, \"\"); //invalid keyword (contains both alphabets and digits)","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (parameter.equals(\"#\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_TAG, \"\"); //empty tag","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (parameter.contains(\"#\") \u0026\u0026 !parameter.substring(1).matches(\"[a-zA-Z]+\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_TAG, \"\"); //invalid tag","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (!parameter.matches(\".*\\\\d.*\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"list %s\", parameter.trim());","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        } else { //list date","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"            java.time.LocalDate date \u003d Parser.parseDate(parameter);","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"list %s\", date);","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"Qiaoran-M":52}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.INVALID_INDEX;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.MISSING_INDEX;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a MarkCommand to mark/unmark task. This class implements Command Interface.","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    private String commandType;","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    private String index;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a MarkCommand constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     * A MarkCommand consists of a TaskList, a commandType (mark/ unmark), an index of task to be marked.","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * @param commandType commandType (mark/ unmark).","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     * @param index index of task to be marked.","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    public MarkCommand(TaskList tasks, String commandType, String index) {","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * Executes mark command to mark/ unmark the indexed task in the TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string containing commandType and task index (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     * Returned value will be used to call chatbot response message.","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     * If the task index is invalid/ missing, the command is not executed.","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException if the task index is invalid/ missing.","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string containing commandType and task index.","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        String taskIndex \u003d index.trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        if (taskIndex.equals(\"\") || !taskIndex.matches(\"[0-9]+\")) { // task description empty or not numeric","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(MISSING_INDEX, \"\");","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (Integer.parseInt(taskIndex) \u003e tasks.getSize() || Integer.parseInt(taskIndex) \u003c 1) {","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_INDEX, \"\");","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        if (commandType.equals(\"mark\")) {","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"            tasks.markAsDone(Integer.parseInt(taskIndex));","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"mark %s\", taskIndex);","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (commandType.equals(\"unmark\")) {","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"            tasks.markAsUndone(Integer.parseInt(taskIndex));","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"unmark %s\", taskIndex);","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"            Task t \u003d tasks.deleteTaskAtIndex(Integer.parseInt(taskIndex));","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"delete %s %s\",t.getStatusIcon(), t.getDescription());","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Qiaoran-M":58}},{"path":"src/main/java/duke/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.command;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.exception.ErrorMessage.*;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a TagCommand to add tag/ delete tag in a task. This class implements Command Interface.","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"public class TagCommand implements Command {","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    private String commandType;","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    private String info;","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a TagCommand constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * A TagCommand consists of a TaskList, a commandType (tag/ untag), an info String containing task index and tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * @param commandType commandType (tag/ untag).","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * @param info info String.","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    public TagCommand(TaskList tasks, String commandType, String info) {","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"        this.info \u003d info;","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * Checks the validity of tag command, splits info into a string containing task index and tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException if TagCommand not valid.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string containing task index and tag.","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    public String splitInfo() throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        if (!info.contains(\"/with\")) { //check command format","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_TAG_COMMAND, \"\");","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (info.split(\"/with\").length \u003d\u003d 1) {","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_TAG, \"\");","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        String index \u003d info.split(\"/with\")[0].trim();","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        String tag \u003d info.split(\"/with\")[1].trim();","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        if (!index.matches(\"[0-9]+\") || index.equals(\"\")) { //check missing/invalid tag parameter","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(MISSING_INDEX, \"\");","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (!tag.matches(\"[a-zA-Z]+\") || tag.equals(\"\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_TAG, \"\");","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (Integer.parseInt(index) \u003e tasks.getSize() || Integer.parseInt(index) \u003c 1) {","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(INVALID_INDEX, \"\");","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"%s %s\", index, tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"     * Executes tag command to add/delete tag to the indexed task in the TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string containing commandType and task index (1-indexed).","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"     * Returned value will be used to call chatbot response message.","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"     * If tag number exceeds 3/ tag already exists/ tag to be deleted does not exist, the command is not executed.","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"     * @throws DukeException if tag number exceeds 3/ tag already exists/ tag to be deleted does not exist.","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string containing commandType and task index.","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"        String index \u003d this.splitInfo().split(\" \")[0];","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"        String tag \u003d this.splitInfo().split(\" \")[1].trim();","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"        Task task \u003d tasks.getTask(Integer.parseInt(index) - 1);","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"        if (commandType.equals(\"tag\") \u0026\u0026 task.noOfTags() \u003e\u003d 3) {","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(EXCEEDING_TAG_NUMBER, \"\");","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (commandType.equals(\"tag\") \u0026\u0026 task.containsTag(tag)) {","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(TAG_ALREADY_IN_TASK, tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (commandType.equals(\"untag\") \u0026\u0026 !task.containsTag(tag)) {","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"            throw new DukeException(TAG_NOT_IN_TASK, tag);","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (commandType.equals(\"tag\") \u0026\u0026 task.noOfTags() \u003c 3) {","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"            task.addTag(tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"tag %s %s\", index, tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-09-11"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"            task.deleteTag(tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"untag %s %s\", index, tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"Qiaoran-M":83}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.exception;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":" * Represents an exception thrown when user enters invalid/ not properly formatted commands,","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":" * or when other errors occurs during TaskDive chatbot execution.","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"     * Creates DukeException with ErrorMessage and tasktype (if it is required to fill ErrorMessage).","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    public DukeException(ErrorMessage error, String taskType) {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"        super(error.getName(taskType));","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Qiaoran-M":15}},{"path":"src/main/java/duke/exception/ErrorMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.exception;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":" * Error message that informs user invalid/ not properly formatted commands.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":" * It is passed to DukeException as Exception message.","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"public enum ErrorMessage {","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_DATE_FORMAT (\"☹ OOPS!!! This is not a proper date format, please refer to command format information.\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_DATE (\"☹ OOPS!!! This is not a proper date format, year, month or day value is invalid.\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"    MISSING_DATE (\"☹ OOPS!!! The date information of a %s task cannot be empty.\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"    MISSING_DESCRIPTION (\"☹ OOPS!!! The description of a %s task cannot be empty.\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_DEADLINE_COMMAND (\"☹ OOPS!!! The command is not properly formatted.\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"            + \"Please follow the format: Deadline {description} /by {date}.\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_EVENT_COMMAND (\"☹ OOPS!!! The command is not properly formatted.\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"            + \"Please follow the format: Event {description} /at {date} to {date}.\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_TAG_COMMAND (\"☹ OOPS!!! The command is not properly formatted.\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"            + \"Please follow the format: tag {task index} /with {tag}.\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_COMMAND_TYPE (\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_INDEX (\"☹ OOPS!!! The task index exceeds task list size limit.\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    MISSING_INDEX (\"☹ OOPS!!! The task index of a %s command cannot be empty.\"),","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_DATE_RANGE (\"☹ OOPS!!! The start date of a Event task cannot be after end date.\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_TAG (\"☹ OOPS!!! The tag can only contain alphabets and it cannot be empty.\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    EXCEEDING_TAG_NUMBER (\"☹ OOPS!!! The tag cannot be added because a task cannot have more than 3 tags.\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    TAG_ALREADY_IN_TASK (\"☹ OOPS!!! The tag %s is already in the task tag list, same tag cannot be added again.\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    INVALID_KEYWORD (\"☹ OOPS!!! The keyword in list command can only contain alphabets.\"),","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    TAG_NOT_IN_TASK(\"☹ OOPS!!! The tag %s is not in the task tag list, so it cannot be deleted.\");","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    private String name;","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    ErrorMessage(String name) {","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     * Gets name String of ErrorMessage.","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    public String getName(String taskType) {","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(this.name, taskType);","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Qiaoran-M":39}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.gui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.beans.property.SimpleIntegerProperty;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a TextArea","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    private TextArea dialog;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is DialogBox constructor. A DialogBox object consists of dialog attribute (TextArea)","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * and displayPicture attribute (ImageView).","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * @param text text that dialog contains.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     * @param img image for ImageView.","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     * @param color color of the dialog box.","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    private DialogBox(String text, javafx.scene.image.Image img, String color) {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"            javafx.fxml.FXMLLoader fxmlLoader \u003d new javafx.fxml.FXMLLoader(duke.gui.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"        dialogFitText();","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        dialog.setStyle(String.format(\"-fx-line-spacing: 8px; -fx-control-inner-background: %s; -fx-hbar-policy:never; \"","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"                + \"-fx-vbar-policy:never; -fx-padding: 2;\", color));","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"        displayPicture.setClip(new javafx.scene.shape.Circle(25, 25, 25));","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"        this.setSpacing(6);","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"     * Formats TextArea GUI to fit text.","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"     * Modified from https://stackoverflow.com/a/25646466","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"    private void dialogFitText() {","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"        SimpleIntegerProperty count \u003d new SimpleIntegerProperty(20);","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"        int rowHeight \u003d 10;","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        dialog.prefHeightProperty().bindBidirectional(count);","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"        dialog.minHeightProperty().bindBidirectional(count);","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"        dialog.scrollTopProperty().addListener(new ChangeListener\u003cNumber\u003e(){","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"            @Override","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"            public void changed(ObservableValue\u003c? extends Number\u003e ov, Number oldVal, Number newVal) {","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"                if(newVal.intValue() \u003e rowHeight){","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"                    count.setValue(count.get() + newVal.intValue());","lastModifiedDate":"2022-09-12"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"        });","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"    private void flip() {","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"     * Creates the DialogBox that contains user input command.","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"     * @return DialogBox.","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"        return new DialogBox(text, img, \"LAVENDER\");","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"     * Creates a list of dialog boxes that contain chatbot response messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"     * @return DialogBox.","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"    public static List\u003cDialogBox\u003e getDukeDialogs(List\u003cString\u003e uiTexts, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cDialogBox\u003e dialogs \u003d new java.util.ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"        for (String uiText : uiTexts) {","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"            var db \u003d new DialogBox(uiText, img, \"LIGHTGOLDENRODYELLOW\");","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"            db.flip();","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"            dialogs.add(db);","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"        return dialogs;","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"Qiaoran-M":107}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.gui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"public class Launcher {","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"        javafx.application.Application.launch(duke.Main.class, args);","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"Qiaoran-M":12}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.gui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"import static duke.gui.DialogBox.getDukeDialogs;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DDuke.png\"));","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DUser.png\"));","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    public MainWindow() {}","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     * Initializes MainWindow controller.","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        this.addDialogToContainer(getDukeDialogs(new Ui().printStartUpUi(), dukeImage));","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"     * Sets duke attribute to duke object.","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"     * Adds dialog boxes to dialogContainer attribute.","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"    public void addDialogToContainer(List\u003cDialogBox\u003e dialogs) {","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"        for (DialogBox dialog : dialogs) {","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"            dialogContainer.getChildren().add(dialog);","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"     * Creates dialog boxes, one echoing user input and others containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"        List\u003cString\u003e responses \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"        this.addDialogToContainer(getDukeDialogs(responses, dukeImage));","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"        if (input.equals(\"yes\") \u0026\u0026 duke.getExitStatus()) {","lastModifiedDate":"2022-09-12"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"            System.exit(0);","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"            javafx.application.Platform.exit();","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-12"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"Qiaoran-M":79}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a Deadline task with a deadline description and end date. This class inherits Task class.","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"    private LocalDate end;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a Deadline Task constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"     * A deadline Task contains a task description, a task status, tags, deadline end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description a task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"     * @param end a LocalDate object of deadline end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"    public Deadline(String description, LocalDate end) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is an overloaded Deadline Task constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description a task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"     * @param isDone deadline task status (false: not done. true: done).","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tags a list of tags.","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"     * @param end a LocalDate object of deadline end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"    public Deadline(String description, Boolean isDone, LocalDate end, List\u003cString\u003e tags) {","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns Deadline task status icon. This method overrides the method from its super class Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"     * In the status icon, [D] represents task type Deadline, [X] represents task status as done,","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     * [ ] represents task status as not done.","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"     * @return String representation of Deadline task status icon.","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        return (isDone ? \"[D][X]\" : \"[D][ ]\"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string of all deadline information message, including deadline description and end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"     * This method overrides the method from its super class Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string of all deadline information message.","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"%s (by %s)\", this.description, this.end);","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string format of Deadline task. The format is | Deadline | status | description | time | tags","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is used to convert a Deadline task to string and store it in storage.","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"     * @return string format of Deadline task.","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        String status \u003d isDone ? \"Done  \" : \"UnDone\";","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"Deadline  | %s | %s | %s | %s\", status, super.getDescription(), this.end, super.printTags());","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the task type of Deadline task. This method overrides the method from its super class Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"     * @return string \"deadline\".","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"    public String taskType() {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"        return \"deadline\";","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the end date of Deadline task.","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"     * @return LocalDate object end.","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"        return this.end;","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Qiaoran-M":83}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":" * Represents an Event task with an event description, start date and end date. This class inherits Task class.","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"    private LocalDate startDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"    private LocalDate endDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is an Event Task constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"     * An event Task contains a task description, a task status, tags, event start date and end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description a task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"     * @param startDate a LocalDate object of event start date.","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"     * @param endDate a LocalDate object of event end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is an overloaded Event Task constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description a task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     * @param isDone event task status (false: not done. true: done).","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tags a list of tags.","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * @param startDate a LocalDate object of event start date.","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * @param endDate a LocalDate object of event end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"    public Event(String description, Boolean isDone, LocalDate startDate, LocalDate endDate, List\u003cString\u003e tags) {","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        assert startDate.isBefore(endDate) || startDate.isEqual(endDate)","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"                : \"invalid date range (start date after end date).\";","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns Event task status icon. This method overrides the method from its super class Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"     * In the status icon, [E] represents task type Event, [X] represents task status as done,","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"     * [ ] represents task status as not done.","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"     * @return String representation of Event task status icon.","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        return (isDone ? \"[E][X]\" : \"[E][ ]\"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string of all event information message, including event description, start date and end date.","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"     * This method overrides the method from its super class Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a string of all event information message.","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"%s (at %s - %s)\", this.description, this.startDate, this.endDate);","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string format of Event task. The format is | Event | status | description | time | tags","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is used to convert an Event task to string and store it in storage.","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"     * @return string format of Event task.","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"        String status \u003d isDone ? \"Done  \" : \"UnDone\";","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"Event     | %s | %s | %s to %s | %s\", status, super.getDescription(),","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"                this.startDate, this.endDate, super.printTags());","lastModifiedDate":"2022-09-11"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the task type of Event task. This method overrides the method from its super class Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"     * @return string \"event\".","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"    public String taskType() {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"        return \"event\";","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the start date of Event task.","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"     * @return LocalDate object startDate.","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"        return startDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the end date of Event task.","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"     * @return LocalDate object endDate.","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"        return endDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Qiaoran-M":99}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a task that user can add/ delete /mark /unmark / tag/ untag in TaskDive chatbot.","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    protected List\u003cString\u003e tags;","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    private static String TODO_TASK \u003d \"Todo      \";","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    private static String DEADLINE_TASK \u003d \"Deadline  \";","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    private static String EVENT_TASK \u003d \"Event     \";","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    private static String DONE \u003d \" Done   \";","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a Task constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * A Task object contains a task description and a boolean attribute isDone that represents the task status","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     * (true: done / false: not done).","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"        this.tags \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is an overloaded Task constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     * A Task object contains a task description and a boolean attribute isDone that represents the task status","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"     * (true: done / false: not done).","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"     * @param isDone a boolean value of the task status.","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tags a list of tags.","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    public Task(String description, Boolean isDone, List\u003cString\u003e tags) {","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns task status icon.In the status icon, [X] represents task status as done,","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"     * [ ] represents task status as not done.","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"     * @return String representation of task status icon.","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns task status attribute isDone.","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"     * @return boolean value of task status.","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"        return isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns task description attribute description.","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"     * @return task description String.","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"     * Marks task status as done, isDone attribute of task is changed to true.","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"     * Marks task status as undone, isDone attribute of task is changed to false.","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the task type. This method is overrided the method from its subclass ToD0, Deadline and Event.","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"     * @return empty string.","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"    public String taskType() {","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"        return \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a ToDo/ Deadline /Event task parsed from a string representation of task.","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"Qiaoran-M"},"content":"     * @param str string representation of task stored in the storage.","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a ToDo/ Deadline /Event task.","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"Qiaoran-M"},"content":"    public static Task stringToTask(String str) {","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"Qiaoran-M"},"content":"        String[] line \u003d str.split(\"\\\\|\"); //split string by \"|\"","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"Qiaoran-M"},"content":"        assert line.length \u003e\u003d 3 : \"missing task attribute in input string\";","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"Qiaoran-M"},"content":"        assert line[0].equals(TODO_TASK) || line[0].equals(EVENT_TASK) || line[0].equals(DEADLINE_TASK)","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"Qiaoran-M"},"content":"                : \"invalid task type in input string\";","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"Qiaoran-M"},"content":"        if (line[0].equals(TODO_TASK)) {","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"Qiaoran-M"},"content":"            return new ToDo(line[2].trim(), DONE.equals(line[1]), Task.readTags(line[3].trim()));","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (line[0].equals(DEADLINE_TASK)) { //Deadline task","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"Qiaoran-M"},"content":"            return new Deadline(line[2].trim(), DONE.equals(line[1]), LocalDate.parse(line[3].trim())","lastModifiedDate":"2022-09-13"},{"lineNumber":107,"author":{"gitId":"Qiaoran-M"},"content":"                    , Task.readTags(line[4].trim()));","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"Qiaoran-M"},"content":"            String[] time \u003d line[3].split(\"to\");","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"Qiaoran-M"},"content":"            String start \u003d time[0].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"Qiaoran-M"},"content":"            String end \u003d time[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"Qiaoran-M"},"content":"            LocalDate endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"Qiaoran-M"},"content":"            LocalDate startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"Qiaoran-M"},"content":"            assert startDate.isBefore(endDate) || startDate.isEqual(endDate)","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"Qiaoran-M"},"content":"                    : \"invalid date range (start date after end date).\";","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"Qiaoran-M"},"content":"            return new Event(line[2].trim(), DONE.equals(line[1]), startDate, endDate, Task.readTags(line[4].trim()));","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":118,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":120,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"Qiaoran-M"},"content":"     * Adds a new tag to task.","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"Qiaoran-M"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2022-09-11"},{"lineNumber":124,"author":{"gitId":"Qiaoran-M"},"content":"        this.tags.add(tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":125,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":126,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":127,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"Qiaoran-M"},"content":"     * Deletes a new tag to task.","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":130,"author":{"gitId":"Qiaoran-M"},"content":"    public void deleteTag(String tag) {","lastModifiedDate":"2022-09-11"},{"lineNumber":131,"author":{"gitId":"Qiaoran-M"},"content":"        this.tags.remove(tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":132,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":133,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":134,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":135,"author":{"gitId":"Qiaoran-M"},"content":"     * Checks if the task has a tag, returns true if the task has tag, false otherwise.","lastModifiedDate":"2022-09-13"},{"lineNumber":136,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tag a tag string.","lastModifiedDate":"2022-09-13"},{"lineNumber":137,"author":{"gitId":"Qiaoran-M"},"content":"     * @return boolean value.","lastModifiedDate":"2022-09-13"},{"lineNumber":138,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"Qiaoran-M"},"content":"    public boolean containsTag(String tag) {","lastModifiedDate":"2022-09-11"},{"lineNumber":140,"author":{"gitId":"Qiaoran-M"},"content":"        return this.tags.contains(tag);","lastModifiedDate":"2022-09-11"},{"lineNumber":141,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":142,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":143,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":144,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the number of tags that the task owns.","lastModifiedDate":"2022-09-13"},{"lineNumber":145,"author":{"gitId":"Qiaoran-M"},"content":"     * @return number of tags.","lastModifiedDate":"2022-09-13"},{"lineNumber":146,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":147,"author":{"gitId":"Qiaoran-M"},"content":"    public int noOfTags() {","lastModifiedDate":"2022-09-11"},{"lineNumber":148,"author":{"gitId":"Qiaoran-M"},"content":"        return this.tags.size();","lastModifiedDate":"2022-09-11"},{"lineNumber":149,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":151,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":152,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the string representation of tags with the format {tag1,tag2,tag3}.","lastModifiedDate":"2022-09-13"},{"lineNumber":153,"author":{"gitId":"Qiaoran-M"},"content":"     * @return string representation of tags.","lastModifiedDate":"2022-09-13"},{"lineNumber":154,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":155,"author":{"gitId":"Qiaoran-M"},"content":"    public String printTags() {","lastModifiedDate":"2022-09-11"},{"lineNumber":156,"author":{"gitId":"Qiaoran-M"},"content":"        if (noOfTags() \u003d\u003d 1) { //special case: task only has 1 tag","lastModifiedDate":"2022-09-13"},{"lineNumber":157,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"{%s}\", tags.get(0));","lastModifiedDate":"2022-09-12"},{"lineNumber":158,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (noOfTags() \u003d\u003d 0) { //special case: task has no tag","lastModifiedDate":"2022-09-13"},{"lineNumber":159,"author":{"gitId":"Qiaoran-M"},"content":"            return \"{}\";","lastModifiedDate":"2022-09-12"},{"lineNumber":160,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-09-12"},{"lineNumber":161,"author":{"gitId":"Qiaoran-M"},"content":"            return String.format(\"{%s}\", String.join(\",\", tags));","lastModifiedDate":"2022-09-12"},{"lineNumber":162,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":163,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":164,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":165,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":166,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a tag list parsed from the string representation of tags {tag1,tag2,tag3}.","lastModifiedDate":"2022-09-13"},{"lineNumber":167,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a list of tags.","lastModifiedDate":"2022-09-13"},{"lineNumber":168,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":169,"author":{"gitId":"Qiaoran-M"},"content":"    public static List\u003cString\u003e readTags(String tagString) {","lastModifiedDate":"2022-09-11"},{"lineNumber":170,"author":{"gitId":"Qiaoran-M"},"content":"        String newTagString \u003d tagString.substring(1, tagString.length() - 1);","lastModifiedDate":"2022-09-11"},{"lineNumber":171,"author":{"gitId":"Qiaoran-M"},"content":"        if (tagString.equals(\"{}\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":172,"author":{"gitId":"Qiaoran-M"},"content":"            return new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":173,"author":{"gitId":"Qiaoran-M"},"content":"        } else if (!newTagString.contains(\",\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":174,"author":{"gitId":"Qiaoran-M"},"content":"            List\u003cString\u003e newTags \u003d  new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":175,"author":{"gitId":"Qiaoran-M"},"content":"            newTags.add(newTagString);","lastModifiedDate":"2022-09-12"},{"lineNumber":176,"author":{"gitId":"Qiaoran-M"},"content":"            return newTags;","lastModifiedDate":"2022-09-12"},{"lineNumber":177,"author":{"gitId":"Qiaoran-M"},"content":"        } else {","lastModifiedDate":"2022-09-12"},{"lineNumber":178,"author":{"gitId":"Qiaoran-M"},"content":"            return new ArrayList\u003cString\u003e(Arrays.asList(newTagString.split(\",\")));","lastModifiedDate":"2022-09-12"},{"lineNumber":179,"author":{"gitId":"Qiaoran-M"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":180,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":181,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":182,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":183,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string representation of a task. This method is used to display tasks in UI response messages.","lastModifiedDate":"2022-09-13"},{"lineNumber":184,"author":{"gitId":"Qiaoran-M"},"content":"     * @return a  string representation of a task.","lastModifiedDate":"2022-09-13"},{"lineNumber":185,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":186,"author":{"gitId":"Qiaoran-M"},"content":"    public String printTask() {","lastModifiedDate":"2022-09-11"},{"lineNumber":187,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"%s %s %s\", this.getStatusIcon(), this.getDescription(), this.printTags());","lastModifiedDate":"2022-09-11"},{"lineNumber":188,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":189,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":190,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Qiaoran-M":190}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"import java.util.List;","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":" * Represents a ToDo task with a task description. The ToDo class Inherits Task class.","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a ToDo Task constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"     * A ToDo Task contains a task description, a task status and tags (all inherited from Task class).","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description a task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is a overloaded ToDo Task constructor.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"     * A ToDo Task contains a task description, a task status and tags (all inherited from Task class).","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"     * @param description a task description string.","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"     * @param isDone a boolean value of task status (false: not done. true: done).","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"     * @param tags a list of tags.","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    public ToDo(String description, Boolean isDone, List\u003cString\u003e tags) {","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns ToDo task status icon. This method overrides the method from its super class Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"     * In the status icon, [T] represents task type ToDo, [X] represents task status as done,","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"     * [ ] represents task status as not done.","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"     * @return String representation of ToDo task status icon.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"        return (isDone ? \"[T][X]\" : \"[T][ ]\"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns a string format of ToDo task. The format is | Todo | status | description | time | tags","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"     * This method is used t convert a ToDo task to string and store it in storage.","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"     * @return string format of ToDo task.","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"        String status \u003d isDone ? \"Done  \" : \"UnDone\";","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        return String.format(\"Todo      | %s | %s | %s\", status, super.getDescription(), super.printTags());","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"     * Returns the task type of ToDo task. This method overrides the method from its super class Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"     * @return string \"todo\".","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"    public String taskType() {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"        return \"todo\";","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Qiaoran-M":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"        \u003cTextArea fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" editable\u003d\"false\" style\u003d\"-fx-text-fill: #ff0000; -fx-border-radius: 20;\" /\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"Qiaoran-M":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    \u003cImageView fitHeight\u003d\"564.0\" fitWidth\u003d\"431.0\"\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"        \u003cimage\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"            \u003cImage url\u003d\"@../images/background.png\" /\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"        \u003c/image\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"  style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\" \u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"375.0\" alignment\u003d\"TOP_CENTER\"\u003e\u003c/VBox\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"Qiaoran-M":26}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    public void parseDateTest() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"        //proper date format","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(LocalDate.parse(\"2021-04-24\"), parser.parseDate(\"2021 04 24\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(LocalDate.parse(\"2021-04-24\"), parser.parseDate(\"24 04 2021\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(LocalDate.parse(\"2021-04-24\"), parser.parseDate(\"2021-04-24\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(LocalDate.parse(\"2021-04-24\"), parser.parseDate(\"24-04-2021\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(LocalDate.parse(\"2021-04-24\"), parser.parseDate(\"2021/04/24\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(LocalDate.parse(\"2021-04-24\"), parser.parseDate(\"24/04/2021\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"        //not proper date format","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseDate(\"2021 04\");});","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! This is not a proper time format, please refer to command format information.\",","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"                exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseDate(\"2021-04-38\");});","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"Text \u00272021-04-38\u0027 could not be parsed: Invalid value for DayOfMonth (valid values 1 - 28/31): 38\",","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"                exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseDate(\"2021-14-30\");});","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"Text \u00272021-14-30\u0027 could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 14\",","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"                exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    public void parseCommandTest() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"        //correct command string: add {task type} as no.{task index} task in the list","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"todo 1\", parser.parseCommand(\"todo eat dinner\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"deadline 2\", parser.parseCommand(\"deadline CS2103 quiz /by 2022-08-27\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"deadline 3\", parser.parseCommand(\"deadline DSA3102 quiz /by 2022-08-24\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"event 4\", parser.parseCommand(\"event shopping /at 2022-08-27 to 2022-08-28\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"event 5\", parser.parseCommand(\"event team meeting /at 2022-08-26 to 2022-08-27\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"event 6\", parser.parseCommand(\"event working /at 2022-08-22 to 2022-08-26\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"todo 7\", parser.parseCommand(\"todo sleep\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Qiaoran-M"},"content":"        //incorrect to do command string: no description found","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Qiaoran-M"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"todo    \", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The description of a Todo task cannot be empty.\", exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Qiaoran-M"},"content":"        //incorrect deadline command string","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"deadline  quiz 2022-03-24\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The command not properly formatted.\\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Qiaoran-M"},"content":"                \"Please follow the format: Deadline {description} /by {date}.\", exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"deadline /by 2022-02-24\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The description of a Deadline task cannot be empty.\", exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"Qiaoran-M"},"content":"        //incorrect event command string","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"event  drink 2022-03-24\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The command not properly formatted.\\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"Qiaoran-M"},"content":"                \"Please follow the format: Event {description} /at {date} to {date}.\", exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"event /at 2022-02-24 to 2022-03-23\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The description of a Event task cannot be empty.\", exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"event e /at 2022-02-24 to 2022-01-23\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The start date of a Event task cannot be after end date.\", exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Qiaoran-M"},"content":"        //correct mark, unmark, delete command","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"mark 1\", parser.parseCommand(\"mark 1\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"unmark 1\", parser.parseCommand(\"unmark      1\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"unmark 2\", parser.parseCommand(\"unmark  2\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"mark 3\", parser.parseCommand(\"mark   3\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"delete 1\", parser.parseCommand(\"delete 1\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Qiaoran-M"},"content":"        //incorrect mark, unmark, delete command","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"mark 8\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The task index exceeds task list size limit.\",exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"unmark  0\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The task index exceeds task list size limit.\",exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"delete     \", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! The task index of a delete command cannot be empty.\",exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Qiaoran-M"},"content":"        //list, list date command","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"list 0\", parser.parseCommand(\"list     \", taskList));","lastModifiedDate":"2022-09-11"},{"lineNumber":84,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"list 2022-03-24\", parser.parseCommand(\"list    24 03 2022\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"bye\", parser.parseCommand(\"bye\", taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"Qiaoran-M"},"content":"        // incorrect commands (not understandable by duke)","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"hello!\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\",exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"Qiaoran-M"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e {parser.parseCommand(\"random words\", taskList);});","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\",exception.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Qiaoran-M":93}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Qiaoran-M"},"content":"    public void addTaskTest() {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.addTask(new Event(\"event1\", LocalDate.parse(\"2022-04-24\"), LocalDate.parse(\"2022-04-26\")));","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.addTask(new ToDo(\"todo1\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.addTask(new Event(\"event2\", LocalDate.parse(\"2022-04-20\"), LocalDate.parse(\"2022-04-25\")));","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.addTask(new Deadline(\"ddl1\", LocalDate.parse(\"2022-04-28\")));","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.addTask(new ToDo(\"todo2\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.addTask(new ToDo(\"todo3\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.addTask(new Deadline(\"ddl2\", LocalDate.parse(\"2022-04-21\")));","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(7,taskList.getSize());","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"event1 (at 2022-04-24 - 2022-04-26)\",taskList.getTask(0).getDescription());","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"ddl2 (by 2022-04-21)\",taskList.getTask(6).getDescription());","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(\"todo1\", taskList.deleteTaskAtIndex(2).getDescription());","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(6,taskList.getSize());","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.markAsDone(2);","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.markAsDone(3);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(true, taskList.getTask(1).getStatus());","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(true, taskList.getTask(2).getStatus());","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.markAsUndone(3);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(false, taskList.getTask(2).getStatus());","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Qiaoran-M"},"content":"        taskList.markAsUndone(4);","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Qiaoran-M"},"content":"        assertEquals(false, taskList.getTask(3).getStatus());","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Qiaoran-M"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Qiaoran-M"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Qiaoran-M"},"content":"","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Qiaoran-M":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Qiaoran-M"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"Qiaoran-M"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Qiaoran-M"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Qiaoran-M"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Qiaoran-M"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Qiaoran-M"},"content":"todo make dinner","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Qiaoran-M"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Qiaoran-M"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Qiaoran-M"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Qiaoran-M"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Qiaoran-M"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Qiaoran-M"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Qiaoran-M"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Qiaoran-M"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Qiaoran-M":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Qiaoran-M"},"content":"if ! javac -cp /Users/mqr/repos/ip/src/main/java -Xlint:none -d /Users/mqr/repos/ip/bin /Users/mqr/repos/ip//src/main/java/*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Qiaoran-M"},"content":"java -classpath /Users/mqr/repos/ip/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Qiaoran-M":2,"-":36}}]

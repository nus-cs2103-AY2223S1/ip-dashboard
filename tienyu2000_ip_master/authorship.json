[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"# duke project template","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tienyu2000":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"tienyu2000"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"tienyu2000"},"content":"checkstyle {","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"tienyu2000"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tienyu2000":21,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"D | 0 | 2103 thingy | Sep 2 2022","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"E | 0 | meeting | Sep 15 2022","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"E | 1 | block event | Sep 10 2022","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"E | 1 | 2103 tutorial | Sep 15 2022","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"tienyu2000":4}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"tienyu2000"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"tienyu2000"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"tienyu2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"tienyu2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"tienyu2000"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"tienyu2000"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"tienyu2000"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"tienyu2000"},"content":"    private void flip() {","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"tienyu2000"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"tienyu2000"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"tienyu2000"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"tienyu2000"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"tienyu2000"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"tienyu2000"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"tienyu2000"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"tienyu2000"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"tienyu2000"},"content":"        db.flip();","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"tienyu2000"},"content":"        return db;","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"tienyu2000":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.handlers.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"import duke.services.Parser;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"import duke.utils.Commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    public Duke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"     * Runs method to execute the Duke instance.","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"    public String generateResponse(String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"        taskList \u003d storage.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"        String response;","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"        Commands command \u003d parser.parseCommand(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"        String[] wholeCommand \u003d parser.parseFullCommand(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"tienyu2000"},"content":"            switch (command) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"tienyu2000"},"content":"            case BYE:","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"tienyu2000"},"content":"                response \u003d ByeHandler.getResponse();","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"tienyu2000"},"content":"            case TODO:","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"tienyu2000"},"content":"                response \u003d ToDoHandler.getResponse(taskList, wholeCommand[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"tienyu2000"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"tienyu2000"},"content":"                response \u003d DeadlineHandler.getResponse(taskList, wholeCommand[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"tienyu2000"},"content":"            case EVENT:","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"tienyu2000"},"content":"                response \u003d EventHandler.getResponse(taskList, wholeCommand[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"tienyu2000"},"content":"            case DELETE:","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"tienyu2000"},"content":"                response \u003d DeleteHandler.getResponse(taskList, wholeCommand[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"tienyu2000"},"content":"            case LIST:","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"tienyu2000"},"content":"                response \u003d ListHandler.getResponse(taskList);","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"tienyu2000"},"content":"            case MARK:","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"tienyu2000"},"content":"                response \u003d MarkHandler.getResponse(taskList, wholeCommand[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"tienyu2000"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"tienyu2000"},"content":"                response \u003d UnmarkHandler.getResponse(taskList, wholeCommand[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"tienyu2000"},"content":"            case FIND:","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"tienyu2000"},"content":"                response \u003d FindHandler.getResponse(taskList, wholeCommand[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"tienyu2000"},"content":"            case SNOOZE:","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"tienyu2000"},"content":"                response \u003d SnoozeHandler.getResponse(taskList, wholeCommand[1]);","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"tienyu2000"},"content":"            default:","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"tienyu2000"},"content":"                response \u003d \"Unknown command\";","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"tienyu2000"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"tienyu2000"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"tienyu2000"},"content":"                storage.save(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"tienyu2000"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"tienyu2000"},"content":"                response \u003d e.getMessage();","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"tienyu2000"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"tienyu2000"},"content":"            return response;","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"tienyu2000"},"content":"    public String getResponse(String text) {","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"tienyu2000"},"content":"        return generateResponse(text);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tienyu2000":76,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"public class Launcher {","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"    public static void main (String[] args) {","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"tienyu2000":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"            stage.show();","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"tienyu2000":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"tienyu2000"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"tienyu2000"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"tienyu2000"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"tienyu2000"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"tienyu2000"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"tienyu2000"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"tienyu2000"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"tienyu2000"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"tienyu2000"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"tienyu2000"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"tienyu2000"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"tienyu2000"},"content":"        );","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"tienyu2000"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"tienyu2000":51}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"tienyu2000":7}},{"path":"src/main/java/duke/handlers/ByeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"public class ByeHandler {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"     * Handles the BYE command.","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"     * Exits the program.","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse() {","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"        return(\"Bye! Hope to see you again soon my highness!\");","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":11}},{"path":"src/main/java/duke/handlers/DeadlineHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"public class DeadlineHandler {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"     * Handles the DEADLINE command.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"     * Adds Deadline task to TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"     * @param taskList TaskList for the deadline task to be added to.","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"     * @param input Deadline to be added to TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse(TaskList taskList, String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        String[] deadline \u003d input.split(\"/\", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        assert deadline.length \u003d\u003d 2: \"Invalid input\";","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"        if (deadline.length \u003c 2 || deadline[1].trim().equals(\"\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"        String taskDescription \u003d deadline[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"        String taskDeadline \u003d deadline[1].split(\" \", 2)[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"        taskList.add(new Deadline(taskDescription, taskDeadline));","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"                + taskList.get(taskList.size()-1).toString()","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":27}},{"path":"src/main/java/duke/handlers/DeleteHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"public class DeleteHandler {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"     * Handles the DELETE command.","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"     * Deletes a task from TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"     * @param taskList TaskList containing the task to be deleted.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"     * @param input Contains index of the task to be deleted.","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse(TaskList taskList, String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"        int taskNo \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        assert taskNo \u003e\u003d 1: \"TaskList empty\";","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"            Task task \u003d taskList.get(taskNo - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"            taskList.remove(taskNo - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"            return (\"Noted. I\u0027ve removed this task:\\n\" + task.toString()","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks left in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"            int taskListSize \u003d taskList.size();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"            return (String.format(\"List size is (%s). Please enter a valid input\"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"                    , taskListSize));","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":27}},{"path":"src/main/java/duke/handlers/EventHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Event;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"public class EventHandler {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"     * Handles the Event command.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"     * Adds Event task to TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"     * @param taskList TaskList for the event task to be added to.","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"     * @param input Event to be added to TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse(TaskList taskList, String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        String[] event \u003d input.split(\"/\", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        assert event.length \u003d\u003d 2: \"Invalid input\";","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"        if (event.length \u003c 2 || event[1].trim().equals(\"\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"        String eventDescription \u003d event[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"        String eventTime \u003d event[1].split(\" \", 2)[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"        taskList.add(new Event(eventDescription, eventTime));","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"                + taskList.get(taskList.size()-1).toString()","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":27}},{"path":"src/main/java/duke/handlers/FindHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"public class FindHandler {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse (TaskList taskList, String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"        boolean isEmptyList \u003d true;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"        ArrayList\u003cTask\u003e resultList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"        if (taskList.size()\u003d\u003d 0) {","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"            throw new DukeException(\"☹ OOPS!!! Tasklist is empty!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"            if (task.toString().contains(input)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"                resultList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"                isEmptyList \u003d false;","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"        if (!isEmptyList) {","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"            StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"            for (int i \u003d 1; i \u003c\u003d resultList.size(); i++) {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"                Task foundTask \u003d resultList.get(i - 1);","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"                response.append(i).append(\". \").append(foundTask.toString()).append(\"\\n\");","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"            return response.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"tienyu2000"},"content":"        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"tienyu2000"},"content":"            return (\"No tasks found with keyword\");","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"tienyu2000":36}},{"path":"src/main/java/duke/handlers/ListHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"public class ListHandler {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"     * Handles the LIST command.","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"     * Prints out all the tasks in the TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"     * @param taskList TaskList containing the list of tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse(TaskList taskList) {","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"            Task task \u003d taskList.get(i - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"            response.append(i).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"        return response.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":20}},{"path":"src/main/java/duke/handlers/MarkHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"public class MarkHandler {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"     * Handles the MARK command","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"     * Marks a task as done according to its index.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"     * @param taskList TaskList containing a list of tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"     * @param input Contains index of the task to be marked as completed.","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse(TaskList taskList, String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"        int taskNo \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        assert taskNo \u003e\u003d 1: \"TaskList empty\";","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"            Task task \u003d taskList.get(taskNo - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"            task.setDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"            StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"                Task task1 \u003d taskList.get(i - 1);","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"                response.append(i).append(\". \").append(task1.toString()).append(\"\\n\");","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"            return (\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"                    + \"[\" + task.getStatusIcon() + \"] \" + task.getTaskName());","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"            int taskListSize \u003d taskList.size();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"            return (String.format(\"List size is %s. Please enter a valid input.\"","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"                    , taskListSize));","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":32}},{"path":"src/main/java/duke/handlers/SnoozeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"public class SnoozeHandler {","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse(TaskList taskList, String input) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"        if (input.length() \u003c\u003d 1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"            throw new DukeException(\"Please enter in the valid format: snooze taskNo/yyyy-mm-dd\");","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"        String[] updatedTask \u003d input.split(\"/\", 2);","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"        assert updatedTask.length \u003d\u003d 2: \"Invalid input\";","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"            int taskNo \u003d Integer.parseInt(updatedTask[0]) - 1;","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"            String newDate \u003d updatedTask[1];","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"            Task task \u003d taskList.get(taskNo);","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"            task.snooze(newDate);","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"            return (\"Got it! I\u0027ve snoozed the task!\");","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"            int taskListSize \u003d taskList.size();","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"            return (String.format(\"List size is %s. Please enter a valid input.\"","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"                    , taskListSize));","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"tienyu2000":29}},{"path":"src/main/java/duke/handlers/ToDoHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Todo;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"public class ToDoHandler {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"     * Handles the TODO command.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"     * Adds ToDo task to TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"     * @param taskList TaskList for the event task to be added to.","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"     * @param input Event to be added to TaskList.","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse(TaskList taskList, String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        String toDo \u003d input;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        if (toDo.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"        taskList.add(new Todo(toDo));","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"                + taskList.get(taskList.size()-1).toString()","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":24}},{"path":"src/main/java/duke/handlers/UnmarkHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.handlers;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"public class UnmarkHandler {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"     * Handles the UNMARK command","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"     * Unmarks a task as not completed according to its index.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"     * @param taskList TaskList containing a list of tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"     * @param input Contains index of the task to be marked as not completed.","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    public static String getResponse (TaskList taskList, String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"        int taskNo \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        assert taskNo \u003e\u003d 1: \"TaskList empty\";","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"            Task task \u003d taskList.get(taskNo - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"            task.setUndone();","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"            return (\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"                    + \"[\" + task.getStatusIcon() + \"] \" + task.getTaskName());","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"            int taskListSize \u003d taskList.size();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"            return (String.format(\"List size is %s. Please enter a valid input.\"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"                    , taskListSize));","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":27}},{"path":"src/main/java/duke/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.models;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"    protected FormatDate date;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"        this.date \u003d new FormatDate(by);","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.date + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"    public String toSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"        return \"D\" + super.toSave() + this.description + \"| \" + this.date;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"    public void snooze(String newDate) {","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"        this.date \u003d new FormatDate(newDate);","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"tienyu2000":24}},{"path":"src/main/java/duke/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.models;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"    protected FormatDate date;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"        this.date \u003d new FormatDate(at);","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        return \"[E]\" + super.toString() + \"(at: \"+ this.date + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    public String toSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"        return \"E\" + super.toSave() + this.description + \"| \" + this.date;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"    public void snooze(String newDate) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"        this.date \u003d new FormatDate(newDate);","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"tienyu2000":27}},{"path":"src/main/java/duke/models/FormatDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.models;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"public class FormatDate {","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    LocalDate formattedDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"    DateTimeFormatter formats \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"            .appendOptional(DateTimeFormatter.ISO_LOCAL_DATE)","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"))","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"            .toFormatter();","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    public FormatDate(String date) {","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        this.formattedDate \u003d LocalDate.parse(date, formats);","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"        return this.formattedDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":23}},{"path":"src/main/java/duke/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.models;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    protected int taskNumber;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"    public Task(String desc) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"        this.description \u003d desc;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"    public String toSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"        return (this.isDone ? \" | 1 | \" : \" | 0 | \");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"        return (isDone? \"X\": \" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"    public void setUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"tienyu2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"tienyu2000"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"tienyu2000"},"content":"        return this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"tienyu2000"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"tienyu2000"},"content":"        return this.taskNumber;","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"tienyu2000"},"content":"    public void snooze(String newDate) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"tienyu2000"},"content":"        return ;","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"tienyu2000":46}},{"path":"src/main/java/duke/models/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.models;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":7}},{"path":"src/main/java/duke/models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.models;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"    public Todo(String desc) {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"        super(desc);","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"    public String toSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"        return \"T\" + super.toSave() + this.description;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"    public void snooze(String newDate) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"        throw new DukeException(\"Unable to snooze a ToDo!\");","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"tienyu2000":23}},{"path":"src/main/java/duke/services/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.services;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.utils.Commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import static duke.utils.Commands.UNKNOWN;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"public class Parser {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"     * Parses a string input and returns an array containing the command and description.","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"     * @param input User input containing command and description.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"     * @return Array containing command and description.","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"    public String[] parseFullCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"     * Parses a string input and returns the command to be executed.","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"     * @param input User input containing command.","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"     * @return Command to be executed.","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"    public Commands parseCommand(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"        String[] wholeCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"        Commands command;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"            command \u003d Commands.valueOf(wholeCommand[0].toUpperCase());","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"            System.out.println(command.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"            command \u003d UNKNOWN;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"        return command;","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":32}},{"path":"src/main/java/duke/services/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.services;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"public class Ui {","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"    public static void dukePrint(String str) {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"        System.out.println(str);","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"    public void printError(DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"        dukePrint(\" ☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    public void printError(String str) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"        dukePrint((\" ☹ OOPS!!! \" + str));","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":17}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.storage;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Event;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Todo;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"import java.io.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"import static duke.services.Ui.dukePrint;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"public class Storage {","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    public static final String DIR_PATH \u003d \"./data\";","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    public static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"     * Saves the list of task in a tasklist into a .txt file as specified by the FILE_PATH.","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"     * @param taskList: ArrayList of tasks to save to the file.","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"     **/","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"tienyu2000"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"tienyu2000"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"tienyu2000"},"content":"                fw.write(task.toSave() + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"tienyu2000"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"tienyu2000"},"content":"            fw.close();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"tienyu2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"tienyu2000"},"content":"            dukePrint(String.format(\"Unable to write to file at (%s)\", FILE_PATH));","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"tienyu2000"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"tienyu2000"},"content":"     * Loads tasks from a .txt file as specified by FILE_PATH.","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"tienyu2000"},"content":"     * @return TaskList of tasks saved in the .txt file.","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"tienyu2000"},"content":"     **/","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"tienyu2000"},"content":"    public TaskList load() {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"tienyu2000"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"tienyu2000"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"tienyu2000"},"content":"            File file \u003d new File(DIR_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"tienyu2000"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"tienyu2000"},"content":"                file.mkdirs();","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"tienyu2000"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"tienyu2000"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"tienyu2000"},"content":"            String nextLine;","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"tienyu2000"},"content":"            while ((nextLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"tienyu2000"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"tienyu2000"},"content":"                    String[] lineElem \u003d nextLine.split(\"\\\\| \");","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"tienyu2000"},"content":"                    if (lineElem[0].trim().equals(\"T\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"tienyu2000"},"content":"                        taskList.add(new Todo(lineElem[2]));","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"tienyu2000"},"content":"                        if (lineElem[2].trim().equals(\"1\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"tienyu2000"},"content":"                            taskList.get(taskList.size() - 1).setDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"tienyu2000"},"content":"                        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"tienyu2000"},"content":"                            taskList.get(taskList.size() - 1).setUndone();","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"tienyu2000"},"content":"                        }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"tienyu2000"},"content":"                    } else if (lineElem[0].trim().equals(\"D\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"tienyu2000"},"content":"                        taskList.add(new Deadline(lineElem[2], lineElem[3]));","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"tienyu2000"},"content":"                        if (lineElem[1].trim().equals(\"1\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"tienyu2000"},"content":"                            taskList.get(taskList.size() - 1).setDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"tienyu2000"},"content":"                        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"tienyu2000"},"content":"                            taskList.get(taskList.size() - 1).setUndone();","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"tienyu2000"},"content":"                        }","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"tienyu2000"},"content":"                    } else if (lineElem[0].trim().equals(\"E\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"tienyu2000"},"content":"                        taskList.add(new Event(lineElem[2], lineElem[3]));","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"tienyu2000"},"content":"                        if (lineElem[1].trim().equals(\"1\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"tienyu2000"},"content":"                            taskList.get(taskList.size() - 1).setDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"tienyu2000"},"content":"                        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"tienyu2000"},"content":"                            taskList.get(taskList.size() - 1).setUndone();","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"tienyu2000"},"content":"                        }","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"tienyu2000"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"tienyu2000"},"content":"                } catch (IllegalStateException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"tienyu2000"},"content":"                    dukePrint(\"Invalid line\");","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"tienyu2000"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"tienyu2000"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"tienyu2000"},"content":"            return taskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"tienyu2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"tienyu2000"},"content":"            dukePrint(String.format(\"File (%s) not found!\", FILE_PATH));","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"tienyu2000"},"content":"            return new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"tienyu2000"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":81}},{"path":"src/main/java/duke/utils/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.utils;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"public enum Commands {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"    BYE, DEADLINE, DELETE, EVENT, FIND, LIST, MARK, TODO, UNKNOWN, UNMARK, SNOOZE","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":5}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"tienyu2000":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"tienyu2000":19}},{"path":"src/test/java/duke/eventTest/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.eventTest;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Event;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"public class EventTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"    Task newEvent \u003d new Event(\"this is a test \", \"2022-08-31\");","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"    public void initiateEventTest() {","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"        assertEquals(\"[E][ ] this is a test (at: Aug 31 2022)\", newEvent.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"    public void markEventTest() {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"        newEvent.setDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"        assertEquals(\"[E][X] this is a test (at: Aug 31 2022)\", newEvent.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":22}},{"path":"src/test/java/duke/tasklistTest/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"package duke.tasklistTest.;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Event;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"import duke.models.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"import duke.models.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"tienyu2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"tienyu2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"tienyu2000"},"content":"public class TasklistTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"tienyu2000"},"content":"    Task newEvent \u003d new Event(\"this is a test \", \"2022-08-31\");","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"tienyu2000"},"content":"    TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"tienyu2000"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"tienyu2000"},"content":"    public void TaskListTest() {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"tienyu2000"},"content":"        newTaskList.add(newEvent);","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"tienyu2000"},"content":"        assertEquals(\"[E][ ] this is a test (at: Aug 31 2022)\", newTaskList.get(0).toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"tienyu2000"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"tienyu2000"},"content":"","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"tienyu2000":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tienyu2000"},"content":"deadline submit assignment /by mon","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"tienyu2000"},"content":"todo go for training","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"tienyu2000"},"content":"event CS2103T lecture /at 4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"tienyu2000"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"tienyu2000"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"tienyu2000":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tienyu2000"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tienyu2000":1,"-":20}}]

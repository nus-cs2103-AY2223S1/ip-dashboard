[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ekweirui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"ekweirui"},"content":"    protected String by;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"ekweirui"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"ekweirui"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"ekweirui"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"ekweirui"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"ekweirui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"ekweirui"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"ekweirui"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"ekweirui":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ekweirui"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"ekweirui"},"content":"    protected String duration;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"ekweirui"},"content":"    public Event(String description, String duration) {","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"ekweirui"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"ekweirui"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"ekweirui"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"ekweirui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"ekweirui"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.duration + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"ekweirui"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"ekweirui":13}},{"path":"src/main/java/Sky.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ekweirui"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"ekweirui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"ekweirui"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"ekweirui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"ekweirui"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"ekweirui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"ekweirui"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"ekweirui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"ekweirui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"ekweirui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"ekweirui"},"content":"import java.util.List;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"ekweirui"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"ekweirui"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"ekweirui"},"content":"public class Sky {","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"ekweirui"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"ekweirui"},"content":"    private static final String PATH_NAME_FOR_DATA \u003d \"data/sky.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"ekweirui"},"content":"    public void greetUser() {","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"ekweirui"},"content":"        System.out.println(\"  ____________________________________________________________\");","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"ekweirui"},"content":"        System.out.println(\"  Hello from Sky!\\n  Your heavenly chatbot to help you track your things.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"ekweirui"},"content":"        System.out.println(\"  ____________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"ekweirui"},"content":"    public void endConvo() {","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"ekweirui"},"content":"        System.out.println(\"  Bye. May all your endeavours fly high!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"ekweirui"},"content":"        System.out.println(\"  ____________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"ekweirui"},"content":"    public void printsList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"ekweirui"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  \" + (i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"ekweirui"},"content":"    public void markATask(String userInput) {","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"ekweirui"},"content":"            String taskNumInString \u003d userInput.substring(5);","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"ekweirui"},"content":"            // Minus one as arrayList is zero-indexed","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"ekweirui"},"content":"            int taskNum \u003d Integer.parseInt(taskNumInString) - 1;","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"ekweirui"},"content":"            Task task \u003d taskList.get(taskNum);","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"ekweirui"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"ekweirui"},"content":"            this.reWriteDataFile(PATH_NAME_FOR_DATA);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Wow... who would have thought you had it in you... I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"ekweirui"},"content":"                    \"    \" + task);","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  You have either not entered any number to indicate which task I should mark, \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"ekweirui"},"content":"                    \"  or you entered an invalid task number.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"ekweirui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Are you new? Enter a number after typing mark.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"ekweirui"},"content":"    public void unmarkATask(String userInput) {","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"ekweirui"},"content":"            String taskNumInString \u003d userInput.substring(7);","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"ekweirui"},"content":"            // Minus one as arrayList is zero-indexed","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"ekweirui"},"content":"            int taskNum \u003d Integer.parseInt(taskNumInString) - 1;","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"ekweirui"},"content":"            Task task \u003d taskList.get(taskNum);","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"ekweirui"},"content":"            task.markAsUndone();","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"ekweirui"},"content":"            this.reWriteDataFile(PATH_NAME_FOR_DATA);","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Well, that\u0027s disappointing. I\u0027ve marked this task as undone: \\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"ekweirui"},"content":"                    \"    \" + task);","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  You have either not entered any number to indicate which task I should unmark, \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"ekweirui"},"content":"                    \"  or you entered an invalid task number.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"ekweirui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":69,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Are you new? Enter a number after typing unmark.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":72,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":73,"author":{"gitId":"ekweirui"},"content":"    public void addToDo(String userInput) {","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"ekweirui"},"content":"            String taskToDo \u003d userInput.substring(5);","lastModifiedDate":"2022-08-16"},{"lineNumber":76,"author":{"gitId":"ekweirui"},"content":"            Task task \u003d new ToDo(taskToDo);","lastModifiedDate":"2022-08-16"},{"lineNumber":77,"author":{"gitId":"ekweirui"},"content":"            taskList.add(task);","lastModifiedDate":"2022-08-16"},{"lineNumber":78,"author":{"gitId":"ekweirui"},"content":"            // Add task into data file","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"ekweirui"},"content":"            this.appendToFile(PATH_NAME_FOR_DATA, task.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":81,"author":{"gitId":"ekweirui"},"content":"                    \"    \" + task +","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"ekweirui"},"content":"                    \"\\n  Now you have \" + taskList.size() +","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"ekweirui"},"content":"                    (taskList.size() \u003c\u003d 1 ? \" task in the list.\": \" tasks in the list.\"));","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":85,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Are you new? Specify a task after typing todo.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":88,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":89,"author":{"gitId":"ekweirui"},"content":"    public void addDeadLine(String userInput) {","lastModifiedDate":"2022-08-16"},{"lineNumber":90,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":91,"author":{"gitId":"ekweirui"},"content":"            String taskDeadline \u003d userInput.substring(9);","lastModifiedDate":"2022-08-16"},{"lineNumber":92,"author":{"gitId":"ekweirui"},"content":"            String[] arrOfStrings \u003d taskDeadline.split(\" /by \");","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"ekweirui"},"content":"            if (arrOfStrings.length !\u003d 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"ekweirui"},"content":"                throw new TextNoMeaningException(\"  Make sure you specify \\\"/by\\\" exactly once.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":96,"author":{"gitId":"ekweirui"},"content":"            String taskDescription \u003d arrOfStrings[0];","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"ekweirui"},"content":"            String taskByUserInput \u003d arrOfStrings[1];","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"ekweirui"},"content":"            String taskBy \u003d produceDateAndTimeForDeadline(taskByUserInput);","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"ekweirui"},"content":"            Task task \u003d new Deadline(taskDescription, taskBy);","lastModifiedDate":"2022-08-16"},{"lineNumber":100,"author":{"gitId":"ekweirui"},"content":"            taskList.add(task);","lastModifiedDate":"2022-08-16"},{"lineNumber":101,"author":{"gitId":"ekweirui"},"content":"            // Add task into data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"ekweirui"},"content":"            this.appendToFile(PATH_NAME_FOR_DATA, task.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":104,"author":{"gitId":"ekweirui"},"content":"                    \"    \" + task +","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"ekweirui"},"content":"                    \"\\n  Now you have \" + taskList.size() +","lastModifiedDate":"2022-08-16"},{"lineNumber":106,"author":{"gitId":"ekweirui"},"content":"                    (taskList.size() \u003c\u003d 1 ? \" task in the list.\": \" tasks in the list.\"));","lastModifiedDate":"2022-08-16"},{"lineNumber":107,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  You have either not entered any text after typing deadline, \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":109,"author":{"gitId":"ekweirui"},"content":"                    \"  or you have positioned your slash wrongly.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":110,"author":{"gitId":"ekweirui"},"content":"        } catch (PatternSyntaxException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  There is a problem with the regex expression written by the dev.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"ekweirui"},"content":"        } catch (TextNoMeaningException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"ekweirui"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":115,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":116,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":117,"author":{"gitId":"ekweirui"},"content":"    public void addEvent(String userInput) {","lastModifiedDate":"2022-08-16"},{"lineNumber":118,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":119,"author":{"gitId":"ekweirui"},"content":"            String taskEvent \u003d userInput.substring(6);","lastModifiedDate":"2022-08-16"},{"lineNumber":120,"author":{"gitId":"ekweirui"},"content":"            String[] arrOfStrings \u003d taskEvent.split(\" /at \");","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"ekweirui"},"content":"            if (arrOfStrings.length !\u003d 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"ekweirui"},"content":"                throw new TextNoMeaningException(\"  Make sure you specify \\\"/at\\\" exactly once.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":124,"author":{"gitId":"ekweirui"},"content":"            String taskDescription \u003d arrOfStrings[0];","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"ekweirui"},"content":"            String taskDurationUserInput \u003d arrOfStrings[1];","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"ekweirui"},"content":"            String taskDuration \u003d produceDateAndTimeForEvent(taskDurationUserInput);","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"ekweirui"},"content":"            Task task \u003d new Event(taskDescription, taskDuration);","lastModifiedDate":"2022-08-16"},{"lineNumber":128,"author":{"gitId":"ekweirui"},"content":"            taskList.add(task);","lastModifiedDate":"2022-08-16"},{"lineNumber":129,"author":{"gitId":"ekweirui"},"content":"            // Add task into data file","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"ekweirui"},"content":"            this.appendToFile(PATH_NAME_FOR_DATA, task.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":132,"author":{"gitId":"ekweirui"},"content":"                    \"    \" + task +","lastModifiedDate":"2022-08-16"},{"lineNumber":133,"author":{"gitId":"ekweirui"},"content":"                    \"\\n  Now you have \" + taskList.size() +","lastModifiedDate":"2022-08-16"},{"lineNumber":134,"author":{"gitId":"ekweirui"},"content":"                    (taskList.size() \u003c\u003d 1 ? \" task in the list.\": \" tasks in the list.\"));","lastModifiedDate":"2022-08-16"},{"lineNumber":135,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":136,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  You have either not entered any text after typing event, \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":137,"author":{"gitId":"ekweirui"},"content":"                    \"  or you have positioned your slash wrongly.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":138,"author":{"gitId":"ekweirui"},"content":"        } catch (PatternSyntaxException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  There is a problem with the regex expression written by the dev.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"ekweirui"},"content":"        } catch (TextNoMeaningException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"ekweirui"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":143,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":144,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":145,"author":{"gitId":"ekweirui"},"content":"    public void handleInvalidInput() {","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"ekweirui"},"content":"            throw new TextNoMeaningException(\"  Are you new? Type a command that I actually know.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"ekweirui"},"content":"        } catch (TextNoMeaningException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"ekweirui"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-17"},{"lineNumber":150,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":151,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":152,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":153,"author":{"gitId":"ekweirui"},"content":"    public void deleteTask(String userInput) {","lastModifiedDate":"2022-08-17"},{"lineNumber":154,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":155,"author":{"gitId":"ekweirui"},"content":"            String taskNumInString \u003d userInput.substring(7);","lastModifiedDate":"2022-08-17"},{"lineNumber":156,"author":{"gitId":"ekweirui"},"content":"            // Minus one as arrayList is zero-indexed","lastModifiedDate":"2022-08-17"},{"lineNumber":157,"author":{"gitId":"ekweirui"},"content":"            int taskNum \u003d Integer.parseInt(taskNumInString) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":158,"author":{"gitId":"ekweirui"},"content":"            Task task \u003d taskList.get(taskNum);","lastModifiedDate":"2022-08-17"},{"lineNumber":159,"author":{"gitId":"ekweirui"},"content":"            taskList.remove(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":160,"author":{"gitId":"ekweirui"},"content":"            this.reWriteDataFile(PATH_NAME_FOR_DATA);","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Splendid. I\u0027ve removed this task: \\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":162,"author":{"gitId":"ekweirui"},"content":"                    \"    \" + task +","lastModifiedDate":"2022-08-17"},{"lineNumber":163,"author":{"gitId":"ekweirui"},"content":"                    \"\\n  Now you have \" + taskList.size() +","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"ekweirui"},"content":"                    (taskList.size() \u003c\u003d 1 ? \" task in the list.\": \" tasks in the list.\"));","lastModifiedDate":"2022-08-17"},{"lineNumber":165,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":166,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  You have either not entered any number to indicate which task I should delete, \\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":167,"author":{"gitId":"ekweirui"},"content":"                    \"  or you entered an invalid task number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":168,"author":{"gitId":"ekweirui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":169,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Are you new? Enter a number after typing delete.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":170,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":171,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":172,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":173,"author":{"gitId":"ekweirui"},"content":"    public void appendToFile(String filePath, String textToAdd) {","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"ekweirui"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"ekweirui"},"content":"        this.createFileIfNecessary(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"ekweirui"},"content":"        // Append to the file","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"ekweirui"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"ekweirui"},"content":"            fw.write(textToAdd + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"ekweirui"},"content":"            fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"ekweirui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":186,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"ekweirui"},"content":"    public void writeToFile(String filePath, String textToWrite) {","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"ekweirui"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":189,"author":{"gitId":"ekweirui"},"content":"        this.createFileIfNecessary(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":190,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"ekweirui"},"content":"        // Write to the file","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"ekweirui"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"ekweirui"},"content":"            fw.write(textToWrite + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":195,"author":{"gitId":"ekweirui"},"content":"            fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"ekweirui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":197,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"ekweirui"},"content":"    public void readFromFile(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"ekweirui"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":203,"author":{"gitId":"ekweirui"},"content":"        this.createFileIfNecessary(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":204,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":205,"author":{"gitId":"ekweirui"},"content":"        // Read and print the file\u0027s content.","lastModifiedDate":"2022-08-21"},{"lineNumber":206,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":207,"author":{"gitId":"ekweirui"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":208,"author":{"gitId":"ekweirui"},"content":"            while(scanner.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":209,"author":{"gitId":"ekweirui"},"content":"                System.out.println(scanner.nextLine());","lastModifiedDate":"2022-08-21"},{"lineNumber":210,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":211,"author":{"gitId":"ekweirui"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":212,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"Unable to detect file: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":213,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":214,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":215,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":216,"author":{"gitId":"ekweirui"},"content":"    // If the file does not yet exist, we create all the necessary parent directories and file.","lastModifiedDate":"2022-08-21"},{"lineNumber":217,"author":{"gitId":"ekweirui"},"content":"    public void createFileIfNecessary(File file) {","lastModifiedDate":"2022-08-21"},{"lineNumber":218,"author":{"gitId":"ekweirui"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":219,"author":{"gitId":"ekweirui"},"content":"            // If the file doesn\u0027t exist yet, mkdirs() will assume everything specified is a","lastModifiedDate":"2022-08-21"},{"lineNumber":220,"author":{"gitId":"ekweirui"},"content":"            // directory and creates it as such. By using getParentFile(), we leave the creation of","lastModifiedDate":"2022-08-21"},{"lineNumber":221,"author":{"gitId":"ekweirui"},"content":"            // the file itself to createNewFile().","lastModifiedDate":"2022-08-21"},{"lineNumber":222,"author":{"gitId":"ekweirui"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2022-08-21"},{"lineNumber":223,"author":{"gitId":"ekweirui"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":224,"author":{"gitId":"ekweirui"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":225,"author":{"gitId":"ekweirui"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":226,"author":{"gitId":"ekweirui"},"content":"                System.out.println(\"Error with creating a file at specified path name: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":227,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":228,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":229,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":230,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":231,"author":{"gitId":"ekweirui"},"content":"    // Re-write the entire data file","lastModifiedDate":"2022-08-21"},{"lineNumber":232,"author":{"gitId":"ekweirui"},"content":"    public void reWriteDataFile(String pathName) {","lastModifiedDate":"2022-08-21"},{"lineNumber":233,"author":{"gitId":"ekweirui"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":234,"author":{"gitId":"ekweirui"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-08-21"},{"lineNumber":235,"author":{"gitId":"ekweirui"},"content":"                this.writeToFile(pathName, taskList.get(i).toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":236,"author":{"gitId":"ekweirui"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":237,"author":{"gitId":"ekweirui"},"content":"                this.appendToFile(pathName, taskList.get(i).toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":238,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":239,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":240,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":241,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":242,"author":{"gitId":"ekweirui"},"content":"    public void addTasksFromDataFileToTaskList(String pathName) {","lastModifiedDate":"2022-08-21"},{"lineNumber":243,"author":{"gitId":"ekweirui"},"content":"        File file \u003d new File(pathName);","lastModifiedDate":"2022-08-21"},{"lineNumber":244,"author":{"gitId":"ekweirui"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":245,"author":{"gitId":"ekweirui"},"content":"            return;","lastModifiedDate":"2022-08-21"},{"lineNumber":246,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":247,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":248,"author":{"gitId":"ekweirui"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-21"},{"lineNumber":249,"author":{"gitId":"ekweirui"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":250,"author":{"gitId":"ekweirui"},"content":"                String textLine \u003d scanner.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":251,"author":{"gitId":"ekweirui"},"content":"                char taskType \u003d textLine.charAt(1);","lastModifiedDate":"2022-08-21"},{"lineNumber":252,"author":{"gitId":"ekweirui"},"content":"                boolean isMarked \u003d textLine.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-08-21"},{"lineNumber":253,"author":{"gitId":"ekweirui"},"content":"                String description \u003d textLine.substring(7);","lastModifiedDate":"2022-08-21"},{"lineNumber":254,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":255,"author":{"gitId":"ekweirui"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-08-21"},{"lineNumber":256,"author":{"gitId":"ekweirui"},"content":"                    Task task \u003d new ToDo(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":257,"author":{"gitId":"ekweirui"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":258,"author":{"gitId":"ekweirui"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-08-21"},{"lineNumber":259,"author":{"gitId":"ekweirui"},"content":"                    int indexOfBracket \u003d -1;","lastModifiedDate":"2022-08-21"},{"lineNumber":260,"author":{"gitId":"ekweirui"},"content":"                    for (int i \u003d 0; i \u003c description.length(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":261,"author":{"gitId":"ekweirui"},"content":"                        if (description.charAt(i) \u003d\u003d \u0027(\u0027) {","lastModifiedDate":"2022-08-21"},{"lineNumber":262,"author":{"gitId":"ekweirui"},"content":"                            indexOfBracket \u003d i;","lastModifiedDate":"2022-08-21"},{"lineNumber":263,"author":{"gitId":"ekweirui"},"content":"                        }","lastModifiedDate":"2022-08-21"},{"lineNumber":264,"author":{"gitId":"ekweirui"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":265,"author":{"gitId":"ekweirui"},"content":"                    String taskDescription \u003d description.substring(0, indexOfBracket - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":266,"author":{"gitId":"ekweirui"},"content":"                    String taskBy \u003d description.substring(indexOfBracket + 5, description.length() - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":267,"author":{"gitId":"ekweirui"},"content":"                    Task task \u003d new Deadline(taskDescription, taskBy);","lastModifiedDate":"2022-08-21"},{"lineNumber":268,"author":{"gitId":"ekweirui"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":269,"author":{"gitId":"ekweirui"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":270,"author":{"gitId":"ekweirui"},"content":"                    int indexOfBracket \u003d -1;","lastModifiedDate":"2022-08-21"},{"lineNumber":271,"author":{"gitId":"ekweirui"},"content":"                    for (int i \u003d 0; i \u003c description.length(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":272,"author":{"gitId":"ekweirui"},"content":"                        if (description.charAt(i) \u003d\u003d \u0027(\u0027) {","lastModifiedDate":"2022-08-21"},{"lineNumber":273,"author":{"gitId":"ekweirui"},"content":"                            indexOfBracket \u003d i;","lastModifiedDate":"2022-08-21"},{"lineNumber":274,"author":{"gitId":"ekweirui"},"content":"                        }","lastModifiedDate":"2022-08-21"},{"lineNumber":275,"author":{"gitId":"ekweirui"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":276,"author":{"gitId":"ekweirui"},"content":"                    String taskDescription \u003d description.substring(0, indexOfBracket - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":277,"author":{"gitId":"ekweirui"},"content":"                    String taskDuration \u003d description.substring(indexOfBracket + 5, description.length() - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":278,"author":{"gitId":"ekweirui"},"content":"                    Task task \u003d new Event(taskDescription, taskDuration);","lastModifiedDate":"2022-08-21"},{"lineNumber":279,"author":{"gitId":"ekweirui"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":280,"author":{"gitId":"ekweirui"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":281,"author":{"gitId":"ekweirui"},"content":"                if (isMarked) {","lastModifiedDate":"2022-08-21"},{"lineNumber":282,"author":{"gitId":"ekweirui"},"content":"                    taskList.get(taskList.size() - 1).markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":283,"author":{"gitId":"ekweirui"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":284,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":285,"author":{"gitId":"ekweirui"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":286,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"Unable to detect file: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":287,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":288,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"Error parsing data from data file.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":289,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":290,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":291,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":292,"author":{"gitId":"ekweirui"},"content":"    public String produceDateAndTimeForEvent(String s) throws TextNoMeaningException {","lastModifiedDate":"2022-08-22"},{"lineNumber":293,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":294,"author":{"gitId":"ekweirui"},"content":"            String[] arrOfStrings \u003d s.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":295,"author":{"gitId":"ekweirui"},"content":"            if (arrOfStrings.length !\u003d 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":296,"author":{"gitId":"ekweirui"},"content":"                throw new TextNoMeaningException(\"  Provide the date and time after \\\"/at\\\".\");","lastModifiedDate":"2022-08-22"},{"lineNumber":297,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":298,"author":{"gitId":"ekweirui"},"content":"            String dateGiven \u003d arrOfStrings[0].replaceAll(\"/\", \"-\");","lastModifiedDate":"2022-08-22"},{"lineNumber":299,"author":{"gitId":"ekweirui"},"content":"            LocalDate d1 \u003d LocalDate.parse(dateGiven);","lastModifiedDate":"2022-08-22"},{"lineNumber":300,"author":{"gitId":"ekweirui"},"content":"            String dateString \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":301,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":302,"author":{"gitId":"ekweirui"},"content":"            String timeGiven1 \u003d arrOfStrings[1].substring(0, 2) + \":\" + arrOfStrings[1].substring(2, 4);","lastModifiedDate":"2022-08-22"},{"lineNumber":303,"author":{"gitId":"ekweirui"},"content":"            String timeGiven2 \u003d arrOfStrings[1].substring(5, 7) + \":\" + arrOfStrings[1].substring(7);","lastModifiedDate":"2022-08-22"},{"lineNumber":304,"author":{"gitId":"ekweirui"},"content":"            LocalTime t1 \u003d LocalTime.parse(timeGiven1);","lastModifiedDate":"2022-08-22"},{"lineNumber":305,"author":{"gitId":"ekweirui"},"content":"            LocalTime t2 \u003d LocalTime.parse(timeGiven2);","lastModifiedDate":"2022-08-22"},{"lineNumber":306,"author":{"gitId":"ekweirui"},"content":"            String timeString1 \u003d t1.format(DateTimeFormatter.ofPattern(\"h:mma\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":307,"author":{"gitId":"ekweirui"},"content":"            String timeString2 \u003d t2.format(DateTimeFormatter.ofPattern(\"h:mma\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":308,"author":{"gitId":"ekweirui"},"content":"            String finalTimeString \u003d timeString1 + \"-\" + timeString2;","lastModifiedDate":"2022-08-22"},{"lineNumber":309,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":310,"author":{"gitId":"ekweirui"},"content":"            return dateString + \", \" + finalTimeString;","lastModifiedDate":"2022-08-22"},{"lineNumber":311,"author":{"gitId":"ekweirui"},"content":"        } catch (PatternSyntaxException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":312,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  There is a problem with the regex expression written by the dev.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":313,"author":{"gitId":"ekweirui"},"content":"        } catch (TextNoMeaningException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":314,"author":{"gitId":"ekweirui"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":315,"author":{"gitId":"ekweirui"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":316,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Date and/or time given cannot be parsed.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":317,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Provide date and time as: \\\"yyyy/mm/dd XXXX-XXXX\\\", where XXXX is time in 24-hours.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":318,"author":{"gitId":"ekweirui"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":319,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Unable to format date and/or time.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":320,"author":{"gitId":"ekweirui"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":321,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Provide date and time as: \\\"yyyy/mm/dd XXXX-XXXX\\\", where XXXX is time in 24-hours.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":322,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":323,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Provide time as: XXXX-XXXX, in 24-hours standard.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":324,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":325,"author":{"gitId":"ekweirui"},"content":"        throw new TextNoMeaningException(\"  Are you that bad? Come on.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":326,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":327,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":328,"author":{"gitId":"ekweirui"},"content":"    public String produceDateAndTimeForDeadline(String s) throws TextNoMeaningException {","lastModifiedDate":"2022-08-22"},{"lineNumber":329,"author":{"gitId":"ekweirui"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":330,"author":{"gitId":"ekweirui"},"content":"            String[] arrOfStrings \u003d s.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":331,"author":{"gitId":"ekweirui"},"content":"            if (arrOfStrings.length !\u003d 1 \u0026\u0026 arrOfStrings.length !\u003d2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":332,"author":{"gitId":"ekweirui"},"content":"                throw new TextNoMeaningException(\"  Provide the date and time after \\\"/by\\\".\");","lastModifiedDate":"2022-08-22"},{"lineNumber":333,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":334,"author":{"gitId":"ekweirui"},"content":"            String dateGiven \u003d arrOfStrings[0].replaceAll(\"/\", \"-\");","lastModifiedDate":"2022-08-22"},{"lineNumber":335,"author":{"gitId":"ekweirui"},"content":"            LocalDate d1 \u003d LocalDate.parse(dateGiven);","lastModifiedDate":"2022-08-22"},{"lineNumber":336,"author":{"gitId":"ekweirui"},"content":"            String dateString \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":337,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":338,"author":{"gitId":"ekweirui"},"content":"            // If time is provided","lastModifiedDate":"2022-08-22"},{"lineNumber":339,"author":{"gitId":"ekweirui"},"content":"            if (arrOfStrings.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":340,"author":{"gitId":"ekweirui"},"content":"                String timeGiven \u003d arrOfStrings[1].substring(0, 2) + \":\" + arrOfStrings[1].substring(2);","lastModifiedDate":"2022-08-22"},{"lineNumber":341,"author":{"gitId":"ekweirui"},"content":"                LocalTime t1 \u003d LocalTime.parse(timeGiven);","lastModifiedDate":"2022-08-22"},{"lineNumber":342,"author":{"gitId":"ekweirui"},"content":"                String timeString \u003d t1.format(DateTimeFormatter.ofPattern(\"h:mma\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":343,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":344,"author":{"gitId":"ekweirui"},"content":"                return dateString + \", \" + timeString;","lastModifiedDate":"2022-08-22"},{"lineNumber":345,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":346,"author":{"gitId":"ekweirui"},"content":"            return dateString;","lastModifiedDate":"2022-08-22"},{"lineNumber":347,"author":{"gitId":"ekweirui"},"content":"        } catch (PatternSyntaxException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":348,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  There is a problem with the regex expression written by the dev.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":349,"author":{"gitId":"ekweirui"},"content":"        } catch (TextNoMeaningException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":350,"author":{"gitId":"ekweirui"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":351,"author":{"gitId":"ekweirui"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":352,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Date and/or time given cannot be parsed.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":353,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Provide date and time as: \\\"yyyy/mm/dd XXXX\\\", where XXXX is time in 24-hours.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":354,"author":{"gitId":"ekweirui"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":355,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Unable to format date and/or time.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":356,"author":{"gitId":"ekweirui"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":357,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Provide date and time as: \\\"yyyy/mm/dd XXXX\\\", where XXXX is time in 24-hours.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":358,"author":{"gitId":"ekweirui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":359,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  Provide time as: XXXX, in 24-hours standard.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":360,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":361,"author":{"gitId":"ekweirui"},"content":"        throw new TextNoMeaningException(\"  Are you that bad? Come on.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":362,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":363,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":364,"author":{"gitId":"ekweirui"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-16"},{"lineNumber":365,"author":{"gitId":"ekweirui"},"content":"        Sky sky \u003d new Sky();","lastModifiedDate":"2022-08-16"},{"lineNumber":366,"author":{"gitId":"ekweirui"},"content":"        sky.greetUser();","lastModifiedDate":"2022-08-16"},{"lineNumber":367,"author":{"gitId":"ekweirui"},"content":"        sky.addTasksFromDataFileToTaskList(PATH_NAME_FOR_DATA);","lastModifiedDate":"2022-08-21"},{"lineNumber":368,"author":{"gitId":"ekweirui"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-16"},{"lineNumber":369,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":370,"author":{"gitId":"ekweirui"},"content":"        while (true) {","lastModifiedDate":"2022-08-16"},{"lineNumber":371,"author":{"gitId":"ekweirui"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2022-08-16"},{"lineNumber":372,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  ____________________________________________________________\");","lastModifiedDate":"2022-08-16"},{"lineNumber":373,"author":{"gitId":"ekweirui"},"content":"            if (userInput.startsWith(\"bye\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":374,"author":{"gitId":"ekweirui"},"content":"                sky.endConvo();","lastModifiedDate":"2022-08-16"},{"lineNumber":375,"author":{"gitId":"ekweirui"},"content":"                break;","lastModifiedDate":"2022-08-16"},{"lineNumber":376,"author":{"gitId":"ekweirui"},"content":"            } else if (userInput.startsWith(\"list\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":377,"author":{"gitId":"ekweirui"},"content":"                sky.printsList();","lastModifiedDate":"2022-08-16"},{"lineNumber":378,"author":{"gitId":"ekweirui"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":379,"author":{"gitId":"ekweirui"},"content":"                sky.markATask(userInput);","lastModifiedDate":"2022-08-16"},{"lineNumber":380,"author":{"gitId":"ekweirui"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":381,"author":{"gitId":"ekweirui"},"content":"                sky.unmarkATask(userInput);","lastModifiedDate":"2022-08-16"},{"lineNumber":382,"author":{"gitId":"ekweirui"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":383,"author":{"gitId":"ekweirui"},"content":"                sky.addToDo(userInput);","lastModifiedDate":"2022-08-16"},{"lineNumber":384,"author":{"gitId":"ekweirui"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":385,"author":{"gitId":"ekweirui"},"content":"                sky.addDeadLine(userInput);","lastModifiedDate":"2022-08-16"},{"lineNumber":386,"author":{"gitId":"ekweirui"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":387,"author":{"gitId":"ekweirui"},"content":"                sky.addEvent(userInput);","lastModifiedDate":"2022-08-16"},{"lineNumber":388,"author":{"gitId":"ekweirui"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":389,"author":{"gitId":"ekweirui"},"content":"                sky.deleteTask(userInput);","lastModifiedDate":"2022-08-17"},{"lineNumber":390,"author":{"gitId":"ekweirui"},"content":"            } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":391,"author":{"gitId":"ekweirui"},"content":"                sky.handleInvalidInput();","lastModifiedDate":"2022-08-17"},{"lineNumber":392,"author":{"gitId":"ekweirui"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":393,"author":{"gitId":"ekweirui"},"content":"            System.out.println(\"  ____________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":394,"author":{"gitId":"ekweirui"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":395,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":396,"author":{"gitId":"ekweirui"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"ekweirui":396}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ekweirui"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"ekweirui"},"content":"    protected String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"ekweirui"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"ekweirui"},"content":"    public Task() {","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"ekweirui"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"ekweirui"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"ekweirui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"ekweirui"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"ekweirui"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"ekweirui"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"ekweirui"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"ekweirui"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"ekweirui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"ekweirui"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"ekweirui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"ekweirui"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"ekweirui"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"ekweirui":29}},{"path":"src/main/java/TextNoMeaningException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ekweirui"},"content":"public class TextNoMeaningException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"ekweirui"},"content":"    String message;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"ekweirui"},"content":"    TextNoMeaningException(String str) {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"ekweirui"},"content":"        message \u003d str;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"ekweirui"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"ekweirui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"ekweirui"},"content":"        return message;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"ekweirui"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"ekweirui":11}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ekweirui"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"ekweirui"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"ekweirui"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"ekweirui"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"ekweirui"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"ekweirui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"ekweirui"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"ekweirui"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"ekweirui"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"ekweirui":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ekweirui"},"content":"todo read book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"ekweirui"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"ekweirui"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"ekweirui"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"ekweirui"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"ekweirui"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"ekweirui"},"content":"todo join sports club","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"ekweirui"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"ekweirui"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"ekweirui"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"ekweirui"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"ekweirui"},"content":"blah","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"ekweirui"},"content":"delete 3","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"ekweirui"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"ekweirui"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"ekweirui":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ekweirui"},"content":"java -classpath ..\\bin Sky \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ekweirui":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ekweirui"},"content":"java -classpath ../bin Sky \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ekweirui":1,"-":37}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"    mainClassName \u003d \"dan.Dan\"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"    archiveBaseName \u003d \"dan\"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lulucopter":2,"-":39}},{"path":"src/main/java/Dan/Dan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":"import java.nio.file.NoSuchFileException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"import dan.task.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"import dan.tasklistreader.TaskListReader;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"import dan.parser.Parser;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"import dan.ui.Ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":" * Dan is a personal chat bot that helps its user keep track of tasks. It currently supports the following commands:","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":" * 1.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":" * @author Daniel Lee","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":" * @version 0.1","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"public class Dan {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"    private TaskListReader tlr;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"     * Initialises the chat bot, Dan.","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"     * The application reads the data file specified at its default storage location to generate it\u0027s list of tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"     * If the file is not found, a new data file is created.","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"     * default storage location: src/main/data","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"     * @param fileName Name of the data storage file","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"    public Dan(String fileName) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"        tlr \u003d new TaskListReader(fileName);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"            tasks \u003d new TaskList(tlr.readTaskListFromFile());","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"lulucopter"},"content":"            parser \u003d new Parser(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"lulucopter"},"content":"        } catch (NoSuchFileException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"lulucopter"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"lulucopter"},"content":"                Ui.printIndent(\"Task list data not found, creating new data file...\");","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"lulucopter"},"content":"                tlr.createFile();","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"lulucopter"},"content":"                Ui.printIndent(String.format(\"Data file created at %s\\n Please start me again.\", tlr.getPath()));","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"lulucopter"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"lulucopter"},"content":"                ioe.printStackTrace();","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"lulucopter"},"content":"                Ui.printIndent(\"Error when creating new data file\");","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"lulucopter"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"lulucopter"},"content":"            ioe.printStackTrace();","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"lulucopter"},"content":"            Ui.printIndent(\"Error when reading current data file\");","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"lulucopter"},"content":"     * Runs the chat bot.","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"lulucopter"},"content":"    public void run() {","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"lulucopter"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"lulucopter"},"content":"        Ui.greet();","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"lulucopter"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"lulucopter"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"lulucopter"},"content":"            try {","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"lulucopter"},"content":"                String input \u003d sc.nextLine().strip();","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"lulucopter"},"content":"                isExit \u003d parser.parse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"lulucopter"},"content":"                tlr.writeTaskListToFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"lulucopter"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"lulucopter"},"content":"                Ui.printIndent(ioe.getMessage() + \"Error when creating saving to data file\");","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"lulucopter"},"content":"        // writes list every iteration","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"lulucopter"},"content":"     * The main driver of the chatbot.","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"lulucopter"},"content":"     * @param args Command-line commands for the application","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"lulucopter"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"lulucopter"},"content":"        new Dan(\"TestData1.txt\").run();","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lulucopter":80,"-":1}},{"path":"src/main/java/Dan/DanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":" * Dan-specific exception class","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"public class DanException extends Exception {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"    public DanException(String message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"        super(\"Oh no! We ran into a problem :(\\n\" + message);","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lulucopter":10}},{"path":"src/main/java/Dan/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.parser;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":"import dan.DanException;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"import dan.task.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"import dan.ui.Ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":" * A parser to help parse and execute command-line inputs by the user","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"public class Parser {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"     * Constructor method. Associates the parser to its list of tasks to perform actions on.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"     * @param tasks TaskList of tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"     * Parses the command-line input before executing the command.","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"     * @param input The raw input data entered by the user","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"     * @return A boolean of the program exit status","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"    public boolean parse(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"        String action \u003d input.split(\" \")[0];","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"            switch (action) {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"            case \"bye\":","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"                Ui.sayonara();","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"                return true;","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"            case \"list\":","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"lulucopter"},"content":"                tasks.showTasks();","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"lulucopter"},"content":"            case \"mark\":","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"lulucopter"},"content":"                tasks.markTask(Integer.parseInt(input.split(\" \")[1]));","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"lulucopter"},"content":"            case \"unmark\":","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"lulucopter"},"content":"                tasks.unMarkTask(Integer.parseInt(input.split(\" \")[1]));","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"lulucopter"},"content":"            case \"delete\":","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"lulucopter"},"content":"                tasks.deleteTask(Integer.parseInt(input.split(\" \")[1]));","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"lulucopter"},"content":"            case \"find\":","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"lulucopter"},"content":"                tasks.findTask(input.split(\" \", 1)[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"lulucopter"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"lulucopter"},"content":"                //fall through","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"lulucopter"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"lulucopter"},"content":"                //fall through","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"lulucopter"},"content":"            case \"event\":","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"lulucopter"},"content":"                tasks.addTask(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"lulucopter"},"content":"            default:","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"lulucopter"},"content":"                throw new DanException(\"I don\u0027t really understand what do you mean by that...\");","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"lulucopter"},"content":"        } catch (DanException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"lulucopter"},"content":"            Ui.printBlock(e.getMessage());","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"lulucopter"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"lulucopter"},"content":"            Ui.printBlock(\"Please use an integer instead\");","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"lulucopter"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"lulucopter"},"content":"            Ui.printBlock(\"Please use the format dd/MM/yyyy HHmm for dates\");","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"lulucopter"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"lulucopter":78}},{"path":"src/main/java/Dan/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":" * One of the task types. A task associated with a timing for which it is due by.","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"    private static final String ICON \u003d \"D\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"    protected LocalDateTime dateString;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"     * A task with an associated description and deadline","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"     * @param dateString A String representing a date-time in the pattern \"dd/MM/yyyy HHmm\"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"     * @throws DateTimeParseException If the date-time string is not part of its regular pattern","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"    public Deadline(String description, String dateString) throws DateTimeParseException {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"        super(description);","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"        this.dateString \u003d LocalDateTime.parse(dateString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"    public String toDataString(String separator) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"        return String.format(\"%s%s%s%s\", ICON, super.toDataString(separator), separator,","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"                this.dateString.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")));","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"        return String.format(\"[%s]%s (by: %s)\", ICON, super.toString(),","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"                this.dateString.format(DateTimeFormatter.ofPattern(\"MMM dd h:mma\")));","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"lulucopter":37}},{"path":"src/main/java/Dan/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":" * One of the task types. A task associated with a timing for which it\u0027s happening","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"    private static final String ICON \u003d \"E\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"    protected LocalDateTime dateString;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"     * Creates an Event with its associated description and date.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"     * @param dateString A String representing a date-time in the pattern \"dd/MM/yyyy HHmm\"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"     * @throws DateTimeParseException If the date-time string is not part of its regular pattern","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"    public Event(String description, String dateString) throws DateTimeParseException {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"        super(description);","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"        this.dateString \u003d LocalDateTime.parse(dateString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"    public String toDataString(String separator) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"        return String.format(\"%s%s%s%s\", ICON, super.toDataString(separator), separator,","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"                this.dateString.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")));","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"        return String.format(\"[%s]%s (by: %s)\", ICON, super.toString(),","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"                this.dateString.format(DateTimeFormatter.ofPattern(\"MMM dd h:mma\")));","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"lulucopter":37}},{"path":"src/main/java/Dan/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":" * Represents a Task.","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"public class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"    protected String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"     * Constructor method.","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"     * By default when a task is created, the status of completion of the task `isDone` is set to false.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"     * Gets it\u0027s status icon based on the status of completion for the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"     * \u0027X\u0027 for a completed task .","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"     * \u0027 \u0027 for a uncompleted task.","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"     * @return The status icon","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"     * Changes the completion status of the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"     * @param done The status of completion of the task","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"lulucopter"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"lulucopter"},"content":"     * Generates the data string used for saving its data in the storage file.","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"lulucopter"},"content":"     * @param separator Regular expression to help the parsing of data","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"lulucopter"},"content":"     * @return A String of data representing itself","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"lulucopter"},"content":"    public String toDataString(String separator) {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"lulucopter"},"content":"        return String.format(\"%s%d%s%s\", separator, (this.isDone) ? 1 : 0, separator, this.description);","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"lulucopter"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"lulucopter"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"lulucopter"},"content":"        return String.format(\"[%s] %s\",getStatusIcon(), this.description);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"lulucopter":55}},{"path":"src/main/java/Dan/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"import dan.task.Task;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":"import java.util.List;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"import dan.DanException;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"import dan.ui.Ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":" * Represents a list of tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"public class TaskList {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"     * Adds a task to the list of tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"     * @param input task details sent in after parsing","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"     * @throws DanException if the input format is not expected","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"    public void addTask(String input) throws DanException {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"        String description;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"        String dateString;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"            description \u003d input.replace(\"todo\", \"\").strip();","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"                throw new DanException(\"Please provide me a description for your todo item\");","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"            tasks.add(new ToDo(description));","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"            String[] temp \u003d input.replace(\"deadline\",\"\").strip().split(\"/by\");","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"            if (temp.length !\u003d 2) {","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"lulucopter"},"content":"                throw new DanException(\"Please follow the following format:\\n deadline \u003cdescription\u003e /by \u003cdue date\u003e\");","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"lulucopter"},"content":"            description \u003d temp[0].strip();","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"lulucopter"},"content":"            dateString \u003d temp[1].strip();","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"lulucopter"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"lulucopter"},"content":"                throw new DanException(\"Please provide me a description for your deadline\");","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"lulucopter"},"content":"            tasks.add(new Deadline(description, dateString));","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"lulucopter"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"lulucopter"},"content":"            String[] temp \u003d input.replace(\"event\", \"\").strip().split(\"/at\");","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"lulucopter"},"content":"            if (temp.length !\u003d 2) {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"lulucopter"},"content":"                throw new DanException(\"Please follow the following format:\\n event \u003cdescription\u003e /at \u003ctime/date\u003e\");","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"lulucopter"},"content":"            description \u003d temp[0].strip();","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"lulucopter"},"content":"            dateString \u003d temp[1].strip();","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"lulucopter"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"lulucopter"},"content":"                throw new DanException(\"Please provide me a description for your event\");","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"lulucopter"},"content":"            tasks.add(new Event(description, dateString));","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"lulucopter"},"content":"        Ui.printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(\"Okay okay, I\u0027ll add this task then:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(String.format(\"You now have %d many tasks in your list\", tasks.size()));","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"lulucopter"},"content":"        Ui.printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"lulucopter"},"content":"     * Displays the the current tasks in the list","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"lulucopter"},"content":"     * @throws DanException if there are no available tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"lulucopter"},"content":"    public void showTasks() throws DanException {","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"lulucopter"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"lulucopter"},"content":"            throw new DanException(\"Your list is empty!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"lulucopter"},"content":"        Ui.printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"lulucopter"},"content":"        Ui.printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"lulucopter"},"content":"     * Marks the indicated task as completed","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"lulucopter"},"content":"     * @param index Task number (as displayed in `showTasks()`) of the task that is completed","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"lulucopter"},"content":"     * @throws DanException if the given task number does not exist in the list","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"lulucopter"},"content":"    public void markTask(int index) throws DanException {","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"lulucopter"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"lulucopter"},"content":"            Ui.printIndent(\"tasks.size(): \" + tasks.size());","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"lulucopter"},"content":"            throw new DanException(\"This task number doesn\u0027t exist!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"lulucopter"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"lulucopter"},"content":"        task.setDone(true);","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"lulucopter"},"content":"        Ui.printBlock(String.format(\"Hehe okay guess this is now done\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"lulucopter"},"content":"                + \"  %s\", task));","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"lulucopter"},"content":"     * Marks the indicated task as uncompleted","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"lulucopter"},"content":"     * @param index Task number (as displayed in `showTasks()`) of the task that is completed","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"lulucopter"},"content":"     * @throws DanException if the given task number does not exist in the list","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":104,"author":{"gitId":"lulucopter"},"content":"    public void unMarkTask(int index) throws DanException {","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"lulucopter"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"lulucopter"},"content":"            throw new DanException(\"This task number doesn\u0027t exist!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":107,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":108,"author":{"gitId":"lulucopter"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"lulucopter"},"content":"        task.setDone(false);","lastModifiedDate":"2022-08-29"},{"lineNumber":110,"author":{"gitId":"lulucopter"},"content":"        Ui.printBlock(String.format(\"Ooops, you haven\u0027t done this yet? Here ya go:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"lulucopter"},"content":"                + \"  %s\", task));","lastModifiedDate":"2022-08-29"},{"lineNumber":112,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":113,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"lulucopter"},"content":"     * Removes the indicated task from the list","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"lulucopter"},"content":"     * @param index Task number (as displayed in `showTasks()`) of the task that is completed","lastModifiedDate":"2022-09-02"},{"lineNumber":118,"author":{"gitId":"lulucopter"},"content":"     * @throws DanException if the given task number does not exist in the list","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"lulucopter"},"content":"    public void deleteTask(int index) throws DanException {","lastModifiedDate":"2022-08-29"},{"lineNumber":121,"author":{"gitId":"lulucopter"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":122,"author":{"gitId":"lulucopter"},"content":"            throw new DanException(\"This task number doesn\u0027t exist!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":123,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":124,"author":{"gitId":"lulucopter"},"content":"        Ui.printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":125,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(\"Alright then, I\u0027ll remove this task from your list:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(tasks.get(index - 1).toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":127,"author":{"gitId":"lulucopter"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":128,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(String.format(\"You now have %d many tasks in your list\", tasks.size()));","lastModifiedDate":"2022-08-29"},{"lineNumber":129,"author":{"gitId":"lulucopter"},"content":"        Ui.printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":130,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":131,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":132,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":133,"author":{"gitId":"lulucopter"},"content":"     * Searches the task list for all tasks\u0027 descriptions that contains the keyword","lastModifiedDate":"2022-09-02"},{"lineNumber":134,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":135,"author":{"gitId":"lulucopter"},"content":"     * @param keyword String to be searched for among the tasks in the list","lastModifiedDate":"2022-09-02"},{"lineNumber":136,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":137,"author":{"gitId":"lulucopter"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"lulucopter"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":139,"author":{"gitId":"lulucopter"},"content":"        for (int i \u003d1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":140,"author":{"gitId":"lulucopter"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"lulucopter"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":142,"author":{"gitId":"lulucopter"},"content":"                result.append(i + \".\" + task + \"\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":144,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"lulucopter"},"content":"        Ui.printLine();","lastModifiedDate":"2022-09-02"},{"lineNumber":146,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(\"Alright! Here are the matching tasks in your list\");","lastModifiedDate":"2022-09-02"},{"lineNumber":147,"author":{"gitId":"lulucopter"},"content":"        Ui.printIndent(","lastModifiedDate":"2022-09-02"},{"lineNumber":148,"author":{"gitId":"lulucopter"},"content":"                (result.toString().length() \u003d\u003d 0)","lastModifiedDate":"2022-09-02"},{"lineNumber":149,"author":{"gitId":"lulucopter"},"content":"                ? \"I couldn\u0027t find any task that matches your description\"","lastModifiedDate":"2022-09-02"},{"lineNumber":150,"author":{"gitId":"lulucopter"},"content":"                : result.toString());","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"lulucopter"},"content":"        Ui.printLine();","lastModifiedDate":"2022-09-02"},{"lineNumber":152,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":153,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":154,"author":{"gitId":"lulucopter"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-09-02"},{"lineNumber":155,"author":{"gitId":"lulucopter"},"content":"        return tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":156,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":157,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":158,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":159,"author":{"gitId":"lulucopter"},"content":"     * Displays the list of tasks in a 1-indexed numbered list.","lastModifiedDate":"2022-09-02"},{"lineNumber":160,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":161,"author":{"gitId":"lulucopter"},"content":"     * @return Text display of the tasks in the list","lastModifiedDate":"2022-09-02"},{"lineNumber":162,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":163,"author":{"gitId":"lulucopter"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":164,"author":{"gitId":"lulucopter"},"content":"    public String toString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":165,"author":{"gitId":"lulucopter"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":166,"author":{"gitId":"lulucopter"},"content":"        for (int i \u003d1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":167,"author":{"gitId":"lulucopter"},"content":"            result.append(i + \".\" + tasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":168,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":169,"author":{"gitId":"lulucopter"},"content":"        return result.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":170,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":171,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":172,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"lulucopter":172}},{"path":"src/main/java/Dan/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":" * One of the task types. The simplest form of task.","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"    private static final String ICON \u003d \"T\";","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"     * Creates a To-Do task with its associated description.","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"     * @param description The description of the to-do task","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"        super(description);","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"    public String toDataString(String separator) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"        return String.format(\"%s%s\", ICON, super.toDataString(separator));","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"        return String.format(\"[%s]%s\", ICON, super.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"lulucopter":27}},{"path":"src/main/java/Dan/tasklistreader/TaskListReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.tasklistreader;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"import dan.task.Task;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"import dan.task.ToDo;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"import dan.task.Event;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"import dan.task.Deadline;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"import dan.task.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":" * Handles the processing of data for the list of tasks with the system.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":" * Namely, the storage, loading and saving of data.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"public class TaskListReader {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"    /* Stores data separated by \u003cSEPARATOR\u003e in the format with no whitespace:","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"    eg. SEPARATOR \u003d \"|\"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"    Tasktype{T,D,E}|Task.isDone{1,0}|Task.Name|(optional)Deadline String","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"    private static final String SEPARATOR \u003d \"%\u0026\";","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"    private static final String ROOT_PATH \u003d \"src/main/data/\";","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"    private final Path filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"     * Constructor method.","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"     * @param fileName the file name specified","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"    public TaskListReader(String fileName) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"lulucopter"},"content":"        this.filePath \u003d Paths.get(ROOT_PATH + fileName);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"lulucopter"},"content":"     * Retrieves for the full path of the data file.","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"lulucopter"},"content":"     * @return file path of the data file its loading and saving from.","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"lulucopter"},"content":"    public String getPath() {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"lulucopter"},"content":"        return this.filePath.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"lulucopter"},"content":"     * Creates the data file if it doesn\u0027t exist.","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"lulucopter"},"content":"     * @throws IOException If there are any I/O issues","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"lulucopter"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"lulucopter"},"content":"        Files.createDirectories(this.filePath.getParent());","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"lulucopter"},"content":"        Files.createFile(this.filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"lulucopter"},"content":"     * Loads the data file, and processes it into a List of Tasks to prepare for it to be converted to a TaskList.","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"lulucopter"},"content":"     * @return List of Tasks created from the specified data file","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"lulucopter"},"content":"     * @throws IOException If there are any I/O issues.","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"lulucopter"},"content":"    public List\u003cTask\u003e readTaskListFromFile() throws IOException {","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"lulucopter"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(this.filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"lulucopter"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(lines.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"lulucopter"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"lulucopter"},"content":"            String[] data \u003d line.split(SEPARATOR);","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"lulucopter"},"content":"            switch (data[0].strip()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"lulucopter"},"content":"            case \"T\":","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"lulucopter"},"content":"                taskList.add(new ToDo(data[2].strip()));","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"lulucopter"},"content":"            case \"E\":","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"lulucopter"},"content":"                taskList.add(new Event(data[2].strip(), data[3].strip()));","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"lulucopter"},"content":"            case \"D\":","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"lulucopter"},"content":"                taskList.add(new Deadline(data[2].strip(), data[3].strip()));","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"lulucopter"},"content":"            default:","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"lulucopter"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"lulucopter"},"content":"            Task addedTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"lulucopter"},"content":"            if (data[1].strip().equals(\"1\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"lulucopter"},"content":"                addedTask.setDone(true);","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"lulucopter"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"lulucopter"},"content":"        return taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"lulucopter"},"content":"     * Writes the current list of tasks into the data file","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"lulucopter"},"content":"     * @param taskList The list of tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"lulucopter"},"content":"     * @throws IOException If there are any I/O issues","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"lulucopter"},"content":"    public void writeTaskListToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"lulucopter"},"content":"        Files.write(filePath, taskList.getTasks().stream()","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"lulucopter"},"content":"                .map(x -\u003e x.toDataString(SEPARATOR))","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"lulucopter"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"lulucopter"},"content":"        );","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"lulucopter":109}},{"path":"src/main/java/Dan/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":" * Manages the display of the user interface.","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"public class Ui {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"     * Adds indent of 4 spaces to the lines to be printed","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"     * @param obj The object to be printed","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"    public static void printIndent(Object obj) {","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"        System.out.println(\"    \" + obj.toString().replace(\"\\n\", \"\\n    \"));","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"     * Prints a horizontal line","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"    public static void printLine() {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"        printIndent(\"____________________________________________________________\");","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"     * Adds an indent to the lines to be printed, and encapsulates it with lines, forming a block","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"     * @param s String to be printed","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"    public static void printBlock(String s) {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"        printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"        printIndent(s);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"        printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"     * Prints the welcome message","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"lulucopter"},"content":"    public static void greet() {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"lulucopter"},"content":"        printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"lulucopter"},"content":"        printIndent(\"Hello from\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"lulucopter"},"content":"        String logo \u003d \"\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"lulucopter"},"content":"                + \"_ .-\u0027) _     (\u0027-.         .-\u0027) _  \\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"lulucopter"},"content":"                + \"( (  OO) )   ( OO ).-.    ( OO ) ) \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"lulucopter"},"content":"                + \" \\\\     .\u0027_   / . --. /,--./ ,--,\u0027  \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"lulucopter"},"content":"                + \" ,`\u0027--..._)  | \\\\-.  \\\\ |   \\\\ |  |\\\\  \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"lulucopter"},"content":"                + \" |  |  \\\\  \u0027.-\u0027-\u0027  |  ||    \\\\|  | ) \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"lulucopter"},"content":"                + \" |  |   \u0027 | \\\\| |_.\u0027  ||  .     |/  \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"lulucopter"},"content":"                + \" |  |   / :  |  .-.  ||  |\\\\    |   \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"lulucopter"},"content":"                + \" |  \u0027--\u0027  /  |  | |  ||  | \\\\   |   \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"lulucopter"},"content":"                + \" `-------\u0027   `--\u0027 `--\u0027`--\u0027  `--\u0027   \\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"lulucopter"},"content":"        printIndent(logo + \"Ouuuuuuuuuhhhhhh Spo0ky\");","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"lulucopter"},"content":"        printIndent(\"What can I do for you?\");","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"lulucopter"},"content":"        printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"lulucopter"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"lulucopter"},"content":"     * Prints the goodbye message","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"lulucopter"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"lulucopter"},"content":"    public static void sayonara() {","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"lulucopter"},"content":"        printBlock(\"Boo! Bye bye... :(\");","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"lulucopter":63}},{"path":"src/test/java/dan/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.parser;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"import dan.task.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"class ParserTest {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"    public void parse_bye_getExit() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"        Parser parser \u003d new Parser(new TaskList(new ArrayList\u003c\u003e()));","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"        assertTrue(parser.parse(\"bye\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"lulucopter":17}},{"path":"src/test/java/dan/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lulucopter"},"content":"package dan.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"lulucopter"},"content":"import dan.DanException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lulucopter"},"content":"import dan.task.Task;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"lulucopter"},"content":"import java.util.List;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"lulucopter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"lulucopter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"lulucopter"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"lulucopter"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"lulucopter"},"content":"class TaskListTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"lulucopter"},"content":"    public void showTasks_emptyList_exceptionThrown() {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"lulucopter"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"lulucopter"},"content":"            new TaskList(tasks).showTasks();","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"lulucopter"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"lulucopter"},"content":"        } catch (DanException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"lulucopter"},"content":"            assertEquals(\"Oh no! We ran into a problem :(\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"lulucopter"},"content":"                    + \"Your list is empty!\", e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"lulucopter"},"content":"    public void markTask_singleTask_success() {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"lulucopter"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"lulucopter"},"content":"        tasks.add(new Task(\"test mark\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"lulucopter"},"content":"            TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"lulucopter"},"content":"            tl.markTask(1);","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"lulucopter"},"content":"            assertEquals(true, tl.getTasks().get(0).isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"lulucopter"},"content":"        } catch (DanException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"lulucopter"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"lulucopter"},"content":"    public void markTask_noTaskAtIndex_exceptionThrown() {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"lulucopter"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"lulucopter"},"content":"        Task task \u003d new Task(\"test unmark\");","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"lulucopter"},"content":"        task.setDone(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"lulucopter"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"lulucopter"},"content":"            TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"lulucopter"},"content":"            tl.markTask(2);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"lulucopter"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"lulucopter"},"content":"        } catch (DanException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"lulucopter"},"content":"            assertEquals(\"Oh no! We ran into a problem :(\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"lulucopter"},"content":"                    + \"This task number doesn\u0027t exist!\", e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"lulucopter"},"content":"    public void unMarkTask_singleTask_success() {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"lulucopter"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"lulucopter"},"content":"        Task task \u003d new Task(\"test unmark\");","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"lulucopter"},"content":"        task.setDone(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"lulucopter"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"lulucopter"},"content":"            TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"lulucopter"},"content":"            tl.unMarkTask(1);","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"lulucopter"},"content":"            assertEquals(false, tl.getTasks().get(0).isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"lulucopter"},"content":"        } catch (DanException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"lulucopter"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"lulucopter"},"content":"    public void unMarkTask_noTaskAtIndex_exceptionThrown() {","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"lulucopter"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"lulucopter"},"content":"        Task task \u003d new Task(\"test unmark\");","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"lulucopter"},"content":"        task.setDone(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"lulucopter"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"lulucopter"},"content":"            TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"lulucopter"},"content":"            tl.unMarkTask(2);","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"lulucopter"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"lulucopter"},"content":"        } catch (DanException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"lulucopter"},"content":"            assertEquals(\"Oh no! We ran into a problem :(\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"lulucopter"},"content":"                    + \"This task number doesn\u0027t exist!\", e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"lulucopter"},"content":"    public void deleteTask_singleTask_success() {","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"lulucopter"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"lulucopter"},"content":"        tasks.add(new Task(\"test delete\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"lulucopter"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"lulucopter"},"content":"        assertEquals(1, tl.getTasks().size());","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"lulucopter"},"content":"            tl.deleteTask(1);","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"lulucopter"},"content":"            assertEquals(0, tl.getTasks().size());","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"lulucopter"},"content":"        } catch (DanException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"lulucopter"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"lulucopter"},"content":"    public void deleteTask_noTaskAtIndex_exceptionThrown() {","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"lulucopter"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"lulucopter"},"content":"        Task task \u003d new Task(\"test unmark\");","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"lulucopter"},"content":"        task.setDone(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"lulucopter"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"lulucopter"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"lulucopter"},"content":"            TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"lulucopter"},"content":"            tl.deleteTask(2);","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"lulucopter"},"content":"            fail();","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"lulucopter"},"content":"        } catch (DanException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"lulucopter"},"content":"            assertEquals(\"Oh no! We ran into a problem :(\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"lulucopter"},"content":"                    + \"This task number doesn\u0027t exist!\", e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"lulucopter"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"lulucopter"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"lulucopter"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"lulucopter"},"content":"    public void addTask_allTaskTypes_success() {","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"lulucopter"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"lulucopter"},"content":"        ToDo t_task \u003d new ToDo(\"test todo\");","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"lulucopter"},"content":"        Event e_task \u003d new Event(\"test event\", \"20/04/1999 1200\");","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"lulucopter"},"content":"        Deadline d_task \u003d new Deadline(\"test deadline\", \"20/04/1999 1200\");","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"lulucopter"},"content":"        tasks.add(t_task);","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"lulucopter"},"content":"        tasks.add(e_task);","lastModifiedDate":"2022-08-31"},{"lineNumber":126,"author":{"gitId":"lulucopter"},"content":"        tasks.add(d_task);","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"lulucopter"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"lulucopter"},"content":"        assertEquals(t_task, tl.getTasks().get(0));","lastModifiedDate":"2022-08-31"},{"lineNumber":129,"author":{"gitId":"lulucopter"},"content":"        assertEquals(e_task, tl.getTasks().get(1));","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"lulucopter"},"content":"        assertEquals(d_task, tl.getTasks().get(2));","lastModifiedDate":"2022-08-31"},{"lineNumber":131,"author":{"gitId":"lulucopter"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"lulucopter"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"lulucopter":132}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"    mainClassName \u003d \"duke.Duke\" //\"seedu.duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"checkstyle {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jhchee18":6,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"T,0,haha ","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"T,1,booooooom 2020-12-12 1222 ","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"E,1,wowwww ,2020-03-03,23:23","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"D,1,shagggg ,2011-01-01,00:00","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"T,0,eat fruit ,2021-12-14,09:56","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jhchee18":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":" * Main file of Duke to be run to initiate the program.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"     * Constructs a Duke instance and load the previous stored TaskList from the filePath.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"     * @param filePath the path of the .txt file in this project where the TaskList is to be stored.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"     * @throws DukeException the parent Exception inherited by self-created exceptions.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"                throw new DukeException();","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"     * Initialise the Duke program.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"    public void run() {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"        this.ui.showGreetingMessage();","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"        this.ui.printList(this.taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"        this.ui.showGoodbyeMessage();","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jhchee18":55,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"import duke.command.EmptyCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":" * Breaks input by user into smaller parts to find respective actions to be taken.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"     * Constructs a Parser instance without initiating any parameter","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    public Parser() {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"     * Split the fullCommand into smaller parts and decide which Command to be created and returned.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"     * @param fullCommand the whole command input by user.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"     * @return the corresponding Command subclasses.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"        String[] parts \u003d fullCommand.split(\" \", 0);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"        String mainCommand \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"        if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"            mainCommand \u003d \"Add\";","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"            mainCommand \u003d \"Delete\";","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"            mainCommand \u003d \"Exit\";","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"        } else if (command.equals(\"mark\") || command.equals(\"unmark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"            mainCommand \u003d \"Mark\";","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"            mainCommand \u003d \"List\";","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"            mainCommand \u003d \"Find\";","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"        switch (mainCommand) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"        case \"Delete\":","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"            return new DeleteCommand(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"        case \"Exit\":","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"jhchee18"},"content":"        case \"Add\":","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"            return new AddCommand(fullCommand);","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"        case \"Mark\":","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"            return new MarkCommand(command, Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"        case \"List\":","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"jhchee18"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"jhchee18"},"content":"        case \"Find\":","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"jhchee18"},"content":"            return new FindCommand(fullCommand.substring(5));","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"jhchee18"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"jhchee18"},"content":"            return new EmptyCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":65}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":" * Provides the ability of to perform various actions to a text file stored in the project.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"    public final String fileName;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    public final String filePath;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"    public final File myFile;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"     * Constructs a Storage instance provided the fileName and known filePath.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"     * @param fileName the name of the text document","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    Storage(String fileName) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"        this.filePath \u003d \"./data/\" + fileName;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"        this.myFile \u003d new File(this.filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"     * Adds text which converted from Task into the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"     * @param text a String consisting of the information of the Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"    public void write(String text) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"            myWriter.write(text);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"            myWriter.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"Uh uh! The system cannot find the path specified. \"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"                    + \"Are you sure your file path is correct?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jhchee18"},"content":"     * Returns an ArrayList of Tasks read from the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"     * @return the ArrayList of Tasks which are added into the file previously.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"jhchee18"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"jhchee18"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"jhchee18"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"jhchee18"},"content":"            String line;","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"jhchee18"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"jhchee18"},"content":"                Task task \u003d this.convertStringToTask(line);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"jhchee18"},"content":"                taskList.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"jhchee18"},"content":"            br.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"jhchee18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"Uh uh! The system cannot find the path specified. \"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"jhchee18"},"content":"                    + \"Are you sure your file path is correct?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"jhchee18"},"content":"        return taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"jhchee18"},"content":"    private Task convertStringToTask(String taskString) {","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"jhchee18"},"content":"        String[] parts \u003d taskString.split(\",\", 0);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"jhchee18"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"jhchee18"},"content":"        boolean isMarked \u003d (Integer.parseInt(parts[1]) \u003d\u003d 1) ? true : false;","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"jhchee18"},"content":"        String taskName \u003d parts[2];","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"jhchee18"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"jhchee18"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"jhchee18"},"content":"        if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"jhchee18"},"content":"            date \u003d LocalDate.parse(parts[3]);","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"jhchee18"},"content":"            time \u003d LocalTime.parse(parts[4]);","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"jhchee18"},"content":"        switch(taskType) {","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"jhchee18"},"content":"        case \"T\":","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"jhchee18"},"content":"            return new ToDo(taskName, isMarked, date, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"jhchee18"},"content":"        case \"D\":","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"jhchee18"},"content":"            return new Deadline(taskName, isMarked, date, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"jhchee18"},"content":"        case \"E\":","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"jhchee18"},"content":"            return new Event(taskName, isMarked, date, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"jhchee18"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"jhchee18"},"content":"            return new Task(taskName, isMarked, date, time);","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"jhchee18":96}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" * Encapsulates an ArrayList of Tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    public final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"     * Constructs a new TaskList instance which consists of empty ArrayList of Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"     * Constructs a new TaskList instance which consists of non-empty ArrayList of Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"     * @param taskList the TaskList saved by previous run of Duke program.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"     * Returns the status of emptiness of the current TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"     * @return true if and only if the TaskList consisting of zero element.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"     * Returns the taskList parameter in the TaskList class.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"     * @return taskList from the parameter.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"        return this.taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":48}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" * Provides methods to support the user interface.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"    public static final String LOADING_ERROR_MESSAGE \u003d \"Task list is empty.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    public static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m RyanBot ☺\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Bye. Please don\u0027t leave me :( Hope to see you again soon!\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"     * Constructs an Ui instance without initiating any parameter.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"    public Ui() {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"     * Prints loading error when Duke fails to load.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"        System.out.println(LOADING_ERROR_MESSAGE);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"     * Prints greeting message when Duke is initialised.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"        System.out.println(GREETING_MESSAGE);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"     * Prints goodbye message when Duke is terminated.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"     * Returns input read by Scanner.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"     * @return input as a String.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"        String s \u003d in.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"        return s;","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"     * Return Task in the form of formatted String for better visualisation.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"     * @param task task that needs to be formatted.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"     * @return formatted String of Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"jhchee18"},"content":"    public String beautyWrapTask(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"jhchee18"},"content":"        String taskType \u003d task.getTaskType();","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"jhchee18"},"content":"        String preposition \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"jhchee18"},"content":"        if (task.getTime() !\u003d null \u0026\u0026 task.getDate() !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"jhchee18"},"content":"            if (taskType \u003d\u003d \"E\") {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"jhchee18"},"content":"                preposition \u003d \"(at: \";","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"jhchee18"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"jhchee18"},"content":"                preposition \u003d \"(by: \";","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"jhchee18"},"content":"        return \"[\" + task.getTaskType() + \"][\" + (task.isMarked() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"jhchee18"},"content":"                + task.getTaskName() + preposition + task.getOutputDateAndTime();","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"jhchee18"},"content":"     * Prints the error message when exception is thrown.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"jhchee18"},"content":"     * @param errorMessage String provided by the exception.","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"jhchee18"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"jhchee18"},"content":"        System.out.println(\"Error message: \" + errorMessage);","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"jhchee18"},"content":"     * Prints the TaskList consisting all the Tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"jhchee18"},"content":"     * @param taskList taskList consisting all the recorded Tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"jhchee18"},"content":"    public void printList(TaskList taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"jhchee18"},"content":"        String listOutput \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"jhchee18"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"jhchee18"},"content":"        for (Task t : taskList.getList()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"jhchee18"},"content":"            listOutput +\u003d index + \".\" + this.beautyWrapTask(t) + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"jhchee18"},"content":"            index++;","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"jhchee18"},"content":"        System.out.println(listOutput);","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":96}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":" * Add Tasks into TaskList depending on the relevant command given.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    public static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"    private final String fullCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"     * Constructs a AddCommand instance with the provided whole fullCommand input by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"     * @param fullCommand fullCommand to be split into command and the task provided.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    public AddCommand(String fullCommand) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"     * Split the fullCommand into command, task description, date and time,","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"     * then passes the variables to create corresponding Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"     * @param taskList the TaskList to be added with new Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"     * @param ui unused for AddCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"     * @param storage the Storage to write new Task into file.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"     * @throws EmptyTaskException if the task description is an empty String or null.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"     * @throws DateTimeParseException if the date or time given is in the wrong format.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"            String[] parts \u003d fullCommand.split(\" \", 0);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"            String command \u003d parts[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"                throw new EmptyTaskException();","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"            String taskName \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"            String dateString \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"            String timeString \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"jhchee18"},"content":"            for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"                if (parts[i].charAt(0) !\u003d \u0027/\u0027) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"                    taskName +\u003d parts[i] + \" \";","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"                    dateString \u003d parts[i + 1];","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"jhchee18"},"content":"                    timeString \u003d parts[i + 2];","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"jhchee18"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"jhchee18"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"jhchee18"},"content":"            LocalDate date \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"jhchee18"},"content":"            if (!dateString.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"jhchee18"},"content":"                date \u003d validateDateString(dateString);","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"jhchee18"},"content":"            LocalTime time \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"jhchee18"},"content":"            if (!timeString.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"jhchee18"},"content":"                time \u003d validateTimeString(timeString);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"jhchee18"},"content":"            Task task \u003d new Task(\"DummyTask\", date, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"jhchee18"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"jhchee18"},"content":"                task \u003d new ToDo(taskName, date, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"jhchee18"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"jhchee18"},"content":"                task \u003d new Deadline(taskName, date, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"jhchee18"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"jhchee18"},"content":"                task \u003d new Event(taskName, date, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"jhchee18"},"content":"            taskList.getList().add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + ui.beautyWrapTask(task)","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"jhchee18"},"content":"                    + \"\\nNow you have \" + taskList.getList().size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"jhchee18"},"content":"            String list \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"jhchee18"},"content":"            for (Task t : taskList.getList()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"jhchee18"},"content":"                list +\u003d t.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"jhchee18"},"content":"            storage.write(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"jhchee18"},"content":"        } catch (EmptyTaskException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"jhchee18"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"Invalid date \u0026 time format. Please follow the format of date \"","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"jhchee18"},"content":"                    + \"as \\\"YYYY-MM-DD\\\" and time as \\\"HHMM\\\".\");","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"jhchee18"},"content":"     * Returns false as Add is not a terminating Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"jhchee18"},"content":"     * @return false.","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"jhchee18"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"jhchee18"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"jhchee18"},"content":"    private LocalTime validateTimeString(String timeString) {","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"jhchee18"},"content":"        //desired date format \"1800\"","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"jhchee18"},"content":"        String validatedTimeString \u003d timeString.substring(0, 2) + \":\" + timeString.substring(2, 4) + \":\" + \"00\";","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"jhchee18"},"content":"        LocalTime time \u003d LocalTime.parse(validatedTimeString);","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"jhchee18"},"content":"        return time;","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"jhchee18"},"content":"    private LocalDate validateDateString(String dateString) {","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"jhchee18"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"jhchee18"},"content":"        return date;","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":118}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" * This abstract class provides the skeletal implementation of a user command","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":" * and should be the superclass of all user commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"     * Executes this Command with the specified TaskList, Ui, and Storage parameters.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"     * @param taskList the specified TaskList object.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"     * @param ui the specified Ui object.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"     * @param storage the specified Storage object.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"     * An abstract method to be overriden by every Command subclasses which indicating","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"     * whether the Command is an exit call.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"     * @return true if the Command is an exit call.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":" * Delete Tasks from TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    public static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    public final int deleteIndex;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"     * Constructs a DeleteCommand instance with the provided deleteIndex numbering","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"     * the corresponding Task to be deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"     * @param deleteIndex the numbered Task which is to be deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    public DeleteCommand(int deleteIndex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"        this.deleteIndex \u003d deleteIndex;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"     * Remove the Task at deleteIndex from taskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"     * @param taskList the TaskList where the corresponding Task to be deleted from.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"     * @param ui the Ui to assist the conversion of Task to String.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"     * @param storage the Storage to remove new Task from file.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"     * @throws ArrayIndexOutOfBoundsException if the deleteIndex is not provided by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"     * @throws IndexOutOfBoundsException if the deleteIndex exceeded the current existing number of Tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"            Task removedTask \u003d taskList.getList().get(this.deleteIndex);","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"            taskList.getList().remove(this.deleteIndex);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n \" + ui.beautyWrapTask(removedTask)","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"                    + \"\\nNow you have \" + taskList.getList().size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"            String list \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"            for (Task t : taskList.getList()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"                list +\u003d t.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"            storage.write(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"☹ OOPS!!! You did not specify which task to be delete.\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"☹ OOPS!!! Your list only has \" + taskList.getList().size() + \" tasks.\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"     * Returns false as Delete is not a terminating Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jhchee18"},"content":"     * @return false.","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"jhchee18"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"jhchee18"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":63}},{"path":"src/main/java/duke/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":" * EmptyCommand is to be returned when the user input Command that","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":" * cannot be understood by Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    public static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"     * Constructs a AddCommand instance without initiating any parameter","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"    public EmptyCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"     * Throw InvalidCommandException and to show user the Duke cannot process it.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"     * @param taskList unused for EmptyCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"     * @param ui unused for EmptyCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"     * @param storage unused for EmptyCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"     * @throws InvalidCommandException if the Command can\u0027t match Duke\u0027s available Commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"        } catch (InvalidCommandException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"     * Returns false as Empty is not a terminating Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"     * @return false.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":47}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" * Exit the program","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"    public static final boolean IS_EXIT \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"     * Constructs a ExitCommand instance without initiating any parameter.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"     * Throw InvalidCommandException and to show user the Duke cannot process it.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"     * @param taskList unused for EmptyCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"     * @param ui unused for EmptyCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"     * @param storage unused for EmptyCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"     * Returns true as Exit is a terminating Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"     * @return true.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":40}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":" * Find Tasks in the TaskList depending on the relevant keyword given.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    public static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"    public final String keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"     * Constructs a FindCommand instance with the provided whole keyword input by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"     * @param keyword keyword is to be searched from the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"     * Iterate the TaskList by each character to search for a match of the keyword,","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"     * then at the end, prints the Tasks consisting of the keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"     * @param taskList the TaskList to be searched.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"     * @param ui the Ui to assist with printing of the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"     * @param storage unused in FindCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"     * @throws StringIndexOutOfBoundsException if the index exceeds the String length.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"        ArrayList\u003cTask\u003e outputList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"        int keywordLength \u003d this.keyword.length();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"            for (Task task : taskList.getList()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"                String taskString \u003d task.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"                int i \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"                while (i \u003c taskString.length() - keywordLength) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"                    String taskSubstr \u003d taskString.substring(i, i + keywordLength);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"                    if (taskSubstr.equals(this.keyword)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"                        outputList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"                        break;","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"                    i++;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"            TaskList outputTaskList \u003d new TaskList(outputList);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"jhchee18"},"content":"            ui.printList(outputTaskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"        } catch (StringIndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"Oops! String Index Out Of Bounds\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"jhchee18"},"content":"     * Returns false as Find is not a terminating Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jhchee18"},"content":"     * @return false.","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jhchee18"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"jhchee18"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jhchee18":68}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" * Print and list all the Task in the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"    public static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"     * Constructs a ListCommand instance without initiating any parameter.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"     * Passes the TaskList to Ui to print all the Tasks in it.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"     * @param taskList the TaskList to be passed into Ui and to be printed.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"     * @param ui       The Ui provides printList method to allow TaskList to be printed.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"     * @param storage  unused for EmptyCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"        ui.printList(taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"     * Returns false as List is not a terminating Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"     * @return false.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":39}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":" * Mark or Unmark Task in TaskList depending on the relevant index given.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    public static final boolean IS_EXIT \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    public final int markIndex;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    public final String command;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"     * Constructs a MarkCommand instance with the indication of Command of either","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"     * Mark or Unmark and the corresponding index of Task to be executed on.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"     * @param command mark or unmark.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"     * @param markIndex the index of the Task to be marked or unmarked.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"    public MarkCommand(String command, int markIndex) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"     * Decide whether to mark or unmark Task from the taskList, then modify the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"     * @param taskList the TaskList where a Task to be marked or unmarked.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"     * @param ui the Ui provides method to convert Task to String in a representable format.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"     * @param storage the Storage to write modified Task into file.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"     * @throws ArrayIndexOutOfBoundsException if the markIndex is not provided by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"     * @throws IndexOutOfBoundsException if the markIndex exceeded the current existing number of Tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"                Task markedTask \u003d taskList.getList().get(this.markIndex).mark();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"                taskList.getList().set(this.markIndex, markedTask);","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + ui.beautyWrapTask(markedTask) + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"                String list \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"                for (Task t : taskList.getList()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"                    list +\u003d t.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"                storage.write(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"                Task unmarkedTask \u003d taskList.getList().get(this.markIndex).unmark();","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"jhchee18"},"content":"                taskList.getList().set(this.markIndex, unmarkedTask);","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"                        + ui.beautyWrapTask(unmarkedTask) + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"                String list \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"jhchee18"},"content":"                for (Task t : taskList.getList()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"jhchee18"},"content":"                    list +\u003d t.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"jhchee18"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"jhchee18"},"content":"                storage.write(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"jhchee18"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"jhchee18"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"☹ OOPS!!! You did not specify which task to be marked/unmarked.\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"jhchee18"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"jhchee18"},"content":"            System.out.println(\"☹ OOPS!!! Your list only has \" + taskList.getList().size() + \" tasks.\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"jhchee18"},"content":"     * Returns false as Mark is not a terminating Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"jhchee18"},"content":"     * @return false.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"jhchee18"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"jhchee18"},"content":"        return this.IS_EXIT;","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":78}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":" * Parent Exception which inherited by different self-defined Exceptions.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"    public DukeException() {}","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"        super(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"        return super.getMessage();","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"jhchee18":16}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":" * Child Exception caters to Command without description.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"    public EmptyTaskException() {}","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"    public EmptyTaskException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jhchee18":13}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":" * Child exception which caters to Command cannot be recognised by Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"    public InvalidCommandException() {}","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jhchee18":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":" * Deadline is a subclass of Task indicates task to be expired.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"    private static final String TASK_TYPE \u003d \"D\";","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    public Deadline(String taskName, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"        super(taskName, date, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    public Deadline(String taskName, boolean markDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"        super(taskName, markDone, date, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"        return TASK_TYPE;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"    public Deadline mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"        return new Deadline(super.getTaskName(), true, super.getDate(), super.getTime());","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    public Deadline unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"        return new Deadline(super.getTaskName(), false, super.getDate(), super.getTime());","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"        return this.getTaskType() + \",\" + super.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jhchee18":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":" * Event is a subclass of Task indicates task to be attended.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"    private static final String TASK_TYPE \u003d \"E\";","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    public Event(String taskName, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"        super(taskName, date, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    public Event(String taskName, boolean markDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"        super(taskName, markDone, date, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"        return TASK_TYPE;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"    public Event mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"        return new Event(super.getTaskName(), true, super.getDate(), super.getTime());","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    public Event unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"        return new Event(super.getTaskName(), false, super.getDate(), super.getTime());","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"        return this.getTaskType() + \",\" + super.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jhchee18":36}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" * Parent class for Deadline, Event and Todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"    private final String taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    private final boolean markDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    private final LocalTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"     * Constructs a Task instance whereas a new Task is first initialised.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"     * @param taskName description of the Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"     * @param date date in LocalDate format.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"     * @param time time in LocalTime format.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"    public Task(String taskName, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"        this.markDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"     * Constructs a Task instance to replace the old Task when it is marked/ unmarked.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"     * @param taskName description of the Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"     * @param markDone status of the Task to determine whether it is done.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"     * @param date date in LocalDate format.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"     * @param time time in LocalTime format.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jhchee18"},"content":"    public Task(String taskName, boolean markDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"jhchee18"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"jhchee18"},"content":"        this.markDone \u003d markDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"jhchee18"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"jhchee18"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jhchee18"},"content":"     * Returns new Task as marked.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jhchee18"},"content":"     * @return marked Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jhchee18"},"content":"    public Task mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"jhchee18"},"content":"        return new Task(this.taskName, true, this.date, this.time);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"jhchee18"},"content":"     * Return new Task as unmarked.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jhchee18"},"content":"     * @return unmarked Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"jhchee18"},"content":"    public Task unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"jhchee18"},"content":"        return new Task(this.taskName, false, this.date, this.time);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jhchee18"},"content":"     * Return the status of Task to check whether the Task is finished.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"jhchee18"},"content":"     * @return true if and only if the Task is ticked as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"jhchee18"},"content":"    public boolean isMarked() {","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"jhchee18"},"content":"        return this.markDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"jhchee18"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"jhchee18"},"content":"     * @return the taskName in String.","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"jhchee18"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"jhchee18"},"content":"        return taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"jhchee18"},"content":"     * Returns Task\u0027s date and time in a better format for visualisation.","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"jhchee18"},"content":"     * @return formatted date and time in String.","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"jhchee18"},"content":"    public String getOutputDateAndTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"jhchee18"},"content":"        if (this.time !\u003d null \u0026\u0026 this.date !\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"jhchee18"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"jhchee18"},"content":"            return this.date.format(formatter) + \", \" + this.time.toString() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"jhchee18"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"jhchee18"},"content":"            return \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"jhchee18"},"content":"    private String getToStringDateAndTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"jhchee18"},"content":"        if (this.time !\u003d null \u0026\u0026 this.date !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"jhchee18"},"content":"            return \",\" + this.getDate() + \",\" + this.getTime();","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"jhchee18"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"jhchee18"},"content":"            return \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"jhchee18"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"jhchee18"},"content":"     * Gets and returns Task\u0027s Date.","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"jhchee18"},"content":"     * @return Date in LocalDate.","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"jhchee18"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"jhchee18"},"content":"        return this.date;","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"jhchee18"},"content":"     * Gets and returns Task\u0027s Time.","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"jhchee18"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"jhchee18"},"content":"     * @return Time in LocalTime.","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"jhchee18"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"jhchee18"},"content":"        return this.time;","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"jhchee18"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"jhchee18"},"content":"     * Returns the different type of Tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"jhchee18"},"content":"     * @return \"D\" if Deadline, \"T\" if Todo, \"E\" if Event.","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"jhchee18"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"jhchee18"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"jhchee18"},"content":"        return \"PARENT TYPE (GOT BUG)\";","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":130,"author":{"gitId":"jhchee18"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"jhchee18"},"content":"        //return \"[\" + (this.isMarked() ? \"X\" : \" \") + \"]\" + this.taskName + this.getDateAndTime() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"jhchee18"},"content":"        return (this.isMarked() ? \"1\" : \"0\") + \",\" + this.taskName + this.getToStringDateAndTime() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":134,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jhchee18":134}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":" * ToDo is a subclass of Task indicates task to be done in the future.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"    private static final String TASK_TYPE \u003d \"T\";","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    public ToDo(String taskName, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"        super(taskName, date, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    public ToDo(String taskName, boolean markDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"        super(taskName, markDone, date, time);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"        return TASK_TYPE;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"    public ToDo mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"jhchee18"},"content":"        return new ToDo(super.getTaskName(), true, super.getDate(), super.getTime());","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"jhchee18"},"content":"    public ToDo unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"jhchee18"},"content":"        return new ToDo(super.getTaskName(), false, super.getDate(), super.getTime());","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"jhchee18"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"jhchee18"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"jhchee18"},"content":"        //return \"[\" + this.getTaskType() + \"]\" + super.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jhchee18"},"content":"        return this.getTaskType() + \",\" + super.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jhchee18":37}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    public void testParser() {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"        Command command \u003d parser.parse(\"deadline cs2103 iP!! /by 2020-12-12 1233\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"        Command addCommand \u003d new AddCommand(\"deadline cs2103 iP!! /by 2020-12-12 1233\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"        assertEquals(command.isExit(), addCommand.isExit());","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jhchee18":21}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"public class StorageTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"    public void testStorage() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"        assertEquals(storage.load().toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"                \"[T,0,haha \\n, T,1,booooooom 2020-12-12 1222 \\n, \"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"                        + \"E,1,wowwww ,2020-03-03,23:23\\n, D,1,shagggg ,2011-01-01,00:00\\n]\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jhchee18":17}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"    public void testTask() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"        LocalTime localTime \u003d LocalTime.parse(\"14:01:02\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2020-12-12\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"        Task task \u003d new Task(\"minum burger\", true, localDate, localTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"        assertEquals(task.isMarked(), true);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"        assertEquals(task.getOutputDateAndTime(), \"Dec 12 2020, 14:01:02)\");","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jhchee18":24}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jhchee18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jhchee18"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jhchee18"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jhchee18"},"content":"    public void testToDo() {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jhchee18"},"content":"        LocalTime localTime \u003d LocalTime.parse(\"14:01:02\");","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jhchee18"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2013-12-12\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jhchee18"},"content":"        ToDo toDo \u003d new ToDo(\"makan burger\", localDate, localTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"jhchee18"},"content":"        assertEquals(toDo.getTaskType(), \"T\");","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"jhchee18"},"content":"        assertEquals(toDo.getTaskName(), \"makan burger\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"jhchee18"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"jhchee18"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jhchee18"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jhchee18":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jhchee18"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"jhchee18"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"jhchee18"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"jhchee18"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"jhchee18"},"content":"event project meeting /at Mon 2-5pm","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"jhchee18"},"content":"list","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"jhchee18":6}}]

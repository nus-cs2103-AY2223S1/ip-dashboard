[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"# Duke.Duke project template","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"Images of profile pictures are taken from:","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"\u003ca href\u003d\"https://www.flaticon.com/free-icons/profile\" title\u003d\"profile icons\"\u003eProfile icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"Background picture taken from:","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"\u003ca href\u003d\"https://www.freepik.com/free-vector/colorful-memphis-style-poster-vector_18234258.htm#query\u003dfree%20png%20background\u0026position\u003d22\u0026from_view\u003dsearch\"\u003eImage by rawpixel.com\u003c/a\u003e on Freepik ","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shaniceng":9,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"    mainClassName \u003d \"Duke.Launcher\"","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"shaniceng"},"content":"checkstyle {","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"shaniceng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"-":40,"shaniceng":21}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"T \u003e [ ] \u003e list","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"T \u003e [ ] \u003e 1","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"E \u003e [ ] \u003e project \u003e 22-Aug-2022 18:00","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"shaniceng":3}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":" * This class gets the specific command from the Parser class and","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":" * executes the specific command to do the tasks required","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"    private boolean isExit;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     * Constructor that initializes whether the program should exit or not","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    public Command() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"     * Sets the program to exit after user uses the exit command","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    public void setExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"     * Checks if the program should exit or not","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * @return true if program should exit and false if program should not exit","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"        return this.isExit;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"     * Executes the task according to the command made by the user in the child classes","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current task list","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"     * @throws DukeException which handles all the errors that could possibly happen","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"     *         if the program could not do the task","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":49}},{"path":"src/main/java/Command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.Constants;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import Tasks.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":" * Creates a new deadline task","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    private String desc;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    private LocalDateTime by;","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new deadline command with the taskname and date given","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"     * @param desc","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"     * @param by","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    public DeadlineCommand(String desc, LocalDateTime by) {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     * Creates a new deadline task and adds it into the task list,","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * followed by saving it into the filepath given and","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     * finally prints the necessary lines for the user interface.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current task list","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"        Deadline deadline \u003d new Deadline(this.desc, this.by);","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"        boolean isDuplicated \u003d taskList.isTasksDuplicated(deadline);","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"        if (isDuplicated) {","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"            return Constants.ERROR_IF_DUPLICATED;","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"        else {","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"            storage.writeFile(taskList.tasksToString());","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"            return ui.printAddTask(deadline, taskList.getSize());","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"shaniceng":53}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":" * Deletes a specific tasks in the list","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"    private int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new delete command with the given index","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     * @param index","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"     * Deletes a task from the task list and save the new","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     * task list into the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current tasklist","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"        Task deleted \u003d taskList.deleteTask(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"        storage.writeFile(taskList.tasksToString());","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"        return ui.printDeleteTask(deleted, taskList.getSize());","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":39}},{"path":"src/main/java/Command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.Constants;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import Tasks.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":" * Creates a new event task","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    private String desc;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    private LocalDateTime at;","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"     * Constructor which creates a new event command with the taskname and date given","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"     * @param desc","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"     * @param at","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    public EventCommand(String desc, LocalDateTime at) {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     * Creates a new event task and adds it to the current tasklist,","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * then saves it into the file and prints the output nicely","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     * with the ui class so that user can understand what is happening.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current tasklist","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"        Event event \u003d new Event(this.desc, this.at);","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"        boolean isDuplicated \u003d taskList.isTasksDuplicated(event);","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"        if (isDuplicated) {","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"            return Constants.ERROR_IF_DUPLICATED;","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"        else {","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"            taskList.addTask(event);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"            storage.writeFile(taskList.tasksToString());","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"            return ui.printAddTask(event, taskList.getSize());","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"shaniceng":53}},{"path":"src/main/java/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":" * Exits the program","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"     * Constructor which creates a new exit command","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     * Exits the program by printing the goodbye message","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current tasklist","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"        super.setExit();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"        return ui.printBye();","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":32}},{"path":"src/main/java/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"import Tasks.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":" * Finds a list of tasks based on the task name given by the user","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    private String taskName;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new find command with the given taskname","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"     * @param taskName","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    public FindCommand(String taskName) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"     * Prints all the task that is found with the task name given","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"     * by the user to the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current tasklist","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.findTask(taskName);","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"        return taskList.printList(tasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shaniceng":42}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":" * Lists the tasks that are currently in the task list","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new list command","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     * Prints all the current task in the tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current tasklist","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"        return taskList.printList();","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":31}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import Duke.Constants;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import Tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":" * Marks a specific task as done","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"    private int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new mark command with the index of tasks given","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"     * @param index","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     * Marks a specific tasks as done. If the tasks is unknown,","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     * the program will throw an error to warn the user to input","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"     * the commands correctly.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"     * After doing the command, it will save the new tasklist into the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current tasklist","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     * @throws DukeException which handles the error of invalid index input by the user","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.getSize()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"            throw new DukeException(Constants.INVALID_INDEX);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"        Task task \u003d taskList.markTask(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"        storage.writeFile(taskList.tasksToString());","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"        return ui.printMarkTask(task);","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":47}},{"path":"src/main/java/Command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.Constants;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import Tasks.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":" * Creates a new todo task","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"    private String desc;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new todo command with the taskname given","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"     * @param desc","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"    public TodoCommand(String desc) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     * Creates a new todo task and adds it into the task list,","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     * and save it into the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current tasklist","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"        Todo todo \u003d new Todo(this.desc);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"        boolean isDuplicated \u003d taskList.isTasksDuplicated(todo);","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"        if (isDuplicated) {","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"            return Constants.ERROR_IF_DUPLICATED;","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"        else {","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"            storage.writeFile(taskList.tasksToString());","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"            return ui.printAddTask(todo, taskList.getSize());","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"shaniceng":47}},{"path":"src/main/java/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import Duke.Constants;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import Tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":" * Marks a specific task as not done","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"    private int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     * Constructor which creates a new unmark command with the index of tasks given","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"     * @param index","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"        super();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     * Marks the specific tasks as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     * If the tasks is not in the task list, it will throw an error to warn the user to","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"     * input the commands correctly.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"     * It then saves the new task list into the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * @param taskList which contains the current tasklist","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     * @param ui which handles the user interface","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"     * @param storage which handles the saving and loading of file","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     * @throws DukeException which handles the error of invalid index input by the user","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     * @return string that will be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"        if (index \u003c 0 || index \u003e taskList.getSize()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"            throw new DukeException(Constants.INVALID_INDEX);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"        Task task \u003d taskList.unmarkTask(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"        storage.writeFile(taskList.tasksToString());","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"        return ui.printUnmarkTask(task);","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":47}},{"path":"src/main/java/Duke/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":" * Contains most of the constants used in this program for easier use and access","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"public class Constants {","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"    public static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"    public static final String NAME \u003d \"Shanice:)\";","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"    public static final String LINE \u003d","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"            \"____________________________________________________________________________\";","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    public static final String LIST \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_INDEX \u003d \"There is no such task available.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_INPUT \u003d \"Please input your description correctly.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_DATE \u003d \"Please format your date as (dd-MMM-yyyy hh:mm)\";","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_FILE \u003d \"Invalid string file input\";","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"    public static final String EMPTY_LIST \u003d \"The list is currently empty. Please add some tasks!\";","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    public static final String TODO \u003d \"T\";","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"    public static final String EVENT \u003d \"E\";","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"    public static final String DEADLINE \u003d \"D\";","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"    public static final String NO_MORE_LINES \u003d \"There is no more input!\";","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"    public static final String FOUND_LIST \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_BYE_INPUT \u003d \"Not a valid input for exiting\";","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_LIST_INPUT \u003d \"Not a valid input for exiting\";","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_MARK_INPUT \u003d \"Not a valid input for marking task\";","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_UNMARK_INPUT \u003d \"Not a valid input for unmarking task\";","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_DELETE_INPUT \u003d \"Not a valid input for deleting task\";","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_FIND_INPUT \u003d \"Not a valid input for finding task\";","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_TODO_INPUT \u003d \"Not a valid input for creating a todo task\";","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_DEADLINE_INPUT \u003d \"Not a valid input for creating a deadline task\";","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"shaniceng"},"content":"    public static final String INVALID_EVENT_INPUT \u003d \"Not a valid input for creating an event task\";","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"shaniceng"},"content":"    public static final String ERROR_IF_DUPLICATED \u003d \"This task has been added before\";","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":58}},{"path":"src/main/java/Duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"shaniceng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"shaniceng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"shaniceng"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shaniceng":61}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":" * Main class","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     * Constructor that initialises the relative file path to save / load","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     * the specific file","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    public Duke() {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"        storage \u003d new Storage(Constants.FILE_PATH);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"        tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     * Continuously run the program and executes the task input by the user","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    public void run() {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"                ui.showError(Constants.INVALID_DATE);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"            } finally {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"     * Returns a string that will be printed in the UI after the user","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"     * keys in a specific command","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"     * @param command","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"     * @return string that prints the final output to the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"shaniceng"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"shaniceng"},"content":"            Command c \u003d Parser.parse(command);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"            String output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"shaniceng"},"content":"            return output;","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"shaniceng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"shaniceng"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"shaniceng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"shaniceng"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"shaniceng":67,"-":1}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":" * Creates an exception that deals with the error in this specific program","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"shaniceng":11}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shaniceng":9}},{"path":"src/main/java/Duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shaniceng":31}},{"path":"src/main/java/Duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shaniceng":51}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Command.ExitCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Command.ListCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Command.MarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"import Command.UnmarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"import Command.TodoCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"import Command.EventCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"import Command.DeadlineCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"import Command.FindCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":" * This class deals with making sense of the user command","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"     * Returns the specific command that will execute the specific task according to","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     * the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     * @@author shaniceng-reused","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     * Reused from https://github.com/tinenhao/ip/blob/master/src/main/java/Duke/Parser.java","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"     * with minor modifications","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     * @param command","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * @return Command that program should execute according to","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     *         the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"     * @throws DukeException to show the error of an invalid input or command","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     *         given by the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"        String[] input \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"        String firstCommand \u003d input[0];","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"        switch (firstCommand) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003d\u003d 1: Constants.INVALID_BYE_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"        case \"list\":","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003d\u003d 1: Constants.INVALID_LIST_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003d\u003d 2: Constants.INVALID_MARK_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"            checkIntInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"            return new MarkCommand(parseInt(input[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003d\u003d 2: Constants.INVALID_UNMARK_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"shaniceng"},"content":"            checkIntInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"shaniceng"},"content":"            return new UnmarkCommand(parseInt(input[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003d\u003d 2: Constants.INVALID_DELETE_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"shaniceng"},"content":"            checkIntInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"shaniceng"},"content":"            return new DeleteCommand(parseInt(input[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"shaniceng"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003e\u003d 2: Constants.INVALID_TODO_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"shaniceng"},"content":"            return new TodoCommand(input[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"shaniceng"},"content":"        case \"event\":","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003e\u003d 5: Constants.INVALID_EVENT_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"shaniceng"},"content":"            String[] input2 \u003d input[1].split(\" /at \");","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input2);","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"shaniceng"},"content":"            return new EventCommand(input2[0], LocalDateTime.parse(input2[1], formatter));","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"shaniceng"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003e\u003d 5: Constants.INVALID_DEADLINE_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"shaniceng"},"content":"            String[] input3 \u003d input[1].split(\" /by \");","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input3);","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"shaniceng"},"content":"            return new DeadlineCommand(input3[0], LocalDateTime.parse(input3[1], formatter));","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"shaniceng"},"content":"        case \"find\":","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"shaniceng"},"content":"            assert input.length \u003d\u003d 2: Constants.INVALID_FIND_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"shaniceng"},"content":"            checkInputError(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"shaniceng"},"content":"            return new FindCommand(input[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"shaniceng"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"shaniceng"},"content":"            throw new DukeException(Constants.INVALID_COMMAND);","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"shaniceng"},"content":"    private static void checkInputError(String[] arr) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"shaniceng"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"shaniceng"},"content":"            throw new DukeException(Constants.INVALID_INPUT);","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"shaniceng"},"content":"    private static void checkIntInputError(String[] arr) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"shaniceng"},"content":"        if (!isNumber(arr[1])) {","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"shaniceng"},"content":"            throw new DukeException(Constants.INVALID_INPUT);","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"shaniceng"},"content":"    private static boolean isNumber(String str) {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"shaniceng"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"shaniceng"},"content":"            return false;","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"shaniceng"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"shaniceng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"shaniceng"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"shaniceng"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":111}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Tasks.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import Tasks.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import Tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import Tasks.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":" * This class deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"    private String filepath;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"     * Constructor that takes in the filepath","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     * @param filepath","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"     * Writes the tasks into a file","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"    public void writeFile(ArrayList\u003cString\u003e tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"        createDirectoryAndFile(file);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"        // Write into File","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"                fileWriter.write(tasks.get(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"        } catch(IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"shaniceng"},"content":"     * Loads the existing saved file to task list","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"shaniceng"},"content":"     * @return ArrayList\u003cTask\u003e to be loaded in the bot","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"    public ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"shaniceng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"shaniceng"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"shaniceng"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(this.filepath));","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"shaniceng"},"content":"            String readLine \u003d reader.readLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"shaniceng"},"content":"            while (readLine !\u003d null) {","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"shaniceng"},"content":"                String[] input \u003d readLine.split(\" \u003e \");","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"shaniceng"},"content":"                Task task;","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"shaniceng"},"content":"                if (input[0].equals(Constants.TODO)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"shaniceng"},"content":"                    assert input.length \u003d\u003d 3: Constants.INVALID_TODO_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"shaniceng"},"content":"                    task \u003d new Todo(input[2]);","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"shaniceng"},"content":"                } else if (input[0].equals(Constants.EVENT)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"shaniceng"},"content":"                    assert input.length \u003d\u003d 4: Constants.INVALID_EVENT_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"shaniceng"},"content":"                    task \u003d new Event(input[2], LocalDateTime.parse(input[3], formatter));","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"shaniceng"},"content":"                } else if (input[0].equals(Constants.DEADLINE)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"shaniceng"},"content":"                    assert input.length \u003d\u003d 4: Constants.INVALID_DEADLINE_INPUT;","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"shaniceng"},"content":"                    task \u003d new Deadline(input[2], LocalDateTime.parse(input[3], formatter));","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"shaniceng"},"content":"                } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"shaniceng"},"content":"                    throw new DukeException(Constants.INVALID_FILE);","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"shaniceng"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"shaniceng"},"content":"                if (input[1].equals(\"[X]\")) {","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"shaniceng"},"content":"                    task.setMarked();","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"shaniceng"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"shaniceng"},"content":"                tasks.add(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"shaniceng"},"content":"                readLine \u003d reader.readLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"shaniceng"},"content":"            reader.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"shaniceng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"shaniceng"},"content":"            createDirectoryAndFile(new File(filepath));","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"shaniceng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"shaniceng"},"content":"        return tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"shaniceng"},"content":"     * Creates a new directory and file if the file does not exist","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"shaniceng"},"content":"     * @param file","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"shaniceng"},"content":"    private void createDirectoryAndFile(File file) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"shaniceng"},"content":"        // Create Directory or File if it does not exist","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"shaniceng"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"shaniceng"},"content":"                File directory \u003d new File(file.getParent());","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"shaniceng"},"content":"                if (!directory.exists()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"shaniceng"},"content":"                    directory.mkdirs();","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"shaniceng"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"shaniceng"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"shaniceng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"shaniceng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":112}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":" * This class contains the task list and the operations to add / delete tasks in the list","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"public class TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new task list","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"     * Constructor that get the updated task list from the loaded file","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"     * @param load the current tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    public TaskList(ArrayList\u003cTask\u003e load) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"        this.tasks \u003d load;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"     * Adds the task ino the taskList","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"     * @param t current task that is added into the tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"        tasks.add(t);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"     * Deletes the specified tasks from the taskList","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"     * @param i index of the current task in the tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"     * @return Deleted Tasks.Task","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"        Task removed \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"        tasks.remove(i - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"        return removed;","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"     * Marks the specified task","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"     * @param i index of the current task in the tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"shaniceng"},"content":"     * @return Marked Tasks.Task","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"shaniceng"},"content":"    public Task markTask(int i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"shaniceng"},"content":"        Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"        t.setMarked();","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"shaniceng"},"content":"        return t;","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"shaniceng"},"content":"     * Unmarks the specified task","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"shaniceng"},"content":"     * @param i","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"shaniceng"},"content":"     * @return Unmarked Tasks.Task","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"shaniceng"},"content":"    public Task unmarkTask(int i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"shaniceng"},"content":"        Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"shaniceng"},"content":"        t.setUnmarked();","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"shaniceng"},"content":"        return t;","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"shaniceng"},"content":"     * Returns a list of tasks with the given task name","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"shaniceng"},"content":"     * @param taskName string of task","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"shaniceng"},"content":"     * @return arraylist of current tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"shaniceng"},"content":"    public ArrayList\u003cTask\u003e findTask(String taskName) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"shaniceng"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"shaniceng"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"shaniceng"},"content":"            if (t.getTaskName().contains(taskName)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"shaniceng"},"content":"                foundTasks.add(t);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"shaniceng"},"content":"        return foundTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"shaniceng"},"content":"     * Gets the number of tasks in the taskList","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"shaniceng"},"content":"     * @return size of taskList","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"shaniceng"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"shaniceng"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"shaniceng"},"content":"     * Prints the tasks into the taskList in the correct format","lastModifiedDate":"2022-09-01"},{"lineNumber":101,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"shaniceng"},"content":"     * @return string that prints the tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"shaniceng"},"content":"    public String printList() {","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"shaniceng"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"shaniceng"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"shaniceng"},"content":"                throw new DukeException(Constants.EMPTY_LIST);","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"shaniceng"},"content":"            else {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"shaniceng"},"content":"                str +\u003d (Constants.LIST);","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"shaniceng"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"shaniceng"},"content":"                    str +\u003d (String.format(\"%d.%s \\n\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"shaniceng"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"shaniceng"},"content":"        catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"shaniceng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"shaniceng"},"content":"        return str;","lastModifiedDate":"2022-09-01"},{"lineNumber":121,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"shaniceng"},"content":"     * Prints the tasks in the given taskList in the correct format","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"shaniceng"},"content":"     * @return string that prints the tasks","lastModifiedDate":"2022-09-01"},{"lineNumber":127,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"shaniceng"},"content":"    public String printList(ArrayList\u003cTask\u003e givenTasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":129,"author":{"gitId":"shaniceng"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":130,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"shaniceng"},"content":"            if (givenTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"shaniceng"},"content":"                throw new DukeException(Constants.EMPTY_LIST);","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"shaniceng"},"content":"            else {","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"shaniceng"},"content":"                str +\u003d (Constants.FOUND_LIST);","lastModifiedDate":"2022-09-01"},{"lineNumber":136,"author":{"gitId":"shaniceng"},"content":"                for (int i \u003d 0; i \u003c givenTasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"shaniceng"},"content":"                    str +\u003d String.format(\"%d.%s \\n\", i + 1, givenTasks.get(i).toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":138,"author":{"gitId":"shaniceng"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"shaniceng"},"content":"        catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"shaniceng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"shaniceng"},"content":"        return str;","lastModifiedDate":"2022-09-01"},{"lineNumber":145,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"shaniceng"},"content":"     * Puts all the tasks in taskList into a string for storing into a file","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"shaniceng"},"content":"     * @return ArrayList containing all the tasks in Strings","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"shaniceng"},"content":"    public ArrayList\u003cString\u003e tasksToString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"shaniceng"},"content":"        ArrayList\u003cString\u003e tasksStrings \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"shaniceng"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"shaniceng"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"shaniceng"},"content":"            String type \u003d t.toString().substring(1, 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"shaniceng"},"content":"            if (type.equals(Constants.TODO)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"shaniceng"},"content":"                tasksStrings.add(String.format(\"%s \u003e %s \u003e %s\\n\", type, t.getStatusIcon(), t.getTaskName()));","lastModifiedDate":"2022-08-28"},{"lineNumber":159,"author":{"gitId":"shaniceng"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"shaniceng"},"content":"                tasksStrings.add(String.format(\"%s \u003e %s \u003e %s \u003e %s\\n\", type, t.getStatusIcon(),","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"shaniceng"},"content":"                        t.getTaskName(), t.getDateline()));","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"shaniceng"},"content":"        return tasksStrings;","lastModifiedDate":"2022-08-28"},{"lineNumber":165,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":167,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":168,"author":{"gitId":"shaniceng"},"content":"     * Checks if the task added is duplicated or not by comparing with the current taskList","lastModifiedDate":"2022-09-04"},{"lineNumber":169,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":170,"author":{"gitId":"shaniceng"},"content":"     * @param task","lastModifiedDate":"2022-09-04"},{"lineNumber":171,"author":{"gitId":"shaniceng"},"content":"     * @return true if it is duplicated","lastModifiedDate":"2022-09-04"},{"lineNumber":172,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":173,"author":{"gitId":"shaniceng"},"content":"    public boolean isTasksDuplicated(Task task) {","lastModifiedDate":"2022-09-04"},{"lineNumber":174,"author":{"gitId":"shaniceng"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-04"},{"lineNumber":175,"author":{"gitId":"shaniceng"},"content":"            if (task.toString().equals(tasks.get(i).toString())) {","lastModifiedDate":"2022-09-04"},{"lineNumber":176,"author":{"gitId":"shaniceng"},"content":"                return true;","lastModifiedDate":"2022-09-04"},{"lineNumber":177,"author":{"gitId":"shaniceng"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":178,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":179,"author":{"gitId":"shaniceng"},"content":"        return false;","lastModifiedDate":"2022-09-04"},{"lineNumber":180,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":181,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":181}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import Tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":" * This class deals with the interactions with the user and prints","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":" * the necessary messages according to the user input","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"     * Initialises a new UI with a scanner to get user input","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"    public Ui() {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"     * Returns the command input by the user","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"     * @return string containing the user input per line","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"     * @throws DukeException which shows an error if there is no more lines","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     *         left in the user input","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    public String readCommand() {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"            return scanner.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"        catch (Exception e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"            return Constants.NO_MORE_LINES;","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"     * Prints the welcome message when user starts the program","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"     * @return string that shows the welcome message","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"        return (Constants.LINE + \"\\nHello! I\u0027m \" + Constants.NAME","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"                + \"\\nWhat can I do for you?\\n\" + Constants.LINE);","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"     * Prints the line that segments from previous and new commands","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"     * @return string that shows the line printed","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"    public String showLine() {","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"        return (Constants.LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"shaniceng"},"content":"     * Prints goodbye message when user ends the program","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"shaniceng"},"content":"     * @return string that returns the final output to be printed when ending the bot","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"shaniceng"},"content":"    public String printBye() {","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"shaniceng"},"content":"        String str \u003d (\"Bye. Hope to see you soon again!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"shaniceng"},"content":"        scanner.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"shaniceng"},"content":"        return str;","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"shaniceng"},"content":"     * Prints the message for adding a task","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"shaniceng"},"content":"     * @param t current task that is being added into the tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"shaniceng"},"content":"     * @param size of tasks left in the tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"shaniceng"},"content":"     * @return string that returns the final output to be printed when adding a task","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"shaniceng"},"content":"    public String printAddTask(Task t, int size) {","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"shaniceng"},"content":"        return  String.format(\"Got it. I\u0027ve added this task: \\n %s \\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"shaniceng"},"content":"                t.toString(), size);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"shaniceng"},"content":"     * Prints the message for marking a task","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"shaniceng"},"content":"     * @param t current task that is being marked","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"shaniceng"},"content":"     * @return string that returns the final output to be printed when marking a task","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"shaniceng"},"content":"    public String printMarkTask(Task t) {","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"shaniceng"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done: \\n%s \\n\", t.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"shaniceng"},"content":"     * Prints the message when unmarking a task","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"shaniceng"},"content":"     * @param t current task that is being unmarked","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"shaniceng"},"content":"     * @return string that returns the final output to be printed when unmarking a task","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"shaniceng"},"content":"    public String printUnmarkTask(Task t) {","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"shaniceng"},"content":"        return  String.format(\"OK, I\u0027ve marked this task as not done yet: \\n %s \\n\", t.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"shaniceng"},"content":"     * Prints the message when deleting a task","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"shaniceng"},"content":"     * @param t current task that is being deleted","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"shaniceng"},"content":"     * @param size of tasks left in the tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"shaniceng"},"content":"     * @return string that returns the final output to be printed for a deleted task","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"shaniceng"},"content":"    public String printDeleteTask(Task t, int size) {","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"shaniceng"},"content":"        return  String.format(\"Noted. I\u0027ve removed this task: \\n%s \"","lastModifiedDate":"2022-09-04"},{"lineNumber":107,"author":{"gitId":"shaniceng"},"content":"                + \"\\nNow you have %d tasks in the list.\\n\", t.toString(), size);","lastModifiedDate":"2022-09-04"},{"lineNumber":108,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"shaniceng"},"content":"     * Prints the error message by Duke Exception or Exception","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"shaniceng"},"content":"     * @param s string that gets printed","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"shaniceng"},"content":"     * @return string that returns the error to be printed","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"shaniceng"},"content":"    public String showError(String s) {","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"shaniceng"},"content":"        return s;","lastModifiedDate":"2022-09-01"},{"lineNumber":118,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":119}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":" * Creates a new deadline task from the deadline command","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"    private LocalDateTime by;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd hh.mma\");","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates the deadline task with the title and time","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     * @param msg","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     * @param by","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    public Deadline(String msg, LocalDateTime by) {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"        super(msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"     * Gets the event date and time according to the user input and format it correctly","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     * @return string that consists of the current date and time input by the user","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"    public String getDateline() {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     * Prints the correct output for each deadline task","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"     * @return string of final output to be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"        return String.format(\"%s%s (by: %s)\", \"[D]\", super.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"                this.by.format(formatter));","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"shaniceng":44}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":" * Creates a new Event from the event command","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"    private LocalDateTime at;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd hh.mma\");","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new event task with the title and time","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     * @param msg","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     * @param at","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    public Event(String msg, LocalDateTime at) {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"        super(msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"     * Gets the event date and time according to the user input and format it correctly","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     * @return string that consists of the current date and time input by the user","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"    public String getDateline() {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     * Prints the correct output for each event task","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"     * @return string of final output to be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"        return String.format(\"%s%s (at: %s)\", \"[E]\",","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"                super.toString(), this.at.format(formatter));","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"shaniceng":45}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":" * Creates a new task","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"    private String taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"     * Constructor which gets the task name from child classes","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"     * @param taskName","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     * Sets the task as done","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"    public void setMarked() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     * Sets the task as not done","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    public void setUnmarked() {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"     * Gets the icon for printing if task is done or not done","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"shaniceng"},"content":"     * @return String that contains how to correctly print a task","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"shaniceng"},"content":"     *         that is done or not done","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"shaniceng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"shaniceng"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"shaniceng"},"content":"     * Returns the task name of the specific task","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"shaniceng"},"content":"     * @return String that contains that task\u0027s name","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"shaniceng"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"shaniceng"},"content":"        return this.taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"shaniceng"},"content":"     * Returns the date assigned by the user in the input","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"shaniceng"},"content":"     * @return String that contains the correct date format in specific tasks only","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"shaniceng"},"content":"     *         (in deadline and event tasks classes)","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"shaniceng"},"content":"    public String getDateline() {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"shaniceng"},"content":"        return \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"shaniceng"},"content":"     * Prints the correct output for each task","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"shaniceng"},"content":"     * @return String that contains the task name and whether the task is marked or not","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"shaniceng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"shaniceng"},"content":"        return String.format(\"%s %s\", getStatusIcon(), this.taskName);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"shaniceng":70}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":" * Creates a new todo task from the todo command","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"     * Constructor that creates a new todo task with the title of task input by the user","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"     * @param msg","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"    public Todo(String msg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"        super(msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     * Prints the correct output for each todo task","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"     * @return string of final output to be printed in the UI","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"shaniceng":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.geometry.Rectangle2D?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"         prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: linear-gradient(#dcb5ba, #eee);\"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" graphicTextGap\u003d\"5.0\" lineSpacing\u003d\"1.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"            \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"         \u003cviewport\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"            \u003cRectangle2D /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"         \u003c/viewport\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shaniceng":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"            fx:controller\u003d\"Duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #dcb5ba;\" text\u003d\"Send\" textFill\u003d\"#9a5757\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"                  \u003cImageView fitHeight\u003d\"556.0\" fitWidth\u003d\"394.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"                     \u003cimage\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"                        \u003cImage url\u003d\"@../images/backgroundWallpaper.jpg\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"                     \u003c/image\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"               \u003c/children\u003e\u003c/VBox\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"shaniceng":34}},{"path":"src/test/java/Tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":" * Deadline test class to test deadline object methods","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     * Test for string representation of a deadline task","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment 1\", LocalDateTime.parse(\"23-Aug-2022 18:00\",","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"                DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\")));","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"        assertEquals(\"[D][ ] Assignment 1 (by: 2022/08/23 06.00PM)\", deadline.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     * Test for marking a deadline task as done","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    public void addDeadlineTestMarked() {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"        Deadline deadline \u003d new Deadline(\"Tester1\", LocalDateTime.parse(\"10-Jan-2020 12:30\",","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"                DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\")));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"        deadline.setMarked();","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"        assertEquals(\"[D][X] Tester1 (by: 2020/01/10 12.30PM)\", deadline.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":35}},{"path":"src/test/java/Tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":" * Event test class to test event object methods","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"public class EventTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"     * Test for string representation of an event task","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    public void addEventTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"        Event event \u003d new Event(\"project meeting\", LocalDateTime.parse(\"14-Jan-2022 12:00\",","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"                DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\")));","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"        assertEquals(\"[E][ ] project meeting (at: 2022/01/14 12.00PM)\", event.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"     * Test for marking an event task as done","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    public void addEventTestMarked() {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"        Event event \u003d new Event(\"Tester2\", LocalDateTime.parse(\"10-Jan-2020 12:30\",","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shaniceng"},"content":"                DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\")));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shaniceng"},"content":"        event.setMarked();","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shaniceng"},"content":"        assertEquals(\"[E][X] Tester2 (at: 2020/01/10 12.30PM)\", event.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":35}},{"path":"src/test/java/Tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"package Tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":" * Todo test class to test todo object methods","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"     * Test for string representation of a todo task","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"    public void addToDoTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"        Todo todo \u003d new Todo(\"task 1\");","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"        assertEquals(\"[T][ ] task 1\", todo.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"shaniceng"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shaniceng"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shaniceng"},"content":"     * Test for marking a todo task as done","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shaniceng"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shaniceng"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shaniceng"},"content":"    public void addToDoTestMarked() {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shaniceng"},"content":"        Todo todo \u003d new Todo(\"Tester3\");","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shaniceng"},"content":"        todo.setMarked();","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shaniceng"},"content":"        assertEquals(\"[T][X] Tester3\", todo.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shaniceng"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shaniceng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"shaniceng":30}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"T \u003e [X] \u003e borrow book","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"D \u003e [ ] \u003e return book \u003e 01 Dec 2019","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"E \u003e [ ] \u003e project meeting \u003e 04 Mar 2022","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"T \u003e [ ] \u003e borrow book","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"D \u003e [ ] \u003e return book \u003e 01 Dec 2019","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"E \u003e [ ] \u003e project meeting \u003e 04 Mar 2022","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"T \u003e [ ] \u003e borrow book","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"D \u003e [ ] \u003e return book \u003e 01 Dec 2019","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"E \u003e [ ] \u003e project meeting \u003e 04 Mar 2022","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"T \u003e [ ] \u003e borrow book","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"D \u003e [ ] \u003e return book \u003e 01 Dec 2019","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"E \u003e [ ] \u003e project meeting \u003e 04 Mar 2022","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"T \u003e [ ] \u003e borrow book","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"D \u003e [ ] \u003e return book \u003e 01 Dec 2019","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"E \u003e [ ] \u003e project meeting \u003e 04 Mar 2022","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"shaniceng"},"content":"T \u003e [ ] \u003e borrow book","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"shaniceng"},"content":"D \u003e [ ] \u003e return book \u003e 01 Dec 2019","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"shaniceng"},"content":"E \u003e [ ] \u003e project meeting \u003e 04 Mar 2022","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"shaniceng":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaniceng"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"shaniceng"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"shaniceng"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"shaniceng"},"content":"deadline return book /by 01 Dec 2019","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"shaniceng"},"content":"event project meeting /at 04 Mar 2022","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"shaniceng"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"shaniceng"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"shaniceng"},"content":"mark 2","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"shaniceng"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"unmark 2","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"shaniceng"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"shaniceng"},"content":"delete 2","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"shaniceng"},"content":"blah","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"shaniceng"},"content":"delete","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"shaniceng"},"content":"todo","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"shaniceng":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"shaniceng"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\Duke.java","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"shaniceng":1}}]

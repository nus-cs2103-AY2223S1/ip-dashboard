[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dlimyy":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dlimyy":17,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"### `Add tasks`","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"Adds the various kinds of tasks to the Duke Bot. These include","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"* ToDo tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"* Deadline tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"* Event tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"### `Delete tasks`","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"Removes the task from the duke bot","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"### `List tasks`","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"Lists out the tasks in the duke bot","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"### `Mark tasks`","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"Marks tasks in the duke bot which are completed","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"### `Unmark tasks`","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"Unmarks tasks in the duke bot which have been previously marked","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"### `Find tasks`","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"Searches for task which contains the keyword specified","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"### `Undo commands`","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"Undoes any previous command made by the user","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"###","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"## Guide on how to use various commands","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"### `ToDo` - Adds a Todo task to the Duke bot","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"dlimyy":30,"-":23}},{"path":"src/main/java/duke/CommandHistory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * The CommandHistory class represents the list of commands made by the","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" * user previously.","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"public class CommandHistory {","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    private final ArrayList\u003cCommand\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     * Adds command to the command list.","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * @param command Command to be added.","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    public void addCommand(Command command) {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"        commands.add(command);","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     * Returns the last command in the list.","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     * @return The last command in the list.","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    public Command getLastCommand() {","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        if (commands.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"            return null;","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"        Command lastCommand \u003d commands.get(commands.size() - 1);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"        commands.remove(commands.size() - 1);","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        return lastCommand;","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"dlimyy":35}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"    public static DialogBox getDialog(String text, Image img, boolean isDuke) {","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"        if (isDuke) {","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"            db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":59}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":" * Duke class represents the Duke Bot which serves the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    private CommandHistory commandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the Duke class.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * Sets the storage, ui and taskList to the local variables.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    public Duke() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"            taskList \u003d new TaskList(storage.readFile());","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"            commandHistory \u003d new CommandHistory();","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"            System.out.println(\"File should have been created by now!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"            taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"            System.out.println(\"Sorry! This should not be happening!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"            taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"     * Returns reply which is given by the Duke Bot.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"     * @return The reply given by Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    public String getReply(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        String reply;","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"            Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"            reply \u003d command.execute(ui, storage, taskList, commandHistory);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"            reply \u003d ui.showExceptionMessage(e.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"            reply \u003d ui.showExceptionMessage(\"Please enter a valid number\");","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"            reply \u003d ui.showExceptionMessage(\"Sorry! Please include a valid date entry\");","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"        scanner.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"        return reply;","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"dlimyy":61,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":" * DukeException represents the list of exceptions encountered by Duke","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"     * Constructor of DukeException class.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"     * Sets the message of DukeException to the local variable.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"     * @param message The message for the DukeException.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"        return super.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":23}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"        Application.launch(Main.class,args);","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":27}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/image/ZeeUser.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/image/ZeeDuke.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        dialogContainer.getChildren().add(DialogBox.getDialog(ui.Greet(),dukeImage,true));","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        String response \u003d duke.getReply(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"                DialogBox.getDialog(input, userImage, false),","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"                DialogBox.getDialog(response, dukeImage, true)","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"        if (response.equals(\"So Long, Farewell!\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            //@@author dlimyy-reused","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            //Reused from https://stackoverflow.com/questions/27334455","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            //with minor modifications","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            PauseTransition transition \u003d new PauseTransition(Duration.millis(850));","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            transition.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            transition.play();","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            //@@author","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":54,"-":7}},{"path":"src/main/java/duke/MultiLineFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"public class MultiLineFormatter {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"    private final StringBuilder fullMessage \u003d new StringBuilder();","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"    public void add(String message) {","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"        fullMessage.append(message);","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    public String getFullMessage() {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"        return fullMessage.toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import duke.command.UndoCommand;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":" * Parser class represents the parser which parses the command given by user","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":" * in the terminal.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     * Parses the command given by user in the terminal","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * and returns the corresponding Command object based","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * on command given by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     * @param command Command given by the user in terminal.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * @param taskList The tasks stored in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * @return The corresponding Command object is returned.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * @throws DukeException If valid description or number is missing after command.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @throws DateTimeParseException If the user does not key in valid date.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @throws NumberFormatException If the user does not choose a valid number.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    public static Command parse(String command, TaskList taskList) throws DukeException,","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"            DateTimeParseException, NumberFormatException{","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        String lowercaseCommand \u003d command.toLowerCase().split(\" \")[0];","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        switch (lowercaseCommand) {","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"        case \"list\":","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"            int markedPosition \u003d parseMarkedTask(command, taskList);","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"            return new MarkCommand(markedPosition);","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"            int unmarkedPosition \u003d parseUnmarkedTask(command, taskList);","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"            return new UnmarkCommand(unmarkedPosition);","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"            String description \u003d parseToDo(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"            return new ToDoCommand(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"        case \"undo\":","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"            String[] taskWithDeadline \u003d parseDeadline(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"            LocalDate deadlineDate \u003d parseDate(taskWithDeadline[1]);","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"            return new DeadlineCommand(taskWithDeadline[0], deadlineDate);","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"        case \"event\":","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"            String[] taskWithPeriod \u003d parseEvent(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"            LocalDate eventDate \u003d parseDate(taskWithPeriod[1]);","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"            return new EventCommand(taskWithPeriod[0], eventDate);","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"            int deletePosition \u003d parseDelete(command, taskList);","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"            return new DeleteCommand(deletePosition);","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"        case \"find\":","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"            String keyword \u003d parseFind(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"dlimyy"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"dlimyy"},"content":"        default:","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"            return new WrongCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"dlimyy"},"content":"    private static Integer parseMarkedTask(String command, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"dlimyy"},"content":"        assert command.toLowerCase().startsWith(\"mark\") : \"This should be mark\";","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"dlimyy"},"content":"        String[] markedTask \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"dlimyy"},"content":"        if (markedTask.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Please input a number after mark\");","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"dlimyy"},"content":"        assert markedTask.length \u003d\u003d 2 : \"This should be length 2\";","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"dlimyy"},"content":"        int number \u003d Integer.parseInt(markedTask[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"dlimyy"},"content":"        if (number \u003e taskList.getSize() || number \u003c\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please choose a valid item number in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"dlimyy"},"content":"        return number;","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"dlimyy"},"content":"    private static Integer parseUnmarkedTask(String command, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"dlimyy"},"content":"        String[] unmarkedTask \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"dlimyy"},"content":"        if (unmarkedTask.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Please input a number after unmark\");","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"dlimyy"},"content":"        assert unmarkedTask.length \u003d\u003d 2 : \"This should be length 2\";","lastModifiedDate":"2022-09-07"},{"lineNumber":94,"author":{"gitId":"dlimyy"},"content":"        int number \u003d Integer.parseInt(unmarkedTask[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"dlimyy"},"content":"        if (number \u003e taskList.getSize() || number \u003c\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please choose a valid item number in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"dlimyy"},"content":"        return number;","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"dlimyy"},"content":"    private static String parseToDo(String command) throws DukeException{","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"dlimyy"},"content":"        String[] taskWithDescription \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"dlimyy"},"content":"        if (taskWithDescription.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please include a description after todo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"dlimyy"},"content":"        return taskWithDescription[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"dlimyy"},"content":"    private static String[] parseDeadline(String command) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"dlimyy"},"content":"        String[] taskWithDescription \u003d command.split(\" \",2);","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"dlimyy"},"content":"        if (taskWithDescription.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please include a \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"dlimyy"},"content":"                    \"valid description after deadline\");","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"dlimyy"},"content":"        String[] taskWithDeadline \u003d taskWithDescription[1]","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"dlimyy"},"content":"                .split(\" /by \",2);","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"dlimyy"},"content":"        if (taskWithDeadline.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please include a valid \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"dlimyy"},"content":"                    \"deadline after the description\");","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"dlimyy"},"content":"        return taskWithDeadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"dlimyy"},"content":"    private static LocalDate parseDate(String date) throws DateTimeParseException{","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"dlimyy"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"dlimyy"},"content":"        return LocalDate.parse(date,dtf);","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"dlimyy"},"content":"    private static String[] parseEvent(String command) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"dlimyy"},"content":"        String[] taskWithDescription \u003d command.split(\" \",2);","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"dlimyy"},"content":"        if (taskWithDescription.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please include a \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"dlimyy"},"content":"                    \"valid description after event\");","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"dlimyy"},"content":"        String[] taskWithPeriod \u003d taskWithDescription[1]","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"dlimyy"},"content":"                .split(\" /at \",2);","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"dlimyy"},"content":"        if (taskWithPeriod.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please include a valid \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"dlimyy"},"content":"                    \"period after the description\");","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"dlimyy"},"content":"        return taskWithPeriod;","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"dlimyy"},"content":"    private static Integer parseDelete(String command, TaskList taskList) throws DukeException, NumberFormatException{","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"dlimyy"},"content":"        String[] taskDeleted \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"dlimyy"},"content":"        if (taskDeleted.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please include a number after delete\");","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"dlimyy"},"content":"        int number \u003d Integer.parseInt(taskDeleted[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"dlimyy"},"content":"        if (number \u003e taskList.getSize() || number \u003c\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please select a valid item number in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"dlimyy"},"content":"        return number;","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"dlimyy"},"content":"    private static String parseFind(String command) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"dlimyy"},"content":"        String[] commandWithKeyword \u003d command.split(\" \",2);","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"dlimyy"},"content":"        if (commandWithKeyword.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"dlimyy"},"content":"            throw new DukeException(\"Sorry! Please include a keyword after find\");","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"dlimyy"},"content":"        return commandWithKeyword[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":165}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":" * Storage class represents storage object which interacts","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":" * with the task data stored in the txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * Reads the txt file from Info/data.txt and returns","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     * an ArrayList of all the tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     * @return An ArrayList of the tasks read from the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * @throws FileNotFoundException If the txt file does not exist.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * @throws IOException If the file cannot be found by scanner or I/O error occurred.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    public ArrayList\u003cTask\u003e readFile() throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"        ArrayList\u003cTask\u003e dukeBotArray  \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"        File dataDirectory \u003d new File(\"Info\");","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"        if (!dataDirectory.isDirectory()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"        File dataFile \u003d new File(\"Info/data.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"        dataFile.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"        Scanner scanningFile \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        while (scanningFile.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"            String currLine \u003d scanningFile.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"            addTaskToDukeBotArray(dukeBotArray, currLine);","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"        scanningFile.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        return dukeBotArray;","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"     * Saves all the tasks to the txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"     * @param isDeleted Whether the file should be deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"    public void saveToFile(boolean isDeleted, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"            File dataFile \u003d new File(\"Info/data.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"            if (isDeleted) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"                dataFile.delete();","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"            FileWriter fileWriter \u003d new FileWriter(dataFile, true);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"                if (!isDeleted \u0026\u0026 i !\u003d taskList.size() - 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"                    continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"                String currLine \u003d taskList.get(i).stringFormatting();","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"                fileWriter.write(currLine + System.lineSeparator());","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"dlimyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"dlimyy"},"content":"            System.out.println(\"Please check that parent file is created!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"dlimyy"},"content":"    private void addTaskToDukeBotArray(ArrayList\u003cTask\u003e dukeBotArray, String currLine) {","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"dlimyy"},"content":"        String[] task \u003d currLine.split(\" # \");","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"dlimyy"},"content":"        if (task.length \u003d\u003d 3) {","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"dlimyy"},"content":"            ToDo todo \u003d new ToDo(task[2]);","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"dlimyy"},"content":"            boolean isMarked \u003d task[1].equals(\"T\");","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"dlimyy"},"content":"            todo.setCompleted(isMarked);","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"dlimyy"},"content":"            dukeBotArray.add(todo);","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":81,"author":{"gitId":"dlimyy"},"content":"        if (task.length \u003d\u003d 4) {","lastModifiedDate":"2022-09-14"},{"lineNumber":82,"author":{"gitId":"dlimyy"},"content":"            if (task[0].equals(\"D\")) {","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"dlimyy"},"content":"                LocalDate currDate \u003d LocalDate.parse(task[3]);","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"dlimyy"},"content":"                Deadline deadline \u003d new Deadline(task[2],currDate);","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"dlimyy"},"content":"                boolean isMarked \u003d task[1].equals(\"T\");","lastModifiedDate":"2022-09-14"},{"lineNumber":86,"author":{"gitId":"dlimyy"},"content":"                deadline.setCompleted(isMarked);","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"dlimyy"},"content":"                dukeBotArray.add(deadline);","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"dlimyy"},"content":"            if (task[0].equals(\"E\")) {","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"dlimyy"},"content":"                LocalDate currDate \u003d LocalDate.parse(task[3]);","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"dlimyy"},"content":"                Event event \u003d new Event(task[2],currDate);","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"dlimyy"},"content":"                boolean isMarked \u003d task[1].equals(\"T\");","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"dlimyy"},"content":"                event.setCompleted(isMarked);","lastModifiedDate":"2022-09-14"},{"lineNumber":94,"author":{"gitId":"dlimyy"},"content":"                dukeBotArray.add(event);","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":97,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":99,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":99}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * TaskList class which represents an array of tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * Adds the task to the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param task The current task to be added.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * @param storage The Storage object which will write task to the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    public void add(Task task, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"        storage.saveToFile(false, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     * Removes the task from the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * @param position The position of the task in the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * @param storage The Storage object which will remove task from the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"    public void remove(int position, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        taskList.remove(position);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"        storage.saveToFile(true,taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     * Marks the task in the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"     * @param position The position of the task in the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"     * @param storage The Storage object which will marks task to the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    public void mark(int position, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"        taskList.get(position).setCompleted(true);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        storage.saveToFile(true, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"     * Unmarks the task in the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"     * @param position The position of the task in the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     * @param storage The Storage object which will unmark task to the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"    public void unmark(int position, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"        taskList.get(position).setCompleted(false);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"        storage.saveToFile(true, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"     * Returns the size of the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"     * @return The size of the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"    public Integer getSize() {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"     * Returns the task in the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"     * @param num The position of the task in the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"dlimyy"},"content":"     * @return The task in the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"dlimyy"},"content":"    public Task getTask(int num) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"dlimyy"},"content":"        return taskList.get(num);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":78}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * Ui class represents the Ui interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"     * Returns the greeting by Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     * @return The greeting by Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    public String Greet() {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"        MultiLineFormatter multiLineFormatter \u003d new MultiLineFormatter();","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"        multiLineFormatter.add(\"Hello, this is Duke, the Duke Bot! It is a pleasure to meet you!\\n\");","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"        multiLineFormatter.add(\"How may I assist you?\");","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"        return multiLineFormatter.getFullMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * Bids farewell to the user after they key in bye.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * @return The farewell to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    public String GoodBye() {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        return \"So Long, Farewell!\";","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * Returns either the message of the task, the task itself and the","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * number of tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     * @param message The message of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"     * @param task The task.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     * @return The message, task and number of tasks in list.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    public String displayCommandMessage(String message, Task task, Integer size) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"        MultiLineFormatter multiLineFormatter \u003d new MultiLineFormatter();","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        if (message !\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"            multiLineFormatter.add(message);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"            multiLineFormatter.add(\"\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"            multiLineFormatter.add(\"\\t\\t\" + task);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"            multiLineFormatter.add(\"\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"        if (size !\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"            String numOfTasks \u003d String.format(\"You currently have %d tasks in the list\", size);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"            multiLineFormatter.add(numOfTasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"        return multiLineFormatter.getFullMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"     * Returns the message for the exception.","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"     * @param message The message for the exception.","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"     * @return The message for the exception.","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"    public String showExceptionMessage(String message) {","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"        return \"Hey Listen! There is an error!\\n\" + message;","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":66}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":" * ByeCommand class represents a bye Command given by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     * The goodbye message is being returned.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of command messages.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * @return The goodbye message.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        return ui.GoodBye();","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     * Returns the message that this command cannot be undone.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of command messages.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @return Message that this command cannot be undone.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        return \"There are no more changes to be undone!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":" * An abstract class which represents the Command given by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    public abstract String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory);","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    public abstract String undoExecute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory);","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * Checks whether the current command is a ByeCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * @return true if command is a ByeCommand; else return false.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    public Boolean isTerminated() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":27}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":" * DeadlineCommand class represents the deadline command given by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    private final String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * Constructor for the DeadlineCommand class.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * Sets the description and deadline to the local variables.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    public DeadlineCommand(String description, LocalDate deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * Adds the deadline task to the taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * Returns the message that the deadline task was added.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     * @return The message that deadline task was added.","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        Deadline deadline \u003d new Deadline(this.description, this.deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        commandHistory.addCommand(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"        taskList.add(deadline,storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        String message \u003d \"Nice! This task has been successfully added!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(message, deadline, taskList.getSize());","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"     * Removes the deadline that has just been added.","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"     * @return The message that the deadline has been removed.","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList, CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"        Deadline deletedDeadline \u003d new Deadline(this.description, this.deadline);","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"        taskList.remove(taskList.getSize() - 1, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"        String message \u003d \"This deadline is no longer added!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(message,deletedDeadline, taskList.getSize());","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":66}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":" * The DeleteCommand class represents the delete command given by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    private final int position;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    private Task taskRemoved \u003d null;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * The constructor of the DeleteCommand class.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     * Sets the position of the task to be deleted","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * to the local variable.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * @param position Position of the task in taskList to be removed.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    public DeleteCommand(int position) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * Removes the task from the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * Returns the message that the task was removed.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     * @return The message that task was removed.","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        taskRemoved \u003d taskList.getTask(position - 1);","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        commandHistory.addCommand(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"        taskList.remove(position - 1, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        String commandMessage \u003d \"Noted! This task has been successfully removed!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(commandMessage, taskRemoved, taskList.getSize());","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"     * Adds the task that has been deleted back into the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"     * Returns the message that task has been added back.","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"     * @return The message that the task has been added back.","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList, CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"        if (taskRemoved \u003d\u003d null) {","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"            return ui.displayCommandMessage(\"No task has been deleted previously\",","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"                    null, null);","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"        if (taskRemoved instanceof Event) {","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"            Event event \u003d (Event) taskRemoved;","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"dlimyy"},"content":"            taskList.add(event, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"dlimyy"},"content":"            String message \u003d \"This event has been successfully re-added\";","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"            return ui.displayCommandMessage(message,event,taskList.getSize() - 1);","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"        if (taskRemoved instanceof ToDo) {","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"dlimyy"},"content":"            ToDo toDo \u003d (ToDo) taskRemoved;","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"dlimyy"},"content":"            taskList.add(toDo, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"dlimyy"},"content":"            String message \u003d \"This ToDo has been successfully re-added\";","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"dlimyy"},"content":"            return ui.displayCommandMessage(message,toDo,taskList.getSize() - 1);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"dlimyy"},"content":"        if (taskRemoved instanceof Deadline) {","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"dlimyy"},"content":"            Deadline deadline \u003d (Deadline) taskRemoved;","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"dlimyy"},"content":"            taskList.add(deadline, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"dlimyy"},"content":"            String message \u003d \"This deadline has been successfully re-added\";","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"dlimyy"},"content":"            return ui.displayCommandMessage(message,deadline,taskList.getSize() - 1);","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"dlimyy"},"content":"        return null;","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":87}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":" * EventCommand class represents an event command given by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    private final String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    private final LocalDate period;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the EventCommand class.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     * Sets the description of the task and period to the local","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * variables.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * @param description Description of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     * @param period Period that the event is occurring.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    public EventCommand(String description, LocalDate period) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        this.period \u003d period;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * Adds the event task from the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * Returns the message that the event task was added.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"     * @return The message that event was added.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"        Event event \u003d new Event(this.description, this.period);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        commandHistory.addCommand(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        taskList.add(event,storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"        String message \u003d \"Nice! This task has been successfully added!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(message, event, taskList.getSize());","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     * Deletes the event that has just been added.","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"     * @return The message that the event has been deleted.","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList, CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"        Event deletedEvent \u003d new Event(this.description, this.period);","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"        taskList.remove(taskList.getSize() - 1, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"        String message \u003d \"This event is no longer added!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(message,deletedEvent, taskList.getSize());","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":68}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.*;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":" * FindCommand class represents the find command given by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the Find Class.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * Sets the keyword which filters the task to","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * local variable.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param keyword The keyword used for filtering.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * Filters out all tasks which contains the keyword and","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * returns the list of tasks which contains the keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @return The string of list of tasks which contains the keyword","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        ArrayList\u003cTask\u003e tempTaskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"            if (taskList.getTask(i).hasKeyword(keyword)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"                tempTaskArray.add(taskList.getTask(i));","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        if (tempTaskArray.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"            String message \u003d \"\\t\" + \"No search results are available for this keyword!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"            return ui.displayCommandMessage(message, null, null);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"            MultiLineFormatter mFormatter \u003d new MultiLineFormatter();","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"            String findMessage \u003d \"Here are the list of matching tasks!\";","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"            mFormatter.add(findMessage);","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"            mFormatter.add(\"\\n\");","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"            for (int j \u003d 0; j \u003c tempTaskArray.size(); j++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"                String itemDisplayed \u003d String.format(\"\\t\\t%d. %s\", j + 1, tempTaskArray.get(j));","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"                mFormatter.add(itemDisplayed);","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"                mFormatter.add(\"\\n\");","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"            return mFormatter.getFullMessage();","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"     * Returns message that this command cannot be undone.","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"dlimyy"},"content":"     * @return Message that this command cannot be undone.","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"dlimyy"},"content":"        return \"There are no more changes to be undone!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":75}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.*;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * ListCommand class represents the list command given by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"     * Returns the string representation of","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"     * a list of tasks that are in the task list.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @return String representing list of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"        MultiLineFormatter mFormatter \u003d new MultiLineFormatter();","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"            String message \u003d \"\\t\\t\\t\" + \"No items are in the list\";","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"            mFormatter.add(message);","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"            Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"            String itemDisplayed \u003d String.format(\"%d. %s\\n\", i + 1, currTask);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"            mFormatter.add(itemDisplayed);","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        return mFormatter.getFullMessage();","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     * Returns message that this command cannot be undone.","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"     * @return Message that this command cannot be undone.","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"        return \"There are no more changes to be undone!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":51}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" * MarkCommand class which represents the mark command given by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    private final int position;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the MarkCommand class.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * Sets the position of the task to be marked to the","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * local variable.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * @param position Position of the task to be marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    public MarkCommand(int position) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * Executes the mark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     * Marks the task in the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     * Returns string representation of marked task.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @return String representation of marked task.","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        Task markedTask \u003d taskList.getTask(position - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"        commandHistory.addCommand(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"        taskList.mark(position - 1, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        String commandMessage \u003d \"Congratulations! This task has been marked as done!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(commandMessage, markedTask, null);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"     * Unmarks task which has just been marked.","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     * @return The message that the task has been unmarked.","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList, CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"        Task unmarkedTask \u003d taskList.getTask(position - 1);","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"        taskList.unmark(position - 1, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"        String unmarkedMessage \u003d \"This task has been just unmarked!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(unmarkedMessage, unmarkedTask, null);","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":63}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" * ToDoCommand class represents the ToDo command given by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"    private final String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the ToDoCommand class.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * Sets the description of the task to the local variable.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * Adds Todo task to the task list and","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     * return message that task was added.","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @return The string representation of message of task being added.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        commandHistory.addCommand(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"        taskList.add(toDo, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"        String message \u003d \"Nice! This task has been successfully added!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(message, toDo, taskList.getSize());","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"     * Removes the ToDo task that has just been added is removed.","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     * @return Message that ToDo task has been removed.","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"        ToDo deletedToDo \u003d new ToDo(this.description);","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"        taskList.remove(taskList.getSize() - 1, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"        String message \u003d \"This ToDo is no longer added!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(message,deletedToDo, taskList.getSize());","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":63}},{"path":"src/main/java/duke/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":" * The UndoCommand class represents the Undo command made by the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"public class UndoCommand extends Command{","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"     * Undoes changes made by the command to revert to original state.","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @return The message that the changes made have been undone.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList, CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        Command lastCommand \u003d commandHistory.getLastCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"        if (lastCommand \u003d\u003d null) {","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"            return ui.displayCommandMessage(\"There are no changes to be undone!\", null, null);","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"        return lastCommand.undoExecute(ui, storage, taskList, commandHistory);","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * This command cannot be undone!","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"     * @return","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList, CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"        return \"This is not supposed to be undone!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"dlimyy":43}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" * UnmarkCommand class represents the Unmark command given by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    private final int position;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the UnmarkCommand class.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * Represents the position of the task in taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param position Position of the task in taskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    public UnmarkCommand(int position) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * Unmarks the task in the task list","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * and returns the message that the task has been removed.","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @return String representation of message of task being removed.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        Task unmarkedTask \u003d taskList.getTask(position - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        commandHistory.addCommand(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        taskList.unmark(position - 1, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"        String commandMessage \u003d \"Congratulations! This task has been successfully unmarked!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(commandMessage, unmarkedTask, null);","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"     * Re-marks the task that has just been unmarked.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"     * @return The message that the task has been marked again.","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList, CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"        Task markedTask \u003d taskList.getTask(position - 1);","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"        taskList.mark(position - 1, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"        String markedMessage \u003d \"This task has been re-marked!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(markedMessage, markedTask, null);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":61}},{"path":"src/main/java/duke/command/WrongCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.CommandHistory;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":" * WrongCommand class represents wrong command given by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"public class WrongCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     * Returns the message that the command is invalid.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     * @return The message that command is invalid.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList,","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"            CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        String message \u003d \"Please enter some valid Command\";","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        return ui.displayCommandMessage(message, null, null);","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * Returns message that this command cannot be undone.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * @param ui Ui object which handles the interaction with the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @param storage Storage object which handles interaction with data in file.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @param commandHistory History of commands made.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     * @return","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"    public String undoExecute(Ui ui, Storage storage, TaskList taskList, CommandHistory commandHistory) {","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        return \"This cannot be undone!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":42}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * Deadline class represents the deadline task created by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    private final DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the Deadline class.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     * Sets the description of the deadline and the deadline date","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * to the local variables.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param deadline Deadline for the deadline task.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(dtf) + \")\";","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * Returns the string formatting for the Deadline task","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * to be stored in the txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @return The string formatting of the deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    public String stringFormatting() {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        return \"D\" + super.stringFormatting() + \" # \" + deadline;","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dlimyy":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * Event class represents the event task created by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    private final LocalDate period;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    private final DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the Event class.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     * Sets the description of the event and the period the","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * event is occurring to local variables.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param period The period that the event is occurring.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    public Event(String description, LocalDate period) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        this.period \u003d period;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + period.format(dtf) + \")\";","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * Returns the string formatting for the Event task","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * to be stored in the txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @return The string formatting of the event","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    public String stringFormatting() {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        return \"E\" + super.stringFormatting() + \" # \" + period;","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dlimyy":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":" * An abstract class which represents the Task created by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"    private final String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the Task class.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"     * Sets the description of the task to the local","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"     * variable.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * Checks whether the task should be marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * @return true if the task should be marked; else return false.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    private String getStatus() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"        if (isCompleted) {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"            return \"X\";","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"        return \"\";","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * Checks whether the task is marked as completed.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     * @param isCompleted The completeness status of the status.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    public void setCompleted(boolean isCompleted) {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"     * Checks whether the task description contains the keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"     * @param keyword Keyword that the task is being checked.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"     * @return true if the keyword is in the description;else return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"    public Boolean hasKeyword(String keyword) {","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"        return description.toLowerCase().contains(keyword);","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     * Returns the string formatting for the task to be used","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     * for the txt file stored.","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"     * @return The string formatting of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"    public String stringFormatting() {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"        String marker \u003d getStatus().equals(\"X\") ? \"T\" : \"F\";","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"        return \" # \" + marker + \" # \" + description;","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"        return \"[\" + getStatus() + \"] \" + description;","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dlimyy":67}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":" * ToDo class represents the todo task created by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the ToDo class.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"     * Sets the description of the ToDo task to","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"     * the local variable.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     * Returns the string formatting for the Todo task","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * to be stored in the txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     * @return The string formatting of the todo task.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    public String stringFormatting() {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"        return \"T\" + super.stringFormatting();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dlimyy":34}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"                \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"416.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\"  prefHeight\u003d\"41.0\" prefWidth\u003d\"330.0\" onAction\u003d\"#handleUserInput\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"336.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"416.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"400.0\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"dlimyy":21}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    ","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    public void parseByeCommand_validByeCommand_success() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"        Command currCommand \u003d Parser.parse(\"bye\",null);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"        Assertions.assertTrue(currCommand instanceof ByeCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    public void parseListCommand_validListCommand_success() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"        Command currCommand \u003d Parser.parse(\"list\",null);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"        Assertions.assertTrue(currCommand instanceof ListCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    public void parseDeadlineCommand_validDeadlineCommand_success() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        Command currCommand \u003d Parser","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"                .parse(\"deadline do homework /by 2022-08-25\",null);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        Assertions.assertTrue(currCommand instanceof DeadlineCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    public void parseDeadlineCommand_noDeadline_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"                .parse(\"deadline do homework\",null));","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":36}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    public void stringFormatting_unmarkedStringFormatting_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"        Deadline deadline \u003d new Deadline(\"complete CS2103t ip\"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"                , LocalDate.parse(\"2025-09-25\",dtf));","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"        Assertions.assertEquals(\"D # F # complete CS2103t ip # 2025-09-25\"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"                ,deadline.stringFormatting());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    public void stringFormatting_markedStringFormatting_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        Deadline deadline \u003d new Deadline(\"complete CS2103t ip\"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"                , LocalDate.parse(\"2025-09-25\",dtf));","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"        deadline.setCompleted(true);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        Assertions.assertEquals(\"D # T # complete CS2103t ip # 2025-09-25\"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"                ,deadline.stringFormatting());","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class EventTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    public void stringFormatting_unmarkedStringFormatting_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"        Event event \u003d new Event(\"complete CS2103t ip\"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"                , LocalDate.parse(\"2025-09-25\",dtf));","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"        Assertions.assertEquals(\"E # F # complete CS2103t ip # 2025-09-25\"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"                ,event.stringFormatting());","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    public void stringFormatting_markedStringFormatting_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        Event event \u003d new Event(\"complete CS2103t ip\"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"                , LocalDate.parse(\"2025-09-25\",dtf));","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        event.setCompleted(true);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        Assertions.assertEquals(\"E # T # complete CS2103t ip # 2025-09-25\"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"                ,event.stringFormatting());","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"dlimyy":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"todo leave house","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"todo take the bus","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"todo reach school","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"event attend programming class /at Mon 08:00-10:00","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"todo take a break","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"event attend math class /at Mon 12:00-14:00","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"deadline submit math assignment /by Tuesday 23:59","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"deadline submit programming assignment /by Wednesday 23:59","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"mark 7","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"unmark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"dlimyy":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dlimyy":1,"-":20}}]

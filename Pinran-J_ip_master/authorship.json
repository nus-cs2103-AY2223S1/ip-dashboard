[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"checkstyle {","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Pinran-J":22,"-":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":" * Deadline task with a date and time.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    private String by;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    private LocalTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     * @param by The time of deadline in a long String.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     * @throws DateTimeException If missing a date or time.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    public Deadline(String description, String by) throws DateTimeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"        String[] split \u003d by.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"            throw new DateTimeException(\"Missing time/date\");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"        String dateString \u003d split[0];","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"        String timeString \u003d split[1];","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"        this.date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"        this.time \u003d LocalTime.parse(timeString);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"    public String toSaveData() {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"        return \"D\" + \" | \" + super.toSaveData() + \" | \" + by;","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"        String dateMessage \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"        String timeMessage \u003d time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateMessage + \" \" + timeMessage + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":49}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"        double circleRadius \u003d displayPicture.getFitWidth() / 2;","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"        double circleX \u003d displayPicture.getX() + circleRadius;","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"        double circleY \u003d displayPicture.getY() + circleRadius;","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"        Circle clip \u003d new Circle(circleX, circleY, circleRadius);","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"    private void flip() {","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"        setStyle(\"-fx-background-color: #F9E79F;\");","lastModifiedDate":"2022-09-05"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the DialogBox of a user.","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"     * @param text Text to be in the DialogBox.","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"     * @param img Image of the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"     * @return DialogBox to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the DialogBox of Duke.","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"     * @param text Text to be in the DialogBox.","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"     * @param img Image of Duke.","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"     * @return DialogBox to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"        db.flip();","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"        return db;","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Pinran-J":84}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":" * Main DukeBot class.","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    private TaskList tList;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"    private Boolean isActive;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for a Duke object.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"     * @param dirPath Path of directory that storage use to locate save files.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"     * @param dataName Name of the save file in directory.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    public Duke(String dirPath, String dataName) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"        this.storage \u003d new Storage(\"data/\", \"save.txt\");","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"        this.tList \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"        storage.loadFile(tList);","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"     * Simple method that exits the Duke\u0027s run method.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"    public void exit() {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        this.isActive \u003d false;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"     * Method that check if the bot is active.","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"     * @return Status of current bot if it is active.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"    public boolean isActive() {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"        return this.isActive;","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"     * Method that processes a user\u0027s input after parsed","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"     * and does the corresponding actions.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"     * @param s String that the user inputs.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"     * @return The string to be displayed by bot.","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    public String getResponse(String s) {","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"            String[] parsed \u003d Parser.parseInput(s);","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"            assert parsed.length \u003d\u003d 3 : \"Parser error occurred.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"            if (parsed[0].equals(\"bye\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"                return getByeResponse();","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"            } else if (parsed[0].equals(\"list\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"                return getListResponse();","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"            } else if (parsed[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"                return getMarkResponse(parseInteger(parsed[1]));","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"            } else if (parsed[0].equals(\"unmark\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"                return getUnmarkResponse(parseInteger(parsed[1]));","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"            } else if (parsed[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"                return getDeleteResponse(parseInteger(parsed[1]));","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"            } else if (parsed[0].equals(\"find\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"                return getFindResponse(parsed[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"            } else if (parsed[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"                return getTodoResponse(parsed[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"            } else if (parsed[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"                return getDeadlineResponse(parsed[1], parsed[2]);","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"            } else if (s.indexOf(\"event\") \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"                return getEventResponse(parsed[1], parsed[2]);","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidTaskException(\"No valid task descriptor\");","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"        } catch (EmptyDescriptionException | InvalidTaskException","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"                 | InvalidFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"            return ui.printException(e);","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"            return ui.printErrorMessage(\"Error! Date format incorrect (YYYY-MM-DD HH:mm)\");","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"Pinran-J"},"content":"            return ui.printErrorMessage(\"Invalid index access detected!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"Pinran-J"},"content":"        } finally {","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"Pinran-J"},"content":"            assert tList !\u003d null : \"TaskList has to be present\";","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"Pinran-J"},"content":"            storage.saveFile(this.tList);","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"    private int parseInteger(String s) {","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"        return Integer.parseInt(s) - 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"Pinran-J"},"content":"    private String getByeResponse() {","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"Pinran-J"},"content":"        exit();","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"Pinran-J"},"content":"        return ui.printFarewell();","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"Pinran-J"},"content":"    private String getListResponse() {","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"Pinran-J"},"content":"        return ui.printList(tList);","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"Pinran-J"},"content":"    private String getMarkResponse(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"Pinran-J"},"content":"        tList.getTask(index).markDone();","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"Pinran-J"},"content":"        return ui.printMarkTaskDone(tList.getTask(index));","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":123,"author":{"gitId":"Pinran-J"},"content":"    private String getUnmarkResponse(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"Pinran-J"},"content":"        tList.getTask(index).markUndone();","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"Pinran-J"},"content":"        return ui.printMarkTestUndone(tList.getTask(index));","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"Pinran-J"},"content":"    private String getDeleteResponse(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"Pinran-J"},"content":"        Task temp \u003d tList.getTask(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":130,"author":{"gitId":"Pinran-J"},"content":"        tList.removeTask(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"Pinran-J"},"content":"        return ui.printDelete(temp, tList);","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":133,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":135,"author":{"gitId":"Pinran-J"},"content":"    private String getFindResponse(String target) {","lastModifiedDate":"2022-09-08"},{"lineNumber":136,"author":{"gitId":"Pinran-J"},"content":"        ArrayList\u003cTask\u003e temp;","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"Pinran-J"},"content":"        temp \u003d tList.find(target);","lastModifiedDate":"2022-09-08"},{"lineNumber":138,"author":{"gitId":"Pinran-J"},"content":"        return ui.printFind(temp);","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":140,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"Pinran-J"},"content":"    private String getTodoResponse(String description) {","lastModifiedDate":"2022-09-08"},{"lineNumber":142,"author":{"gitId":"Pinran-J"},"content":"        Todo a \u003d new Todo(description);","lastModifiedDate":"2022-09-08"},{"lineNumber":143,"author":{"gitId":"Pinran-J"},"content":"        tList.addTask(a);","lastModifiedDate":"2022-09-08"},{"lineNumber":144,"author":{"gitId":"Pinran-J"},"content":"        return ui.printTaskAdded(a, tList);","lastModifiedDate":"2022-09-08"},{"lineNumber":145,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":146,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":147,"author":{"gitId":"Pinran-J"},"content":"    private String getDeadlineResponse(String description, String by) {","lastModifiedDate":"2022-09-08"},{"lineNumber":148,"author":{"gitId":"Pinran-J"},"content":"        Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2022-09-08"},{"lineNumber":149,"author":{"gitId":"Pinran-J"},"content":"        tList.addTask(d);","lastModifiedDate":"2022-09-08"},{"lineNumber":150,"author":{"gitId":"Pinran-J"},"content":"        return ui.printTaskAdded(d, tList);","lastModifiedDate":"2022-09-08"},{"lineNumber":151,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":152,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":153,"author":{"gitId":"Pinran-J"},"content":"    private String getEventResponse(String description, String at) {","lastModifiedDate":"2022-09-08"},{"lineNumber":154,"author":{"gitId":"Pinran-J"},"content":"        Event e \u003d new Event(description, at);","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"Pinran-J"},"content":"        tList.addTask(e);","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"Pinran-J"},"content":"        return ui.printTaskAdded(e, tList);","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Pinran-J":158,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * Exception that the DukeBot produces.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":10}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * Exception thrown when Duke detects missing description.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"    private String typeOf;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for the empty description exception.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"     * @param message Message of exception","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"     * @param typeOf Type of task whose description is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    public EmptyDescriptionException(String message, String typeOf) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"        this.typeOf \u003d typeOf;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"        return \"OPS!!! The description of a \" + this.typeOf + \" cannot be empty.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":26}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":" * Event task that contains a duration.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    private String at;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"    private LocalDate startDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    private LocalDate endDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    private LocalTime startTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     * @param description Description of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"     * @param at Start and end time for the event in a String.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"     * @throws DateTimeException Thrown if the time format is wrong.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"    public Event(String description, String at) throws DateTimeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"        String[] split \u003d at.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"        if (split.length \u003c 4) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"            throw new DateTimeException(\"Missing time/date\");","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"        this.startDate \u003d LocalDate.parse(split[0]);","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"        this.startTime \u003d LocalTime.parse(split[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        this.endDate \u003d LocalDate.parse(split[2]);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"        this.endTime \u003d LocalTime.parse(split[3]);","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"        String startDateMessage \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"        String endDateMessage \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + startDateMessage + \" \" + startTime + \" - \"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"                + endDateMessage + \" \" + endTime + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"    public String toSaveData() {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"        return \"E\" + \" | \" + super.toSaveData() + \" | \" + at;","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":52}},{"path":"src/main/java/duke/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * Exception that is thrown when format of date or time is incorrect.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"        return \"OOPS!!! Please enter the correct format (/by or /at)\";","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":15}},{"path":"src/main/java/duke/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * Exception thrown when DukeBot does not recognise the command.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Pinran-J":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    private Duke duke \u003d new Duke(\"data/\", \"save.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"            stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Pinran-J":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.util.Timer;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"     * Method that initializes the Scene.","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"        greetingDialog();","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"    private void greetingDialog() {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"                DialogBox.getDukeDialog(Ui.printGreetings(), dukeImage)","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"        if (!duke.isActive()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"            Timer timer \u003d new Timer();","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"            timer.schedule(new TimerTask() {","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"                @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"                public void run() {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"                    Platform.exit();","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"                    System.exit(0);","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"            }, 750);","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Pinran-J":75}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * Parser that takes user input and outputs commands DukeBot can understand.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"    private static boolean isValidCommand(String cmd) {","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"        if (cmd.equals(\"mark\") || cmd.equals(\"unmark\")","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"                || cmd.equals(\"delete\") || cmd.equals(\"todo\")","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"                || cmd.equals(\"deadline\") || cmd.equals(\"event\")","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"                || cmd.equals(\"find\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"            return true;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"        } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"            return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    private static String[] formatResults(String cmd) {","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"        String[] result \u003d new String[3];","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"        result[0] \u003d cmd;","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"        return result;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    private static String[] formatResults(String cmd, String description) {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"        String[] result \u003d new String[3];","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"        result[0] \u003d cmd;","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"        result[1] \u003d description;","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"        return result;","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"    private static String[] formatResults(String cmd, String description, String time) {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"        String[] result \u003d new String[3];","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"        result[0] \u003d cmd;","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        result[1] \u003d description;","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"        result[2] \u003d time;","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"        return result;","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"     * Static method used to parse player inputs into a String array","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"     * that is understood by Duke.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"     * @param s String input by user to be parsed.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"     * @return String array to be processed by Duke.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"     * @throws InvalidTaskException Thrown if user input wrong task format.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"     * @throws EmptyDescriptionException Throw if task description is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"     * @throws InvalidFormatException Thrown if invalid task format.","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"    public static String[] parseInput(String s) throws InvalidTaskException,","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"            EmptyDescriptionException, InvalidFormatException {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"        s \u003d s.trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"        String[] helper \u003d s.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"        String cmd \u003d helper[0];","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        if (helper.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"                return formatResults(cmd);","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"            } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"                return formatResults(cmd);","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"            } else if (isValidCommand(cmd)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"                throw new EmptyDescriptionException(\"Empty descriptor\", cmd);","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidTaskException(\"No valid task descriptor\");","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"        if (cmd.equals(\"mark\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"            if (helper.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"                return formatResults(cmd, helper[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidTaskException(\"No valid task descriptor\");","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"        } else if (cmd.equals(\"unmark\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"            if (helper.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"                return formatResults(cmd, helper[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidTaskException(\"No valid task descriptor\");","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"        } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"            if (helper.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"                return formatResults(cmd, helper[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidTaskException(\"No valid task descriptor\");","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"        } else if (helper[0].equals(\"find\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"            String[] findDescription \u003d s.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"            return formatResults(cmd, findDescription[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"        } else if (helper[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"            String[] todoString \u003d s.split(\" \", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"            return formatResults(cmd, todoString[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"        } else if (helper[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"Pinran-J"},"content":"            String description \u003d s.substring(8).trim();","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"Pinran-J"},"content":"            String[] temp \u003d description.split(\"/by\", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"Pinran-J"},"content":"            if (!s.contains(\"/by\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidFormatException(\"Invalid format\");","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"Pinran-J"},"content":"            if (temp[1].trim().equals(\"\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidTaskException(\"Invalid format\");","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"Pinran-J"},"content":"            return formatResults(cmd, temp[0].trim(), temp[1].trim());","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"Pinran-J"},"content":"        } else if (helper[0].equals(\"event\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"Pinran-J"},"content":"            String description \u003d s.substring(6).trim();","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"Pinran-J"},"content":"            String[] temp \u003d description.split(\"/at\", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"Pinran-J"},"content":"            if (!s.contains(\"/at\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidFormatException(\"Invalid format\");","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"Pinran-J"},"content":"            if (temp[1].trim().equals(\"\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"Pinran-J"},"content":"                throw new InvalidFormatException(\"Invalid format\");","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"Pinran-J"},"content":"            return formatResults(cmd, temp[0].trim(), temp[1].trim());","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"Pinran-J"},"content":"        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"Pinran-J"},"content":"            throw new InvalidTaskException(\"No valid task descriptor\");","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Pinran-J":126}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":" * Storage that helps to store and load current tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    private File dirFile;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"    private File dataFile;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for a Storage object used to save files.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"     * @param dirPath Path to directory of save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"     * @param dataName Name of file in the directory.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    public Storage(String dirPath, String dataName) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"        this.dirFile \u003d new File(dirPath);","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"        this.dataFile \u003d new File(dirPath + dataName);","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"     * Method that makes the directory if it does not exist already","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"     * and saves the state of TaskList by writing to a text file.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"     * @param t The TaskList to be saved.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"    public void saveFile(TaskList t) {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"            if (!dirFile.exists()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"                dirFile.mkdir();","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"            FileWriter fw \u003d new FileWriter(dataFile);","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"            for (Task task : t.getTasks()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"                fw.write(task.toSaveData() + \"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"            fw.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"            System.out.println(\"IO Exception occurred, error saving file\");","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"     * Method used to load save file into the TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"     * @param t TaskList to be loaded into.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"    public void loadFile(TaskList t) {","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"            if (dataFile.exists()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"                Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"                    loadFileHelper(t, s.nextLine());","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"            System.out.println(\"File not found exception occurred, error loading file\");","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"     * Helper method used to load the TaskLists with tasks","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"     * using the information passed in.","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"     * @param t TaskList to be loaded into.","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"     * @param info Info of the task to be loaded.","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"    public void loadFileHelper(TaskList t, String info) {","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"        assert info.length() !\u003d 0 : \"Scanner not suppose to pass in empty string.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"        String[] parts \u003d info.split(\" \\\\| \");","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"        if (parts[0].equals(\"T\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"            Task todo \u003d new Todo(parts[2]);","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"            int a \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"            if (a \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"                todo.markDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"            t.addTask(todo);","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"        } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"            Task deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"            int b \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"            if (b \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"                deadline.markDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"            t.addTask(deadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"        } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"Pinran-J"},"content":"            Task event \u003d new Event(parts[2], parts[3]);","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"Pinran-J"},"content":"            int c \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"Pinran-J"},"content":"            if (c \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"Pinran-J"},"content":"                event.markDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"Pinran-J"},"content":"            t.addTask(event);","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Pinran-J":107}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * General task class","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"    private String description;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     * Retrieves the correct status to be displayed based on","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"     * if the task is done or not.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"     * @return Status icon.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"    public void flip() {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"        this.isDone \u003d !isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"        if (!this.isDone) {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"            this.flip();","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"            this.flip();","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"     * Outputs the correct string to be saved in save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"     * @return String of data to be stored.","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"    public String toSaveData() {","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"        int num \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"        return num + \" | \" + this.description;","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":72}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":" * Encapsulated TaskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for a TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"     * Method to retrieve number of tasks in the TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     * @return Number of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    public int getCount() {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"     * Method that adds a specified task into TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"     * @param t The task to be added.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"     * Method that gets the task at specified index in TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"     * @param index The index of task to be retrieved.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"     * @return The Task at index specified.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"     * Method that removes the task in TaskList at specified index.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"     * @param index The index of task to be removed.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"     * Method that finds all tasks matching keyword.","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"     * @param keyword The keyword used to match.","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"     * @return An ArrayList containing all matching tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"                result.add(t);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Pinran-J":76}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * A Todo task.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for a Todo task.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"    public String toSaveData() {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"        return \"T\" + \" | \" + super.toSaveData();","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":" * Ui class that helps to print message to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"public class Ui {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns a string of lines for ease of reading.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"     * @return String of a line","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    public String printLine() {","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"        return \"----------------------\";","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the string in the correct format.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     * @param output The string to be formatted.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"     * @return The string after formatting.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    public String formatOutput(String output) {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"        return printLine() + \"\\n\" + output + \"\\n\" + printLine();","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the farewell message.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"     * @return The farewell message.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"    public String printFarewell() {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        return formatOutput(\"Bye, hope to see you again!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the exception message encountered.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"     * @param e The exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"     * @return String of exception message.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"    public String printException(Exception e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"        return formatOutput(e.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns a custom error message.","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"     * @param s Error message to be printed.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"     * @return String of error message.","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    public String printErrorMessage(String s) {","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        return formatOutput(s);","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"     * Returns to the user the task added and count in updated TaskList in a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"     * @param a Task to be added.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"     * @param tList TaskList to be added to.","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"     * @return String of tasks added.","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"    public String printTaskAdded(Task a, TaskList tList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"        return formatOutput(\"added: \" + a.toString() + \"\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"                + String.format(\"Now you have %d tasks in the list\", tList.getCount()));","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"     * String of all the tasks in the TaskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"     * @param tList TaskList to be printed.","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"     * @return String of all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"    public String printList(TaskList tList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"        String output \u003d \"Here are your tasks :\";","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"        for (int i \u003d 0; i \u003c tList.getCount(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"            String display \u003d String.format(\"%d.%s\", i + 1, tList.getTask(i).toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"            output +\u003d \"\\n\" + display;","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"        return formatOutput(output);","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"     * Return all the tasks matching keyword.","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"     * @param t The ArrayList containing all matching tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"     * @return The tasks found in a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"    public String printFind(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"        if (t.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"            return formatOutput(\"Opps! No matching tasks.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"Pinran-J"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"Pinran-J"},"content":"            String output \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"Pinran-J"},"content":"            for (int i \u003d 0; i \u003c t.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"Pinran-J"},"content":"                String display \u003d String.format(\"%d.%s\", i + 1, t.get(i).toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"                output +\u003d \"\\n\" + display;","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"Pinran-J"},"content":"            return formatOutput(output);","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the String of the task to be marked undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"Pinran-J"},"content":"     * @param a Task to be marked undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"Pinran-J"},"content":"     * @return String of task being marked undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":112,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"Pinran-J"},"content":"    public String printMarkTestUndone(Task a) {","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"Pinran-J"},"content":"        String output \u003d \"Ok! I\u0027ve marked this task as undone\" + \"\\n\" + a.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"Pinran-J"},"content":"        return formatOutput(output);","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the String of the task to be deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":120,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"Pinran-J"},"content":"     * @param a Task to be deleted","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"Pinran-J"},"content":"     * @param tList TaskList to be deleted from.","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"Pinran-J"},"content":"     * @return String of task deleted and count of tasks left.","lastModifiedDate":"2022-08-29"},{"lineNumber":124,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"Pinran-J"},"content":"    public String printDelete(Task a, TaskList tList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"Pinran-J"},"content":"        String output \u003d \"Noted! I\u0027ve removed this task\" + \"\\n\" + a.toString() + \"\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":127,"author":{"gitId":"Pinran-J"},"content":"                + \"Now you have \" + tList.getCount() + \" tasks!\";","lastModifiedDate":"2022-08-29"},{"lineNumber":128,"author":{"gitId":"Pinran-J"},"content":"        return formatOutput(output);","lastModifiedDate":"2022-08-29"},{"lineNumber":129,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":132,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the task to be marked done.","lastModifiedDate":"2022-08-29"},{"lineNumber":133,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":134,"author":{"gitId":"Pinran-J"},"content":"     * @param a The task being marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":135,"author":{"gitId":"Pinran-J"},"content":"     * @return String of task being marked done and count of tasks left.","lastModifiedDate":"2022-08-29"},{"lineNumber":136,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":137,"author":{"gitId":"Pinran-J"},"content":"    public String printMarkTaskDone(Task a) {","lastModifiedDate":"2022-08-29"},{"lineNumber":138,"author":{"gitId":"Pinran-J"},"content":"        String output \u003d \"Ok! I\u0027ve marked this task as done\" + \"\\n\" + a.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":139,"author":{"gitId":"Pinran-J"},"content":"        return formatOutput(output);","lastModifiedDate":"2022-08-29"},{"lineNumber":140,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"Pinran-J"},"content":"     * Method that returns the String of the greeting message.","lastModifiedDate":"2022-08-29"},{"lineNumber":144,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":145,"author":{"gitId":"Pinran-J"},"content":"     * @return String of greeting message.","lastModifiedDate":"2022-08-29"},{"lineNumber":146,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"Pinran-J"},"content":"    public static String printGreetings() {","lastModifiedDate":"2022-08-29"},{"lineNumber":148,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":149,"author":{"gitId":"Pinran-J"},"content":"        String output \u003d \"----------------------\" + \"\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":150,"author":{"gitId":"Pinran-J"},"content":"                + \"Hello! I\u0027m Duke\" + \"\\n\" + \"What can i do for you?\" + \"\\n\" + \"----------------------\";","lastModifiedDate":"2022-08-29"},{"lineNumber":151,"author":{"gitId":"Pinran-J"},"content":"        return output;","lastModifiedDate":"2022-08-29"},{"lineNumber":152,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Pinran-J":154}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #D6EAF8#D6EAF8;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Pinran-J":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Pinran-J":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    public void correctParseDeadline() {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"        String[] test \u003d Parser.parseInput(\"deadline read book /by 2022-08-10 18:00\");","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"        String[] expected \u003d new String[] {\"deadline\", \"read book\", \"2022-08-10 18:00\"};","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"        assertEquals(test[0], expected[0]);","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"        assertEquals(test[1], expected[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"        assertEquals(test[2], expected[2]);","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"    public void wrongInput_exceptionThrown() {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseInput(\"invalid input\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"    public void wrongFormat_exceptionThrown() {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parseInput(\"deadline read book 2000-01-01 10:10\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Pinran-J":31}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"    private Todo test \u003d new Todo(\"Homework\");","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"        assertEquals(test.toString(), \"[T][ ] Homework\");","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    public void toSaveTest() {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"        assertEquals(test.toSaveData(), \"T | 0 | Homework\");","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Pinran-J":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"todo join sports club","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Pinran-J":12}}]

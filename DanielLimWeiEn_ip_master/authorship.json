[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"DanielLimWeiEn":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.Parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":" * The Main driver class of the Duke Application.","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** The Storage object that handles loading and saving tasks. */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** The TaskList object that manages the tasks. */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** The UI object that handles user interface. */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for Duke instance.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param filePath The location to store the saved tasks to.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"DanielLimWeiEn"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"DanielLimWeiEn"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"DanielLimWeiEn"},"content":"            this.taskList \u003d new TaskList(this.storage.readTasksFromStorage());","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"DanielLimWeiEn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"DanielLimWeiEn"},"content":"            ui.printIoException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"DanielLimWeiEn"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"DanielLimWeiEn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"DanielLimWeiEn"},"content":"            ui.printDukeException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"DanielLimWeiEn"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Driver method for the Duke program.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void run() {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.ui.printDukeOpening();","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"DanielLimWeiEn"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"DanielLimWeiEn"},"content":"        String currentLine \u003d this.ui.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"DanielLimWeiEn"},"content":"        while (!currentLine.equals(\"bye\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"DanielLimWeiEn"},"content":"            try {","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"DanielLimWeiEn"},"content":"                String information \u003d Parser.parseCommand(currentLine);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"DanielLimWeiEn"},"content":"                String[] infoArray \u003d information.split(\"\\\\|\");","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"DanielLimWeiEn"},"content":"                switch (infoArray[0]) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"DanielLimWeiEn"},"content":"                case \"list\":","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"DanielLimWeiEn"},"content":"                    this.ui.printTasks(this.taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"DanielLimWeiEn"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"DanielLimWeiEn"},"content":"                case \"mark\":","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"DanielLimWeiEn"},"content":"                    Task marked \u003d this.taskList.changeTaskStatus(Integer.parseInt(infoArray[1]), true);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"DanielLimWeiEn"},"content":"                    this.ui.printChangeTaskStatus(marked, true);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"DanielLimWeiEn"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"DanielLimWeiEn"},"content":"                case \"unmark\":","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"DanielLimWeiEn"},"content":"                    Task unmarked \u003d this.taskList.changeTaskStatus(Integer.parseInt(infoArray[1]), false);","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"DanielLimWeiEn"},"content":"                    this.ui.printChangeTaskStatus(unmarked, false);","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"DanielLimWeiEn"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":76,"author":{"gitId":"DanielLimWeiEn"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-15"},{"lineNumber":77,"author":{"gitId":"DanielLimWeiEn"},"content":"                    Task deleted \u003d this.taskList.deleteTask(Integer.parseInt(infoArray[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"DanielLimWeiEn"},"content":"                    this.ui.printDeleteTask(deleted, this.taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"DanielLimWeiEn"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":80,"author":{"gitId":"DanielLimWeiEn"},"content":"                case \"find\":","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"DanielLimWeiEn"},"content":"                    ArrayList\u003cTask\u003e targetTasks \u003d this.taskList.findMatchingTasks(infoArray[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"DanielLimWeiEn"},"content":"                    this.ui.printMatchingTasks(targetTasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"DanielLimWeiEn"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"DanielLimWeiEn"},"content":"                case \"todo\":","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"DanielLimWeiEn"},"content":"                    Task todo \u003d new Todo(infoArray[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"DanielLimWeiEn"},"content":"                    taskList.addTask(todo);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"DanielLimWeiEn"},"content":"                    this.ui.printAddTask(todo, this.taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"DanielLimWeiEn"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"DanielLimWeiEn"},"content":"                case \"deadline\":","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"DanielLimWeiEn"},"content":"                    Task deadline \u003d new Deadline(","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"DanielLimWeiEn"},"content":"                            infoArray[1],","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"DanielLimWeiEn"},"content":"                            LocalDateTime.parse(infoArray[2], dateTimeFormatter)","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"DanielLimWeiEn"},"content":"                    );","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"DanielLimWeiEn"},"content":"                    taskList.addTask(deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"DanielLimWeiEn"},"content":"                    this.ui.printAddTask(deadline, this.taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"DanielLimWeiEn"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":97,"author":{"gitId":"DanielLimWeiEn"},"content":"                case \"event\":","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"DanielLimWeiEn"},"content":"                    Task event \u003d new Event(","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"DanielLimWeiEn"},"content":"                            infoArray[1],","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"DanielLimWeiEn"},"content":"                            LocalDateTime.parse(infoArray[2], dateTimeFormatter),","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"DanielLimWeiEn"},"content":"                            LocalDateTime.parse(infoArray[3], dateTimeFormatter)","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"DanielLimWeiEn"},"content":"                    );","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"DanielLimWeiEn"},"content":"                    taskList.addTask(event);","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"DanielLimWeiEn"},"content":"                    this.ui.printAddTask(event, this.taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"DanielLimWeiEn"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":106,"author":{"gitId":"DanielLimWeiEn"},"content":"                default:","lastModifiedDate":"2022-08-15"},{"lineNumber":107,"author":{"gitId":"DanielLimWeiEn"},"content":"                    throw new DukeException(\"I\u0027m sorry but I don\u0027t know what that means!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"DanielLimWeiEn"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":109,"author":{"gitId":"DanielLimWeiEn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"DanielLimWeiEn"},"content":"                this.ui.printDukeException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"DanielLimWeiEn"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"DanielLimWeiEn"},"content":"                this.ui.printDateTimeParseException();","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"DanielLimWeiEn"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":114,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":115,"author":{"gitId":"DanielLimWeiEn"},"content":"            currentLine \u003d this.ui.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":117,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":118,"author":{"gitId":"DanielLimWeiEn"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"DanielLimWeiEn"},"content":"            this.storage.writeTasksToStorage(this.taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"DanielLimWeiEn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"DanielLimWeiEn"},"content":"            this.ui.printIoException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":123,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":124,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.ui.printDukeClosing();","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.ui.closeScanner();","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":128,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":129,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":130,"author":{"gitId":"DanielLimWeiEn"},"content":"     * The main method that is the entry to the Duke Application.","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param args Command line arguments that we can pass to the main function.","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":134,"author":{"gitId":"DanielLimWeiEn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"DanielLimWeiEn"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"DanielLimWeiEn":135}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":" * Storage class, handles loading and saving tasks to hard disk.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** A File object to represent the File we read from and write to. */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"    private final File file;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param filePath The location on disk to store the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws IOException Handles case of File not being found or location not existing.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"        String[] parts \u003d filePath.split(\"/\");","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"DanielLimWeiEn"},"content":"        File folder \u003d new File(parts[0]);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"DanielLimWeiEn"},"content":"            folder.mkdir();","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"DanielLimWeiEn"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"DanielLimWeiEn"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.file \u003d file;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Writes the tasks in the task list to hard disk, a .txt file.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param taskList The task list object, whose tasks we want to store on disk.","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws IOException Handles File not being found when writing to hard disk.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void writeTasksToStorage(TaskList taskList) throws IOException {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"DanielLimWeiEn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"DanielLimWeiEn"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"DanielLimWeiEn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"DanielLimWeiEn"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"DanielLimWeiEn"},"content":"                String rep \u003d \"T|\" + task.getDoneStatus() + \"|\" + task.getDescription();","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"DanielLimWeiEn"},"content":"                fileWriter.write(rep);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"DanielLimWeiEn"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"DanielLimWeiEn"},"content":"                Event e \u003d (Event) task;","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"DanielLimWeiEn"},"content":"                String rep \u003d \"E|\" + e.getDoneStatus() + \"|\" + e.getDescription() + \"|\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"DanielLimWeiEn"},"content":"                        e.getStart() + \"|\" + e.getEnd();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"DanielLimWeiEn"},"content":"                fileWriter.write(rep);","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"DanielLimWeiEn"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"DanielLimWeiEn"},"content":"                Deadline d \u003d (Deadline) task;","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"DanielLimWeiEn"},"content":"                String rep \u003d \"D|\" + d.getDoneStatus() + \"|\" + d.getDescription() + \"|\" + d.getBy();","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"DanielLimWeiEn"},"content":"                fileWriter.write(rep);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"DanielLimWeiEn"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"DanielLimWeiEn"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"DanielLimWeiEn"},"content":"        fileWriter.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Reads the saved tasks in from hard disk.","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns an ArrayList of Task objects for use in TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws FileNotFoundException Handles cases where File is not found.","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws DukeException Handles case of there not being tasks in storage.","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"DanielLimWeiEn"},"content":"    public ArrayList\u003cTask\u003e readTasksFromStorage() throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"DanielLimWeiEn"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"DanielLimWeiEn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"DanielLimWeiEn"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"DanielLimWeiEn"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"DanielLimWeiEn"},"content":"            String[] lineComponents \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"DanielLimWeiEn"},"content":"            String type \u003d lineComponents[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"DanielLimWeiEn"},"content":"            boolean doneStatus \u003d lineComponents[1].equals(\"X\");","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"DanielLimWeiEn"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"DanielLimWeiEn"},"content":"            switch (type) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"DanielLimWeiEn"},"content":"            case \"T\":","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"DanielLimWeiEn"},"content":"                Todo t \u003d new Todo(lineComponents[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"DanielLimWeiEn"},"content":"                t.setDoneStatus(doneStatus);","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"DanielLimWeiEn"},"content":"                tasks.add(t);","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"DanielLimWeiEn"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"DanielLimWeiEn"},"content":"            case \"D\":","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"DanielLimWeiEn"},"content":"                Deadline d \u003d new Deadline(","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"DanielLimWeiEn"},"content":"                        lineComponents[2],","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"DanielLimWeiEn"},"content":"                        LocalDateTime.parse(lineComponents[3], dateFormat)","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"DanielLimWeiEn"},"content":"                );","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"DanielLimWeiEn"},"content":"                d.setDoneStatus(doneStatus);","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"DanielLimWeiEn"},"content":"                tasks.add(d);","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"DanielLimWeiEn"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"DanielLimWeiEn"},"content":"            case \"E\":","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"DanielLimWeiEn"},"content":"                Event e \u003d new Event(","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"DanielLimWeiEn"},"content":"                        lineComponents[2],","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"DanielLimWeiEn"},"content":"                        LocalDateTime.parse(lineComponents[3], dateFormat),","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"DanielLimWeiEn"},"content":"                        LocalDateTime.parse(lineComponents[4], dateFormat)","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"DanielLimWeiEn"},"content":"                );","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"DanielLimWeiEn"},"content":"                e.setDoneStatus(doneStatus);","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"DanielLimWeiEn"},"content":"                tasks.add(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"DanielLimWeiEn"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"DanielLimWeiEn"},"content":"            default:","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"DanielLimWeiEn"},"content":"                throw new DukeException(\"No tasks to read from storage!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"DanielLimWeiEn"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"DanielLimWeiEn"},"content":"        sc.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"DanielLimWeiEn"},"content":"        return tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"DanielLimWeiEn":130}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":" * The Deadline Class.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** Deadlines have a time to be completed by that is a LocalDateTime. */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for Deadline objects.","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param by The time by which said task must be completed.","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws DukeException For Duke related exceptions.","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Deadline(String description, LocalDateTime by) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"            throw new DukeException(\"The description of deadline task is missing information!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Getter for the deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the deadline by which the event must be completed in string format.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String getBy() {","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"DanielLimWeiEn"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"DanielLimWeiEn"},"content":"     * String representation of a deadline task object.","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the String representation of the current object.","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"DanielLimWeiEn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"DanielLimWeiEn"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"DanielLimWeiEn":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":" * The Event class.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** Events have a starting time. */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** Events have an ending time. */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for Event objects.","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param start Start time of event.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param end End time of event.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws DukeException For Duke related exceptions.","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.start \u003d start;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"            throw new DukeException(\"The description of event task is missing information!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Getter for the start time of event.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the date of the event in String format.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String getStart() {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"DanielLimWeiEn"},"content":"        return this.start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Getter for the end time of event.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the date of the event in String format.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String getEnd() {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"DanielLimWeiEn"},"content":"        return this.end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"DanielLimWeiEn"},"content":"     * String representation of Event task object.","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the String representation of the current object.","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"DanielLimWeiEn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"DanielLimWeiEn"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"DanielLimWeiEn"},"content":"                this.start.format(format) + \" to \" + this.end.format(format) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"DanielLimWeiEn":64}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":" * The Task class.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** Each Task has a description. */","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"    protected String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** Each Task can be marked as done or not. */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Returns \u0027X\u0027 or \" \" depending on whether Task is marked done or not.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns X or an empty string depending on whether a Task is marked done.","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Setter for updating the isDone variable.","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param isDone the new value to update isDone to.","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void setDoneStatus(boolean isDone) {","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Getter for the description of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the description of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"DanielLimWeiEn"},"content":"        return this.description;","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"DanielLimWeiEn"},"content":"     * String representation of a Task.","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the string representation of a task.","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"DanielLimWeiEn"},"content":"        return \"[\" + this.getDoneStatus() + \"] \" + this.description;","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"DanielLimWeiEn":59}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":" * The TaskList class to represent the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"public class TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** Use an ArrayList Collection for handling the tasks. */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for empty TaskList object.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for TaskList object with an existing Arraylist of Tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param tasks The input ArrayList of Task objects.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Getter for the tasks in the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns this.tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"DanielLimWeiEn"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"DanielLimWeiEn"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Get the number of tasks in current task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return An integer representing the number of tasks in the current list.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"DanielLimWeiEn"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"DanielLimWeiEn"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Add a task to the current task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param task The task to add to the list.","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"DanielLimWeiEn"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Delete a task from the current task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param index The index of the task to remove from our task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the task object that was deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"DanielLimWeiEn"},"content":"            throw new DukeException(\"You must specify which task to delete!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"DanielLimWeiEn"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"DanielLimWeiEn"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"DanielLimWeiEn"},"content":"        return task;","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Changes the status of a task, used for marking a task as done or not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param taskId The index of the task whose status we want to change in taskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param isDone The updated status to update the status to.","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the task whose status we updated.","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Task changeTaskStatus(int taskId, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (taskId \u003d\u003d -1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"DanielLimWeiEn"},"content":"            throw new DukeException(\"You must specify which task to mark or unmark!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"DanielLimWeiEn"},"content":"        Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"DanielLimWeiEn"},"content":"        task.setDoneStatus(isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"DanielLimWeiEn"},"content":"        return task;","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Finds the tasks that have descriptions that contain the target.","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param target The target word that we want from the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns a new ArrayList of tasks containing the matching tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"DanielLimWeiEn"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String target) {","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"DanielLimWeiEn"},"content":"        ArrayList\u003cTask\u003e filtered \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (target.equals(\"\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"DanielLimWeiEn"},"content":"            return this.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"DanielLimWeiEn"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"DanielLimWeiEn"},"content":"            if (task.getDescription().contains(target)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"DanielLimWeiEn"},"content":"                filtered.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"DanielLimWeiEn"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"DanielLimWeiEn"},"content":"        return filtered;","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"DanielLimWeiEn":110}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":" * The Todo class.","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for To do objects.","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws DukeException For Duke related exceptions.","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"            throw new DukeException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"     * String representation of to do objects.","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the String representation of the current object.","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"DanielLimWeiEn":31}},{"path":"src/main/java/duke/utilities/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.utilities;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":" * The DukeException class.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for a Duke Exception.","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param message The message to store in the exception.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"DanielLimWeiEn":14}},{"path":"src/main/java/duke/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.utilities;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":" * The Parse class, for parsing user commands.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Static method for parsing the user commands and returning them as a formatted","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"     * String separated by the | character.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param line The line from the standard input we want to parse.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the String separated by | for easier parsing","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"     *         that contains the necessary information for carrying out","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"     *         further operations in an easily separable form.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"    public static String parseCommand(String line) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"        String[] splitString \u003d line.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"        String command \u003d splitString[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"        switch (command) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"        case \"list\":","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"list|\";","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"            int taskIdToMark \u003d splitString.length \u003d\u003d 2","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"                    ? Integer.parseInt(splitString[1])","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"                    : -1;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"mark|\" + taskIdToMark;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"DanielLimWeiEn"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"DanielLimWeiEn"},"content":"            int taskIdToUnmark \u003d splitString.length \u003d\u003d 2","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"DanielLimWeiEn"},"content":"                    ? Integer.parseInt(splitString[1])","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"DanielLimWeiEn"},"content":"                    : -1;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"unmark|\" + taskIdToUnmark;","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"DanielLimWeiEn"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"DanielLimWeiEn"},"content":"            int taskIdToDelete \u003d splitString.length \u003d\u003d 2","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"DanielLimWeiEn"},"content":"                    ? Integer.parseInt(splitString[1])","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"DanielLimWeiEn"},"content":"                    : -1;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"delete|\" + taskIdToDelete;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"DanielLimWeiEn"},"content":"        case \"find\":","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"DanielLimWeiEn"},"content":"            String target \u003d splitString.length \u003d\u003d 2","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"DanielLimWeiEn"},"content":"                    ? splitString[1]","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"DanielLimWeiEn"},"content":"                    : \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"find|\" + target;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"DanielLimWeiEn"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"DanielLimWeiEn"},"content":"            String[] descTodo \u003d Arrays.copyOfRange(splitString, 1, splitString.length);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"DanielLimWeiEn"},"content":"            if (descTodo.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"DanielLimWeiEn"},"content":"                throw new DukeException(\"The description of a todo should not be empty!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"DanielLimWeiEn"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"DanielLimWeiEn"},"content":"            line \u003d String.join(\" \", descTodo);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"todo|\" + line;","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"DanielLimWeiEn"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"DanielLimWeiEn"},"content":"            String[] descDeadline \u003d Arrays.copyOfRange(splitString, 1, splitString.length);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"DanielLimWeiEn"},"content":"            if (descDeadline.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"DanielLimWeiEn"},"content":"                throw new DukeException(\"The description/by time of a deadline should not be empty!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"DanielLimWeiEn"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"DanielLimWeiEn"},"content":"            line \u003d String.join(\" \", descDeadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"DanielLimWeiEn"},"content":"            String descD \u003d line.split(\"/by\")[0].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"DanielLimWeiEn"},"content":"            String byD \u003d line.split(\"/by\").length \u003d\u003d 2","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"DanielLimWeiEn"},"content":"                    ? line.split(\"/by\")[1].trim()","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"DanielLimWeiEn"},"content":"                    : \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"DanielLimWeiEn"},"content":"            DateTimeFormatter deadlineFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"DanielLimWeiEn"},"content":"            LocalDateTime byDeadline \u003d LocalDateTime.parse(byD, deadlineFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"deadline|\" + descD + \"|\" + byDeadline.format(deadlineFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"DanielLimWeiEn"},"content":"        case \"event\":","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"DanielLimWeiEn"},"content":"            String[] descEvent \u003d Arrays.copyOfRange(splitString, 1, splitString.length);","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"DanielLimWeiEn"},"content":"            if (descEvent.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"DanielLimWeiEn"},"content":"                throw new DukeException(\"The description/from/end of an event should not be empty!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"DanielLimWeiEn"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"DanielLimWeiEn"},"content":"            line \u003d String.join(\" \", descEvent);","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"DanielLimWeiEn"},"content":"            String descE \u003d line.split(\"/from\")[0].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"DanielLimWeiEn"},"content":"            String dates \u003d line.split(\"/from\").length \u003d\u003d 2","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"DanielLimWeiEn"},"content":"                    ? line.split(\"/from\")[1]","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"DanielLimWeiEn"},"content":"                    : \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"DanielLimWeiEn"},"content":"            String startE \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"DanielLimWeiEn"},"content":"            String endE \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"DanielLimWeiEn"},"content":"            if (line.split(\"/from\").length \u003d\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"DanielLimWeiEn"},"content":"                startE \u003d dates.split(\"/to\")[0].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"DanielLimWeiEn"},"content":"                endE \u003d dates.split(\"/to\")[1].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"DanielLimWeiEn"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"DanielLimWeiEn"},"content":"            DateTimeFormatter eventFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"DanielLimWeiEn"},"content":"            LocalDateTime startEvent \u003d LocalDateTime.parse(startE, eventFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"DanielLimWeiEn"},"content":"            LocalDateTime endEvent \u003d LocalDateTime.parse(endE, eventFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"event|\" + descE + \"|\" + startEvent.format(eventFormat) +","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"DanielLimWeiEn"},"content":"                    \"|\" + endEvent.format(eventFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"DanielLimWeiEn"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"DanielLimWeiEn"},"content":"            return \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"DanielLimWeiEn":103}},{"path":"src/main/java/duke/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.utilities;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":" * The User Interface (UI) class.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** Line used for formatting. */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"    private static String line \u003d \"----------------------------------------\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"    /** Scanner object to read from the system input. */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Constructor for Ui objects.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"    public Ui() {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints the Duke Opening that includes the greeting and logo.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printDukeOpening() {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"DanielLimWeiEn"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"DanielLimWeiEn"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\");","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints the Duke Closing that includes a leaving salutation.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printDukeClosing() {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints the message from the DukeException thrown, nicely formatted.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param e The DukeException whose message we want to format and print.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printDukeException(DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints the message from the IOException thrown, nicely formatted.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param e The IOException whose message we want to format and print.","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printIoException(IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints the message if we ever get a DateTimeParseException, signalling","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"DanielLimWeiEn"},"content":"     * to a user that they entered the date in the wrong format.","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printDateTimeParseException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"All dates must be in the format (yyyy-MM-dd HH:mm)!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints all the tasks in a given task List object.","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param taskList The TaskList whose tasks we want to print.","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printTasks(TaskList taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"DanielLimWeiEn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"DanielLimWeiEn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"DanielLimWeiEn"},"content":"            Task current \u003d tasks.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"DanielLimWeiEn"},"content":"            System.out.println((i + 1) + \".\" + current.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Method to print the matching tasks after filtering for tasks that contains","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"DanielLimWeiEn"},"content":"     * the query term.","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param tasks The input task list to print to the user.","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"DanielLimWeiEn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"DanielLimWeiEn"},"content":"            Task current \u003d tasks.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"DanielLimWeiEn"},"content":"            System.out.println((i + 1) + \".\" + current.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints the nicely formatted message when a user adds a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param task The task that was just added.","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param taskList The current task list after the task has been added.","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printAddTask(Task task, TaskList taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints the nicely formatted message when a user deletes a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param task The task that was just deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param taskList The current task list after the task has been deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printDeleteTask(Task task, TaskList taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Prints the nicely formatted message when a user marks a task as done or not.","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param task The task that was just marked as done or undone.","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @param isDone The status indicating whether a task was marked as done or not.","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void printChangeTaskStatus(Task task, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"DanielLimWeiEn"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"DanielLimWeiEn"},"content":"            System.out.println((\"Nice! I\u0027ve marked this task as done:\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"DanielLimWeiEn"},"content":"            System.out.println(\"  \" + task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"DanielLimWeiEn"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"DanielLimWeiEn"},"content":"            System.out.println((\"OK, I\u0027ve marked this task as not done yet:\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"DanielLimWeiEn"},"content":"            System.out.println(\"  \" + task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"DanielLimWeiEn"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Method to close the scanner object.","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void closeScanner() {","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"DanielLimWeiEn"},"content":"        this.sc.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"DanielLimWeiEn"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"DanielLimWeiEn"},"content":"     * Method to read the next line from the standard input.","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"DanielLimWeiEn"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"DanielLimWeiEn"},"content":"     * @return Returns the next line as a String.","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"DanielLimWeiEn"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"DanielLimWeiEn"},"content":"    public String nextLine() {","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"DanielLimWeiEn"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"DanielLimWeiEn":177}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"public class DukeTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"        assertEquals(3, 3);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"DanielLimWeiEn":17}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"    Task t \u003d new Task(\"This is a dummy task\");","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void getDoneStatus_initialStatus_notDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"        assertEquals(\" \", t.getDoneStatus());","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void getDoneStatus_finalStatus_done() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"        t.setDoneStatus(true);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"        assertEquals(\"X\", t.getDoneStatus());","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void getDescription_description_correct() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"        assertEquals(\"This is a dummy task\", t.getDescription());","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void toString_stringRepresentation_correct() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"        assertEquals(\"[ ] This is a dummy task\", t.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"DanielLimWeiEn":30}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"    Todo t;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void todo_emptyDescription_exceptionThrown() {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"        DukeException de \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"            new Todo(\"\");","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"        });","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"        assertEquals(\"The description of a todo cannot be empty!\", de.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"DanielLimWeiEn"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"DanielLimWeiEn"},"content":"    public void toString_stringRepresentation_correct() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"DanielLimWeiEn"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"DanielLimWeiEn"},"content":"            t \u003d new Todo(\"This is a dummy to do task\");","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"DanielLimWeiEn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"DanielLimWeiEn"},"content":"        assertEquals(\"[T][ ] This is a dummy to do task\", t.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"DanielLimWeiEn"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"DanielLimWeiEn"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"DanielLimWeiEn":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DanielLimWeiEn"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"DanielLimWeiEn"},"content":"todo read book","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"DanielLimWeiEn"},"content":"deadline return book /by 2022-08-23 18:00","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"DanielLimWeiEn"},"content":"event library event /from 2022-08-23 18:00 /to 2022-08-24 18:00","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"DanielLimWeiEn"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"DanielLimWeiEn"},"content":"mark 1","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"DanielLimWeiEn"},"content":"unmark 1","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"DanielLimWeiEn"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"DanielLimWeiEn"},"content":"delete 1","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"DanielLimWeiEn"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"DanielLimWeiEn"},"content":"blah","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"DanielLimWeiEn"},"content":"todo","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"deadline","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"DanielLimWeiEn"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"DanielLimWeiEn"},"content":"mark","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"DanielLimWeiEn"},"content":"unmark","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"delete","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"DanielLimWeiEn"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"DanielLimWeiEn":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"DanielLimWeiEn"},"content":"    rm \"./data/tasks.txt\"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"DanielLimWeiEn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"DanielLimWeiEn"},"content":"rm \"./data/tasks.txt\"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"DanielLimWeiEn"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"DanielLimWeiEn"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"DanielLimWeiEn":5}}]

{"authorDailyContributionsMap":{"DanielLimWeiEn":[{"date":"2022-08-14","commitResults":[{"hash":"c04cad9bce63d8b7b644b47ed17c9284d0b92774","messageTitle":"Implement a skeletal version of Duke that starts by greeting the user and simply echos the commands entered by the user, and exits when the user types bye.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}}]},{"date":"2022-08-15","commitResults":[{"hash":"7d51a02aa3513ac085d8abbedc9822204fb6491e","messageTitle":"Add the ability to store whatever text entered by the user and display them back to the user when requested.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":3}}},{"hash":"e0cb0b4b7a1a28de0fbd06c9e4c6e7ef1a2b7b90","messageTitle":"Add Task class to represent Tasks in the Duke bot.","messageBody":"Using a Task class and correspondingly Task objects to represent Tasks is a more natural way of representing tasks and allows me to keep the logic for the Task representation in a class of itself.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"e5fac00b48d1c2a94bf8b1b6a509c9323260ee09","messageTitle":"Add the ability to change the status of tasks","messageBody":"We can mark tasks as done and change the status of the tasks back to not done.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":16}}},{"hash":"bc70f7796b07f187e3b17b7f727d2f5db99b5323","messageTitle":"Add different types of events namely Deadlines, Events and Todos and Modify Task field\u0027s access markers","messageBody":"Deadline, Events and Todos are all types of Tasks and we make use to inheritance to share code. We also modify the access marker of the Task\u0027s fields so as to allow the fields to be accessible from the subclasses we created.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}},{"hash":"3cb993b6f0e78646dca98013a3a9ee28bc3255d7","messageTitle":"Modify String representation of Tasks","messageBody":"Made use of Polymorphism to modify the String representations of different tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":5}}},{"hash":"a51443518dc9c01071b7bc330e431c0de66588b1","messageTitle":"Add support for tracking the three new types of Tasks in Dukebot","messageBody":"Made use of Polymorphism to ensure correct outputs are printed to the screen.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":8}}},{"hash":"bd197dfde422fcafebae9a058d0ae5a71b054589","messageTitle":"Use the Input/Output redirection technique to semi-automate the testing of Duke","messageBody":"Add the inputs and expected outputs.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":2,"deletions":0},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":1,"deletions":1}}},{"hash":"b06374e8cf7c951711c49a7838b37d286aecfeb9","messageTitle":"Teach Duke to handle errors as incorrect inputs entered by the user using Exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":43}}},{"hash":"bbd812f95acfbb3849b13404b23e8bf2d130147f","messageTitle":"Teach Duke to deal with errors associated with incorrect inputs from the user","messageBody":"Made use of Exceptions and Polymorphism to handle Event task, Deadline task, Todo task, Task and incorrect command exceptions.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"84cb2351599dba12d5807e028565c458a16aa308","messageTitle":"Modify I/O Redirection Testing to handle new exceptions used to handle errors","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0}}},{"hash":"50b4672f36b32b167f530046e050f0e2bf14ef8a","messageTitle":"Add support for deleting tasks from the list","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"c9145b242107657d013febd26b523f4260a4d9ab","messageTitle":"Add test case coverage for Deletion","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}},{"hash":"f73f1337ce28c5159cb50a74f0188924b6da5557","messageTitle":"Add error handling for mark, unmark and delete commands and test coverage for mark, unmark and delete commands","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":20,"deletions":5}}},{"hash":"dee1b40f6382b9fe9ddc27628770951d3123c2de","messageTitle":"Add JavaDoc comments for all files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":0}}}]},{"date":"2022-08-22","commitResults":[{"hash":"ebb9d36bb01fc1df9e6e9cc331a46eadce58d3c7","messageTitle":"Add File I/O Logic to read from and save Duke Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":1}}}]},{"date":"2022-08-23","commitResults":[{"hash":"4ba6670a4065e2f6c64b4ae8fc9715196ef3d35a","messageTitle":"Refactor if statement in ReadTasksFromStorage to use switch statement for cleaner code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}},{"hash":"cb6d600c1f5ff368ba54890c5e1a60bb005a656c","messageTitle":"Add support for Dates and Times in Duke Bot","messageBody":"Modify Deadline and Event to make use of LocalDateTime objects to store the Dates and Times\nChange the representation of Event objects to store a start and end LocalDateTime object to use\nfor storing LocalDateTimes more easily and changed it\u0027s constructor. Modify Duke bot to read in\nthe inputs correctly.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":18}}},{"hash":"9c09eb11f86219902f24ee99e0ed4c03195e12c1","messageTitle":"Add Exception handling for new functionality","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":11},"java":{"insertions":3,"deletions":1}}},{"hash":"577e20ed45d9b0d50c24d13b7025143e4ca36bd1","messageTitle":"Add Storage.java to handle Storage of Duke Bot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"f71f813e3876b3e82fc56d419777c051a0e5d4fa","messageTitle":"Add TaskList.java to handle managing the Task ArrayList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":0},"sh":{"insertions":3,"deletions":0}}},{"hash":"b1c21c3278bdd5f8ec0f250cf7e340c8e788e338","messageTitle":"Add Parser.java to handle parsing user commands into a neat format for easier use","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}},{"hash":"1d8878fd8904968d54bf84b067606642f5b90c9e","messageTitle":"Add Ui.java to handle User Interface of Duke App","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":0}}},{"hash":"8fe7ccec9f1919ab24fc5e88fc8992c7d9a4f438","messageTitle":"Refactor the code to extract out closely related code as classes","messageBody":"Add 4 classes to build in more OOP into Duke bot, namely:\n* Ui : To handle user interactions\n* Storage: To handle loading tasks from a file and saving tasks to the file\n* Parser: To handle parsing user commands into an easier format for processing\n* TaskList: To handle managing the tasks\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":239}}},{"hash":"612eec821d138b88a5c1fd1245694ad31c7c1119","messageTitle":"Organize the classes into suitable packages","messageBody":"Everything is part of the duke package. The subpackages are the tasks, utilities and storage.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0},"sh":{"insertions":1,"deletions":1}}},{"hash":"4776391c66cb631549bc2f282dfcf2f93e719706","messageTitle":"Add JUnit tests to test the behavior of the Task.java","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":47,"deletions":0}}},{"hash":"d1adad0b6437ea88d8abeca346fcdb4f4835ae05","messageTitle":"Add JUnit tests to test the behavior of Todo.java","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"ec0598e6f37eb0dcf63cefa0e9a67fe08922df65","messageTitle":"Add JavaDoc comments to the code.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":172,"deletions":15}}},{"hash":"e064489765634c45b8b3aa1cb8e4f7f31bd19d4c","messageTitle":"Tweak the code to comply with a the module\u0027s Java Coding Standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":10}}},{"hash":"a85ebba5a493824323052f9635708347f202fb82","messageTitle":"Give users a way to find a task by searching for a keyword","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":3}}}]},{"date":"2022-08-30","commitResults":[{"hash":"5249504b8106a8902193d493e973a63f34b5c4bf","messageTitle":"Add dependencies and basic file structure to support GUi for Duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0},"fxml":{"insertions":35,"deletions":0}}},{"hash":"cb6fca12484ff034e04226326d90f770bb762b83","messageTitle":"Add DialogBox custom control component","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":0}}},{"hash":"49f9683b6021df6abd11a14b275e68503d4333f9","messageTitle":"Add MainWindow component","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":0}}},{"hash":"f43ead4a24b089db11a1b7fe5476047a47aea754","messageTitle":"Add Main class to handle GUi logic and Add application Launcher","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0}}},{"hash":"99ee204c98552344f984e8287ed018cdaf0a1b8e","messageTitle":"Add a GUI to Duke using the JavaFX technology","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":159,"deletions":4}}},{"hash":"cd37ac774d810757519f22d6ba9828ca46156828","messageTitle":"Add colour scheme to GUi and handle storage","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":5},"java":{"insertions":10,"deletions":1}}},{"hash":"0f424946f7fb5cdc04ec2995eb4e2ae32e9a5787","messageTitle":"Add GUi greeting by user and duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"3cb7e5c6007df2bd14da48ecfb76f140f37eaa88","messageTitle":"Add error handling for GUi","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"b9d5656cc8f966b8d37c87aa55f245acb2c5913c","messageTitle":"Add Checkstyle configurations to be run with Gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"ad934ee6e04dbe38558c758abd56cbe9fb9e797c","messageTitle":"Use checkstyle to fix coding style violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":147,"deletions":44}}}]},{"date":"2022-09-06","commitResults":[{"hash":"74b77018d7baec662c02d3ba8090bea1e96738d1","messageTitle":"Modify build.gradle so that jar file created runs from proper class","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"5c49b7c00b777d4cff5480abe62c3d6d43c36f29","messageTitle":"Use assertions to document important assumptions in the code","messageBody":"The GUI depends on there being a running Duke instance in order to run\ncommands in Duke and get proper responses.\n\nWe want to make sure that the program has such a running instance other-\nwise there may be unexpected or dangerous behaviour if the GUI is run.\n\nUse Assert statements to ensure that the GUI has a functional Duke\ninstance for the entire program to run correctly.\n\nAssert statements can allow the program to crash if there happens to\nnot be a running Duke instance which is safer than allowing the program\nto continue running.\n","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":11,"deletions":2}}},{"hash":"6aa07643fa12855b0a3dd8861a02f4691ab5341a","messageTitle":"Refactor code and improve code quality","messageBody":"Several classes and methods had very long methods and made use to many\ncomplicated expressions in the code.\n\nThis made the code less readable and more difficult to understand.\n\nLet\u0027s refactor the code by,\n* Using less complicated expressions\n* Shortening methods\n* Getting rid of deep nesting and arrowhead style code\n* Extracting magic numbers into constants\n* Making the code more explicit\n* Keeping the code simple\n* Improving comments for the reader\n\nThis can improve code readability and make understanding the code much\neasier for both myself in the future and later users, thereby allowing\nchanges to be made more easily.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":41}}},{"hash":"79373424caaccfa534f401d24045bd8aac3896c3","messageTitle":"Use the Streams feature of Java in my code","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":6}}},{"hash":"c985ddeb27c104e62dd5bb0ef9c99368e0201ec6","messageTitle":"Provide a way to get reminders about upcoming deadlines and events","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":71,"deletions":0}}}]},{"date":"2022-09-12","commitResults":[{"hash":"b8d4417d50409acf77c8210b030332651aacea43","messageTitle":"Update user guide README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":160,"deletions":14}}},{"hash":"4856a7d085ee5fd7591e7d577b1549c64c5f5765","messageTitle":"Add representative screenshot and user guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":15,"deletions":15}}},{"hash":"504ab3f7c034e913346dd0381f0c5019a4fbce35","messageTitle":"Add user guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]}]},"authorFileTypeContributionMap":{"DanielLimWeiEn":{"java":1512,"md":160,"fxml":35,"sh":5,"bat":0,"gradle":21,"txt":20}},"authorContributionVariance":{"DanielLimWeiEn":53859.316},"authorDisplayNameMap":{"DanielLimWeiEn":"CS2103T-W10-2 DANI..I EN"}}

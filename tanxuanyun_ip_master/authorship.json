[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"plugins {","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"repositories {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"dependencies {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"test {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"    testLogging {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"        showExceptions true","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"        showCauses true","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"application {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"shadowJar {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"run{","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":56}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"T|X|read book","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"D| |return book|2019-10-15 06:00","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"E| |project meeting|2019-10-15 06:00|2019-10-15 07:00","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"## Turtle","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"\u003e“Your mind is for having ideas, not holding them.” – David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"Turtle frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"- text-based","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"- easy to learn","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"- ~~FAST~~ *SUPER* FAST to use","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"All you need to do is,","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"1. download it from [here](https://github.com/tanxuanyun/ip/releases).","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"2. double-click it.","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"3. add your tasks.","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"4. let it manage your tasks for you 😆😆","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"And it is **FREE**!","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"Lists all tasks currently stored in Turtle task manager.","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"Format: `list`","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"### Greeting the user: `hello`","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"Displays Turtle\u0027s greeting to greet the user.","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"Format: `hello`","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"### Exiting the application: `bye`","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"Exits the program and saves the user\u0027s tasks to memory.","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"Format `bye`","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"### Marking a task as complete: `mark`","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"Marks the specified task in Turtle task manager as completed.","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"* Marks the task specified by the `INDEX` as completed.","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"* The index refers to the index number of the task as displayed in the task list.","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"* The index **must be a positive integer 1, 2, 3,...**","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"* `list` followed by `mark 2` marks the task at index 2 as done.","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"### Un-marking a task as incomplete: `unmark`","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"Un-marks the specified task in Turtle task manager as incomplete.","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"* Un-marks the task specified by the `INDEX` as not completed.","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"* The index refers to the index number of the task as displayed in the task list.","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"* The index **must be a positive integer 1, 2, 3,...**","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"* `list` followed by `unmark 2` marks the task at index 2 as not done.","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"tanxuanyun"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"Delete the specified task in Turtle task manager.","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"tanxuanyun"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"* The index refers to the index number of the task as displayed in the task list.","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"tanxuanyun"},"content":"* The index **must be a positive integer 1, 2, 3,...**","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"* `list` followed by `delete 2` deletes the task at index 2.","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":"### Locating a task by keywords: `find`","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"Find tasks that have descriptions that contain a keyword.","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"tanxuanyun"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"* Search is case-sensitive. e.g. `BOOK` will not match `book`.","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"* Only the description of a task is searched.","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"* Partial words are searched as well. e.g. `boo` with match `book`.","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"* Will return all tasks that contain the specified keyword.","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"tanxuanyun"},"content":"* `find book` returns all tasks that contain the keyword `book` as part of","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"tanxuanyun"},"content":"  the description of the task.","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"tanxuanyun"},"content":"### Reminders for unmarked deadline: `remind`","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"tanxuanyun"},"content":"Finds umarked `deadline` tasks for","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"tanxuanyun"},"content":"reminder purposes.","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"tanxuanyun"},"content":"Format: `remind`","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"tanxuanyun"},"content":"* Returns the `deadline` task which is incomplete.","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"tanxuanyun"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":107,"author":{"gitId":"tanxuanyun"},"content":"Adds a todo task to the Turtle task manager.","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"tanxuanyun"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2022-09-13"},{"lineNumber":110,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"tanxuanyun"},"content":"* The `DESCRIPTION` is any sentence describing the task and","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"tanxuanyun"},"content":"  includes the spaces used.","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":116,"author":{"gitId":"tanxuanyun"},"content":"* `todo read book` adds the `todo` task `read book` to the Turtle task","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"tanxuanyun"},"content":"  manager.","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"tanxuanyun"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"tanxuanyun"},"content":"Adds a deadline task to the Turtle task manager.","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"tanxuanyun"},"content":"Format: `deadline DESCRIPTION /by BY`","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"tanxuanyun"},"content":"* The `DESCRIPTION` is any sentence describing the task and","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"tanxuanyun"},"content":"  includes the spaces used.","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"tanxuanyun"},"content":"* The `BY` time specifies the deadline, it is a time. e.g. 2022-10-15 06:00.","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"tanxuanyun"},"content":"* The `BY` time must be in the format `yyyy-MM-dd HH:mm`.","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":130,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":132,"author":{"gitId":"tanxuanyun"},"content":"* `deadline return book /by 2022-10-15 06:00` adds the `deadline` task","lastModifiedDate":"2022-09-13"},{"lineNumber":133,"author":{"gitId":"tanxuanyun"},"content":"  `return book` to the Turtle task manager, and it sets the time by which","lastModifiedDate":"2022-09-13"},{"lineNumber":134,"author":{"gitId":"tanxuanyun"},"content":"  to complete the task, i.e. the deadline, to be `2022-10-15 06:00`.","lastModifiedDate":"2022-09-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"tanxuanyun"},"content":"### Adding an event task: `event`","lastModifiedDate":"2022-09-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"tanxuanyun"},"content":"Adds an event task to the Turtle task manager.","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"tanxuanyun"},"content":"Format: `event DESCRIPTION /from START /to END`","lastModifiedDate":"2022-09-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"tanxuanyun"},"content":"* The `DESCRIPTION` is any sentence describing the task and","lastModifiedDate":"2022-09-13"},{"lineNumber":143,"author":{"gitId":"tanxuanyun"},"content":"  includes the spaces used.","lastModifiedDate":"2022-09-13"},{"lineNumber":144,"author":{"gitId":"tanxuanyun"},"content":"* The `START` time specifies the start of the event.","lastModifiedDate":"2022-09-13"},{"lineNumber":145,"author":{"gitId":"tanxuanyun"},"content":"  The `END` time specifies the end of the event. Both are","lastModifiedDate":"2022-09-13"},{"lineNumber":146,"author":{"gitId":"tanxuanyun"},"content":"  times. e.g. `2022-10-15 06:00`.","lastModifiedDate":"2022-09-13"},{"lineNumber":147,"author":{"gitId":"tanxuanyun"},"content":"* The `START` and `END` times must be in the format `yyyy-MM-dd HH:mm`.","lastModifiedDate":"2022-09-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"tanxuanyun"},"content":"* `event project meeting /from 2022-10-15 06:00 /to 2022-10-15 07:00` adds","lastModifiedDate":"2022-09-13"},{"lineNumber":153,"author":{"gitId":"tanxuanyun"},"content":"  the `event` task `project meeting` to the Turtle task manager. It sets","lastModifiedDate":"2022-09-13"},{"lineNumber":154,"author":{"gitId":"tanxuanyun"},"content":"  the start time to `2022-10-15 06:00` and the end time to `2022-10-15 07:00`.","lastModifiedDate":"2022-09-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"tanxuanyun"},"content":"## Command Summary","lastModifiedDate":"2022-09-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"tanxuanyun"},"content":"| **Command**  | **Format, Examples**                                                                                              |","lastModifiedDate":"2022-09-13"},{"lineNumber":159,"author":{"gitId":"tanxuanyun"},"content":"|--------------|-------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-13"},{"lineNumber":160,"author":{"gitId":"tanxuanyun"},"content":"| **List**     | `list`                                                                                                            |","lastModifiedDate":"2022-09-13"},{"lineNumber":161,"author":{"gitId":"tanxuanyun"},"content":"| **Hello**    | `hello`                                                                                                           |","lastModifiedDate":"2022-09-13"},{"lineNumber":162,"author":{"gitId":"tanxuanyun"},"content":"| **Exit**     | `bye`                                                                                                             |","lastModifiedDate":"2022-09-13"},{"lineNumber":163,"author":{"gitId":"tanxuanyun"},"content":"| **Mark**     | `mark INDEX`, e.g. `mark 1`                                                                                       |","lastModifiedDate":"2022-09-13"},{"lineNumber":164,"author":{"gitId":"tanxuanyun"},"content":"| **Un-mark**  | `unmark INDEX`, e.g. `unmark 1`                                                                                   |","lastModifiedDate":"2022-09-13"},{"lineNumber":165,"author":{"gitId":"tanxuanyun"},"content":"| **Delete**   | `delete INDEX`, e.g. `delete 1`                                                                                   |","lastModifiedDate":"2022-09-13"},{"lineNumber":166,"author":{"gitId":"tanxuanyun"},"content":"| **Find**     | `find KEYWORD`, e.g. `find book`                                                                                  |","lastModifiedDate":"2022-09-13"},{"lineNumber":167,"author":{"gitId":"tanxuanyun"},"content":"| **Reminder** | `remind`                                                                                                          |","lastModifiedDate":"2022-09-13"},{"lineNumber":168,"author":{"gitId":"tanxuanyun"},"content":"| **Todo**     | `todo DESCRIPTION`, e.g. `todo read book`                                                                         |","lastModifiedDate":"2022-09-13"},{"lineNumber":169,"author":{"gitId":"tanxuanyun"},"content":"| **Deadline** | `deadline DESCRIPTION /by BY`, e.g. `deadline return book /by 2022-10-15 06:00`                                   |","lastModifiedDate":"2022-09-13"},{"lineNumber":170,"author":{"gitId":"tanxuanyun"},"content":"| **Event**    | `event DESCRIPTION /from START /to END`, e.g. `event project meeting /from 2022-10-15 06:00 /to 2022-10-15 07:00` |","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"tanxuanyun":144,"-":26}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"goto fail","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"goto fail","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":":execute","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"tanxuanyun"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"tanxuanyun"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":":end","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":":fail","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"tanxuanyun"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":":mainEnd","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":":omega","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":91}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"/*","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":" * in the user manual at https://docs.gradle.org/7.5.1/userguide/multi_project_builds.html","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":10}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"    /** The Label control. */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"    /** The ImageView control. */","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"     * Constructor for a DialogBox control.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"     * @param text The text to be included and displayed in Label.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"     * @param img The image to be included and displayed in ImageView.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"     * Gets a user dialog box with the label on the left and image on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"     * @param text The text to include.","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"     * @param img The image to include.","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"     * @return The DialogBox control representing a user dialog box.","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"     * Gets a duke dialog box with the label on the right and image on the left.","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"tanxuanyun"},"content":"     * @param text The text to display.","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"     * @param img The image to display.","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"     * @return The DialogBox control representing a duke dialog box.","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"tanxuanyun":83}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import duke.command.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"import duke.task.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":" * Runs the Duke chat-bot.","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"public class Duke {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"    //@@author DanielLimWeiEn -reused","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"     * Constructs a new {@code Duke} with a datafile path.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"     * @param filePath The path to the datafile.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"            ui.printIoException(e);","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"     * Runs the Duke chat-bot.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"    public void run() {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"        this.ui.printDukeOpening();","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"        String current \u003d this.ui.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"        assert current !\u003d null : \"There is no input. Turtle cannot understand.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"        while (!current.equals(\"bye\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"            try {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"                String information \u003d Parser.parseCommand(current);","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"                String[] parts \u003d information.split(\"\\\\|\");","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"                switch (parts[0]) {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"                case \"list\":","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"                    this.ui.printTasks(this.tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"                case \"mark\":","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"                    markInCli(parts,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"                case \"unmark\":","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"                    unmarkInCli(parts,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"tanxuanyun"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"                    deleteInCli(parts,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"                case \"todo\":","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"tanxuanyun"},"content":"                    todoInCli(parts,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"                case \"deadline\":","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"                    deadlineInCli(parts,tasks, dateTimeFormatter);","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"                case \"event\":","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"                    eventInCli(parts,tasks,dateTimeFormatter);","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"                case \"find\":","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"                    findInCli(parts,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"                case \"remind\":","lastModifiedDate":"2022-09-13"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"                    remindInCli(parts,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"                    break;","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"tanxuanyun"},"content":"                default:","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"                    throw new DukeException(\"I\u0027m sorry but I don\u0027t know what that means!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"                this.ui.printDukeException(e);","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"                this.ui.printDateTimeParseException();","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"tanxuanyun"},"content":"            current \u003d this.ui.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"tanxuanyun"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"tanxuanyun"},"content":"            this.storage.writeTasksToStorage(this.tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"tanxuanyun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"tanxuanyun"},"content":"            this.ui.printIoException(e);","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"tanxuanyun"},"content":"        this.ui.printDukeClosing();","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"tanxuanyun"},"content":"        this.ui.closeScanner();","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"tanxuanyun"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Marks the task when using Duke CLI.","lastModifiedDate":"2022-09-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param parts The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void markInCli(String[] parts, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        checkIndex(parts[1],tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Task marked \u003d this.tasks.changeTaskStatus(Integer.parseInt(parts[1]), true);","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.ui.printChangeTaskStatus(marked, true);","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Unmarks the task when using Duke CLI.","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @param parts The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void unmarkInCli(String[] parts, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        checkIndex(parts[1],tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Task unmarked \u003d this.tasks.changeTaskStatus(Integer.parseInt(parts[1]), false);","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        this.ui.printChangeTaskStatus(unmarked, false);","lastModifiedDate":"2022-09-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Deletes the task when using Duke CLI.","lastModifiedDate":"2022-09-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @param parts The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void deleteInCli(String[] parts, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        checkIndex(parts[1],tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Task deleted \u003d this.tasks.removeTask(Integer.parseInt(parts[1]));","lastModifiedDate":"2022-09-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        System.out.println(Integer.parseInt(parts[1]));","lastModifiedDate":"2022-09-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        this.ui.printDeleteTask(deleted, this.tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Adds todo task when using Duke CLI.","lastModifiedDate":"2022-09-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param parts The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void todoInCli(String[] parts, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Task todo \u003d new Todo(parts[1]);","lastModifiedDate":"2022-09-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-09-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        this.ui.printAddTask(todo, this.tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Adds deadlines task when using Duke CLI.","lastModifiedDate":"2022-09-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param parts The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param dateTimeFormatter date format.","lastModifiedDate":"2022-09-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void deadlineInCli(String[] parts, TaskList tasks, DateTimeFormatter dateTimeFormatter) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Task deadline \u003d new Deadline(","lastModifiedDate":"2022-09-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                parts[1],","lastModifiedDate":"2022-09-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                LocalDateTime.parse(parts[2], dateTimeFormatter)","lastModifiedDate":"2022-09-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-09-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        this.ui.printAddTask(deadline, this.tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Adds event task when using Duke CLI.","lastModifiedDate":"2022-09-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @param parts The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @param dateTimeFormatter date format.","lastModifiedDate":"2022-09-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void eventInCli(String[] parts, TaskList tasks, DateTimeFormatter dateTimeFormatter) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Task event \u003d new Event(","lastModifiedDate":"2022-09-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                parts[1],","lastModifiedDate":"2022-09-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                LocalDateTime.parse(parts[2], dateTimeFormatter),","lastModifiedDate":"2022-09-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                LocalDateTime.parse(parts[3], dateTimeFormatter)","lastModifiedDate":"2022-09-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-09-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        this.ui.printAddTask(event, this.tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Finds task when using Duke CLI.","lastModifiedDate":"2022-09-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @param parts The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void findInCli(String[] parts, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e targetTasks \u003d this.tasks.findMatchTasks(parts[1]);","lastModifiedDate":"2022-09-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        this.ui.printMatchTask(targetTasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Reminds unmark deadlines when using Duke CLI.","lastModifiedDate":"2022-09-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @param parts The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void remindInCli(String[] parts, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e remindTasks \u003d this.tasks.findRemindTasks();","lastModifiedDate":"2022-09-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        this.ui.printMatchTask(remindTasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Runs the Duke GUI","lastModifiedDate":"2022-09-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * @param input The input text from which to get a response.","lastModifiedDate":"2022-09-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * @return Returns the properly formatted response to display on the GUI.","lastModifiedDate":"2022-09-01"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assert input !\u003d null : \"There is no input. Turtle cannot understand.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-09-01"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            String information \u003d Parser.parseCommand(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            String[] infoArray \u003d information.split(\"\\\\|\");","lastModifiedDate":"2022-09-01"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            switch (infoArray[0]) {","lastModifiedDate":"2022-09-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                case \"hello\":","lastModifiedDate":"2022-09-01"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    response \u003d this.ui.printDukeOpening();","lastModifiedDate":"2022-09-01"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                case \"bye\":","lastModifiedDate":"2022-09-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    response \u003d this.ui.printDukeClosing();","lastModifiedDate":"2022-09-01"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    this.storage.writeTasksToStorage(this.tasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                case \"list\":","lastModifiedDate":"2022-09-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    response \u003d this.ui.printTasks(this.tasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                case \"mark\":","lastModifiedDate":"2022-09-01"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    response \u003d markInGui(infoArray,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                case \"unmark\":","lastModifiedDate":"2022-09-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    response \u003d unmarkInGui(infoArray,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                case \"delete\":","lastModifiedDate":"2022-09-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    response \u003d deleteInGui(infoArray,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                case \"find\":","lastModifiedDate":"2022-09-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    response \u003d findInGui(infoArray, tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                case \"remind\":","lastModifiedDate":"2022-09-13"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    response \u003d remindInGui(infoArray,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-13"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                case \"todo\":","lastModifiedDate":"2022-09-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    response \u003d todoInGui(infoArray,tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                case \"deadline\":","lastModifiedDate":"2022-09-01"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    response \u003d deadlineInGui(infoArray,tasks,dateTimeFormatter);","lastModifiedDate":"2022-09-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                case \"event\":","lastModifiedDate":"2022-09-01"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    response \u003d eventInGui(infoArray,tasks,dateTimeFormatter);","lastModifiedDate":"2022-09-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-01"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                default:","lastModifiedDate":"2022-09-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    throw new DukeException(\"I\u0027m sorry but I don\u0027t know what that means!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            response \u003d this.ui.printDukeException(e);","lastModifiedDate":"2022-09-01"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            response \u003d this.ui.printDateTimeParseException();","lastModifiedDate":"2022-09-01"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            response \u003d this.ui.printIoException(e);","lastModifiedDate":"2022-09-01"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            response \u003d \"An unexpected exception has occurred.\";","lastModifiedDate":"2022-09-01"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            this.storage.writeTasksToStorage(this.tasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            this.ui.printIoException(e);","lastModifiedDate":"2022-09-01"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * Marks the task when using Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     * @param infoArray The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * @return The output to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public String markInGui(String[] infoArray, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        checkIndex(infoArray[1],tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        Task marked \u003d this.tasks.changeTaskStatus(Integer.parseInt(infoArray[1]), true);","lastModifiedDate":"2022-09-13"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return this.ui.printChangeTaskStatus(marked, true);","lastModifiedDate":"2022-09-13"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * Unmarks the task when using Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":298,"author":{"gitId":"-"},"content":"     * @param infoArray The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * @return The output to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public String unmarkInGui(String[] infoArray, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        checkIndex(infoArray[1],tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        Task unmarked \u003d this.tasks.changeTaskStatus(Integer.parseInt(infoArray[1]), false);","lastModifiedDate":"2022-09-13"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        return this.ui.printChangeTaskStatus(unmarked, false);","lastModifiedDate":"2022-09-13"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":310,"author":{"gitId":"-"},"content":"     * Deletes task when using Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * @param infoArray The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":313,"author":{"gitId":"-"},"content":"     * @return The output to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":314,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":315,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public String deleteInGui(String[] infoArray, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        checkIndex(infoArray[1],tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        Task deleted \u003d this.tasks.removeTask(Integer.parseInt(infoArray[1]));","lastModifiedDate":"2022-09-13"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        return this.ui.printDeleteTask(deleted, this.tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     * Finds task when using Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     * @param infoArray The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * @return The output to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    public String findInGui(String[] infoArray, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e targetTasks \u003d this.tasks.findMatchTasks(infoArray[1]);","lastModifiedDate":"2022-09-13"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        return this.ui.printMatchTask(targetTasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"     * Reminds unmark deadline task when using Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * @param infoArray The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * @return The output to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    public String remindInGui(String[] infoArray, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e findTasks \u003d this.tasks.findRemindTasks();","lastModifiedDate":"2022-09-13"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        return this.ui.printMatchTask(findTasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * Adds todo task when using Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * @param infoArray The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":350,"author":{"gitId":"-"},"content":"     * @return The output to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":351,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":352,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    public String todoInGui(String[] infoArray, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        Task todo \u003d new Todo(infoArray[1]);","lastModifiedDate":"2022-09-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-09-13"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        return this.ui.printAddTask(todo, this.tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * Adds deadline task when using Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * @param infoArray The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     * @param dateTimeFormatter date format.","lastModifiedDate":"2022-09-13"},{"lineNumber":364,"author":{"gitId":"-"},"content":"     * @return The output to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":365,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":366,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    public String deadlineInGui(String[] infoArray, TaskList tasks, DateTimeFormatter dateTimeFormatter) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        Task deadline \u003d new Deadline(","lastModifiedDate":"2022-09-13"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                infoArray[1],","lastModifiedDate":"2022-09-13"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                LocalDateTime.parse(infoArray[2], dateTimeFormatter)","lastModifiedDate":"2022-09-13"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-13"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-09-13"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        return this.ui.printAddTask(deadline, this.tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":377,"author":{"gitId":"-"},"content":"     * Adds event task when using Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":378,"author":{"gitId":"-"},"content":"     * @param infoArray The user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":379,"author":{"gitId":"-"},"content":"     * @param tasks The current list of task saved.","lastModifiedDate":"2022-09-13"},{"lineNumber":380,"author":{"gitId":"-"},"content":"     * @param dateTimeFormatter date format.","lastModifiedDate":"2022-09-13"},{"lineNumber":381,"author":{"gitId":"-"},"content":"     * @return The output to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":382,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-13"},{"lineNumber":383,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    public String eventInGui(String[] infoArray, TaskList tasks, DateTimeFormatter dateTimeFormatter) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        Task event \u003d new Event(","lastModifiedDate":"2022-09-13"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                infoArray[1],","lastModifiedDate":"2022-09-13"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                LocalDateTime.parse(infoArray[2], dateTimeFormatter),","lastModifiedDate":"2022-09-13"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                LocalDateTime.parse(infoArray[3], dateTimeFormatter)","lastModifiedDate":"2022-09-13"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-13"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-09-13"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        return this.ui.printAddTask(event, this.tasks);","lastModifiedDate":"2022-09-13"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"     * Checks if index input is valid","lastModifiedDate":"2022-09-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"     * @param inputIndex The user input index","lastModifiedDate":"2022-09-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"     * @param tasks The current tasks","lastModifiedDate":"2022-09-08"},{"lineNumber":398,"author":{"gitId":"-"},"content":"     * @throws DukeException Handles when user index is invalid","lastModifiedDate":"2022-09-08"},{"lineNumber":399,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    public static void checkIndex(String inputIndex, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        int index \u003d Integer.parseInt(inputIndex);","lastModifiedDate":"2022-09-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        if (index \u003c\u003d 0 || index \u003e tasks.getNumberOfTasks()) {","lastModifiedDate":"2022-09-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            throw new DukeException(\"I\u0027m sorry invalid index!\");","lastModifiedDate":"2022-09-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":408,"author":{"gitId":"-"},"content":"     * The main method that is the entry to the Duke Application.","lastModifiedDate":"2022-08-27"},{"lineNumber":409,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"     * @param args The input task file.","lastModifiedDate":"2022-08-27"},{"lineNumber":411,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-08-27"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":105,"-":310}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":" * Launcher Class to run the Duke GUi.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"tanxuanyun":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"tanxuanyun":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import java.util.Timer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"     * Method to initialize the MainWindow of the view.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"        assert userImage !\u003d null : \"User does not have image\";","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"        assert dukeImage !\u003d null : \"Turtle does not have image\";","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"                DialogBox.getUserDialog(\"hello\", userImage),","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Turtle! What can I do for you?\", dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"     * Sets the Duke instance we want associated with current GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"     * @param d The Duke object d.","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"        assert d !\u003d null : \"Something went wrong.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"    //@@author DanielLimWeiEn -reused","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"tanxuanyun"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"tanxuanyun"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"tanxuanyun"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"                @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"                public void run() {","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"                    Platform.exit();","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"                    System.exit(0);","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"                }","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":"            }, 1500);","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"tanxuanyun":82,"-":2}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"//@@author DanielLimWeiEn -reused","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":" * Parser to make sense of user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"     * Parses user input to a standard format","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"     * @param input The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"     * @return The standardised input.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    public static String parseCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"        String[] segments \u003d input.split(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"            return \"list|\";","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"            return \"bye|\";","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"        } else if (segments[0].equals(\"remind\")) {","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"            return \"remind|\";","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"        }else if (segments[0].equals(\"find\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"            return findCommand(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"        } else if (segments[0].equals(\"mark\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"            return markCommand(segments);","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"        } else if (segments[0].equals(\"unmark\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"            return unmarkCommand(segments);","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"        } else if (segments[0].equals(\"todo\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"            return todoCommand(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"        } else if (segments[0].equals(\"deadline\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"            return deadlineCommand(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"        }  else if (segments[0].equals(\"event\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"            return eventCommand(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"        } else if (segments[0].equals(\"delete\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"            return deleteCommand(segments);","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"        } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"            return \"\";","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"     * Parses user find command to a standard format","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"     * @param input The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"     * @return The standardised input.","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"    public static String findCommand(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"        input \u003d input.replace(\"find\", \"\");","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"            throw new DukeException(\"The description of a find cannot be empty.\");","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"        return \"find|\" + input.trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"     * Parses user mark command to a standard format","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"     * @param segments The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"     * @return The standardised input.","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"    public static String markCommand(String[] segments) {","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"        int taskId;","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"        if (segments[1].equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"tanxuanyun"},"content":"            taskId \u003d -1;","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"            taskId \u003d Integer.parseInt(segments[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"tanxuanyun"},"content":"        return \"mark|\" + taskId;","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"     * Parses user unmark command to a standard format","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"     * @param segments The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":"     * @return The standardised input.","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"    public static String unmarkCommand(String[] segments) {","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"        int taskId;","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"tanxuanyun"},"content":"        if (segments[1].equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"            taskId \u003d -1;","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"            taskId \u003d Integer.parseInt(segments[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"        return \"unmark|\" + taskId;","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"tanxuanyun"},"content":"     * Parses user todo command to a standard format","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"tanxuanyun"},"content":"     * @param input The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"tanxuanyun"},"content":"     * @return The standardised input.","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"tanxuanyun"},"content":"    public static String todoCommand(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"tanxuanyun"},"content":"        input \u003d input.replace(\"todo\", \"\");","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"tanxuanyun"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"tanxuanyun"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"tanxuanyun"},"content":"        return \"todo|\" + input.trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"tanxuanyun"},"content":"     * Parses user deadline command to a standard format","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"tanxuanyun"},"content":"     * @param input The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"tanxuanyun"},"content":"     * @return The standardised input.","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"tanxuanyun"},"content":"    public static String deadlineCommand(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"tanxuanyun"},"content":"        input \u003d input.replace(\"deadline\", \"\");","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"tanxuanyun"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"tanxuanyun"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"tanxuanyun"},"content":"        String[] parts \u003d input.split(\"/by\");","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"tanxuanyun"},"content":"        String desc \u003d parts[0].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"tanxuanyun"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"tanxuanyun"},"content":"        DateTimeFormatter deadlineFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"tanxuanyun"},"content":"        LocalDateTime byDeadline \u003d LocalDateTime.parse(by, deadlineFormat);","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"tanxuanyun"},"content":"        return \"deadline|\" + desc + \"|\" + byDeadline.format(deadlineFormat);","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"tanxuanyun"},"content":"     * Parses user eventCommand command to a standard format","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"tanxuanyun"},"content":"     * @param input The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"tanxuanyun"},"content":"     * @return The standardised input.","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles duke related exceptions.","lastModifiedDate":"2022-09-08"},{"lineNumber":130,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"tanxuanyun"},"content":"    public static String eventCommand(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"tanxuanyun"},"content":"        input \u003d input.replace(\"event\", \"\");","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"tanxuanyun"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"tanxuanyun"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"tanxuanyun"},"content":"        String[] duration \u003d input.split(\"/from\");","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"tanxuanyun"},"content":"        String descE \u003d duration[0].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"tanxuanyun"},"content":"        String[] time \u003d duration[1].split(\"/to\");","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"tanxuanyun"},"content":"        String start \u003d time[0].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"tanxuanyun"},"content":"        String end \u003d time[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"tanxuanyun"},"content":"        DateTimeFormatter eventFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"tanxuanyun"},"content":"        LocalDateTime startE \u003d LocalDateTime.parse(start, eventFormat);","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"tanxuanyun"},"content":"        LocalDateTime endE \u003d LocalDateTime.parse(end, eventFormat);","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"tanxuanyun"},"content":"        return \"event|\" + descE + \"|\" + startE.format(eventFormat) +","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"tanxuanyun"},"content":"                \"|\" + endE.format(eventFormat);","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":147,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":148,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":149,"author":{"gitId":"tanxuanyun"},"content":"     * Parses user eventCommand command to a standard format","lastModifiedDate":"2022-09-08"},{"lineNumber":150,"author":{"gitId":"tanxuanyun"},"content":"     * @param segments The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":151,"author":{"gitId":"tanxuanyun"},"content":"     * @return The standardised input.","lastModifiedDate":"2022-09-08"},{"lineNumber":152,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":153,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":154,"author":{"gitId":"tanxuanyun"},"content":"    public static String deleteCommand(String[] segments) {","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"tanxuanyun"},"content":"        int taskId;","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"tanxuanyun"},"content":"        if (segments[1].equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"tanxuanyun"},"content":"            taskId \u003d -1;","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"tanxuanyun"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"tanxuanyun"},"content":"            taskId \u003d Integer.parseInt(segments[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":160,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"tanxuanyun"},"content":"        return \"delete|\" + taskId;","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":164,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"//@@author DanielLimWeiEn","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"tanxuanyun":164,"-":1}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import duke.task.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":" * Storage class for loading nd saving data from a file","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    private final File file;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"    //@@author DanielLimWeiEn -reused","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"     * Constructs a new Storage object with a given file path.","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"     * Ensures the file is accessible.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"     * @param filePath The path to the file to store data in.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"     * @throws IOException Handles case of File not being found or location not existing.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"        String[] parts \u003d filePath.split(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"        File folder \u003d new File(parts[0]);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"            folder.mkdir();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"        this.file \u003d file;","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //@@author DanielLimWeiEn -reused","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Saves the {@code Task}s from a {@code TaskList} to the {@code file}.","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param taskList The {@code TaskList} to save.","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IOException Handles File not being found when writing to hard disk.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void writeTasksToStorage(TaskList taskList) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String taskCode \u003d task.toString().substring(0,3);","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            switch (taskCode) {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            case \"[T]\": {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                String output \u003d \"T|\" + task.getStatusIcon() + \"|\" + task.getDescription();","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                fileWriter.write(output);","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            case \"[E]\": {","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Event e \u003d (Event) task;","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                String output \u003d \"E|\" + e.getStatusIcon() + \"|\" + e.getDescription() + \"|\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                        e.getStart() + \"|\" + e.getEnd();","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                fileWriter.write(output);","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            case \"[D]\": {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                Deadline d \u003d (Deadline) task;","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                String output \u003d \"D|\" + d.getStatusIcon() + \"|\" + d.getDescription() + \"|\" + d.getBy();","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                fileWriter.write(output);","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        fileWriter.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"    //@@author DanielLimWeiEn -reused","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"     * Loads the {@code Task}s from the {@code file}.","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"     * @return The {@code Task}s loaded from the {@code file} in an {@code ArrayList}.","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"     * @throws FileNotFoundException Handles cases where File is not found.","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles case of there not being tasks in storage.","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"tanxuanyun"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"tanxuanyun"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"tanxuanyun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"tanxuanyun"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"tanxuanyun"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"tanxuanyun"},"content":"            String[] lineComponents \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"tanxuanyun"},"content":"            String type \u003d lineComponents[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"tanxuanyun"},"content":"            boolean doneStatus \u003d lineComponents[1].equals(\"X\");","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"tanxuanyun"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"tanxuanyun"},"content":"            switch (type) {","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"tanxuanyun"},"content":"            case \"T\":","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"tanxuanyun"},"content":"                Todo t \u003d new Todo(lineComponents[2]);","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"tanxuanyun"},"content":"                t.setIsDone(doneStatus);","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"tanxuanyun"},"content":"                tasks.add(t);","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"tanxuanyun"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"tanxuanyun"},"content":"            case \"D\":","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"tanxuanyun"},"content":"                Deadline d \u003d new Deadline(","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"tanxuanyun"},"content":"                        lineComponents[2],","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"tanxuanyun"},"content":"                        LocalDateTime.parse(lineComponents[3].trim(), dateFormat)","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"tanxuanyun"},"content":"                );","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"tanxuanyun"},"content":"                d.setIsDone(doneStatus);","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"tanxuanyun"},"content":"                tasks.add(d);","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"tanxuanyun"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"tanxuanyun"},"content":"            case \"E\":","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"tanxuanyun"},"content":"                Event e \u003d new Event(","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"tanxuanyun"},"content":"                        lineComponents[2],","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"tanxuanyun"},"content":"                        LocalDateTime.parse(lineComponents[3].trim(), dateFormat),","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"tanxuanyun"},"content":"                        LocalDateTime.parse(lineComponents[4].trim(), dateFormat)","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"tanxuanyun"},"content":"                );","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"tanxuanyun"},"content":"                e.setIsDone(doneStatus);","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"tanxuanyun"},"content":"                tasks.add(e);","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"tanxuanyun"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"tanxuanyun"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"tanxuanyun"},"content":"                throw new DukeException(\"No tasks to read from storage!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"tanxuanyun"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"tanxuanyun"},"content":"        s.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"tanxuanyun"},"content":"        return tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":96,"-":42}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"     * Constructs a new {@code Deadline} with given description and deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles when description is empty.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"    public Deadline(String description, LocalDateTime by) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"     * Returns the string representation of this {@code by} for display.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"     * @return The string representation of this {@code by} for display.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"    public String getBy() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mma\")) + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"tanxuanyun":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":" * Encapsulates an event.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"     * Constructs a new {@code Event} with given description and time.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"     * @param start The start time of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"     * @param end The end time of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles when description is empty.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"        super(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"        this.start \u003d start;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"     * Returns the string representation of this {@code start} for display.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"     * @return The string representation of this {@code start} for display.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"    public String getStart() {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"        return this.start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"     * Returns the string representation of this {@code end} for display.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"     * @return The string representation of this {@code end} for display.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"    public String getEnd() {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"        return this.end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"                this.start.format(format) + \" to \" + this.end.format(format) + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":" * Encapsulates a task.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"     * Constructs a new {@code Task} with the {@code description}.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"     * Initially the new {@code Task} is assumed not done.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"     * @param description The description of the new {@code Task}.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"     * Returns the status of this {@code Task}.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"     * @return The status of this {@code Task}.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"     * Returns the description of this {@code Task}.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"     * @return The description of this {@code Task}.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"        return this.description;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"     * Sets the status of this {@code Task} with the {@code status}.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"    public void setIsDone(boolean status) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"     * Returns the string representation of this {@code Task} for display.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"     * @return The string representation of this {@code Task} for display.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"        return \"[\"+ this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"tanxuanyun":52}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":" * Encapsulates a list of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"     * Constructs a new {@code TaskList} with no tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"     * Sets {@code tasks} in a {@code ArrayList}.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"     * Gets {@code tasks} from {@code ArrayList}.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"     * Adds a task in the {@code ArrayList}.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"     * Removes a task from the {@code ArrayList}","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"     * @return The task object that was deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"        assert 0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"        return task;","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"     * Gets the total number of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"     * Sets the task status.","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"     * @param taskId The id of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"     * @param isDone The status to be change to.","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"tanxuanyun"},"content":"     * @return The task which status is set.","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"    public Task changeTaskStatus(int taskId, boolean isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"        assert 0 \u003c\u003d taskId \u0026\u0026 taskId \u003c tasks.size();","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"tanxuanyun"},"content":"        Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"        task.setIsDone(isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"        return task;","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"    //@@author DanielLimWeiEn -reused","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"     * Finds tasks with user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"     * @param target The user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":"     * @return The ArrayList of task with user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"    public ArrayList\u003cTask\u003e findMatchTasks(String target) {","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"        ArrayList\u003cTask\u003e filtered \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"tanxuanyun"},"content":"        if (target.equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"            return this.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"            if (task.getDescription().contains(target)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"                filtered.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"tanxuanyun"},"content":"        return filtered;","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Finds deadline which are unmarked","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The ArrayList of deadlines which are unmarked.","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e findRemindTasks() {","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e filtered \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (task.toString().contains(\"[D]\") \u0026\u0026 task.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2022-09-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                filtered.add(task);","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return filtered;","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":95,"-":18}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":" * Encapsulates a to-do task.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"     * Constructs a new {@code Todo} with given description.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"     * @throws DukeException Handles when description is empty.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"tanxuanyun":27}},{"path":"src/main/java/duke/utilities/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.utilities;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":" * Exception thrown from Duke\u0027s code.","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"tanxuanyun":9}},{"path":"src/main/java/duke/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.utilities;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":" * A class that provides a simple user interface for the Duke system.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"    private static String LINE \u003d \"--------------------\";","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"    private Scanner s;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"     * Creates a new UI for user.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"    public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"        this.s \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"     * Greets the user","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"     * @return Greets the user","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    public String printDukeOpening() {","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"        String name \u003d \"Turtle\";","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"        String output \u003d \"Hello I am \" + name + \"!\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"        return output;","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"     * Ends the user interaction.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"     * @return Ends the user interaction.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"    public String printDukeClosing() {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"tanxuanyun"},"content":"        String output \u003d \"Goodbye!\";","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"        return output;","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"     * Tells user that there is error.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"     * @return Tells user that there is error.","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"    public String printDukeException(DukeException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"        String output \u003d \"OOPS!!! \" + e.getMessage() + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"        return output;","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"     * Tells user that there is IO error.","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"     * @return Tells user that there is IO error.","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"    public String printIoException(IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"        String output \u003d \"OOPS!!! \" + e.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"        return output;","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"     * Tells user that date format is wrong.","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"     * @return Tells user that date format is wrong.","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"    public String printDateTimeParseException() {","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"        String output \u003d \"All dates must be in the format (yyyy-MM-dd HH:mm)!\";","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output);","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"        return output;","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"     * Displays all the tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"tanxuanyun"},"content":"     * @return Displays all the tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"    public String printTasks(TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":"            output.append((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"tanxuanyun"},"content":"        return output.toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"tanxuanyun"},"content":"     * Tells user task is added.","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"tanxuanyun"},"content":"     * @return Tells user task is added.","lastModifiedDate":"2022-09-01"},{"lineNumber":101,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"tanxuanyun"},"content":"    public String printAddTask(Task task, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"tanxuanyun"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"tanxuanyun"},"content":"        output.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"tanxuanyun"},"content":"        output.append(task.toString() + \"\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"tanxuanyun"},"content":"        output.append(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":108,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"tanxuanyun"},"content":"        return output.toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"tanxuanyun"},"content":"     * Tells user task status have changed.","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"tanxuanyun"},"content":"     * @return Tells user task status have changed.","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"tanxuanyun"},"content":"    public String printChangeTaskStatus(Task task, boolean isDone) {","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"tanxuanyun"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-01"},{"lineNumber":118,"author":{"gitId":"tanxuanyun"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"tanxuanyun"},"content":"            output.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":120,"author":{"gitId":"tanxuanyun"},"content":"            output.append(\"  \" + task.toString() );","lastModifiedDate":"2022-09-01"},{"lineNumber":121,"author":{"gitId":"tanxuanyun"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"tanxuanyun"},"content":"            output.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":123,"author":{"gitId":"tanxuanyun"},"content":"            output.append(\"  \" + task.toString() );","lastModifiedDate":"2022-09-01"},{"lineNumber":124,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":127,"author":{"gitId":"tanxuanyun"},"content":"        return output.toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":128,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"tanxuanyun"},"content":"     * Tells user that tasks is deleted","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"tanxuanyun"},"content":"     * @return Tells user that tasks is deleted","lastModifiedDate":"2022-09-01"},{"lineNumber":133,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"tanxuanyun"},"content":"    public String printDeleteTask(Task task, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":135,"author":{"gitId":"tanxuanyun"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-01"},{"lineNumber":136,"author":{"gitId":"tanxuanyun"},"content":"        output.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":137,"author":{"gitId":"tanxuanyun"},"content":"        output.append(task.toString() + \"\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":138,"author":{"gitId":"tanxuanyun"},"content":"        output.append(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":139,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":140,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":141,"author":{"gitId":"tanxuanyun"},"content":"        return output.toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":142,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"tanxuanyun"},"content":"     * Displays the tasks with the user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"tanxuanyun"},"content":"     * @return Displays the tasks with the user input.","lastModifiedDate":"2022-09-01"},{"lineNumber":147,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"tanxuanyun"},"content":"    public String printMatchTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":149,"author":{"gitId":"tanxuanyun"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-01"},{"lineNumber":150,"author":{"gitId":"tanxuanyun"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"tanxuanyun"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"tanxuanyun"},"content":"            output.append((i + 1) + \".\" + t.toString() + \"\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":153,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"tanxuanyun"},"content":"        if (output.toString().isEmpty()) {","lastModifiedDate":"2022-09-13"},{"lineNumber":155,"author":{"gitId":"tanxuanyun"},"content":"            output.append(\"No task found\");","lastModifiedDate":"2022-09-13"},{"lineNumber":156,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":157,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(output.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":158,"author":{"gitId":"tanxuanyun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-09-01"},{"lineNumber":159,"author":{"gitId":"tanxuanyun"},"content":"        return (output.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":160,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"tanxuanyun"},"content":"     * Tells user app is loading.","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"tanxuanyun"},"content":"    public void showLoadingError() { System.out.println(\"Loading ...\");}","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"tanxuanyun"},"content":"     * Closes scanner.","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"tanxuanyun"},"content":"     * */","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"tanxuanyun"},"content":"    public void closeScanner() {","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"tanxuanyun"},"content":"        this.s.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"tanxuanyun"},"content":"     * Goes to next line.","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"tanxuanyun"},"content":"     * @return next line","lastModifiedDate":"2022-09-01"},{"lineNumber":177,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"tanxuanyun"},"content":"    public String nextLine() {","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"tanxuanyun"},"content":"        return this.s.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":181}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"tanxuanyun":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"tanxuanyun":19}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"    Task t \u003d new Task(\"This is a dummy task\");","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"    public void getDoneStatus_initialStatus_notDone() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"        assertEquals(\" \", t.getStatusIcon());","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"    public void getDoneStatus_finalStatus_done() {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"        t.setIsDone(true);","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"        assertEquals(\"X\", t.getStatusIcon());","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"    public void getDescription_description_correct() {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"        assertEquals(\"This is a dummy task\", t.getDescription());","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"    public void toString_stringRepresentation_correct() {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"        assertEquals(\"[ ] This is a dummy task\", t.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":30}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"import duke.utilities.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"    Todo t;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"    public void todo_emptyDescription_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"        DukeException de \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"            new Todo(\"\");","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"        });","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"        assertEquals(\"The description of a todo cannot be empty.\", de.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"    public void toString_stringRepresentation_correct() {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"            t \u003d new Todo(\"This is a dummy to do task\");","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"        assertEquals(\"[T][ ] This is a dummy to do task\", t.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"tanxuanyun":32}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"T|X|read book","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"E| |project meeting|2019-10-15 06:00|2019-10-15 07:00","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"T| |join sports club","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"T| |borrow book","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"tanxuanyun":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"deadline return book /by 2019-10-15 06:00","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"event project meeting /from 2019-10-15 06:00 /to 2019-10-15 07:00","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"todo join sports club","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"unmark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"blah","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"tanxuanyun":17}}]

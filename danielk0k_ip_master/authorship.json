[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"## THE ONLY DUKE YOU NEED","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"*Made with love :heart: for programmers by programmers.*","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"### Never miss another assignment again!","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"#### Features","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"- Execute commands by simply typing them like the command line","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"- Load in your tasks directly from your local file directory","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"- Perform basic operations on your tasks like add, delete and mark as completed","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"- Save your changes to your local file directory","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"- **And many more!**","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"#### How to use","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"1. Ensure that you have the correct version of Java installed on your machine","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"```zsh","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"$ java --version","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"```","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"\u003e Supports only Java 11","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"2. Download `duke_v0.1.jar` file from [here](https://github.com/danielk0k/ip/releases/download/A-Jar/duke_v0.1.jar)","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"3. Double-click on the downloaded file and that\u0027s all!","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"#### More features to come","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"- [x] Search a task by typing `find taskKeyword`","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"- [ ] GUI interface using JavaFX","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"#### For the technical people","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"Run your own Duke program with the following main method in Java.","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"```java","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"public class Main {","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"        Duke dk \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"        dk.run();","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"```","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"-":24,"danielk0k":41}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    mainClassName \u003d \"ApplicationLauncher\"","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"-":40,"danielk0k":22}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"rootProject.name \u003d \"ip\"","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"danielk0k":1}},{"path":"src/main/java/ApplicationLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"import duke.Main;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":" * Launcher for GUI Duke Application","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"public class ApplicationLauncher {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"danielk0k":12}},{"path":"src/main/java/duke/DukeApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.command.ICommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":" * Represents the main class of the Duke program.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"public class DukeApplication {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     * @param filePath String location of duke.txt.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    public DukeApplication(String filePath) {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"        this.taskList \u003d new TaskList(this.storage.load());","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     * Returns response from command execution.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     * @param input String input from input text field.","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     * @return String response from the command execution.","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    public String process(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        return cmd.execute(storage, taskList);","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"     * Main method for Duke program.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        DukeApplication dk \u003d new DukeApplication(\"data/duke.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"danielk0k":41}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":" * Represents an exception specific to the Duke program.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of DukeException.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"     * @param msg Error message.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"        super(msg);","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"danielk0k":15}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    private DukeApplication duke \u003d new DukeApplication(\"data/duke.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"danielk0k":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import duke.command.CommandType;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import duke.command.ICommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"import duke.command.SaveCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":" * Represents a parser to parse string inputs from user","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":" * and output appropriate commands to be executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     * Returns appropriate command from parsed input.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     * @param input","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     * @return Command from parsed input to be executed.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    public static ICommand parse(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"        Scanner sc \u003d new Scanner(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"            String command \u003d sc.next();","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"            if (!CommandType.COMMAND_MAP.containsKey(command)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t understand that.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"            CommandType type \u003d CommandType.COMMAND_MAP.get(command);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"            ICommand cmd;","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"            switch (type) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"            case TODO:","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"                String todoBody \u003d sc.nextLine().trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"                if (todoBody.isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"                    throw new DukeException(\"Something went wrong! Could not read TODO.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"                } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"                    cmd \u003d new AddCommand(CommandType.TODO, todoBody);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"                String deadlineBody \u003d sc.nextLine().trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"                String[] deadlineArgs \u003d deadlineBody.split(\"\\\\s/by\\\\s\");","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"                if (deadlineArgs.length \u003c 2 || deadlineArgs[0].isBlank() || deadlineArgs[1].isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"                    throw new DukeException(\"Something went wrong! Could not read DEADLINE.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"                } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"                    cmd \u003d new AddCommand(CommandType.DEADLINE, deadlineArgs[0], deadlineArgs[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"            case EVENT:","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"                String eventBody \u003d sc.nextLine().trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"                String[] eventArgs \u003d eventBody.split(\"\\\\s/at\\\\s\");","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"                if (eventArgs.length \u003c 2 || eventArgs[0].isBlank() || eventArgs[1].isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"                    throw new DukeException(\"Something went wrong! Could not read EVENT.\");","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"                } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"                    cmd \u003d new AddCommand(CommandType.EVENT, eventArgs[0], eventArgs[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"            case LIST:","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"                cmd \u003d new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"            case MARK:","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"                cmd \u003d new MarkCommand(sc.nextInt() - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"                cmd \u003d new UnmarkCommand(sc.nextInt() - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"            case DELETE:","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"                cmd \u003d new DeleteCommand(sc.nextInt() - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"            case SAVE:","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"                cmd \u003d new SaveCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"            case FIND:","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"                if (!sc.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"                    throw new DukeException(\"Something went wrong! Could not read FIND.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"                } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"                    cmd \u003d new FindCommand(sc.next());","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"            case BYE:","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"                cmd \u003d new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"            default:","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t understand that.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"            return cmd;","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"            return new WrongCommand(e.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"        } finally {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"danielk0k"},"content":"            sc.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"danielk0k":99}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":" * Represents a storage class for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    private final String FILEPATH;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"     * Returns a storage instance.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"     * @param filePath Path to the file duke.txt.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"        this.FILEPATH \u003d filePath;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"     * Reads file at filePath.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"     * @return Scanner sc","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    public Scanner load() {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"            File f \u003d new File(FILEPATH);","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"            return sc;","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"        } catch (FileNotFoundException fileError) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"            System.out.println(\"Error in loading data. File not found.\");","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"            return new Scanner(\"\");","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"     * Writes content to file at filePath.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"     * @param it Iterator of the arrayList from TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    public String save(Iterator\u003cTask\u003e it) {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"            FileWriter fw \u003d new FileWriter(FILEPATH, false);","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"            while (it.hasNext()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"                fw.write(it.next().toStringSaveFormat());","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"            fw.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"            return \"Successfully saved contents into duke.txt\";","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"            return \"Error in saving data.\";","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"danielk0k":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"public class TaskList {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of a task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of a task list with saved tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"     * @param sc Scanner object to read the text file.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    public TaskList(Scanner sc) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"                String[] arguments \u003d sc.nextLine().split(\",\");","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"                switch (arguments[0]) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"                case \"T\":","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"                    this.list.add(new ToDo(arguments[1], arguments[2]));","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"                case \"D\":","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"                    this.list.add(new Deadline(arguments[1], arguments[2], arguments[3]));","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"                case \"E\":","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"                    this.list.add(new Event(arguments[1], arguments[2], arguments[3]));","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"                default:","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"                    throw new DukeException(\"Invalid input from file.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"            System.out.println(\"Successfully loaded saved contents.\\n\" + this);","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"        } finally {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"            sc.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"     * Adds new task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"     * @param task New task.","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"     * @return String response after adding the new task.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"    public String add(Task task) {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        this.list.add(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        stringBuilder.append(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"        stringBuilder.append(String.format(\"Now you have %d tasks in the list.\", this.list.size()));","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"     * Deletes task at specified index in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"     * @param index Index of which task to be deleted in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"     * @return String response after deleting the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"     * @throws DukeException If specified index is out of range of the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"    public String delete(int index) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"        if (index \u003c 0 || index \u003e\u003d this.list.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"            throw new DukeException(\"Something went wrong!\\nPlease select at task to be removed within the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"        Task task \u003d this.list.remove(index);","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"        stringBuilder.append(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"        stringBuilder.append(String.format(\"Now you have %d tasks in the list.\", this.list.size()));","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"     * Marks task as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"     * @param index Index of which task to be marked in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"     * @return String response after marking the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"     * @throws DukeException If specified index is out of range of the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"danielk0k"},"content":"    public String markDone(int index) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"        if (index \u003c 0 || index \u003e\u003d this.list.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"            throw new DukeException(\"Something went wrong!\\nPlease select at task to be marked within the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"danielk0k"},"content":"        this.list.get(index).markDone();","lastModifiedDate":"2022-08-15"},{"lineNumber":101,"author":{"gitId":"danielk0k"},"content":"        return this.list.get(index).toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"danielk0k"},"content":"     * Marks task as not completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"     * @param index Index of which task to be unmarked in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"danielk0k"},"content":"     * @return String response after unmarking the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"     * @throws DukeException If specified index is out of range of the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"danielk0k"},"content":"    public String unmarkDone(int index) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"danielk0k"},"content":"        if (index \u003c 0 || index \u003e\u003d this.list.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"danielk0k"},"content":"            throw new DukeException(\"Something went wrong!\\nPlease select at task to be unmarked within the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"danielk0k"},"content":"        this.list.get(index).markNotDone();","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"danielk0k"},"content":"        return this.list.get(index).toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"     * Finds all tasks in the list based on a keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":122,"author":{"gitId":"danielk0k"},"content":"     * @param searchStr Specified search keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"danielk0k"},"content":"     * @return String response after finding all the tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"danielk0k"},"content":"    public String find(String searchStr) {","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"danielk0k"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"danielk0k"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"danielk0k"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"danielk0k"},"content":"            if (task.matchKeyword(searchStr.subSequence(0, searchStr.length()))) {","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"                stringBuilder.append(String.format(\"%d. %s\", index++, task));","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"        stringBuilder.append(\"Search completed.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"danielk0k"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"danielk0k"},"content":"     * Returns iterator of the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"danielk0k"},"content":"     * Used in writing tasks to file in Storage class.","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"danielk0k"},"content":"     * @return Iterator of the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"danielk0k"},"content":"    public Iterator\u003cTask\u003e getIterator() {","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"danielk0k"},"content":"        return this.list.iterator();","lastModifiedDate":"2022-08-22"},{"lineNumber":146,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"danielk0k"},"content":"     * Returns the string representation of all the tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"danielk0k"},"content":"     * @return String representation of all the tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":154,"author":{"gitId":"danielk0k"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":155,"author":{"gitId":"danielk0k"},"content":"        if (this.list.size() \u003c 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"danielk0k"},"content":"            // List is empty","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"danielk0k"},"content":"            return \"You have no task on your list.\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"danielk0k"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":160,"author":{"gitId":"danielk0k"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-08-15"},{"lineNumber":161,"author":{"gitId":"danielk0k"},"content":"            stringBuilder.append(String.format(\"%d. %s\", i + 1, this.list.get(i).toString()));","lastModifiedDate":"2022-08-15"},{"lineNumber":162,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":163,"author":{"gitId":"danielk0k"},"content":"        stringBuilder.append(\"When you\u0027re ready, you may mark them as complete.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"danielk0k"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":165,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":166,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"danielk0k":166}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":" * Represents a command to add new task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"public class AddCommand implements ICommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"    private CommandType type;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    private String description;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"    private String dateString;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of AddCommand for todo type.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"     * @param type Type of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    public AddCommand(CommandType type, String description) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"        this.dateString \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of AddCommand for deadline and event types.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * @param type Type of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"     * @param dateString Date of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    public AddCommand(CommandType type, String description, String dateString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"     * Executes the command by adding the task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        switch (type) {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        case TODO:","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"            return taskList.add(new ToDo(\"0\", description));","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"            return taskList.add(new Deadline(\"0\", description, dateString));","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        case EVENT:","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"            return taskList.add(new Event(\"0\", description, dateString));","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"            return \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"     * Returns if two AddCommands are equal in type, description, date.","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"     * @return True if two AddCommands are equal in type, description, date. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"        if (obj instanceof AddCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"            AddCommand otherCmd \u003d (AddCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"            return this.type \u003d\u003d otherCmd.type","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"                    \u0026\u0026 this.description.equals(otherCmd.description)","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"                    \u0026\u0026 this.dateString.equals(otherCmd.dateString);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"            return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"danielk0k":89}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents a collection of command types the program recognises.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    TODO, DEADLINE, EVENT, LIST, BYE, MARK, UNMARK, DELETE, SAVE, FIND;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * Mapping of string input to its command type.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"    public static final HashMap\u003cString, CommandType\u003e COMMAND_MAP \u003d new HashMap\u003c\u003e(","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"            Map.of(","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"                    \"todo\", TODO,","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"                    \"deadline\", DEADLINE,","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"                    \"event\", EVENT,","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"                    \"list\", LIST,","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"                    \"bye\", BYE,","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"                    \"mark\", MARK,","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"                    \"unmark\", UNMARK,","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"                    \"delete\", DELETE,","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"                    \"save\", SAVE,","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"                    \"find\", FIND","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    ));","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"danielk0k":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" * Represents a command to delete task from the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"public class DeleteCommand implements ICommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    private int index;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of DeleteCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"     * @param index Index of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     * Executes the command by deleting specified task from the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"            return taskList.delete(index);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"     * Returns if two DeleteCommands are equal in index of task to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"     * @return True if two DeleteCommands are equal in index of task to be deleted. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        if (obj instanceof DeleteCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"            DeleteCommand otherCmd \u003d (DeleteCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"            return this.index \u003d\u003d otherCmd.index;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"            return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"danielk0k":62}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class ExitCommand implements ICommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"     * Executes end of program.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"        return \"Thank you!\";","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * Returns if two ExitCommands are equal.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     * @return True if two ExitCommands are equal. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        return obj instanceof ExitCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"danielk0k":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents a command to find tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class FindCommand implements ICommand {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    private String searchStr;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of FindCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     * @param searchStr Search keyword.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    public FindCommand(String searchStr) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"        this.searchStr \u003d searchStr;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     * Executes the command by finding the tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"        return taskList.find(this.searchStr);","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"     * Returns if two FindCommands are equal.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"     * @return True if two FindCommands are equal. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        return obj instanceof FindCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"danielk0k":52}},{"path":"src/main/java/duke/command/ICommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * An interface for all command types.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public interface ICommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"     * Executes the command by adding the task to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    String execute(Storage storage, TaskList taskList);","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    boolean isExit();","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"danielk0k":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents a command to list all task in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class ListCommand implements ICommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"     * Executes the command by listing all task in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"        return taskList.toString();","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * Returns if two ListCommands are equal.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     * @return True if two ListCommands are equal. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        return obj instanceof ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"danielk0k":41}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" * Represents a command to mark task as complete in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"public class MarkCommand implements ICommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    private int index;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of MarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"     * @param index Index of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     * Executes the command by marking task as complete in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"            return taskList.markDone(index);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"     * Returns if two MarkCommands are equal in index.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"     * @return True if two MarkCommands are equal in index. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"        if (obj instanceof MarkCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"            MarkCommand otherCmd \u003d (MarkCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"            return this.index \u003d\u003d otherCmd.index;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"            return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"danielk0k":61}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents a command to save the tasks from the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class SaveCommand implements ICommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"     * Executes the command by saving the tasks from the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"        return storage.save(taskList.getIterator());","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * Returns if two SaveCommands are equal.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     * @return True if two SaveCommands are equal. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        return obj instanceof SaveCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"danielk0k":41}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" * Represents a command to mark task as incomplete in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"public class UnmarkCommand implements ICommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    private int index;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of UnmarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"     * @param index Index of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     * Executes the command by marking task as incomplete in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"            return taskList.unmarkDone(index);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"     * Returns if two UnmarkCommands are equal in index.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"     * @return True if two UnmarkCommands are equal in index. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        if (obj instanceof UnmarkCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"            UnmarkCommand otherCmd \u003d (UnmarkCommand) obj;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"            return this.index \u003d\u003d otherCmd.index;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"            return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"danielk0k":62}},{"path":"src/main/java/duke/command/WrongCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.command;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents a wrong command which returns the error message.","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class WrongCommand implements ICommand {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    private String errMsg;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    public WrongCommand(String errMsg) {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"        this.errMsg \u003d errMsg;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     * Returns the error message.","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"     * @param storage Storage object for I/O operations.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"     * @param taskList TaskList object for operations on the list of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"        return this.errMsg;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"     * Returns if command is an ExitCommand.","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"     * @return True if command is an ExitCommand. Else false.","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     * Returns if two WrongCommands are equal.","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     * @param obj Other command.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"     * @return True if two WrongCommands are equal. Else false.","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        if (obj instanceof WrongCommand) {","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"            WrongCommand cmd \u003d (WrongCommand) obj;","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"            return this.errMsg.equals(cmd.errMsg);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"            return false;","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"danielk0k":52}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.controller;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    private DialogBox(String text) {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"    public static DialogBox getUserDialog(String text) {","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        return new DialogBox(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    public static DialogBox getDukeDialog(String text) {","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        var db \u003d new DialogBox(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"danielk0k":55}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.controller;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import duke.DukeApplication;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    private DukeApplication duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        this.scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    public void setDuke(DukeApplication d) {","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        this.duke \u003d d;","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"How may I help you?\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input));","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        String response \u003d this.duke.process(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(response));","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"danielk0k":48}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents a task with deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of Deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * @param isDone Is task complete.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"     * @param dateStr Date of deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    public Deadline(String isDone, String description, String dateStr) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"        super(description, isDone.equals(\"1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"        LocalDate parsedDate;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"            parsedDate \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"            // Default current date will be used.","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"            parsedDate \u003d LocalDate.now();","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        this.date \u003d parsedDate;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"     * Returns string format of deadline for saving purpose.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * @return String format of deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    public String toStringSaveFormat() {","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"        return String.format(\"D,%s,%s,%s\\n\", this.isDone ? \"1\" : \"0\", this.description, this.date);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     * Return string representation of deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"     * @return String representation of deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        return String.format(\"[D][%s] %s (by: %s)\\n\", this.isDone ? \"X\" : \" \", this.description, this.date);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"danielk0k":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents an event on a date.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     * @param isDone Is task complete.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"     * @param dateStr Date of event.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    public Event(String isDone, String description, String dateStr) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"        super(description, isDone.equals(\"1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"        LocalDate parsedDate;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"            parsedDate \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"            // Default current date will be used.","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"            parsedDate \u003d LocalDate.now();","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        this.date \u003d parsedDate;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"     * Returns string format of event for saving purpose.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * @return String format of event.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    public String toStringSaveFormat() {","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"        return String.format(\"E,%s,%s,%s\\n\", this.isDone ? \"1\" : \"0\", this.description, this.date);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     * Return string representation of event.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"     * @return String representation of event.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        return String.format(\"[E][%s] %s (at: %s)\\n\", this.isDone ? \"X\" : \" \", this.description, this.date);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"danielk0k":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":" * Represents an abstract class for all tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"    protected String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * @param isDone Is task complete.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"     * Marks task as complete.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"     * Marks task as incomplete.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     * Checks in keyword is contained in description of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"     * @param keyword Keyboard to be searched.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"     * @return True if keyword is contained in description. Else false.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    public boolean matchKeyword(CharSequence keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"     * Returns string format of task for saving purpose.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"     * @return String format of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    public abstract String toStringSaveFormat();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"     * Return string representation of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        return String.format(\"[%s] %s\\n\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"danielk0k":57}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":" * Represents a class for to to-do tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"     * Returns an instance of ToDo task.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    public ToDo(String isDone, String description) {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"        super(description, isDone.equals(\"1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     * Returns string format of todo for saving purpose.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"     * @return String format of todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    public String toStringSaveFormat() {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"        return String.format(\"T,%s,%s\\n\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     * Return string representation of todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     * @return String representation of todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"        return String.format(\"[T][%s] %s\\n\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"danielk0k":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"danielk0k":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"danielk0k":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import duke.command.CommandType;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"import duke.command.ICommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"import duke.command.SaveCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_addToDo_returnAddCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"todo homework\");","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new AddCommand(CommandType.TODO, \"homework\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_addEmptyToDo_returnEmptyCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"todo \");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new WrongCommand(\"Something went wrong! Could not read TODO.\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_listInput_returnListCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new ListCommand());","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_markInput_returnMarkCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new MarkCommand(0));","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_unMarkInput_returnUnmarkCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new UnmarkCommand(0));","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_deleteInput_returnDeleteCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new DeleteCommand(0));","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_saveInput_returnSaveCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"save\");","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new SaveCommand());","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_byeInput_returnExitCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"bye\");","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new ExitCommand());","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"    public void parseMethod_invalidInput_returnEmptyCmd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"        ICommand cmd \u003d Parser.parse(\"whattodo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"        assertEquals(cmd, new WrongCommand(\"I\u0027m sorry, but I don\u0027t understand that.\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"danielk0k":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"todo borrow math book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"todo borrow science book","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"deadline return science book /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"deadline return math book /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"event project A meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"event project B meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"danielk0k":7}}]

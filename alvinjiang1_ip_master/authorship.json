[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"# duke.duke project template","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alvinjiang1":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"checkstyle {","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alvinjiang1":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"Duke is a to-do list that helps the user to keep track of tasks, and is operated by a sleek looking GUI.","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"- Add tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"- Delete tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"- Mark tasks as done","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"- Mark tasks as not done ","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"- List all current tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"- Find task by keyword","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"- Detect clashing tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"Note about command format: words in ```UPPER_CASE``` are the parameters to be supplied by the user.","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"### Add tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"Adds either a todo item, deadline, or event to the to-do list.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"####TODO Task","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"Adds a todo item to the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"Format: ```todo TASK```","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"- ```todo clean room```","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"- ```todo shower```","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"####DEADLINE Task","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"Adds a deadline item to the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"Format: ```deadline TASK /by YYYY-MM-DD```","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"- ```deadline clean room /by 2022-09-16```","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"- ```deadline shower /by 2022-09-16```","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"####EVENT Task","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"Adds a event item to the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"Format: ```event TASK /at YYYY-MM-DD```","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"- ```event clean room /at 2022-09-16```","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"- ```event shower /at 2022-09-16```","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"### Delete tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"Delete an existing task from the to-do list.","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"Format: ```delete INDEX```","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"- ```delete 1```","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"### Mark tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"Mark an existing task in the to-do list as done.","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"Format: ```mark INDEX```","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"- ```mark 1```","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"### Unmark tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"Mark an existing task in the to-do list as not done yet.","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"Format: ```unmark INDEX```","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"- ```unmark 1```","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"### List tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"List all existing tasks in the to-do list.","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"Format: ```list```","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"### Find tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"Find specific tasks from the to-do list by matching a input string with the task description.","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"Format: ```find SUBSTRING```","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"- ```find home```","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"### Detect clashing tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"Trying to add an event with the same time as an existing event will display an error message:","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"alvinjiang1"},"content":"Sorry, there is a clash in the Events!","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"alvinjiang1":60,"-":20}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":" * Deadline implements the type of Task that contains a","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":" * deadline for the task to be completed by.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"     * Deadline constructor that creates an instance of a Deadline object.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"     * @param description The description for the task that needs to be completed.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"     * @param by The deadline for the task to be completed by.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"        this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"     * A method to check if the given dateTime is equal to that of the Deadline object.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"     * @param at The dateTime to check against.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"     * @return boolean Whether the dateTimes are equal.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"    public boolean sameTime(String at) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"     * A method which adds a task to the given taskList input.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"     * @param taskList The taskList before a Deadline Task is added.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The String displayed when after the Deadline Task is added.","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"    public String printAndStoreTask(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"        taskList.add(this);","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"                + \"  \" + this + \"\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"     * The toString method for the Deadline class.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The String format of the Deadline Object.","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"alvinjiang1":65}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"    private Label text;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"        text \u003d l;","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    private void flip() {","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"        assert db !\u003d null : \"DialogBox cannot be null\";","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"        db.flip();","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"        return db;","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"alvinjiang1":48}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":" * Duke implements the To-do List bot, and allows users","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":" * to input commands to create a To-do List.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"    private static String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"        // ...","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"     * A method to initialise the instance variables in Duke.","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"     * @param stage The stage required to set up the other components.","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"    private void initialise(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"        stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"     * A method to format different components of the GUI.","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"     * @param stage The stage required to format the other components.","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"    private void formatWindow(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"alvinjiang1"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"alvinjiang1"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"alvinjiang1"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"alvinjiang1"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"alvinjiang1"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"alvinjiang1"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"alvinjiang1"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"alvinjiang1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"alvinjiang1"},"content":"                DialogBox.getDukeDialog(new Label(\"Helloo! How can I help you today? :)\"),","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"alvinjiang1"},"content":"                        new ImageView(duke))","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"alvinjiang1"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":94,"author":{"gitId":"alvinjiang1"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"alvinjiang1"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"alvinjiang1"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"alvinjiang1"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"alvinjiang1"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"alvinjiang1"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"alvinjiang1"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"alvinjiang1"},"content":"     * A method to handle user input by reacting to mouseclick and","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"alvinjiang1"},"content":"     * scrolling of scrollpane.","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"alvinjiang1"},"content":"    private void setInputFunctionality() {","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"alvinjiang1"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":111,"author":{"gitId":"alvinjiang1"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-09-02"},{"lineNumber":112,"author":{"gitId":"alvinjiang1"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-02"},{"lineNumber":113,"author":{"gitId":"alvinjiang1"},"content":"        });","lastModifiedDate":"2022-09-02"},{"lineNumber":114,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"alvinjiang1"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"alvinjiang1"},"content":"        });","lastModifiedDate":"2022-09-02"},{"lineNumber":118,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"alvinjiang1"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"alvinjiang1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"        initialise(stage);","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"alvinjiang1"},"content":"        formatWindow(stage);","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"alvinjiang1"},"content":"        setInputFunctionality();","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":130,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"alvinjiang1"},"content":"     * Iteration 2:","lastModifiedDate":"2022-09-02"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-02"},{"lineNumber":133,"author":{"gitId":"alvinjiang1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-02"},{"lineNumber":134,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"alvinjiang1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":136,"author":{"gitId":"alvinjiang1"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-09-02"},{"lineNumber":137,"author":{"gitId":"alvinjiang1"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"alvinjiang1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":139,"author":{"gitId":"alvinjiang1"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-09-02"},{"lineNumber":140,"author":{"gitId":"alvinjiang1"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"alvinjiang1"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":142,"author":{"gitId":"alvinjiang1"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":144,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":146,"author":{"gitId":"alvinjiang1"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-02"},{"lineNumber":147,"author":{"gitId":"alvinjiang1"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-02"},{"lineNumber":148,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":149,"author":{"gitId":"alvinjiang1"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":150,"author":{"gitId":"alvinjiang1"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"alvinjiang1"},"content":"            Parser p \u003d new Parser(this.tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"alvinjiang1"},"content":"            assert p !\u003d null : \"parser not created\";","lastModifiedDate":"2022-09-08"},{"lineNumber":153,"author":{"gitId":"alvinjiang1"},"content":"            if (!p.isBye(p.parseCommand(input))) {","lastModifiedDate":"2022-09-02"},{"lineNumber":154,"author":{"gitId":"alvinjiang1"},"content":"                String result \u003d p.executeCommand(p.parseCommand(input), input);","lastModifiedDate":"2022-09-02"},{"lineNumber":155,"author":{"gitId":"alvinjiang1"},"content":"                storage.writeFile(this.tasks.getList());","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"alvinjiang1"},"content":"                return result;","lastModifiedDate":"2022-09-02"},{"lineNumber":157,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"alvinjiang1"},"content":"            return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-02"},{"lineNumber":159,"author":{"gitId":"alvinjiang1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":160,"author":{"gitId":"alvinjiang1"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-02"},{"lineNumber":161,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"alvinjiang1":162,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":" * DukeException implements the Exception that is thrown","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":" * in the Duke program.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"     * DukeException constructor that creates an instance of a DukeException object.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"     * @param message The message that is contained by the DukeException object.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"     * The toString method for the DukeException class.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The String format of the DukeException Object.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"        return \"DukeException detected.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"alvinjiang1":30}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":" * Event implements the type of Task that contains a","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":" * date for the task to be completed at.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"     * Event constructor that creates an instance of a Event object.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"     * @param description The description for the task that needs to be completed.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"     * @param at The date for the task to be completed at.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"        this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"     * A method to check if the given dateTime is equal to that of the Event object.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"     * @param at The dateTime to check against.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"     * @return boolean Whether the dateTimes are equal.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"    public boolean sameTime(String at) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"        LocalDate date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"        return this.date.equals(date);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"     * A method which adds a task to the given taskList input.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"     * @param taskList The taskList before a Event Task is added.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The String displayed when after the Event Task is added.","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"    public String printAndStoreTask(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"        taskList.add(this);","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"                + \"  \" + this + \"\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"     * The toString method for the Event class.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The String format of the Event Object.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"alvinjiang1":65}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"public class Launcher {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"alvinjiang1":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":" * Parser makes sense of the user inputs.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"    final static ArrayList\u003cString\u003e validCommands \u003d new ArrayList\u003c\u003e(List.of(\"list\", \"mark\", \"unmark\", \"todo\", \"deadline\", \"event\", \"delete\", \"bye\", \"find\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"     * Parser constructor that creates an instance of a Parser object.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"     * @param tasks The tasks that will be operated on after parsing user inputs.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"     * A method which evaluates if the command given by user is bye","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    public boolean isBye(String str) {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"        return str.equals(\"bye\");","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"     * A method which analyses the user input and returns the command word used.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"     * @param str The entire user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"     * @return String the command that is called by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"     * @throws DukeException Exception thrown when the input does not have a valid command.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    public String parseCommand(String str) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"        String command \u003d str.split(\" \", 2)[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"        assert !validCommands.isEmpty() : \"possible command list invalid\";","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        if (validCommands.contains(command)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"            return command;","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"     * A method which analyses the user input, as well as the command and modifies the taskList","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"     * as necessary.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"     * @param command The command word given by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"     * @param str     The entire user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The output specified the operation done.","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"     * @throws DukeException Exception thrown when the input string is empty.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"    public String executeCommand(String command, String str) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"            switch (command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"            case \"list\":","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"                return this.tasks.displayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"            case \"mark\":","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"                return this.tasks.markTask(taskIndex(str, command));","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"            case \"unmark\":","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"                return this.tasks.unmarkTask(taskIndex(str, command));","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"                checkValidString(str, command);","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"                String s3 \u003d str.substring(5);","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"                Todo t \u003d new Todo(s3);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"                return this.tasks.addTask(t);","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"                checkValidString(str, command);","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"                String s4 \u003d str.substring(9);","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"                String[] deadlineResult \u003d s4.split(\" /by \");","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"                Deadline d \u003d new Deadline(deadlineResult[0], deadlineResult[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"alvinjiang1"},"content":"                return this.tasks.addTask(d);","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"alvinjiang1"},"content":"            case \"event\":","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"alvinjiang1"},"content":"                checkValidString(str, command);","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"alvinjiang1"},"content":"                String s5 \u003d str.substring(6);","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"alvinjiang1"},"content":"                String[] eventResult \u003d s5.split(\" /at \");","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"alvinjiang1"},"content":"                this.tasks.checkClash(eventResult[1]);","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"alvinjiang1"},"content":"                Event e \u003d new Event(eventResult[0], eventResult[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"alvinjiang1"},"content":"                return this.tasks.addTask(e);","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"alvinjiang1"},"content":"            case \"delete\":","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"                return this.tasks.deleteTask(taskIndex(str, command));","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"alvinjiang1"},"content":"            case \"find\":","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"                String s7 \u003d str.substring(5);","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"alvinjiang1"},"content":"                return this.tasks.findTask(s7);","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"alvinjiang1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"alvinjiang1"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"alvinjiang1"},"content":"        return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"alvinjiang1"},"content":"     * A method which analyses the user input, as well as the command and returns","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"alvinjiang1"},"content":"     * the index of the task in question","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"alvinjiang1"},"content":"     * @param command The command word given by the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"alvinjiang1"},"content":"     * @param str     The entire user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"alvinjiang1"},"content":"     * @return int The index of the specific task.","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"alvinjiang1"},"content":"    private int taskIndex(String str, String command) {","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"alvinjiang1"},"content":"        switch (command) {","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"alvinjiang1"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"alvinjiang1"},"content":"            temp \u003d str.substring(5);","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"alvinjiang1"},"content":"            break;","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"alvinjiang1"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"alvinjiang1"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"alvinjiang1"},"content":"            temp \u003d str.substring(7);","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"alvinjiang1"},"content":"            break;","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"alvinjiang1"},"content":"        assert !temp.equals(\"\") : \"unable to obtain string\";","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"alvinjiang1"},"content":"        return Integer.parseInt(temp) - 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"alvinjiang1"},"content":"     * A method which analyses the user input, as well as the command and throws","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"alvinjiang1"},"content":"     * an Exception if the description of the input is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":123,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"alvinjiang1"},"content":"     * @param command The command word given by the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"     * @param str     The entire user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"alvinjiang1"},"content":"     * @throws DukeException Exception thrown when the input string is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"alvinjiang1"},"content":"    private void checkValidString(String str, String command) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"alvinjiang1"},"content":"        switch(command) {","lastModifiedDate":"2022-09-08"},{"lineNumber":130,"author":{"gitId":"alvinjiang1"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"alvinjiang1"},"content":"            if (str.length() \u003d\u003d 4) {","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry but description of a todo cannot be empty\");","lastModifiedDate":"2022-09-08"},{"lineNumber":133,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"alvinjiang1"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-08"},{"lineNumber":135,"author":{"gitId":"alvinjiang1"},"content":"            if (str.length() \u003d\u003d 8) {","lastModifiedDate":"2022-09-08"},{"lineNumber":136,"author":{"gitId":"alvinjiang1"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry but description of a deadline cannot be empty\");","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":138,"author":{"gitId":"alvinjiang1"},"content":"        case \"event\":","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"alvinjiang1"},"content":"            if (str.length() \u003d\u003d 5) {","lastModifiedDate":"2022-09-08"},{"lineNumber":140,"author":{"gitId":"alvinjiang1"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry but description or time period of an event cannot be empty\");","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":142,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":143,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":144,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":145,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"alvinjiang1":146}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":" * Storage handles the reading and writing of the TaskList to an output file.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"    String filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"    final static String PATH \u003d \"./data\";","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"     * Storage constructor that creates an instance of a Storage object.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"     * @param filePath The file path to which the storage can read and write files.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"     * A method to create the output file if it does not exist,","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"     * and if it does, read the file and generate an ArraryList that","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"     * corresponds to its current contents.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"     * @return ArrayList of type String The output, whereby each line of the file","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"     * corresponds to entry in the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"        File directory \u003d new File(PATH);","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        assert file !\u003d null : \"file does not exist\";","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"            ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"                result.add(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"            return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"     * A method to write an input String to the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"     * @param str The input String to be added to the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"    public void writeFile(String str) {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"            fw.write(str);","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"            fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"alvinjiang1":76}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":" * Task contains the description of the Task to be done,","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":" * as well as a boolean that tracks the completion of the Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"     * Task constructor that creates an instance of a Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"     * @param description The description of the Task that needs to be completed.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"     * The toString method for the Task class.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The String format of the Task Object.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"     * A method to mark whether the Task has been completed.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"     * @return String that corresponds to whether the Task has been done.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"     * A method to add a task to a given taskList input. This method","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"     * should be overridden by all child classes.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"     * @param taskList The taskList before a Task is added.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"     * @return ArrayList of type Task The taskList after the Task is added.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"    public abstract String printAndStoreTask(ArrayList\u003cTask\u003e taskList);","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"     * A method to check if there is a clash in dates between the tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"     * @param dateTime dateTime of the given Task.","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"     * @return boolean Whether there is a clash.","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"    public abstract boolean sameTime(String dateTime);","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"     * A method to toggle the status of the task to Done.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"    public void doTask() {","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"     * A method to toggle the status of the task to Not Done.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"    public void undoTask() {","lastModifiedDate":"2022-08-16"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"    public boolean match(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"alvinjiang1"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"alvinjiang1":79}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":" * Task contains an ArrayList of the Tasks to be done, as well","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":" * as the behaviours that can change the Tasks within the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"     * TaskList constructor that creates an instance of a TaskList Object.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"     * @param taskList The ArrayList output by the Storage, to be converted into","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"     *                 an ArrayList of type Task, and stored as a field.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"    public TaskList(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"        if (taskList.isEmpty()) tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"        for (String str : taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"            char type \u003d str.charAt(1);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"            if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"                String description \u003d str.substring(7);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"                result.add(new Todo(description));","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"            } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"                String temp \u003d str.substring(7);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"                String description \u003d temp.split(\" \\\\(by: \")[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"                String temp2 \u003d temp.split(\" \\\\(by: \")[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"                String by \u003d temp2.substring(0, temp2.length() - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"                LocalDate date \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"                result.add(new Deadline(description, date.toString()));","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"                String temp \u003d str.substring(7);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"                String description \u003d temp.split(\" \\\\(at: \")[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"                String temp2 \u003d temp.split(\" \\\\(at: \")[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"                String at \u003d temp2.substring(0, temp2.length() - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"                LocalDate date \u003d LocalDate.parse(at, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"                result.add(new Event(description, date.toString()));","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"        this.tasks \u003d result;","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"     * A method to output a Numbered List, to be printed when the list command is given.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The output List, which contains a numbering system.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"    public String displayList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"alvinjiang1"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"alvinjiang1"},"content":"            if (this.tasks.get(i) \u003d\u003d null) break;","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"alvinjiang1"},"content":"            result +\u003d i + 1 + \". \" + this.tasks.get(i) + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"alvinjiang1"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"alvinjiang1"},"content":"     * A method to a List represented as a String, which can then be stored in the File","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The output List, which does not contain a numbering system.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"alvinjiang1"},"content":"    public String getList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"alvinjiang1"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"alvinjiang1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"alvinjiang1"},"content":"            if (tasks.get(i) \u003d\u003d null) break;","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"alvinjiang1"},"content":"            result +\u003d tasks.get(i).toString() + \"\\n\" ;","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"alvinjiang1"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"alvinjiang1"},"content":"     * A method to mark a specific task in the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"alvinjiang1"},"content":"     * @param i The index of the Task to be marked.","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"alvinjiang1"},"content":"     * @return String the resulting String after the Task has been marked.","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"alvinjiang1"},"content":"    public String markTask(int i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"alvinjiang1"},"content":"        if (i \u003e\u003d 100) return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"alvinjiang1"},"content":"        if (this.tasks.get(i) \u003d\u003d null) return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"alvinjiang1"},"content":"        this.tasks.get(i).doTask();","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"alvinjiang1"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"alvinjiang1"},"content":"                + \"  \" + this.tasks.get(i);","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"alvinjiang1"},"content":"     * A method to unmark a specific task in the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"alvinjiang1"},"content":"     * @param i The index of the Task to be unmarked.","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"alvinjiang1"},"content":"     * @return String the resulting String after the Task has been unmarked.","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"alvinjiang1"},"content":"    public String unmarkTask(int i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"alvinjiang1"},"content":"        if (i \u003e\u003d 100) return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"alvinjiang1"},"content":"        if (this.tasks.get(i) \u003d\u003d null) return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"alvinjiang1"},"content":"        this.tasks.get(i).undoTask();","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"alvinjiang1"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":104,"author":{"gitId":"alvinjiang1"},"content":"                + \"  \" + this.tasks.get(i);","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"alvinjiang1"},"content":"     * A method to delete a specific task in the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"alvinjiang1"},"content":"     * @param i The index of the Task to be deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"alvinjiang1"},"content":"     * @return String the resulting String after the Task has been deleted.","lastModifiedDate":"2022-09-02"},{"lineNumber":112,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"alvinjiang1"},"content":"    public String deleteTask(int i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":114,"author":{"gitId":"alvinjiang1"},"content":"        if (i \u003e\u003d 100) return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"alvinjiang1"},"content":"        if (this.tasks.get(i) \u003d\u003d null) return null;","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"alvinjiang1"},"content":"        Task t \u003d this.tasks.get(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"alvinjiang1"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"alvinjiang1"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"alvinjiang1"},"content":"                + \"  \" + t + \"\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"alvinjiang1"},"content":"                + \"Now you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"alvinjiang1"},"content":"     * A method to add Tasks into the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"alvinjiang1"},"content":"     * @param t The Task to be added into the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"alvinjiang1"},"content":"     * @return String the resulting String after the Task has been added.","lastModifiedDate":"2022-09-02"},{"lineNumber":128,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"alvinjiang1"},"content":"    public String addTask(Task t) {","lastModifiedDate":"2022-09-02"},{"lineNumber":130,"author":{"gitId":"alvinjiang1"},"content":"        return t.printAndStoreTask(this.tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":131,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":134,"author":{"gitId":"alvinjiang1"},"content":"     * A method to find Tasks from within the TaskList.","lastModifiedDate":"2022-09-02"},{"lineNumber":135,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":136,"author":{"gitId":"alvinjiang1"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2022-09-02"},{"lineNumber":137,"author":{"gitId":"alvinjiang1"},"content":"     * @return String the resulting String displayed when the Task is found,","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"alvinjiang1"},"content":"     * or it does not exist.","lastModifiedDate":"2022-09-02"},{"lineNumber":139,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":140,"author":{"gitId":"alvinjiang1"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"alvinjiang1"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"alvinjiang1"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"alvinjiang1"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"alvinjiang1"},"content":"            if (this.tasks.get(i).match(keyword)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"alvinjiang1"},"content":"                result +\u003d counter + \". \" + this.tasks.get(i) + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"alvinjiang1"},"content":"                counter++;","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"alvinjiang1"},"content":"        if (result.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"alvinjiang1"},"content":"            return \"Sorry! None of the tasks match \" + \"\\\"\" + keyword + \"\\\"\";","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"alvinjiang1"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"alvinjiang1"},"content":"            return \"Here are the matching tasks in your list:\\n\" + result;","lastModifiedDate":"2022-09-02"},{"lineNumber":153,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"alvinjiang1"},"content":"     * A method to check if the timing of an event clashes with that of another.","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"alvinjiang1"},"content":"     * @param dateTime The String containing the date and time that an event is at.","lastModifiedDate":"2022-09-08"},{"lineNumber":160,"author":{"gitId":"alvinjiang1"},"content":"     * @throws DukeException Thrown when there is a clash between the dates of the Events.","lastModifiedDate":"2022-09-08"},{"lineNumber":161,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":162,"author":{"gitId":"alvinjiang1"},"content":"    public void checkClash(String dateTime) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":163,"author":{"gitId":"alvinjiang1"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":164,"author":{"gitId":"alvinjiang1"},"content":"            if (t.sameTime(dateTime)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":165,"author":{"gitId":"alvinjiang1"},"content":"                throw new DukeException(\"Sorry, there is a clash in the Events!\");","lastModifiedDate":"2022-09-08"},{"lineNumber":166,"author":{"gitId":"alvinjiang1"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":167,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":168,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":169,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":170,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"alvinjiang1":170}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":" * Todo implements the type of Task that contains","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":" * the description of a certain Task to be completed.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":" * @author Alvin Jiang Min Jun","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":" * @version v0.1","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"     * Todo constructor that creates an instance of a Todo object.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"     * @param description The description for the task that needs to be completed.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"     * A method to check if the given dateTime is equal to that of the Todo object.","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"     * @param at The dateTime to check against.","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"     * @return boolean Whether the dateTimes are equal.","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"    public boolean sameTime(String at) {","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"alvinjiang1"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"alvinjiang1"},"content":"     * A method which adds a task to the given taskList input.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"alvinjiang1"},"content":"     * @param taskList The taskList before a Todo Task is added.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The String displayed when after the Todo Task is added.","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"alvinjiang1"},"content":"    public String printAndStoreTask(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"alvinjiang1"},"content":"        taskList.add(this);","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"alvinjiang1"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"alvinjiang1"},"content":"                + \"  \" + this + \"\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"alvinjiang1"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"alvinjiang1"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"alvinjiang1"},"content":"     * The toString method for the Todo class.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"alvinjiang1"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"alvinjiang1"},"content":"     * @return String The String format of the Todo Object.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"alvinjiang1"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"alvinjiang1"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"alvinjiang1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"alvinjiang1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"alvinjiang1":57}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"    public void executeCommandTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e(List.of(\"[T][ ] wake up\",","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"                \"[D][ ] homework (by: Aug 24 2022)\",","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"                \"[E][ ] lab (at: Jul 30 2023)\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"        String desiredOutput \u003d \"[T][X] wake up\\n\" +","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"                \"[E][ ] lab (at: Jul 30 2023)\\n\" +","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"                \"[D][ ] leetcode (by: Mar 11 2022)\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"        Parser p \u003d new Parser(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"            p.executeCommand(\"delete\", \"delete 2\");","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"            p.executeCommand(\"deadline\", \"deadline leetcode /by 2022-03-11\");","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"            String result \u003d p.executeCommand(\"mark\", \"mark 1\");","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"alvinjiang1"},"content":"            assertEquals(desiredOutput, result);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"alvinjiang1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"alvinjiang1"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"alvinjiang1"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"alvinjiang1":30}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"alvinjiang1"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"alvinjiang1"},"content":"    public void displayListTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"alvinjiang1"},"content":"        TaskList t \u003d new TaskList(new ArrayList\u003c\u003e(List.of(\"[T][ ] wake up\",","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"alvinjiang1"},"content":"                \"[D][ ] homework (by: Aug 24 2022)\",","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"alvinjiang1"},"content":"                \"[E][ ] lab (at: Jul 30 2023)\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"alvinjiang1"},"content":"        String desiredOutput \u003d \"1. [T][ ] wake up\\n\" +","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"                \"2. [D][ ] homework (by: Aug 24 2022)\\n\" +","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"alvinjiang1"},"content":"                \"3. [E][ ] lab (at: Jul 30 2023)\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"alvinjiang1"},"content":"        assertEquals(desiredOutput, t.displayList());","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"alvinjiang1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"alvinjiang1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"alvinjiang1"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"alvinjiang1":23}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"[T][ ] wake up","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"[D][ ] sleep (by: Mar 25 2022)","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"[E][ ] do tutorial (at: Dec 05 2017)","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"[T][ ] wake up","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"[D][ ] sleep (by: Mar 25 2022)","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"[E][ ] do tutorial (at: Dec 05 2017)","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"alvinjiang1":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvinjiang1"},"content":"todo wake up","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"alvinjiang1"},"content":"deadline sleep /by 2022-03-25","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"alvinjiang1"},"content":"event do tutorial /at 2017-12-05","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"alvinjiang1"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"alvinjiang1"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"alvinjiang1"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"alvinjiang1"},"content":"delete 1","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"alvinjiang1"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"alvinjiang1"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"alvinjiang1"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"alvinjiang1":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"alvinjiang1"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alvinjiang1":1,"-":20}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chloeelim":21,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.command.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * Main class of Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    private static Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    private static Ui ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     * Constructs a duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    public Duke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        storage \u003d new Storage(\"data\", \"duke.txt\");","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"        tasks \u003d new TaskList(storage.retrieveFile());","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    public String greet() {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"Hello, I\u0027m Duke! %s What can I do for you?\", tasks.numberOfTasks());","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    public static Response reply(String userInput) {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"            Command cmd \u003d Parser.parse(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"            String message \u003d cmd.execute(tasks, storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"            if (cmd instanceof duke.command.ExitCommand) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"                return new Response(ResponseType.QUIT, message);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"                return new Response(ResponseType.STANDARD, message);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"            return new Response(ResponseType.ERROR, e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chloeelim":42,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Main;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":14}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * Deals with loading and saving data to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    private File directory;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private String filepath;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * Constructs a storage to be managed at the specified file location.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * @param directoryPath The path of the directory containing the file","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     * @param filename The filename of the file to save the data to","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    public Storage(String directoryPath, String filename) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"        this.directory \u003d new File(directoryPath);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        this.filepath \u003d directoryPath + \"/\" + filename;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     * Retrieves the file the storage saves the data to","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @return The file that the storage saves the data to","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    public File retrieveFile() {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        return new File(this.filepath);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     * Writes and saves the file based on the data input.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"     * @param fileData The contents of the file to be saved","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the file could not be saved","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"    public void writeToFile(String fileData) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"        if (!this.directory.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"            this.directory.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"            FileWriter fw \u003d new FileWriter(this.filepath);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"            fw.write(fileData);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(\"Duke could not create a file to save your tasks :(\");","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(String.format(\"Duke had some trouble saving your file: %s\", e.getMessage()));","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":58}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    private static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    public Ui() {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public String readUserInput() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     * Formats Duke\u0027s messages by adding horizontal line dividers and indentation.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * @param str Duke\u0027s message to be printed out","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    public static void prettyPrint(String str) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"        String[] messages \u003d str.split(\"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        for (String message : messages) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"            System.out.println(\"\\t  \" + message);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * Greets the user upon the start of the duke program.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"     * @param numberOfTasks The number of tasks in the task list initially","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    public static void greet(String numberOfTasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        String welcomeMessage \u003d String.join(\"\\n\", logo,","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"                String.format(\"Hello, I\u0027m Duke! %s\", numberOfTasks),","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"        prettyPrint(welcomeMessage);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":50}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":" * Represents a command that adds a specific task type to a specified task list based on","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * the user\u0027s input upon its execution.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    private TaskType taskType;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private String userInput;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * Constructs an AddTaskCommand that will add the task to specified","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     * task list upon execution. Supports only to-do, deadline, and event tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     * @param userInput The command input by the user","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    public AddTaskCommand(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        if (userInput.matches(\"(?i)^(todo)(.*)\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"            this.taskType \u003d TaskType.TODO;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"(?i)^(deadline)(.*)\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"            this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"(?i)^(event)(.*)\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"            this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * Runs the command and stores the specified task (to-do, event, deadline) into the linked list,","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     * provided the respective task formats are properly followed.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list the task is to be added to","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the command is not properly formatted, or lacks information","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"        Task addedTask \u003d this.taskType.validateCommand(this.userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        return tasks.addTask(addedTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":47}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" * Represents an executable duke command.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":12}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" * Represents a command that deletes a specified task from the specified task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * Constructs a DeleteTaskCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param taskNumber The task number of the task in the task list to be deleted (1-indexed)","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    public DeleteTaskCommand(int taskNumber) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * Deletes the task associated to the task number from the specified task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list the task is to be deleted to","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the task is invalid (eg: does not exist, or is not a positive number)","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        return tasks.deleteTask(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":33}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" * Represents a command that exits the duke program.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     * Executes the ExitCommand, displays the farewell message and saves the specified task list","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     * to the hard disk with the specified Storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list to be saved to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the file could not be saved to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        storage.writeToFile(tasks.toSaveFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":24}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" * Represents a command to search the specified task list for tasks containing","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" * that specified keyword","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    private String keyword;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     * Constructs a FindTaskCommand","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     * @param keyword Search query to filter task list against","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * Executes a FindTaskCommand by filtering the task list for the keyword and displaying the result.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list to search in","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        TaskList filtered \u003d tasks.filter((Task t) -\u003e t.toString().contains(this.keyword));","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        String filteredTasks \u003d filtered.stringify();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        if (filteredTasks.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"            return \"Duke can\u0027t find any matching tasks in your list.\";","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"            return (\"Here are the matching tasks in your list:\\n\" + filteredTasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"chloeelim":40}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * Represents a command that lists out all the tasks of the specified task list","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     * Executes the ListTasksCommand and displays all the tasks in the specified task list in a list.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list whose tasks are to be listed","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"        return tasks.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":20}},{"path":"src/main/java/duke/command/MarkTaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" * Represents a command that marks a specified task as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"public class MarkTaskDoneCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * Constructs a MarkTaskDoneCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param taskNumber The task number of the completed task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    public MarkTaskDoneCommand(int taskNumber) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * Executes the MarkTaskDoneCommand, marks the task with the associated task","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * number in the specified task list as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list which the task belongs to","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the task number is invalid (eg: Task does not exist/ task number is not positive)","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        return tasks.markTaskDone(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":34}},{"path":"src/main/java/duke/command/MarkTaskNotDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" * Represents a command that marks a specified task as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"public class MarkTaskNotDoneCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * Constructs a MarkTaskNotDOneCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param taskNumber The task number of the completed task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    public MarkTaskNotDoneCommand(int taskNumber) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * Executes the MarkTaskNotDoneCommand, marks the task with the associated task","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * number in the specified task list as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list which the task belongs to","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the task number is invalid (eg: Task does not exist/ task number is not positive)","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        return tasks.markTaskNotDone(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":34}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":" * Parsers user inputs of the duke program.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"     * Parses user input, identifying the command to run and returns that command.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     * @param userInput The command string the user has submitted","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     * @return A command based on the user\u0027s input","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the user input is invalid and a command can\u0027t be instantiated","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"mark \\\\d+\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"            return new MarkTaskDoneCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"unmark \\\\d+\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"            return new MarkTaskNotDoneCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"delete \\\\d+\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"            return new DeleteTaskCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"find .+\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"            return new FindTaskCommand(userInput.substring(5));","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"((?i)^(todo)(.*))|((?i)^(deadline)(.*))|((?i)^(event)(.*))\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"            return new AddTaskCommand(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(\"Hm...Duke doesn\u0027t understand what that means :(\");","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":38}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":" * Exception class representing exceptions specific to Duke.","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"     * @param errorMessage The specified error message","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":14}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":63}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"            scene.getStylesheets().add(getClass().getResource(\"/style/style.css\").toExternalForm());","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            Platform.setImplicitExit(false);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"            EventHandler \u003cWindowEvent\u003e windowCloseHandler \u003d new EventHandler\u003cWindowEvent\u003e() {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"                @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"                public void handle(WindowEvent event) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"                    if (fxmlLoader.\u003cMainWindow\u003egetController().isStillRunning()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"                        Alert alert \u003d new Alert(Alert.AlertType.CONFIRMATION,","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"                                \"Close without saving? Use command \u0027bye\u0027 to save your tasks.\",","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"                                ButtonType.CANCEL, ButtonType.YES);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"                        alert.setTitle(\"Quit application\");","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"                        alert.initOwner(stage.getOwner());","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"                        Optional\u003cButtonType\u003e res \u003d alert.showAndWait();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"                        if (res.isPresent() \u0026\u0026 res.get().equals(ButtonType.CANCEL)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"                            event.consume();","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"                        }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"            };","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"            stage.setOnCloseRequest(windowCloseHandler);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":55}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    public void setDuke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.greet(), dukeImage));","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    public boolean isStillRunning() {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        return !userInput.isDisabled();","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        Response response \u003d duke.reply(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"                DialogBox.getDukeDialog(response.getResponseMessage(), dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"        if (response.getResponseType() \u003d\u003d ResponseType.QUIT) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":63}},{"path":"src/main/java/duke/gui/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"public class Response {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"    private ResponseType responseType;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"    private String message;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"    public Response(ResponseType responseType, String responseMessage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"        this.responseType \u003d responseType;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"        message \u003d responseMessage;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    public ResponseType getResponseType() {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        return responseType;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public String getResponseMessage() {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        return message;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":19}},{"path":"src/main/java/duke/gui/ResponseType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"public enum ResponseType {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"    STANDARD, QUIT, ERROR;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * A deadline is a task that needs to be done before a specific date/time.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    protected java.time.LocalDateTime dueDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param dueDate The due date of the deadlined task","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * Constructs a deadline task with a specified completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * @param dueDate The due date of the deadlined task","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * @param completion Whether the Deadline task has been completed","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    public Deadline(String description, LocalDateTime dueDate, boolean completion) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        super(description, completion);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     * Parses the Deadline into a savable string format, ready to be written to the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     * @return Savable string representation of the Deadline Task","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"D | %s | %s | %s\", this.isDone ? \"Y\" : \"N\",","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"                this.description.replace(\"|\", \"\\\\|\"),","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"                this.dueDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the deadline task, prefixed with a [D],","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"     * followed by the deadline status, and the deadline description.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the deadline task","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"                this.dueDate.format(DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy HH:mm\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * An event is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    protected LocalDateTime eventStartDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    protected LocalDateTime eventEndDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * Constructs an event task.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the event task","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     * @param eventStartDatetime The start datetime of the event","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * @param eventEndDatetime The end datetime of the event","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    public Event(String description, LocalDateTime eventStartDatetime, LocalDateTime eventEndDatetime) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        this.eventStartDatetime \u003d eventStartDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        this.eventEndDatetime \u003d eventEndDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * Constructs an event task with a specified completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the event task","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     * @param eventStartDatetime The start datetime of the event","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @param eventEndDatetime The end datetime of the event","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * @param completion Whether the event task is done or not","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    public Event(String description, LocalDateTime eventStartDatetime,","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"                 LocalDateTime eventEndDatetime, boolean completion) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        super(description, completion);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        this.eventStartDatetime \u003d eventStartDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        this.eventEndDatetime \u003d eventEndDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     * Parses the Event into a savable string format, ready to be written to the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     * @return Savable string representation of the Deadline Task","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"E | %s | %s | %s | %s\", isDone ? \"Y\" : \"N\",","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"                description.replace(\"|\", \"\\\\|\"),","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"                eventStartDatetime, eventEndDatetime);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the event task, prefixed with a [E],","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"     * followed by the event status, and the event description and start to end time.","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the event task","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[E]%s (at: %s to %s)\", super.toString(),","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"                eventStartDatetime.format(DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy HH:mm\")),","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"                eventEndDatetime.format(DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy HH:mm\")));","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":64}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" * An abstract class representing a task (which has a description, and completion status).","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     * Constructs a task, whose completion status is initially set to","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     * not done upon initialisation.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * @param description The task description","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * Constructs a task, whose completion status is initially set to the specified completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * @param description The task description","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * @param completed Whether the task has been marked done.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    public Task(String description, boolean completed) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d completed;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * Returns the status icon of the task, completed tasks","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     * are represented with an \u0027X\u0027.","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * @return An icon representing the completion status of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"    public void markTaskAsUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the task, indicating","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"     * the completion status of the task, followed by the task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":67}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":" * A task list is used to store tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"public class TaskList {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    private LinkedList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        this.tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * Constructs a task list from a saved file.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * @param savedTasks The file the tasks are to be loaded from","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    public TaskList(File savedTasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        this.tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        LinkedList\u003cString\u003e unparsableTasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"            Scanner sc \u003d new Scanner(savedTasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"                String ln \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"                    // try to parse the saved task","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"                    TaskType savedTask \u003d TaskType.readSavedTaskType(ln.charAt(0));","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"                    this.tasks.add(savedTask.parseSavedFormat(ln));","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"                    // could not parse this task, ignore it and raise it as an error later","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"                    unparsableTasks.add(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"            System.out.println(\"You have no saved tasks.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"        if (!unparsableTasks.isEmpty()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"            String unparsableTasksList \u003d String.join(\"\\n\", unparsableTasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"            System.out.println(String.format(\"Could not parse saved tasks:\\n %s\", unparsableTasksList));","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"     * Returns the display message of the number of tasks in the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"     * @return The display String representation of the number of tasks in the task list","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"    public String numberOfTasks() {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"        int numTasks \u003d this.tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"            return \"Your task list looks empty, add some tasks to get started!\";","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"            // TODO pluralise properly","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"            return String.format(\"You currently have %d tasks in your list.\", numTasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"     * Checks that the specified task is a task that exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number of the task to be verified","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"     * @return True if the task exists, false otherwise","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"    public boolean isValidTask(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"        boolean isValid \u003d i \u003e 0 \u0026\u0026 i \u003c\u003d tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"        if (!isValid) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(\"Hm... Duke can\u0027t find this task.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"        return true;","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"     * Marks the specified task number as done, if it exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number to be marked as done","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"    public String markTaskDone(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"        return (String.format(\"Nice! I\u0027ve marked this task as done:\\n %s\", task));","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"     * Marks the specified task number as not done, if it exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number to be marked as not done","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException An exception is thrown when the specified task does not exist","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"    public String markTaskNotDone(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"        task.markTaskAsUndone();","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"        return (String.format(\"OK, I\u0027ve marked this task as not done yet:\\n %s\", task));","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"chloeelim"},"content":"     * Adds a specified task to the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"chloeelim"},"content":"     * @param task The task to be added to the task list","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of task completion, displays task added and number","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"chloeelim"},"content":"     *         of tasks in the task list","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"chloeelim"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"chloeelim"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"chloeelim"},"content":"        return (String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"chloeelim"},"content":"                + \"  %s\\nNow you have %d tasks in the list.\", task, tasks.size()));","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"chloeelim"},"content":"     * Deletes a specified task from the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number of the task to be deleted from the task list","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of the task deletion, displays task removed and","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"chloeelim"},"content":"     *         the number of remaining tasks in the task list","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException Exception thrown when the specified task does not exist","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"chloeelim"},"content":"    public String deleteTask(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.remove(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"chloeelim"},"content":"        return (String.format(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"chloeelim"},"content":"                + \"  %s\\nNow you have %d tasks in the list.\", task, tasks.size()));","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"chloeelim"},"content":"     * Filters the task list and returns a new task list containing only elements","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"chloeelim"},"content":"     * that fulfil the specified condition.","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"chloeelim"},"content":"     * @param pred Condition to test the task elements against","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"chloeelim"},"content":"     * @return A new task list containing only elements that fulfil the specified condition","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"chloeelim"},"content":"    public TaskList filter(Function\u003cTask, Boolean\u003e pred) {","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"chloeelim"},"content":"        TaskList filtered \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"chloeelim"},"content":"            if (pred.apply(task)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"chloeelim"},"content":"                filtered.addTask(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"chloeelim"},"content":"        return filtered;","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"chloeelim"},"content":"     * Parses the task list into a string format ready to be saved to the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"chloeelim"},"content":"     * @return A savable string representation of the task list","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"chloeelim"},"content":"        String formatted \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"chloeelim"},"content":"            formatted +\u003d task.toSaveFormat() + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"chloeelim"},"content":"        return formatted;","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"chloeelim"},"content":"     * Stringifies the task list without printing any information.","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the task list","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"chloeelim"},"content":"    public String stringify() {","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"chloeelim"},"content":"        String taskList \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"chloeelim"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"chloeelim"},"content":"            count++;","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"chloeelim"},"content":"            taskList +\u003d String.format(\"\\n%d. %s\", count, task);","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"chloeelim"},"content":"        return (count \u003d\u003d 0 ? taskList : taskList.substring(1));","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":183,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":184,"author":{"gitId":"chloeelim"},"content":"     * Lists all the tasks entered thus far by the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":185,"author":{"gitId":"chloeelim"},"content":"     * Will print \u0027No tasks\u0027 if no tasks are found.","lastModifiedDate":"2022-08-24"},{"lineNumber":186,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":187,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":188,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":189,"author":{"gitId":"chloeelim"},"content":"        String taskList \u003d stringify();","lastModifiedDate":"2022-08-24"},{"lineNumber":190,"author":{"gitId":"chloeelim"},"content":"        return (taskList.equals(\"\") ? \"No tasks\" : \"Here are the tasks in your list:\\n\" + taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":191,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":192,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"chloeelim":192}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * Enums for the possible tasks Duke can handle.","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     * A to do task, which only has a description and no tied date/ time.","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    TODO {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        public ToDo validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"            if (cmd.matches(\"(?i)^todo\\\\s.+\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"                return new ToDo(cmd.substring(5));","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Hm... Duke\u0027s confused. Are you trying to create a todo?\"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"                        + \"\\nMake sure you follow the format: todo [description].\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"                        + \"The description of a todo cannot be empty!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        public ToDo parseSavedFormat(String savedFormat) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"                String[] savedData \u003d TaskType.parseFormatArray(savedFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"                boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"                String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"                return new ToDo(description, status);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"                // task was saved in the wrong format for some reason","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Could not parse saved todo: \" + savedFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     * An event task, which has a description and start/end datetime.","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    EVENT {","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        public Event validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"            if (cmd.matches(\"(?i)^event\\\\s.+\\\\s/(at)\\\\s.+\\\\s/(to)\\\\s.+\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"                String[] sp \u003d cmd.substring(6).split(\"\\\\s/((at)|(to))\\\\s\", 3);","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime startDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime endDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"                // attempt to parse the input start datetime","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"                    startDatetime \u003d LocalDate.parse(sp[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"                    try {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"                        startDatetime \u003d LocalDateTime.parse(sp[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"                    } catch (DateTimeParseException err) {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"                        throw new DukeException(String.format(\"Unknown date format %s!\", sp[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"                // attempt to parse the input end datetime","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"                    endDatetime \u003d LocalDate.parse(sp[2], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"                    try {","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"                        endDatetime \u003d LocalDateTime.parse(sp[2], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"                    } catch (DateTimeParseException err) {","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"                        throw new DukeException(String.format(\"Unknown date format %s!\", sp[2]));","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"                // ensures that the start and end datetime is valid (start cannot be after end)","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"                if (startDatetime.isAfter(endDatetime)) {","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"                    String errorMessage \u003d String.format(\"Event start datetime %s cannot be after end datetime %s\",","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"                                                        startDatetime, endDatetime);","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"                    throw new DukeException(errorMessage);","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"                return new Event(sp[0], startDatetime, endDatetime);","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Hm... Duke\u0027s confused. Are you trying to create an event?\"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"                        + \"\\nMake sure you follow the format: event [description] /at [event start datetime DD/MM/YYYY\"","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"                        + \" (optional: HH:MM)] /to [event end datetime DD/MM/YYYY (optional: HH:MM)]\");","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"        public Event parseSavedFormat(String savedFormat) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"                String[] savedData \u003d TaskType.parseFormatArray(savedFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"                boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"                String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime startDatetime \u003d LocalDateTime.parse(savedData[2]);","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime endDatetime \u003d LocalDateTime.parse(savedData[3]);","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"                return new Event(description, startDatetime, endDatetime, status);","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"                // task was saved in the wrong format for some reason","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Could not parse saved event: \" + savedFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"     * A deadline task, which has a description and needs to be done before a specific date/time.","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"    DEADLINE {","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"chloeelim"},"content":"        public Deadline validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"chloeelim"},"content":"            if (cmd.matches(\"(?i)^deadline\\\\s.+\\\\s/(by)\\\\s.+\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"chloeelim"},"content":"                String[] sp \u003d cmd.substring(9).split(\"/(by)\\\\s\", 2);","lastModifiedDate":"2022-09-01"},{"lineNumber":113,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime datetime;","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"chloeelim"},"content":"                    datetime \u003d LocalDate.parse(sp[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"chloeelim"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"chloeelim"},"content":"                    try {","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"chloeelim"},"content":"                        datetime \u003d LocalDateTime.parse(sp[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"chloeelim"},"content":"                    } catch (DateTimeParseException err) {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"chloeelim"},"content":"                        throw new DukeException(\"Unknown date format!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"chloeelim"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"chloeelim"},"content":"                return new Deadline(sp[0], datetime);","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Hm... Duke\u0027s confused. Are you trying to create a deadline?\"","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"chloeelim"},"content":"                        + \"\\nMake sure you follow the format: deadline [description] /by [deadline]\");","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"chloeelim"},"content":"        public Deadline parseSavedFormat(String savedFormat) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"chloeelim"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"chloeelim"},"content":"                String[] savedData \u003d TaskType.parseFormatArray(savedFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"chloeelim"},"content":"                boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"chloeelim"},"content":"                String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime datetime \u003d LocalDateTime.parse(savedData[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"chloeelim"},"content":"                return new Deadline(description, datetime, status);","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"chloeelim"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":139,"author":{"gitId":"chloeelim"},"content":"                // task was saved in the wrong format for some reason","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Could not parse saved deadline: \" + savedFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":142,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"chloeelim"},"content":"    };","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":146,"author":{"gitId":"chloeelim"},"content":"     * Takes in a user\u0027s command and validates that it is a valid command (follows the","lastModifiedDate":"2022-08-18"},{"lineNumber":147,"author":{"gitId":"chloeelim"},"content":"     * required format) based on the TaskType.","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"chloeelim"},"content":"     * @param cmd The user\u0027s command","lastModifiedDate":"2022-08-18"},{"lineNumber":150,"author":{"gitId":"chloeelim"},"content":"     * @return The task created by the command, provided the command is valid","lastModifiedDate":"2022-08-18"},{"lineNumber":151,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException Exception thrown when the provided command is invalid.","lastModifiedDate":"2022-08-18"},{"lineNumber":152,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"chloeelim"},"content":"    public abstract Task validateCommand(String cmd) throws DukeException;","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"chloeelim"},"content":"    public abstract Task parseSavedFormat(String savedFormat) throws DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":156,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"chloeelim"},"content":"     * Returns the TaskType represented by the specified character.","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"chloeelim"},"content":"     * @param data The character to be parsed into a TaskType","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"chloeelim"},"content":"     * @return The TaskType represented by the given character","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the given character is invalid","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"chloeelim"},"content":"    public static TaskType readSavedTaskType(char data) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"chloeelim"},"content":"        switch (data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"chloeelim"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"chloeelim"},"content":"            return TaskType.TODO;","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"chloeelim"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"chloeelim"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"chloeelim"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"chloeelim"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"chloeelim"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(\"Duke found an unknown data type: \" + data);","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"chloeelim"},"content":"     * Processes the saved data by extracting the deliminators and cleaning escaped characters into an array.","lastModifiedDate":"2022-08-24"},{"lineNumber":179,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"chloeelim"},"content":"     * @param savedFormat A line extracted from the file of saved tasks","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"chloeelim"},"content":"     * @return An array containing the processed data","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":183,"author":{"gitId":"chloeelim"},"content":"    private static String[] parseFormatArray(String savedFormat) {","lastModifiedDate":"2022-08-23"},{"lineNumber":184,"author":{"gitId":"chloeelim"},"content":"        String[] result \u003d savedFormat.substring(4).split(\"\\\\ \\\\|\\\\ \");","lastModifiedDate":"2022-08-23"},{"lineNumber":185,"author":{"gitId":"chloeelim"},"content":"        int len \u003d result.length;","lastModifiedDate":"2022-08-23"},{"lineNumber":186,"author":{"gitId":"chloeelim"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":187,"author":{"gitId":"chloeelim"},"content":"            result[i] \u003d result[i].replace(\"\\\\\\\\|\", \"|\");","lastModifiedDate":"2022-08-23"},{"lineNumber":188,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":189,"author":{"gitId":"chloeelim"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":190,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":191,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"chloeelim":191}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" * A to do task is a task that does not have any date/time attached to it.","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"     * Constructor for a to-do task.","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the to-do task","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    public ToDo(String description, boolean completion) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"        super(description, completion);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * Parses the to-do into a savable string format, ready to be written to the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * @return Savable string representation of the To-Do Task","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"T | %s | %s\", this.isDone ? \"Y\" : \"N\",","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"                this.description.replace(\"|\", \"\\\\|\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the to-do task, prefixed with a [T],","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * followed by the task status, and the task description.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the to-do task","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER_RIGHT\" text\u003d\"Label\" textFill\u003d\"#dedede\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"65.0\" fitWidth\u003d\"65.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #121212;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-4.0\" prefHeight\u003d\"539.0\" prefWidth\u003d\"404.0\" styleClass\u003d\"edge-to-edge\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"542.0\" prefWidth\u003d\"387.0\" style\u003d\"-fx-background-color: #121212;\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"22.0\" layoutY\u003d\"546.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"44.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Give Duke a command\" style\u003d\"-fx-background-color: #202020; -fx-background-radius: 24px; -fx-prompt-text-fill: #3D3D3D; -fx-text-fill: #DEDEDE;\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"            \u003cCursor fx:constant\u003d\"NONE\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"         \u003c/cursor\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets left\u003d\"24.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"      \u003c/TextField\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"344.0\" layoutY\u003d\"545.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"45.0\" prefWidth\u003d\"54.0\" style\u003d\"-fx-background-color: none;\" text\u003d\"→\" textFill\u003d\"#dedede\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            \u003cFont size\u003d\"24.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":35}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    public void accessTask_accessExistentTask_success() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        tasklist.addTask(new ToDo(\"Add JavaDocs\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"        tasklist.addTask(new ToDo(\"Fix Styling\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"        assertEquals(true, tasklist.isValidTask(2));","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    public void accessTask_accessZeroTask_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"            tasklist.addTask(new ToDo(\"Print out lab worksheet\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"            tasklist.isValidTask(0);","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"            assertEquals(\"Hm... Duke can\u0027t find this task.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    public void accessTask_accessInvalidNonexistentTask_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"            tasklist.addTask(new ToDo(\"Buy bread\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"            tasklist.isValidTask(2);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"            assertEquals(\"Hm... Duke can\u0027t find this task.\", e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"chloeelim":39}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    public void instantiateToDoTask_properDescription_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"        ToDo todo \u003d new ToDo(\"read book pages 123-125\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        assertEquals(\"[T][X] read book pages 123-125\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    public void saveStringFormat_withDeliminators_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"        ToDo todo \u003d new ToDo(\"| hello | this \\\\| is a \\\\\\\\| test\");","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        assertEquals(\"T | N | \\\\| hello \\\\| this \\\\\\\\| is a \\\\\\\\\\\\| test\",","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"                todo.toSaveFormat());","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"chloeelim":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"hello","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"deadline test deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"event test event","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"todo hi! this is a to-do task!! 12345 \\(^^)/","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"deadline complete cs2103t ip /by today 17 Aug 23 59","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"event cs2101 lesson /at 18 Aug, Tommorow (12-2PM)","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"bye duke","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":19}}]

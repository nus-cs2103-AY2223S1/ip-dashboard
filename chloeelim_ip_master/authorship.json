[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    implementation \u0027com.google.code.findbugs:jsr305:3.0.2\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chloeelim":23,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.command.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * Main class of Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    private static Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * Constructs a duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    public Duke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        storage \u003d new Storage(\"data\", \"duke.txt\");","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        tasks \u003d new TaskList(storage.retrieveFile());","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * Greets the user upon the start of the program.","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * @return Greeting and task overview string.","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    public String greet() {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"blob blob, it’s bobo the bot; %s \", tasks.numberOfTasks());","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * Replies to a user input by parsing and executing the user command.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"     * @param userInput The user input.","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     * @return A Response from parsing and executing the user input command.","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    public static Response\u003c?\u003e reply(String userInput) {","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"            Command cmd \u003d Parser.parse(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"            Response\u003c?\u003e response \u003d cmd.execute(tasks, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"            return response;","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"            return new Response\u003c\u003e(ResponseType.ERROR, e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chloeelim":46,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Main;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":14}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * Deals with loading and saving data to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    private static final String FILE_NOT_FOUND_ERROR_MESSAGE \u003d \"Duke could not create a file to save your tasks :(\";","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private static final String FILE_SAVE_ERROR \u003d \"Duke had some trouble saving your file: %s\";","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    private final File directory;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    private final String filepath;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * Constructs a storage to be managed at the specified file location.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * @param directoryPath The path of the directory containing the file.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * @param filename The filename of the file to save the data to.","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    public Storage(String directoryPath, String filename) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"        directory \u003d new File(directoryPath);","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        filepath \u003d directoryPath + \"/\" + filename;","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * Retrieves the file the storage saves the data to.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     * @return The file that the storage saves the data to.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    public File retrieveFile() {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        return new File(filepath);","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"     * Writes and saves the file based on the data input.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     * @param fileData The contents of the file to be saved.","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the file could not be saved.","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    public void writeToFile(String fileData) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"            directory.mkdir();","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"            fw.write(fileData);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(FILE_NOT_FOUND_ERROR_MESSAGE);","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(String.format(FILE_SAVE_ERROR, e.getMessage()));","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":60}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" * Represents a command that adds a specific task type to a specified task list based on","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":" * the user\u0027s input upon its execution.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    /** The type of task to be added to the task list */","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    /** The input entered by the user into the command line*/","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    private final String userInput;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * Constructs an AddTaskCommand that will add the task to specified","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * task list upon execution. Supports only to-do, deadline, and event tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    public AddTaskCommand(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        assert userInput.matches(\"((?i)^(todo)(.*))|((?i)^(deadline)(.*))|((?i)^(event)(.*))\")","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"                : \"userInput should match a task regex\";","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        if (userInput.matches(\"(?i)^(todo)(.*)\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            taskType \u003d TaskType.TODO;","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"(?i)^(deadline)(.*)\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"            taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"            // should have regex (?i)^(event)(.*)","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"            taskType \u003d TaskType.EVENT;","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     * Runs the command and stores the specified task (to-do, event, deadline) into the linked list,","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     * provided the respective task formats are properly followed.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list the task is to be added to.","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"     * @return Type task Response containing the added task and an added successfully message.","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the command is not properly formatted, or lacks information.","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"    public Response\u003cTask\u003e execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"        // checks that the user input is correctly formatted for the task type before","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"        // adding it to the task list","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"        Task addedTask \u003d taskType.validateCommand(userInput);","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"        String successMessage \u003d tasks.addTask(addedTask);","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"        return new Response\u003c\u003e(ResponseType.TASK, successMessage, addedTask);","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":58}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" * Represents an executable duke command.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    public abstract Response\u003c?\u003e execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":13}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * Represents a command that deletes a specified task from the specified task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    /** The task number corresponding to the task to be deleted */","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private final int taskNumber;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * Constructs a DeleteTaskCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * @param taskNumber The task number of the task in the task list to be deleted (1-indexed).","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    public DeleteTaskCommand(int taskNumber) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * Deletes the task associated to the task number from the specified task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list the task is to be deleted from.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @return Type task Response containing the deleted task and a deleted successfully message.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the task is invalid (eg: does not exist, or is not a positive number).","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    public Response\u003cTask\u003e execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        Task deletedTask \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        String successMessage \u003d tasks.deleteTask(taskNumber);","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        return new Response\u003c\u003e(ResponseType.TASK, successMessage, deletedTask);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":40}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":" * Represents a command that exits the Duke program.","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    private static final String EXIT_SUCCESS_MESSAGE \u003d \"bye bye~~ blob blob ☆（･∀･)つ ☆\";","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * Executes the ExitCommand, displays the farewell message and saves the specified task list","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     * to the hard disk with the specified Storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list to be saved to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     * @return Type quit Response containing an exit success message.","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the file could not be saved to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    public Response\u003cVoid\u003e execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"        storage.writeToFile(tasks.toSaveFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        return new Response\u003c\u003e(ResponseType.QUIT, EXIT_SUCCESS_MESSAGE);","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":29}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":" * Represents a command to search the specified task list for tasks containing","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * that specified keyword.","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    private static final String MATCHING_TASK_FOUND_SUCCESS_MESSAGE \u003d \"sure thing!\"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"            + \"here are the matching tasks bobo found\";","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    private static final String NO_MATCHING_TASK_ERROR_MESSAGE \u003d \"uh-oh.\"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"            + \"bobo can\u0027t find any matching tasks in your list...\";","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    /** The keyword to be used to search the task list */","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    private final String keyword;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * Constructs a FindTaskCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * @param keyword Search query to filter task list against.","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * Executes a FindTaskCommand by filtering the task list for the keyword and displaying the result.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list to search in.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * @return A Response containing the task list filtered by the specified keyword, with Response","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     *         type list if there are matching tasks, and Response type error if there are no matching","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"     *         tasks found. Also contains a tasks successfully found or no task match error","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     *         response message.","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    public Response\u003cTaskList\u003e execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"        // get a filtered task list containing only tasks that contain the specified keyword","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"        TaskList filtered \u003d tasks.filter((Task t) -\u003e t.toString().contains(keyword));","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"        boolean hasNoMatchingTasks \u003d filtered.size() \u003d\u003d 0;","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        if (hasNoMatchingTasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"            return new Response\u003c\u003e(ResponseType.ERROR, NO_MATCHING_TASK_ERROR_MESSAGE, null);","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"        return new Response\u003c\u003e(ResponseType.LIST, MATCHING_TASK_FOUND_SUCCESS_MESSAGE, filtered);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"chloeelim":50}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" * Represents a command that lists out all the tasks of the specified task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     * Executes the ListTasksCommand and displays all the tasks in the specified task list in a list.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list whose tasks are to be listed.","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     * @return A list type Response containing the user\u0027s entire task list, and an overview message","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     *         of the user\u0027s uncompleted tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    public Response\u003cTaskList\u003e execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        String tasksOverviewMessage \u003d tasks.numberOfTasks();","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        return new Response\u003c\u003e(ResponseType.LIST, tasksOverviewMessage, tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":25}},{"path":"src/main/java/duke/command/MarkTaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * Represents a command that marks a specified task as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"public class MarkTaskDoneCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    /** The task number corresponding to the task to be marked done */","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private final int taskNumber;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * Constructs a MarkTaskDoneCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * @param taskNumber The task number of the completed task.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    public MarkTaskDoneCommand(int taskNumber) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * Executes the MarkTaskDoneCommand, marks the task with the associated task","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * number in the specified task list as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list which the task belongs to.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * @return A task type Response, containing the task, now marked as completed, and a task","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     *         marked successfully message.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the task number is invalid (eg: Task does not exist/ task number","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     *                       is not positive).","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"    public Response\u003cTask\u003e execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"        String successMessage \u003d tasks.markTaskDone(taskNumber);","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        return new Response\u003c\u003e(ResponseType.TASK, successMessage, task);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":43}},{"path":"src/main/java/duke/command/MarkTaskNotDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.gui.Response;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.gui.ResponseType;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":" * Represents a command that marks a specified task as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"public class MarkTaskNotDoneCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    /** The task number corresponding to the task to be marked not done */","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private final int taskNumber;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * Constructs a MarkTaskNotDoneCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * @param taskNumber The task number of the completed task.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    public MarkTaskNotDoneCommand(int taskNumber) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * Executes the MarkTaskNotDoneCommand, marks the task with the associated task","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * number in the specified task list as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     * @param tasks The task list which the task belongs to.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @param storage The storage manager that deals with loading and saving tasks to the hard disk.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * @return A task type Response, containing the task, now marked as not completed, and a task","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     *         marked uncompleted successfully message.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the task number is invalid (eg: Task does not exist/ task number","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     *                       is not positive).","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"    public Response\u003cTask\u003e execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"        String successMessage \u003d tasks.markTaskNotDone(taskNumber);","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        return new Response\u003c\u003e(ResponseType.TASK, successMessage, task);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":43}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":" * Parsers user inputs of the duke program.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    /** Error message for unknown commands */","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    private static final String UNKNOWN_COMMAND_ERROR_MESSAGE \u003d \"hmmm...\"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        + \" bobo doesn\u0027t understand what that means (・へ・；)?\";","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    /** Error message for inputted numbers that could not be parsed to integers */","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    private static final String INVALID_INTEGER_ERROR_MESSAGE \u003d \"yikes! bobo can\u0027t handle this number...\";","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * Parses user input, identifying the command to run and returns that command.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * @param userInput The command string the user has submitted.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     * @return A command based on the user\u0027s input.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the user input is invalid and a command can\u0027t be instantiated.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"mark \\\\d+\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"            int taskNumber \u003d parseInt(userInput.substring(5));","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"            return new MarkTaskDoneCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"unmark \\\\d+\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"            int taskNumber \u003d parseInt(userInput.substring(7));","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"            return new MarkTaskNotDoneCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"delete \\\\d+\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            int taskNumber \u003d parseInt(userInput.substring(7));","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"            return new DeleteTaskCommand(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"find .+\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"            return new FindTaskCommand(userInput.substring(5));","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.matches(\"((?i)^(todo)(.*))|((?i)^(deadline)(.*))|((?i)^(event)(.*))\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"            return new AddTaskCommand(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(UNKNOWN_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    /** Guards against integer overflow */","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    private static int parseInt(String taskNumber) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"            return Integer.parseInt(taskNumber);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(INVALID_INTEGER_ERROR_MESSAGE);","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chloeelim":53}},{"path":"src/main/java/duke/date/DateTimeParse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.date;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import java.util.List;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import java.util.Map;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":" * Custom date time parser to handle more date time formats and natural dates.","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"public class DateTimeParse {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    private static final List\u003cDeliminator\u003e DELIMINATORS \u003d Deliminator.getAllDeliminators();","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    private static final Map\u003cString, String\u003e DATETIME_FORMAT_REGEXPS \u003d initialiseDateTimeFormatMap();","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    private static final String TIME_REGEX \u003d \"(([0-1]?[0-9]|2[0-3]):[0-5][0-9])\";","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * Parses a given date time string into a LocalDateTimeObject. This custom parse datetime","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * method can parse a wider variety of date and date time formats, such as with different","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * deliminators, ordering, and int padding. The parser will try to detect year or day patterns","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     * so that the closest match can be made. However, in instances of ambiguous dates like 10/10/10,","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * the parser will assume a default format of dd/MM/yyyy. Also, if no time is provided, the","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * time will be automatically set to the start of the day.","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     * @param dateTimeString The datetime string to be parsed into a datetime object.","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     * @return The datetime object parsed from the date time string.","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the datetime string could not be parsed due to unsupported or","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     *                       invalid datetime format.","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        for (String regexp : DATETIME_FORMAT_REGEXPS.keySet()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"            if (dateTimeString.toLowerCase().matches(regexp)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"                String dateTimeParseFormat \u003d DATETIME_FORMAT_REGEXPS.get(regexp);","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(dateTimeParseFormat);","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"                    return parseDateTimeWithFormatter(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"                    throw new DukeException(String.format(\"Unknown date format %s!\", dateTimeString));","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        throw new DukeException(String.format(\"Unknown date format %s!\", dateTimeString));","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"    private static Map\u003cString, String\u003e initialiseDateTimeFormatMap() {","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"        Map\u003cString, String\u003e datetimeFormatRegex \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        // regex ordered from most to least specific so that the best match can be taken","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"        // populate all date formats first","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"        getDateFormatRegex(datetimeFormatRegex);","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"        return appendTimeFormats(datetimeFormatRegex);","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"    private static void getDateFormatRegex(Map\u003cString, String\u003e dateFormats) {","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"        DELIMINATORS.forEach(d -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"            NumericalDateFormat numericalDateFormat \u003d new NumericalDateFormat(d);","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"            numericalDateFormat.addNumericalDateFormats(dateFormats);","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"        });","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"    private static LinkedHashMap\u003cString, String\u003e appendTimeFormats(Map\u003cString, String\u003e dateFormats) {","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"        LinkedHashMap\u003cString, String\u003e appendedDateTime \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"        dateFormats.forEach((dateFormatRegex, dateFormatParsed) -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"            String dateTimeRegex \u003d formatDateTimeRegex(dateFormatRegex);","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"            String dateTimeFormatParse \u003d formatParsedDateTime(dateFormatParsed);","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"            dateFormatRegex \u003d encloseRegex(dateFormatRegex);","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"            appendedDateTime.put(dateTimeRegex, dateTimeFormatParse);","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"            appendedDateTime.put(dateFormatRegex, dateFormatParsed);","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"        });","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"        return appendedDateTime;","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"    private static String formatDateTimeRegex(String dateFormatRegex) {","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"        return encloseRegex(dateFormatRegex + \"\\\\s\" + TIME_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"    private static String formatParsedDateTime(String dateFormatParsed) {","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"        return dateFormatParsed + \" HH:mm\";","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"    private static String encloseRegex(String regexExp) {","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"        return \"^\" + regexExp + \"$\";","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"    private static LocalDateTime parseDateTimeWithFormatter(String dateTimeString,","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"                                                            DateTimeFormatter dateTimeFormatter) {","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"            return LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"            return LocalDate.parse(dateTimeString, dateTimeFormatter).atStartOfDay();","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"chloeelim":96}},{"path":"src/main/java/duke/date/Deliminator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.date;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.util.List;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"public enum Deliminator {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"    noDeliminator {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminator() {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"            return \"\";","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminatorRegex() {","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"            return \"\";","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    slashDeliminator {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminator() {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"            return \"/\";","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminatorRegex() {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"            return \"\\\\/\";","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    dashDeliminator {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminator() {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            return \"-\";","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminatorRegex() {","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"            return \"-\";","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    dotDeliminator {","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminator() {","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"            return \".\";","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminatorRegex() {","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"            return \"\\\\.\";","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"    whitespaceDeliminator {","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminator() {","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"            return \" \";","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"        public String getDeliminatorRegex() {","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"            return \"\\\\s\";","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"    };","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"    public abstract String getDeliminator();","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"    public abstract String getDeliminatorRegex();","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"    public static List\u003cDeliminator\u003e getAllDeliminators() {","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"        return List.of(noDeliminator, dashDeliminator, slashDeliminator,","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"                dotDeliminator, whitespaceDeliminator);","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"chloeelim":70}},{"path":"src/main/java/duke/date/NumericalDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.date;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.util.Map;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":" * Handles numerical date formats. Tries to match the string to the closest format by","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * detecting trying to guess if a field is a day, month, or year field. The order","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" * in which these formats are inserted into the linked hashtable is important to ensure","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" * that the closest regex and thus, date format match can be given.","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"public class NumericalDateFormat {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    private static final String FOUR_DIGIT_YEAR_REGEX \u003d \"((19|20)\\\\d{2})\";","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    private static final String TWO_DIGIT_NOT_MONTH_REGEX \u003d \"(1[3-9]|2\\\\d|3[0,1])\";","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    private static final String TWO_DIGIT_MUST_YEAR_REGEX \u003d \"(3[2-9]|[4-9]\\\\d{1})\";","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    private static final String TWO_DIGIT_REGEX \u003d \"(\\\\d{2})\";","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    private static final String ONE_DIGIT_REGEX \u003d \"(\\\\d{1})\";","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    private static final String FOUR_CHAR_YEAR \u003d \"yyyy\";","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    private static final String TWO_CHAR_YEAR \u003d \"yy\";","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    private static final String TWO_CHAR_MONTH \u003d \"MM\";","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    private static final String ONE_CHAR_MONTH \u003d \"M\";","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    private static final String TWO_CHAR_DAY \u003d \"dd\";","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    private static final String ONE_CHAR_DAY \u003d \"d\";","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    private final String regexDeliminator;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    private final String formatDeliminator;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * Returns an instance of the numerical date format handled by the program with","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * the specified deliminator.","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     * @param deliminator The deliminator that separates the date fields.","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    public NumericalDateFormat(Deliminator deliminator) {","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"        regexDeliminator \u003d deliminator.getDeliminatorRegex();","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        formatDeliminator \u003d deliminator.getDeliminator();","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     * Adds the regex and numerical date format pairs handled by","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     * the program into the specified map.","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"     * @param dateFormats The map to insert the regex-date format pairs into.","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"    public void addNumericalDateFormats(Map\u003cString, String\u003e dateFormats) {","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"        add8DigitDateFormat(dateFormats);","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        add6DigitDateFormat(dateFormats);","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        add7DigitDateFormat(dateFormats);","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        add4DigitDateFormat(dateFormats);","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"     * Handles 8 digit numerical dates- assumes that year has 4 digits, month has 2 digits, and","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"     * day has 2 digits.","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"     * @param dateFormats The map to insert the regex-date format pairs into.","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"    private void add8DigitDateFormat(Map\u003cString, String\u003e dateFormats) {","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"        // add yyyy{deliminator}dd{deliminator}MM","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"        String regexYearDayMonth \u003d dateRegexDeliminator(FOUR_DIGIT_YEAR_REGEX,","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"                TWO_DIGIT_NOT_MONTH_REGEX, TWO_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"        String parsedYearDayMonth \u003d dateFormatDeliminator(FOUR_CHAR_YEAR, TWO_CHAR_DAY, TWO_CHAR_MONTH);","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexYearDayMonth, parsedYearDayMonth);","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"        // add yyyy{deliminator}__{deliminator}__ (yyyy{deliminator}MM{deliminator}dd)","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"        String regexYearMonthDay \u003d dateRegexDeliminator(FOUR_DIGIT_YEAR_REGEX, TWO_DIGIT_REGEX,","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"                TWO_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"        String parsedYearMonthDay \u003d dateFormatDeliminator(FOUR_CHAR_YEAR, TWO_CHAR_MONTH, TWO_CHAR_DAY);","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexYearMonthDay, parsedYearMonthDay);","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"        // add MM{deliminator}dd{deliminator}yyyy","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"        String regexMonthDayYear \u003d dateRegexDeliminator(TWO_DIGIT_REGEX, TWO_DIGIT_NOT_MONTH_REGEX,","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"                FOUR_DIGIT_YEAR_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"        String parsedMonthDayYear \u003d dateFormatDeliminator(TWO_CHAR_MONTH, TWO_CHAR_DAY, FOUR_CHAR_YEAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexMonthDayYear, parsedMonthDayYear);","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"        // add default (dd{deliminator}MM{deliminator}yyyy)","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"        String regexDefault \u003d dateRegexDeliminator(TWO_DIGIT_REGEX, TWO_DIGIT_REGEX, FOUR_DIGIT_YEAR_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"        String parsedDefault \u003d dateFormatDeliminator(TWO_CHAR_DAY, TWO_CHAR_MONTH, TWO_CHAR_YEAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexDefault, parsedDefault);","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"     * Handles 6 digit date formats. Assumes that year can be either 2 or 4 digits, while","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"     * month and date can be either 1 or 2 digits.","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"     * @param dateFormats The map to insert the regex-date format pairs into.","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"    private void add6DigitDateFormat(Map\u003cString, String\u003e dateFormats) {","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"        // add yyyy{deliminator}_{deliminator}_ (yyyy{deliminator}M{deliminator}d) [single digit cannot","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"        // differentiate between month and day]","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"        String regexY4MD \u003d dateRegexDeliminator(FOUR_DIGIT_YEAR_REGEX, ONE_DIGIT_REGEX, ONE_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"        String parsedY4MD \u003d dateFormatDeliminator(FOUR_CHAR_YEAR, ONE_CHAR_MONTH, ONE_CHAR_DAY);","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexY4MD, parsedY4MD);","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"        // add _{deliminator}_{deliminator}yyyy (d{deliminator}M{deliminator}yyyy) [single digit cannot","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"        // differentiate between month and day]","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"        String regexDayMonthYear4 \u003d dateRegexDeliminator(ONE_DIGIT_REGEX, ONE_DIGIT_REGEX, FOUR_DIGIT_YEAR_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"        String parsedDayMonthYear4 \u003d dateFormatDeliminator(ONE_CHAR_DAY, ONE_CHAR_MONTH, FOUR_CHAR_YEAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexDayMonthYear4, parsedDayMonthYear4);","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"        // add yy{deliminator}dd{deliminator}MM","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"        String regexYearDayMonth \u003d dateRegexDeliminator(TWO_DIGIT_MUST_YEAR_REGEX,","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"                TWO_DIGIT_NOT_MONTH_REGEX, TWO_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"        String parsedYearDayMonth \u003d dateFormatDeliminator(TWO_CHAR_YEAR, TWO_CHAR_DAY, TWO_CHAR_MONTH);","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexYearDayMonth, parsedYearDayMonth);","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"        // add yy{deliminator}__{deliminator}__ (yy{deliminator}mm{deliminator}dd)","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"        String regexYearMonthDay \u003d dateRegexDeliminator(TWO_DIGIT_MUST_YEAR_REGEX, TWO_DIGIT_REGEX, TWO_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"        String parsedYearMonthDay \u003d dateFormatDeliminator(TWO_CHAR_YEAR, TWO_CHAR_MONTH, TWO_CHAR_DAY);","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexYearMonthDay, parsedYearMonthDay);","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"chloeelim"},"content":"        // add MM{deliminator}dd{deliminator}yy","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"chloeelim"},"content":"        String regexMonthDayYear \u003d dateRegexDeliminator(TWO_DIGIT_REGEX, TWO_DIGIT_NOT_MONTH_REGEX, TWO_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"chloeelim"},"content":"        String parsedMonthDayYear \u003d dateFormatDeliminator(TWO_CHAR_MONTH, TWO_CHAR_DAY, TWO_CHAR_YEAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexMonthDayYear, parsedMonthDayYear);","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"chloeelim"},"content":"        // add default (dd{deliminator}MM{deliminator}yy)","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"chloeelim"},"content":"        String regexDefault \u003d dateRegexDeliminator(TWO_DIGIT_REGEX, TWO_DIGIT_REGEX, TWO_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"chloeelim"},"content":"        String parsedDefault \u003d dateFormatDeliminator(TWO_CHAR_DAY, TWO_CHAR_MONTH, TWO_CHAR_YEAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexDefault, parsedDefault);","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"chloeelim"},"content":"     * Handles 7 digit date formats. Assumes that year must be 4 digits (since there are no","lastModifiedDate":"2022-09-09"},{"lineNumber":124,"author":{"gitId":"chloeelim"},"content":"     * valid days or months with 3 digits).","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"chloeelim"},"content":"     * @param dateFormats The map to insert the regex-date format pairs into.","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"chloeelim"},"content":"    private void add7DigitDateFormat(Map\u003cString, String\u003e dateFormats) {","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"chloeelim"},"content":"        // yyyy{deliminator}dd{deliminator}M (provided dd cannot be a MM)","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"chloeelim"},"content":"        String regexYearDayMonth \u003d dateRegexDeliminator(FOUR_DIGIT_YEAR_REGEX,","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"chloeelim"},"content":"                TWO_DIGIT_NOT_MONTH_REGEX, ONE_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"chloeelim"},"content":"        String parsedYearDayMonth \u003d dateFormatDeliminator(FOUR_CHAR_YEAR, TWO_CHAR_DAY, ONE_CHAR_MONTH);","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexYearDayMonth, parsedYearDayMonth);","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"chloeelim"},"content":"        // else fall back on yyyy{deliminator}mm{deliminator}d (if can\u0027t tell if a mm/d)","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"chloeelim"},"content":"        String regexYearMonthDay \u003d dateRegexDeliminator(FOUR_DIGIT_YEAR_REGEX,","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"chloeelim"},"content":"                TWO_DIGIT_REGEX, ONE_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"chloeelim"},"content":"        String parsedYearDay2Month \u003d dateFormatDeliminator(FOUR_CHAR_YEAR, TWO_CHAR_MONTH, ONE_CHAR_DAY);","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexYearMonthDay, parsedYearDay2Month);","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"chloeelim"},"content":"        // dd{deliminator}m{deliminator}yyyy (provided dd cannot be a mm)","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"chloeelim"},"content":"        String regexDay1MonthYear \u003d dateRegexDeliminator(TWO_DIGIT_NOT_MONTH_REGEX, ONE_DIGIT_REGEX,","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"chloeelim"},"content":"                FOUR_DIGIT_YEAR_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"chloeelim"},"content":"        String parsedDay1MonthYear \u003d dateFormatDeliminator(TWO_CHAR_DAY, ONE_CHAR_MONTH, FOUR_CHAR_YEAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexDay1MonthYear, parsedDay1MonthYear);","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"chloeelim"},"content":"        // else fall back on d{deliminator}mm{deliminator}yyyy (if can\u0027t tell if a d/mm)","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"chloeelim"},"content":"        String regexDay2MonthYear \u003d dateRegexDeliminator(ONE_DIGIT_REGEX, TWO_DIGIT_REGEX, FOUR_DIGIT_YEAR_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":148,"author":{"gitId":"chloeelim"},"content":"        String parsedDay2MonthYear \u003d dateFormatDeliminator(ONE_CHAR_DAY, TWO_CHAR_MONTH, FOUR_CHAR_YEAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":149,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexDay2MonthYear, parsedDay2MonthYear);","lastModifiedDate":"2022-09-09"},{"lineNumber":150,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":151,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"chloeelim"},"content":"     * Handles 4 digit date formats, assumes the year is 2 digits, and the day and month","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"chloeelim"},"content":"     * are both 1 digits each.","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"chloeelim"},"content":"     * @param dateFormats The map to insert the regex-date format pairs into.","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"chloeelim"},"content":"    private void add4DigitDateFormat(Map\u003cString, String\u003e dateFormats) {","lastModifiedDate":"2022-09-09"},{"lineNumber":159,"author":{"gitId":"chloeelim"},"content":"        // yy{deliminator}M{deliminator}d (2 digit assumed to be be year)","lastModifiedDate":"2022-09-09"},{"lineNumber":160,"author":{"gitId":"chloeelim"},"content":"        String regexYearMonthDay \u003d dateRegexDeliminator(TWO_DIGIT_REGEX, ONE_DIGIT_REGEX, ONE_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":161,"author":{"gitId":"chloeelim"},"content":"        String parsedYearMonthDay \u003d dateFormatDeliminator(TWO_CHAR_YEAR, ONE_CHAR_MONTH, ONE_CHAR_DAY);","lastModifiedDate":"2022-09-09"},{"lineNumber":162,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexYearMonthDay, parsedYearMonthDay);","lastModifiedDate":"2022-09-09"},{"lineNumber":163,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":164,"author":{"gitId":"chloeelim"},"content":"        // d{deliminator}M{deliminator}yy (must be year)","lastModifiedDate":"2022-09-09"},{"lineNumber":165,"author":{"gitId":"chloeelim"},"content":"        String regexDayMonthYear \u003d dateRegexDeliminator(ONE_DIGIT_REGEX, ONE_DIGIT_REGEX, TWO_DIGIT_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":166,"author":{"gitId":"chloeelim"},"content":"        String parsedDayMonthYear \u003d dateFormatDeliminator(ONE_CHAR_DAY, ONE_CHAR_MONTH, TWO_CHAR_YEAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":167,"author":{"gitId":"chloeelim"},"content":"        dateFormats.put(regexDayMonthYear, parsedDayMonthYear);","lastModifiedDate":"2022-09-09"},{"lineNumber":168,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":169,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":170,"author":{"gitId":"chloeelim"},"content":"    private String dateRegexDeliminator(String regexField1, String regexField2, String regexField3) {","lastModifiedDate":"2022-09-09"},{"lineNumber":171,"author":{"gitId":"chloeelim"},"content":"        return regexField1 + regexDeliminator + regexField2 + regexDeliminator + regexField3;","lastModifiedDate":"2022-09-09"},{"lineNumber":172,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":173,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":174,"author":{"gitId":"chloeelim"},"content":"    private String dateFormatDeliminator(String dateField1, String dateField2, String dateField3) {","lastModifiedDate":"2022-09-09"},{"lineNumber":175,"author":{"gitId":"chloeelim"},"content":"        return dateField1 + formatDeliminator + dateField2 + formatDeliminator + dateField3;","lastModifiedDate":"2022-09-09"},{"lineNumber":176,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":177,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"chloeelim":177}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.exception;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":" * Exception class representing exceptions specific to Duke.","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"     * @param errorMessage The specified error message","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":14}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    private DialogBox(String text, Image img, String name) {","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(name));","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        return new DialogBox(text, img, \"/view/UserDialogBox.fxml\");","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        return new DialogBox(text, img, \"/view/DukeDialogBox.fxml\");","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":47}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"            scene.getStylesheets().add(getClass().getResource(\"/style/style.css\").toExternalForm());","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            Platform.setImplicitExit(false);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"            EventHandler \u003cWindowEvent\u003e windowCloseHandler \u003d new EventHandler\u003cWindowEvent\u003e() {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"                @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"                public void handle(WindowEvent event) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"                    if (fxmlLoader.\u003cMainWindow\u003egetController().isStillRunning()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"                        Alert alert \u003d new Alert(Alert.AlertType.CONFIRMATION,","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"                                \"Close without saving? Use command \u0027bye\u0027 to save your tasks.\",","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"                                ButtonType.CANCEL, ButtonType.YES);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"                        alert.setTitle(\"Quit application\");","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"                        alert.initOwner(stage.getOwner());","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"                        Optional\u003cButtonType\u003e res \u003d alert.showAndWait();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"                        if (res.isPresent() \u0026\u0026 res.get().equals(ButtonType.CANCEL)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"                            event.consume();","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"                        }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"            };","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"            stage.setOnCloseRequest(windowCloseHandler);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":55}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user icon.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bobo icon.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    private Image studiousDukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bobo studious.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"     * Initialises the MainWindow, called once on the implementing controller when the contents of its","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"     * associated document have been completely loaded.","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        displayPicture.setImage(new Image(this.getClass().getResourceAsStream(\"/images/bobo icon.png\")));","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"    public void setDuke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"        Image boboGreet \u003d new Image(this.getClass().getResourceAsStream(\"/images/bobo greet.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.greet(), boboGreet));","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"    public boolean isStillRunning() {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"        return !userInput.isDisabled();","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"        Response response \u003d duke.reply(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"        ResponseType responseType \u003d response.getResponseType();","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"        if (responseType.equals(ResponseType.LIST) || responseType.equals(ResponseType.TASK)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"            LinkedList\u003cHBox\u003e tasklistItemDialogs \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"            String replyMessage \u003d response.getResponseMessage();","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"            if (responseType.equals(ResponseType.LIST)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"                TaskList tasklist \u003d (TaskList) response.getResponseObject();","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"                tasklistItemDialogs \u003d tasklist.transform((Task t, Integer i) -\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"                        TaskListItemDialog.getTaskListItemDialog(t, i)","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"                );","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"                Task task \u003d (Task) response.getResponseObject();","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"                tasklistItemDialogs.push(TaskListItemDialog.getTaskListItemDialog(task, null));","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"            tasklistItemDialogs.push(DialogBox.getDukeDialog(replyMessage, studiousDukeImage));","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"            tasklistItemDialogs.push(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"            dialogContainer.getChildren().addAll(tasklistItemDialogs);","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"        } else if (responseType.equals(ResponseType.ERROR)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"            // todo","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"            String replyMessage \u003d response.getResponseMessage();","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"                    DialogBox.getDukeDialog(replyMessage, dukeImage)","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"            );","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"            String replyMessage \u003d response.getResponseMessage();","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"                    DialogBox.getDukeDialog(replyMessage, dukeImage)","lastModifiedDate":"2022-09-04"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"            );","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"        if (response.getResponseType() \u003d\u003d ResponseType.QUIT) {","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":107}},{"path":"src/main/java/duke/gui/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" * Class representing a Duke response object. Response objects have a","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" * response type, which indicate the type of response, and a response message.","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":" * They may also contain response objects.","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" *","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" * @param \u003cT\u003e The type of the object contained by the response object.","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"public class Response\u003cT\u003e {","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    private final ResponseType responseType;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    private T responseObject;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    private final String responseMessage;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * Constructs a response object of the specified type, with the specified message.","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * @param responseType The type of response.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     * @param responseMessage The response message.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    public Response(ResponseType responseType, String responseMessage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        this.responseType \u003d responseType;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        this.responseMessage \u003d responseMessage;","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * Constructs a response object of the specified type, with the specified message, which","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * contains the specified response object.","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     * @param responseType The type of response.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @param responseMessage The response message.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * @param responseObject The object contained by the response.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    public Response(ResponseType responseType, String responseMessage, T responseObject) {","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        this.responseType \u003d responseType;","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        this.responseMessage \u003d responseMessage;","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        this.responseObject \u003d responseObject;","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"     * Gets the response type of the response.","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     * @return The response type of the response.","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    public ResponseType getResponseType() {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"        return responseType;","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"     * Gets the response message of the response.","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"     * @return The response message of the response.","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"    public String getResponseMessage() {","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"        return responseMessage;","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"     * Gets the response object contained by the response.","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"     * @return The response object contained by the response.","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"    public T getResponseObject() {","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"        return responseObject;","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":66}},{"path":"src/main/java/duke/gui/ResponseType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" * Enum for the possible response types.","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"public enum ResponseType {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"    LIST, TASK, QUIT, ERROR","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":8}},{"path":"src/main/java/duke/gui/TaskListItemDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.gui;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import static java.util.Objects.nonNull;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import javax.annotation.Nullable;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":" * This control represents a dialog box for a task list item.","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"public class TaskListItemDialog extends HBox {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    private HBox root;","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    private Rectangle taskStatus;","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    private ImageView checkbox;","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    private Label taskDescription;","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    private Label badge;","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    private ImageView dateIcon;","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    private Label date;","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"    private HBox dateSection;","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    private VBox taskDetails;","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"    private Label taskNumber;","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"    private Image emptyCheckbox \u003d new Image(this.getClass().getResourceAsStream(\"/images/not done task.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"    private Image checkedCheckbox \u003d new Image(this.getClass().getResourceAsStream(\"/images/done task.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"    private Image alarmClock \u003d new Image(this.getClass().getResourceAsStream(\"/images/alarm clock icon.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"    private Image calendar \u003d new Image(this.getClass().getResourceAsStream(\"/images/calendar icon.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"    private TaskListItemDialog(TaskType taskType, String description, boolean completed,","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"                               Task task, @Nullable Integer taskNumber) {","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/TaskListItem.fxml\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"        switch (taskType) {","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"        case TODO:","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"            badge.setText(\"todo\");","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"            badge.setStyle(\"-fx-background-color: rgb(142, 176, 206); -fx-background-radius: 8;\");","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"            dateSection.setVisible(false);","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"            dateSection.setMinHeight(0);","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"            dateSection.setMaxHeight(0);","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"            taskDetails.setTranslateY(5);","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"            break;","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"            Deadline dl \u003d (Deadline) task;","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"            badge.setText(\"deadline\");","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"            badge.setStyle(\"-fx-background-color: rgb(221, 165, 115); -fx-background-radius: 8;\");","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"            badge.setMinWidth(56);","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"            dateIcon.setImage(alarmClock);","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"            date.setText(dl.getDueDatetimeString());","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"            date.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"            dateSection.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"            break;","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"        case EVENT:","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"            badge.setText(\"event\");","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"            badge.setStyle(\"-fx-background-color: rgb(189, 206, 142); -fx-background-radius: 8;\");","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"            dateIcon.setImage(calendar);","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"            date.setText(e.getStartDatetimeString() + \" to \" + e.getEndDatetimeString());","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"            date.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-09-04"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"            dateSection.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"            break;","lastModifiedDate":"2022-09-04"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"        default:","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"        if (completed) {","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"            checkbox.setFitWidth(19);","lastModifiedDate":"2022-09-04"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"            checkbox.setImage(checkedCheckbox);","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"            taskStatus.setFill(Color.rgb(0, 145, 124));","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"            checkbox.setImage(emptyCheckbox);","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"            taskStatus.setFill(Color.rgb(255, 200, 61));","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"        if (nonNull(taskNumber)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"            this.taskNumber.setText(taskNumber + \". \");","lastModifiedDate":"2022-09-04"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"            this.taskNumber.widthProperty().addListener((obs, oldVal, newVal) -\u003e {","lastModifiedDate":"2022-09-04"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"                dateSection.setTranslateX(newVal.doubleValue() + 10);","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"chloeelim"},"content":"            });","lastModifiedDate":"2022-09-04"},{"lineNumber":110,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"chloeelim"},"content":"            this.taskNumber.setVisible(false);","lastModifiedDate":"2022-09-04"},{"lineNumber":112,"author":{"gitId":"chloeelim"},"content":"            this.taskDescription.setTranslateX(-20);","lastModifiedDate":"2022-09-04"},{"lineNumber":113,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":114,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":115,"author":{"gitId":"chloeelim"},"content":"        taskDescription.setText(description);","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"chloeelim"},"content":"        taskDescription.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-09-04"},{"lineNumber":117,"author":{"gitId":"chloeelim"},"content":"        taskDetails.heightProperty().addListener((obs, oldVal, newVal) -\u003e {","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"chloeelim"},"content":"            taskStatus.setHeight(newVal.intValue());","lastModifiedDate":"2022-09-04"},{"lineNumber":119,"author":{"gitId":"chloeelim"},"content":"            root.setMinHeight(10 + newVal.intValue());","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"chloeelim"},"content":"        });","lastModifiedDate":"2022-09-04"},{"lineNumber":121,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":122,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"chloeelim"},"content":"    public static TaskListItemDialog getTaskListItemDialog(Task task, @Nullable Integer taskNumber) {","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"chloeelim"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2022-09-04"},{"lineNumber":125,"author":{"gitId":"chloeelim"},"content":"        boolean completed \u003d task.isCompleted();","lastModifiedDate":"2022-09-04"},{"lineNumber":126,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":127,"author":{"gitId":"chloeelim"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2022-09-04"},{"lineNumber":128,"author":{"gitId":"chloeelim"},"content":"            return new TaskListItemDialog(TaskType.TODO, description, completed, task, taskNumber);","lastModifiedDate":"2022-09-04"},{"lineNumber":129,"author":{"gitId":"chloeelim"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-09-04"},{"lineNumber":130,"author":{"gitId":"chloeelim"},"content":"            return new TaskListItemDialog(TaskType.EVENT, description, completed, task, taskNumber);","lastModifiedDate":"2022-09-04"},{"lineNumber":131,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":132,"author":{"gitId":"chloeelim"},"content":"            return new TaskListItemDialog(TaskType.DEADLINE, description, completed, task, taskNumber);","lastModifiedDate":"2022-09-04"},{"lineNumber":133,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":134,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":135,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"chloeelim":135}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * A deadline is a task that needs to be done before a specific date/time.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    /** The due date associated with the deadline task, by which the task should be completed */","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    protected java.time.LocalDateTime dueDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     * @param dueDate The due date of the deadlined task.","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     * Constructs a deadline task with a specified completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * @param dueDate The due date of the deadlined task.","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     * @param completion Whether the Deadline task has been completed.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    public Deadline(String description, LocalDateTime dueDate, boolean completion) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"        super(description, completion);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"     * Returns a String representation of the due date datetime object associated to the","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     * deadline task in EEEE, dd MMM yyyy HH:mm format.","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of the due date in EEEE, dd MMM yyyy HH:mm format.","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    public String getDueDatetimeString() {","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"        DateTimeFormatter dayDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy HH:mm\");","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"        return dueDate.format(dayDateTimeFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"     * Parses the Deadline into a savable string format, ready to be written to the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"     * @return Savable string representation of the Deadline Task.","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"        String savableCompletion \u003d this.isDone ? \"Y\" : \"N\";","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"        // escape instances of deliminator in task description","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"        String escapedDescription \u003d description.replace(\"|\", \"\\\\|\");","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"D | %s | %s | %s\", savableCompletion, escapedDescription, dueDate);","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the deadline task, prefixed with a [D],","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"     * followed by the deadline status, and the deadline description.","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"        String completionDescription \u003d super.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"        String formattedDueDate \u003d getDueDatetimeString();","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[D]%s (by: %s)\", completionDescription, formattedDueDate);","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * An event is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    protected LocalDateTime eventStartDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    protected LocalDateTime eventEndDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * Constructs an event task.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     * @param eventStartDatetime The start datetime of the event.","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     * @param eventEndDatetime The end datetime of the event.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    public Event(String description, LocalDateTime eventStartDatetime, LocalDateTime eventEndDatetime) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        this.eventStartDatetime \u003d eventStartDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        this.eventEndDatetime \u003d eventEndDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * Constructs an event task with a specified completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     * @param eventStartDatetime The start datetime of the event.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @param eventEndDatetime The end datetime of the event.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * @param completion Whether the event task is done or not.","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    public Event(String description, LocalDateTime eventStartDatetime,","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"                 LocalDateTime eventEndDatetime, boolean completion) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        super(description, completion);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        this.eventStartDatetime \u003d eventStartDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        this.eventEndDatetime \u003d eventEndDatetime;","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     * Returns a String representation of the start datetime object associated to the","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     * event task in EEEE, dd MMM yyyy HH:mm format.","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of the start datetime in EEEE, dd MMM yyyy HH:mm format.","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"    public String getStartDatetimeString() {","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"        DateTimeFormatter dayDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy HH:mm\");","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"        return eventStartDatetime.format(dayDateTimeFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"     * Returns a String representation of the end datetime object associated to the","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"     * event task in EEEE, dd MMM yyyy HH:mm format.","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of the end datetime in EEEE, dd MMM yyyy HH:mm format.","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"    public String getEndDatetimeString() {","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"        DateTimeFormatter dayDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy HH:mm\");","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"        return eventEndDatetime.format(dayDateTimeFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"     * Parses the Event into a savable string format, ready to be written to the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"     * @return Savable string representation of the Deadline Task.","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"        String savableCompletion \u003d isDone ? \"Y\" : \"N\";","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"        // escape instances of deliminator in task description","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"        String escapedDescription \u003d description.replace(\"|\", \"\\\\|\");","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"E | %s | %s | %s | %s\", savableCompletion, escapedDescription,","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"                eventStartDatetime, eventEndDatetime);","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the event task, prefixed with a [E],","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"     * followed by the event status, and the event description and start to end time formatted","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"     * in EEEE, dd MMM yyyy HH:mm format.","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"        String completionDescription \u003d super.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"        String formattedStartDateTime \u003d getStartDatetimeString();","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"        String formattedEndDateTime \u003d getEndDatetimeString();","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[E]%s (at: %s to %s)\", completionDescription,","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"                formattedStartDateTime, formattedEndDateTime);","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":92}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" * An abstract class representing a task (which has a description, and completion status).","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     * Constructs a task, whose completion status is initially set to","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     * not done upon initialisation.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * @param description The task description.","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * Constructs a task, whose completion status is initially set to the specified completion status.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * @param description The task description.","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * @param completed Whether the task has been marked done.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    public Task(String description, boolean completed) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d completed;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     * Returns the status icon of the task, completed tasks","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     * are represented with an \u0027X\u0027.","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * @return An icon representing the completion status of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     * @return The description of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        return description;","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"     * Returns whether the task has been completed.","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"     * @return Whether the task has been completed.","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"        return isDone;","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"    public void markTaskAsUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the task, indicating","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"     * the completion status of the task, followed by the task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":85}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":" * A task list is used to store tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"public class TaskList {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    private LinkedList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     * Constructs a task list from a saved file.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"     * @param savedTasks The file the tasks are to be loaded from.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    public TaskList(File savedTasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        // list of description of error messages generated for unparsable tasks","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        LinkedList\u003cString\u003e unparsableTasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"            Scanner sc \u003d new Scanner(savedTasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"                String ln \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"                    // try to parse the saved task","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"                    char rawTaskType \u003d ln.charAt(0);","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"                    TaskType savedTaskType \u003d TaskType.readSavedTaskType(rawTaskType);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"                    tasks.add(savedTaskType.parseSavedFormat(ln));","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"                    // could not parse this task, ignore it and raise it as an error later","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"                    unparsableTasks.add(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"            System.out.println(\"You have no saved tasks.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"        if (!unparsableTasks.isEmpty()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"            String unparsableTasksList \u003d String.join(\"\\n\", unparsableTasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"            String errorLog \u003d String.format(\"Could not parse saved tasks:\\n %s\", unparsableTasksList);","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"            System.out.println(errorLog);","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"    public int size() {","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"        return tasks.size();","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"     * Returns the display message of the number of tasks in the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"     * @return The display String representation of the number of tasks in the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"    public String numberOfTasks() {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"        int numTasks \u003d size();","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"            return \"your task list looks empty, add some tasks to get started!（･∀･)つ\";","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"            // TODO pluralise properly","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"            int numUncompletedTasks \u003d filter((Task t) -\u003e !t.isDone).size();","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"            if (numUncompletedTasks \u003d\u003d 0) {","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"                return \"yay, you checked everything off your list! ヽ(˘◡˘)ノ\";","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"                return String.format(\"you have %d uncompleted tasks- it\u0027s time to get to work! *（･v･)つ *\",","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"                        numUncompletedTasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"     * Checks that the specified task is a task that exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number of the task to be verified.","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"     * @return True if the task exists.","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the task number does not exist.","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"    public boolean isValidTask(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"        boolean isValid \u003d i \u003e 0 \u0026\u0026 i \u003c\u003d tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"        if (!isValid) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(\"uhoh... bobo can\u0027t find this task (・へ・)??\");","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"        return true;","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"     * Marks the specified task number as done, if it exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number to be marked as done.","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"chloeelim"},"content":"    public String markTaskDone(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"chloeelim"},"content":"        assert i \u003e 0 : \"Task number should be more than 0\";","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"chloeelim"},"content":"        assert i \u003c\u003d size() : \"Task should exist\";","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"chloeelim"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"chloeelim"},"content":"        assert task.isCompleted() : \"Task should be marked as done\";","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"chloeelim"},"content":"        return \"awesome!! bobo marked this task as done ~(˘▾˘~)\";","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"chloeelim"},"content":"     * Marks the specified task number as not done, if it exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number to be marked as not done.","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException An exception is thrown when the specified task does not exist.","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"chloeelim"},"content":"    public String markTaskNotDone(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"chloeelim"},"content":"        assert i \u003e 0 : \"Task number should be more than 0\";","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"chloeelim"},"content":"        assert i \u003c\u003d size() : \"Task should exist\";","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"chloeelim"},"content":"        task.markTaskAsUndone();","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"chloeelim"},"content":"        return \"alright-y, bobo marked this task as not done yet  (・◡・)ゝ\";","lastModifiedDate":"2022-09-04"},{"lineNumber":135,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"chloeelim"},"content":"     * Adds a specified task to the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":140,"author":{"gitId":"chloeelim"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of task completion, displays task added and number","lastModifiedDate":"2022-08-18"},{"lineNumber":142,"author":{"gitId":"chloeelim"},"content":"     *         of tasks in the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":143,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"chloeelim"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"chloeelim"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":146,"author":{"gitId":"chloeelim"},"content":"        String taskAddedSuccessfullyMessage \u003d String.format(\"aye aye! bobo added this task ( ･o･)\"","lastModifiedDate":"2022-09-08"},{"lineNumber":147,"author":{"gitId":"chloeelim"},"content":"                + \" you now have %d items in your list!\", tasks.size());","lastModifiedDate":"2022-09-08"},{"lineNumber":148,"author":{"gitId":"chloeelim"},"content":"        return taskAddedSuccessfullyMessage;","lastModifiedDate":"2022-09-08"},{"lineNumber":149,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":150,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":151,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":152,"author":{"gitId":"chloeelim"},"content":"     * Deletes a specified task from the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number of the task to be deleted from the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of the task deletion, displays task removed and","lastModifiedDate":"2022-08-18"},{"lineNumber":156,"author":{"gitId":"chloeelim"},"content":"     *         the number of remaining tasks in the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException Exception thrown when the specified task does not exist.","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"chloeelim"},"content":"    public String deleteTask(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"chloeelim"},"content":"        assert i \u003e 0 : \"Task number should be more than 0\";","lastModifiedDate":"2022-09-08"},{"lineNumber":162,"author":{"gitId":"chloeelim"},"content":"        assert i \u003c\u003d size() : \"Task should exist\";","lastModifiedDate":"2022-09-08"},{"lineNumber":163,"author":{"gitId":"chloeelim"},"content":"        tasks.remove(i - 1);","lastModifiedDate":"2022-09-04"},{"lineNumber":164,"author":{"gitId":"chloeelim"},"content":"        String taskDeletedSuccessfully \u003d String.format(\"okayy! bobo removed this task (´･ω･`)┐\"","lastModifiedDate":"2022-09-08"},{"lineNumber":165,"author":{"gitId":"chloeelim"},"content":"                + \" you now have %d tasks in your list\", tasks.size());","lastModifiedDate":"2022-09-08"},{"lineNumber":166,"author":{"gitId":"chloeelim"},"content":"        return taskDeletedSuccessfully;","lastModifiedDate":"2022-09-08"},{"lineNumber":167,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"chloeelim"},"content":"     * Filters the task list and returns a new task list containing only elements","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"chloeelim"},"content":"     * that fulfil the specified condition.","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"chloeelim"},"content":"     * @param pred Condition to test the task elements against.","lastModifiedDate":"2022-09-08"},{"lineNumber":174,"author":{"gitId":"chloeelim"},"content":"     * @return A new task list containing only elements that fulfil the specified condition.","lastModifiedDate":"2022-09-08"},{"lineNumber":175,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"chloeelim"},"content":"    public TaskList filter(Predicate\u003cTask\u003e pred) {","lastModifiedDate":"2022-09-09"},{"lineNumber":177,"author":{"gitId":"chloeelim"},"content":"        TaskList filtered \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":179,"author":{"gitId":"chloeelim"},"content":"            if (pred.test(task)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":180,"author":{"gitId":"chloeelim"},"content":"                filtered.addTask(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":183,"author":{"gitId":"chloeelim"},"content":"        return filtered;","lastModifiedDate":"2022-08-24"},{"lineNumber":184,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":185,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":186,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":187,"author":{"gitId":"chloeelim"},"content":"     * Transforms the task list into a linked list containing elements of type T","lastModifiedDate":"2022-09-08"},{"lineNumber":188,"author":{"gitId":"chloeelim"},"content":"     * by applying the given unary function to every task in the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":189,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":190,"author":{"gitId":"chloeelim"},"content":"     * @param func The unary function to apply to every task in the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":191,"author":{"gitId":"chloeelim"},"content":"     * @param \u003cT\u003e The type of object the unary function transforms each task into.","lastModifiedDate":"2022-09-08"},{"lineNumber":192,"author":{"gitId":"chloeelim"},"content":"     * @return A linked list of type T obtained by applying the specified function to","lastModifiedDate":"2022-09-08"},{"lineNumber":193,"author":{"gitId":"chloeelim"},"content":"     *         each task of the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":194,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":195,"author":{"gitId":"chloeelim"},"content":"    public \u003cT\u003e LinkedList\u003cT\u003e transform(Function\u003cTask, T\u003e func) {","lastModifiedDate":"2022-09-04"},{"lineNumber":196,"author":{"gitId":"chloeelim"},"content":"        return tasks.stream().map(func).collect(Collectors.toCollection(LinkedList::new));","lastModifiedDate":"2022-09-09"},{"lineNumber":197,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":198,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":199,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":200,"author":{"gitId":"chloeelim"},"content":"     * Transforms the task list into a linked list containing elements of type T","lastModifiedDate":"2022-09-08"},{"lineNumber":201,"author":{"gitId":"chloeelim"},"content":"     * by applying the given bi-function to every task and its corresponding","lastModifiedDate":"2022-09-08"},{"lineNumber":202,"author":{"gitId":"chloeelim"},"content":"     * task number in the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":203,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":204,"author":{"gitId":"chloeelim"},"content":"     * @param func The bi-function to apply to every task in the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":205,"author":{"gitId":"chloeelim"},"content":"     * @param \u003cT\u003e The type of object the bi-function transforms each task and its task number into.","lastModifiedDate":"2022-09-08"},{"lineNumber":206,"author":{"gitId":"chloeelim"},"content":"     * @return A linked list of type T obtained by applying the specified function to","lastModifiedDate":"2022-09-08"},{"lineNumber":207,"author":{"gitId":"chloeelim"},"content":"     *         each task, and its corresponding task number, of the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":208,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":209,"author":{"gitId":"chloeelim"},"content":"    public \u003cT\u003e LinkedList\u003cT\u003e transform(BiFunction\u003cTask, Integer, T\u003e func) {","lastModifiedDate":"2022-09-04"},{"lineNumber":210,"author":{"gitId":"chloeelim"},"content":"        LinkedList\u003cT\u003e transformed \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-09-04"},{"lineNumber":211,"author":{"gitId":"chloeelim"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":212,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-04"},{"lineNumber":213,"author":{"gitId":"chloeelim"},"content":"            transformed.add(func.apply(task, taskNumber));","lastModifiedDate":"2022-09-08"},{"lineNumber":214,"author":{"gitId":"chloeelim"},"content":"            taskNumber++;","lastModifiedDate":"2022-09-08"},{"lineNumber":215,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":216,"author":{"gitId":"chloeelim"},"content":"        return transformed;","lastModifiedDate":"2022-09-04"},{"lineNumber":217,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":218,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":219,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":220,"author":{"gitId":"chloeelim"},"content":"     * Returns the task in the task list corresponding to the specified task number.","lastModifiedDate":"2022-09-08"},{"lineNumber":221,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":222,"author":{"gitId":"chloeelim"},"content":"     * @param taskNumber The task number of the task to be retrieved from the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":223,"author":{"gitId":"chloeelim"},"content":"     * @return The task in the task list corresponding to the specified task number.","lastModifiedDate":"2022-09-08"},{"lineNumber":224,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the specified task number is invalid.","lastModifiedDate":"2022-09-08"},{"lineNumber":225,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":226,"author":{"gitId":"chloeelim"},"content":"    public Task getTask(int taskNumber) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":227,"author":{"gitId":"chloeelim"},"content":"        isValidTask(taskNumber);","lastModifiedDate":"2022-09-04"},{"lineNumber":228,"author":{"gitId":"chloeelim"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2022-09-04"},{"lineNumber":229,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":230,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":231,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":232,"author":{"gitId":"chloeelim"},"content":"     * Parses the task list into a string format ready to be saved to the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":233,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":234,"author":{"gitId":"chloeelim"},"content":"     * @return A savable string representation of the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":235,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":236,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":237,"author":{"gitId":"chloeelim"},"content":"        String formatted \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":238,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":239,"author":{"gitId":"chloeelim"},"content":"            formatted +\u003d task.toSaveFormat() + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":240,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":241,"author":{"gitId":"chloeelim"},"content":"        return formatted;","lastModifiedDate":"2022-08-23"},{"lineNumber":242,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":243,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":244,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":245,"author":{"gitId":"chloeelim"},"content":"     * Stringifies the task list without printing any information.","lastModifiedDate":"2022-08-24"},{"lineNumber":246,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":247,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":248,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":249,"author":{"gitId":"chloeelim"},"content":"    public String stringify() {","lastModifiedDate":"2022-08-24"},{"lineNumber":250,"author":{"gitId":"chloeelim"},"content":"        String taskList \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":251,"author":{"gitId":"chloeelim"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-08-23"},{"lineNumber":252,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":253,"author":{"gitId":"chloeelim"},"content":"            count++;","lastModifiedDate":"2022-08-23"},{"lineNumber":254,"author":{"gitId":"chloeelim"},"content":"            taskList +\u003d String.format(\"\\n%d. %s\", count, task);","lastModifiedDate":"2022-08-23"},{"lineNumber":255,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":256,"author":{"gitId":"chloeelim"},"content":"        return (count \u003d\u003d 0 ? taskList : taskList.substring(1));","lastModifiedDate":"2022-08-24"},{"lineNumber":257,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":258,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":259,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":260,"author":{"gitId":"chloeelim"},"content":"     * Lists all the tasks entered thus far by the user with a description header.","lastModifiedDate":"2022-09-08"},{"lineNumber":261,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":262,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":263,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":264,"author":{"gitId":"chloeelim"},"content":"        String taskList \u003d stringify();","lastModifiedDate":"2022-08-24"},{"lineNumber":265,"author":{"gitId":"chloeelim"},"content":"        return (taskList.equals(\"\") ? \"No tasks\" : \"Here are the tasks in your list:\\n\" + taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":266,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":267,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"chloeelim":267}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.date.DateTimeParse;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":" * Enums for the possible tasks Duke can handle.","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     * A to do task, which only has a description and no tied date/ time.","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    TODO {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        public ToDo validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"            if (cmd.matches(\"(?i)^todo\\\\s.+\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"                return new ToDo(cmd.substring(5));","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"hm... bobo\u0027s confused. Are you trying to create a todo?\"","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"                        + \"\\nMake sure you follow the format: todo [description].\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"                        + \"The description of a todo cannot be empty!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        /**","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"         * {@inheritDoc}","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"         */","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        public ToDo parseSavedFormat(String savedFormat) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"                String[] savedData \u003d TaskType.parseFormatArray(savedFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"                boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"                String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"                return new ToDo(description, status);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"                // task was saved in the wrong format for some reason","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Could not parse saved todo: \" + savedFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     * An event task, which has a description and start/end datetime.","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    EVENT {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"        public Event validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"            // guard clause against wrongly formatted commands","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"            if (!cmd.matches(\"(?i)^event\\\\s.+\\\\s/(at)\\\\s.+\\\\s/(to)\\\\s.+\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"hm... bobo\u0027s confused. Are you trying to create an event?\"","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"                        + \"\\nMake sure you follow the format: event [description] /at\"","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"                        + \" [event start datetime] /to [event end datetime]\");","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"            String[] sp \u003d cmd.substring(6).split(\"\\\\s/((at)|(to))\\\\s\", 3);","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"            String description \u003d sp[0];","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"            String startDate \u003d sp[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"            String endDate \u003d sp[2];","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"            LocalDateTime startDatetime \u003d DateTimeParse.parseDateTime(startDate);","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"            LocalDateTime endDatetime \u003d DateTimeParse.parseDateTime(endDate);","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"            // ensures that the start and end datetime is valid (start cannot be after end)","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"            if (startDatetime.isAfter(endDatetime)) {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"                String errorMessage \u003d String.format(END_BEFORE_START_ERROR_MESSAGE,","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"                        startDatetime, endDatetime);","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"            return new Event(description, startDatetime, endDatetime);","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"        /**","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"         * {@inheritDoc}","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"         */","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"        public Event parseSavedFormat(String savedFormat) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"                String[] savedData \u003d TaskType.parseFormatArray(savedFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"                boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"                String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime startDatetime \u003d LocalDateTime.parse(savedData[2]);","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime endDatetime \u003d LocalDateTime.parse(savedData[3]);","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"                return new Event(description, startDatetime, endDatetime, status);","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"                // task was saved in the wrong format for some reason","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Could not parse saved event: \" + savedFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"     * A deadline task, which has a description and needs to be done before a specific date/time.","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"    DEADLINE {","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"        public Deadline validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"            // guard clause against improperly formatted deadline commands","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"            if (!cmd.matches(\"(?i)^deadline\\\\s.+\\\\s/(by)\\\\s.+\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"hm... bobo\u0027s confused. Are you trying to create a deadline?\"","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"                        + \"\\nMake sure you follow the format: deadline [description] /by [deadline]\");","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"            String[] sp \u003d cmd.substring(9).split(\"/(by)\\\\s\", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"            String description \u003d sp[0];","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"            String dateTimeString \u003d sp[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"            LocalDateTime datetime \u003d DateTimeParse.parseDateTime(dateTimeString);","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"            return new Deadline(description, datetime);","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"chloeelim"},"content":"        /**","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"chloeelim"},"content":"         * {@inheritDoc}","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"chloeelim"},"content":"         */","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"chloeelim"},"content":"        public Deadline parseSavedFormat(String savedFormat) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"chloeelim"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"chloeelim"},"content":"                String[] savedData \u003d TaskType.parseFormatArray(savedFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"chloeelim"},"content":"                boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"chloeelim"},"content":"                String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime datetime \u003d LocalDateTime.parse(savedData[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"chloeelim"},"content":"                return new Deadline(description, datetime, status);","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"chloeelim"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"chloeelim"},"content":"                // task was saved in the wrong format for some reason","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Could not parse saved deadline: \" + savedFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"chloeelim"},"content":"    };","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"chloeelim"},"content":"    private static final String END_BEFORE_START_ERROR_MESSAGE \u003d \"Start datetime %s cannot be after end datetime %s\";","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"chloeelim"},"content":"     * Takes in a user\u0027s command and validates that it is a valid command (follows the","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"chloeelim"},"content":"     * required format) based on the TaskType.","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"chloeelim"},"content":"     * @param cmd The user\u0027s command.","lastModifiedDate":"2022-09-08"},{"lineNumber":135,"author":{"gitId":"chloeelim"},"content":"     * @return The task created by the command, provided the command is valid.","lastModifiedDate":"2022-09-08"},{"lineNumber":136,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException Exception thrown when the provided command is invalid.","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"chloeelim"},"content":"    public abstract Task validateCommand(String cmd) throws DukeException;","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"chloeelim"},"content":"     * Parses the saved format of a task into its corresponding task object.","lastModifiedDate":"2022-09-08"},{"lineNumber":142,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":143,"author":{"gitId":"chloeelim"},"content":"     * @param savedFormat The formatted task string from the saved file.","lastModifiedDate":"2022-09-08"},{"lineNumber":144,"author":{"gitId":"chloeelim"},"content":"     * @return The corresponding task parsed from the saved data.","lastModifiedDate":"2022-09-08"},{"lineNumber":145,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the string could not be parsed into a task.","lastModifiedDate":"2022-09-08"},{"lineNumber":146,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":147,"author":{"gitId":"chloeelim"},"content":"    public abstract Task parseSavedFormat(String savedFormat) throws DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":148,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"chloeelim"},"content":"     * Returns the TaskType represented by the specified character.","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"chloeelim"},"content":"     * @param data The character to be parsed into a TaskType.","lastModifiedDate":"2022-09-08"},{"lineNumber":153,"author":{"gitId":"chloeelim"},"content":"     * @return The TaskType represented by the given character.","lastModifiedDate":"2022-09-08"},{"lineNumber":154,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException If the given character is invalid.","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"chloeelim"},"content":"    public static TaskType readSavedTaskType(char data) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"chloeelim"},"content":"        switch (data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"chloeelim"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"chloeelim"},"content":"            return TaskType.TODO;","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"chloeelim"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"chloeelim"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"chloeelim"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"chloeelim"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"chloeelim"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"chloeelim"},"content":"            throw new DukeException(\"Duke found an unknown data type: \" + data);","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"chloeelim"},"content":"     * Processes the saved data by extracting the deliminators and cleaning escaped characters into an array.","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"chloeelim"},"content":"     * @param savedFormat A line extracted from the file of saved tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":173,"author":{"gitId":"chloeelim"},"content":"     * @return An array containing the processed data.","lastModifiedDate":"2022-09-08"},{"lineNumber":174,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"chloeelim"},"content":"    private static String[] parseFormatArray(String savedFormat) {","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"chloeelim"},"content":"        String[] result \u003d savedFormat.substring(4).split(\" \\\\| \");","lastModifiedDate":"2022-09-08"},{"lineNumber":177,"author":{"gitId":"chloeelim"},"content":"        int len \u003d result.length;","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"chloeelim"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"chloeelim"},"content":"            result[i] \u003d result[i].replace(\"\\\\\\\\|\", \"|\");","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":181,"author":{"gitId":"chloeelim"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":182,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":183,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"chloeelim":183}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" * A to do task is a task that does not have any date/time attached to it.","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"     * Constructs a to-do task with the specified description.","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"     * Constructs a to-do task with the specified description and completion status.","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"     * @param completion Whether the to-do task has been completed.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    public ToDo(String description, boolean completion) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        super(description, completion);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     * Parses the to-do into a savable string format, ready to be written to the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     * @return Savable string representation of the To-Do Task.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"        String completionStatus \u003d this.isDone ? \"Y\" : \"N\";","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        // escape instances of deliminator in task description","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        String escapedDescription \u003d this.description.replace(\"|\", \"\\\\|\");","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"T | %s | %s\", completionStatus, escapedDescription);","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the to-do task, prefixed with a [T],","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"     * followed by the task status, and the task description.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":49}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"\u003cfx:root alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" minWidth\u003d\"70.0\" style\u003d\"-fx-background-color: #3F82EF; -fx-background-radius: 24;\" text\u003d\"Label\" textFill\u003d\"#dedede\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"            \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"chloeelim":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #121212;\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-4.0\" prefHeight\u003d\"491.0\" prefWidth\u003d\"404.0\" styleClass\u003d\"edge-to-edge\" translateY\u003d\"51.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"492.0\" prefWidth\u003d\"387.0\" style\u003d\"-fx-background-color: #121212;\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"22.0\" layoutY\u003d\"546.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"44.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Give Duke a command\" style\u003d\"-fx-background-color: #202020; -fx-background-radius: 24px; -fx-prompt-text-fill: #3D3D3D; -fx-text-fill: #DEDEDE;\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"            \u003cCursor fx:constant\u003d\"NONE\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"         \u003c/cursor\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets left\u003d\"24.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"      \u003c/TextField\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"344.0\" layoutY\u003d\"545.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"45.0\" prefWidth\u003d\"54.0\" style\u003d\"-fx-background-color: none;\" text\u003d\"→\" textFill\u003d\"#dedede\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"            \u003cFont size\u003d\"24.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        \u003cRectangle fx:id\u003d\"rectangleColor\" arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"#171717\" height\u003d\"51.0\" stroke\u003d\"#171717\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" width\u003d\"400.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" layoutX\u003d\"129.0\" layoutY\u003d\"10.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER_RIGHT\" layoutX\u003d\"171.0\" layoutY\u003d\"17.0\" text\u003d\"bobo the bot\" textFill\u003d\"#dedede\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"            \u003cFont name\u003d\"SansSerif Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":44}},{"path":"src/main/resources/view/TaskListItem.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"\u003cfx:root fx:id\u003d\"root\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"400.0\" minHeight\u003d\"60.0\" prefHeight\u003d\"63.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        \u003cRectangle fx:id\u003d\"taskStatus\" fill\u003d\"#171717\" height\u003d\"56.0\" stroke\u003d\"#171717\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" width\u003d\"8.0\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"         \u003c/HBox.margin\u003e\u003c/Rectangle\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        \u003cImageView fx:id\u003d\"checkbox\" fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"      \u003cVBox fx:id\u003d\"taskDetails\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"250.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"250.0\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"            \u003cHBox maxWidth\u003d\"250.0\" prefHeight\u003d\"16.0\" prefWidth\u003d\"250.0\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"                   \u003cLabel fx:id\u003d\"taskNumber\" maxWidth\u003d\"250.0\" minWidth\u003d\"20.0\" prefWidth\u003d\"20.0\" text\u003d\"Label\" textFill\u003d\"#363636\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"                        \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"                     \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"                   \u003cLabel fx:id\u003d\"taskDescription\" maxWidth\u003d\"220.0\" minWidth\u003d\"220.0\" prefWidth\u003d\"220.0\" text\u003d\"Label\" textFill\u003d\"#dedede\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"                        \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"                    \u003cLabel fx:id\u003d\"badge\" alignment\u003d\"CENTER\" maxHeight\u003d\"13.0\" maxWidth\u003d\"56.0\" minWidth\u003d\"40.0\" style\u003d\"-fx-background-radius: 8;\" text\u003d\"Label\" textFill\u003d\"#363636\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"                        \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"                        \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"            \u003cHBox fx:id\u003d\"dateSection\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"250.0\" prefHeight\u003d\"14.0\" prefWidth\u003d\"250.0\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"                    \u003cImageView fx:id\u003d\"dateIcon\" fitHeight\u003d\"14.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"                        \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"                    \u003cLabel fx:id\u003d\"date\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"200.0\" minWidth\u003d\"40.0\" prefWidth\u003d\"200.0\" text\u003d\"Label\" textFill\u003d\"#999999\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"                        \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"                  \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets bottom\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"chloeelim":70}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" minWidth\u003d\"70.0\" style\u003d\"-fx-background-color: B4A0FF; -fx-background-radius: 24;\" text\u003d\"Label\" textFill\u003d\"#282828\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"            \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"chloeelim":29}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    public void accessTask_accessExistentTask_success() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        tasklist.addTask(new ToDo(\"Add JavaDocs\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"        tasklist.addTask(new ToDo(\"Fix Styling\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"        assertEquals(true, tasklist.isValidTask(2));","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    public void accessTask_accessZeroTask_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"            tasklist.addTask(new ToDo(\"Print out lab worksheet\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"            tasklist.isValidTask(0);","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"            assertEquals(\"uhoh... bobo can\u0027t find this task (・へ・)??\", e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    public void accessTask_accessInvalidNonexistentTask_exceptionThrown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"            tasklist.addTask(new ToDo(\"Buy bread\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"            tasklist.isValidTask(2);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"            assertEquals(\"uhoh... bobo can\u0027t find this task (・へ・)??\", e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"chloeelim":39}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    public void instantiateToDoTask_properDescription_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"        ToDo todo \u003d new ToDo(\"read book pages 123-125\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        assertEquals(\"[T][X] read book pages 123-125\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    public void saveStringFormat_withDeliminators_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"        ToDo todo \u003d new ToDo(\"| hello | this \\\\| is a \\\\\\\\| test\");","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        assertEquals(\"T | N | \\\\| hello \\\\| this \\\\\\\\| is a \\\\\\\\\\\\| test\",","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"                todo.toSaveFormat());","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"chloeelim":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"hello","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"deadline test deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"event test event","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"todo hi! this is a to-do task!! 12345 \\(^^)/","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"deadline complete cs2103t ip /by today 17 Aug 23 59","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"event cs2101 lesson /at 18 Aug, Tommorow (12-2PM)","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"bye duke","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":19}}]

[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" * A deadline is a task that needs to be done before a specific date/time.","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"    protected java.time.LocalDateTime dueDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * @param dueDate The due date of the deadlined task","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"            super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"            this.dueDate \u003d dueDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    public Deadline(String description, LocalDateTime dueDate, boolean completion) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        super(description, completion);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"D | %s | %s | %s\", this.isDone ? \"Y\" : \"N\",","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"                this.description.replace(\"|\", \"\\\\|\"),","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"                this.dueDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the deadline task,","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * prefixed with a [D], followed by the deadline status, and","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     * the deadline description.","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the deadline task","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"                this.dueDate.format(DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy HH:mm\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"    private static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     * Formats Duke\u0027s messages by adding horizontal line dividers and indentation.","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * @param str Duke\u0027s message to be printed out","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    private static void prettyPrint(String str) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        String[] messages \u003d str.split(\"\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"        for (String message : messages) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"            System.out.println(\"\\t  \" + message);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"    private static void greet(String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        String welcomeMessage \u003d String.join(\"\\n\", logo,","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"                String.format(\"Hello, I\u0027m Duke! %s\", message),","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"        prettyPrint(welcomeMessage);","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    private static void goodbye() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        String farewellMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"        prettyPrint(farewellMessage);","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     * Stores the specified task (to-do, event, deadline) into the linked list,","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"     * provided the respective task formats are properly followed.","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"     * @param task The task to be recorded","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"    private static void addTask(String task, TaskType type) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"        Task addedTask;","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"        switch (type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"            case TODO:","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"                addedTask \u003d TaskType.TODO.validateCommand(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"            case EVENT:","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"                addedTask \u003d TaskType.EVENT.validateCommand(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"            default: // deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"                addedTask \u003d TaskType.DEADLINE.validateCommand(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"        prettyPrint(tasks.addTask(addedTask));","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"    private static void initialise() {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"        // try to load tasks from file in hard drive, else creates new TaskList","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"        File savedTasks \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"            Scanner sc \u003d new Scanner(savedTasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"                String ln \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"                    TaskType savedTask \u003d Task.readSavedTaskType(ln.charAt(0));","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"                    tasks.addTask(savedTask.parseSavedFormat(ln));","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"                    prettyPrint(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"            greet(String.format(\"You current have %s tasks.\", tasks.numberOfTasks()));","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"            greet(String.format(\"You have no saved tasks.\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"    private static void writeTaskListToDisk() {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"        String DIR \u003d \"data\";","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"        File directory \u003d new File(DIR);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"            FileWriter fw \u003d new FileWriter(DIR + \"/duke.txt\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"            fw.write(tasks.toSaveFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"            prettyPrint(\"Duke could not create a file to save your tasks :(\");","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"            prettyPrint(String.format(\"Duke had some trouble saving your file: %s\", e.getMessage()));","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"        initialise();","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"        String cmd;","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"        // Echoes user\u0027s input until the user types \u0027bye\u0027, for which the program exits","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"chloeelim"},"content":"        while (!(cmd \u003d sc.nextLine()).equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"chloeelim"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"chloeelim"},"content":"                switch (cmd) {","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"chloeelim"},"content":"                    case \"list\":","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"chloeelim"},"content":"                        prettyPrint(tasks.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"chloeelim"},"content":"                        continue;","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"chloeelim"},"content":"                    default:","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"chloeelim"},"content":"                        if (cmd.matches(\"mark \\\\d+\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"chloeelim"},"content":"                            prettyPrint(tasks.markTaskDone(Integer.parseInt(cmd.substring(5))));","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"chloeelim"},"content":"                        } else if (cmd.matches(\"unmark \\\\d+\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"chloeelim"},"content":"                            prettyPrint(tasks.markTaskNotDone(Integer.parseInt(cmd.substring(7))));","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"chloeelim"},"content":"                        } else if (cmd.matches(\"delete \\\\d+\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"chloeelim"},"content":"                            prettyPrint(tasks.deleteTask(Integer.parseInt(cmd.substring(7))));","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"chloeelim"},"content":"                        } else if (cmd.matches(\"(?i)^(todo)(.*)\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"chloeelim"},"content":"                            addTask(cmd, TaskType.TODO);","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"chloeelim"},"content":"                        } else if (cmd.matches(\"(?i)^(deadline)(.*)\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"chloeelim"},"content":"                            addTask(cmd, TaskType.DEADLINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"chloeelim"},"content":"                        } else if (cmd.matches(\"(?i)^(event)(.*)\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"chloeelim"},"content":"                            addTask(cmd, TaskType.EVENT);","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"chloeelim"},"content":"                        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":129,"author":{"gitId":"chloeelim"},"content":"                            throw new DukeException(\"Hm...Duke doesn\u0027t understand what that means :(\");","lastModifiedDate":"2022-08-17"},{"lineNumber":130,"author":{"gitId":"chloeelim"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"chloeelim"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":133,"author":{"gitId":"chloeelim"},"content":"                prettyPrint(e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":134,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":135,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"chloeelim"},"content":"        writeTaskListToDisk();","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"chloeelim"},"content":"        goodbye();","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chloeelim":131,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":" * Exception class representing exceptions specific to Duke.","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"     * @param errorMessage The specified error message","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" * An event is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"    protected LocalDateTime eventDatetime;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     * Constructor for an event task.","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the event task","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"     * @param datetime The start/ end datetime of the event","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public Event(String description, LocalDateTime datetime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"        this.eventDatetime \u003d datetime;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    public Event(String description, LocalDateTime datetime, boolean completion) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"        super(description, completion);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        this.eventDatetime \u003d datetime;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"E | %s | %s | %s\", this.isDone ? \"Y\" : \"N\",","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"                this.description.replace(\"|\", \"\\\\|\"),","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"                this.eventDatetime);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the event task,","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * prefixed with a [E], followed by the event status, and","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     * the event description.","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the event task","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"                this.eventDatetime.format(DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy HH:mm\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":45}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":" * An abstract class representing a task (which has a description, and completion status).","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"     * Constructor for a task, whose completion status is","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"     * initially set to not done upon initialisation.","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     * @param description The task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    public Task(String description, boolean completed) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d completed;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     * Returns the status icon of the task, completed tasks","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * are represented with an \u0027X\u0027.","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"     * @return An icon representing the completion status of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    public void markTaskAsUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"    public static TaskType readSavedTaskType(char data) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"        switch (data) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"                return TaskType.TODO;","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"                return TaskType.DEADLINE;","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"                return TaskType.EVENT;","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"            default:","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Duke found an unknown data type: \" + data);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the task, indicating","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"     * the completion status of the task, followed by the task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":73}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":" * A task list is used to store tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"public class TaskList {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"    private LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"     * Constructor for a task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"        this.tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public int numberOfTasks() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"     * Checks that the specified task is a task that exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number of the task to be verified","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * @return True if the task exists, false otherwise","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"    public boolean isValidTask(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"        boolean isValid \u003d i \u003e 0 \u0026\u0026 i \u003c\u003d tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"        if (!isValid) throw new DukeException(\"Hm... Duke can\u0027t find this task.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"        return true;","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"     * Marks the specified task number as done, if it exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number to be marked as done","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"    public String markTaskDone(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"        return (String.format(\"Nice! I\u0027ve marked this task as done:\\n %s\", task));","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"     * Marks the specified task number as not done, if it exists.","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number to be marked as not done","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException An exception is thrown when the specified task does not exist","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"    public String markTaskNotDone(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"        task.markTaskAsUndone();","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"        return (String.format(\"OK, I\u0027ve marked this task as not done yet:\\n %s\", task));","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"     * Adds a specified task to the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"     * @param task The task to be added to the task list","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of task completion, displays task added and number","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"     *         of tasks in the task list","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"        return (String.format(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"                \"  %s\\nNow you have %d tasks in the list.\", task, tasks.size()));","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"     * Deletes a specified task from the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"     * @param i The task number of the task to be deleted from the task list","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"     * @return String representation of the task deletion, displays task removed and","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"     *         the number of remaining tasks in the task list","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException Exception thrown when the specified task does not exist","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"    public String deleteTask(int i) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"        isValidTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"        Task task \u003d tasks.remove(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"        return (String.format(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"                \"  %s\\nNow you have %d tasks in the list.\", task, tasks.size()));","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"        String formatted \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"            formatted +\u003d task.toSaveFormat() + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"        return formatted;","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"     * Lists all the tasks entered thus far by the user.","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"     * Will print \u0027No tasks\u0027 if no tasks are found.","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"        String taskList \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"            count++;","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"            taskList +\u003d String.format(\"\\n%d. %s\", count, task);","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"        return (count !\u003d 0 ? \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"                + taskList.substring(1) : \"No tasks\");","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"chloeelim":108}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":" * Enums for the possible tasks Duke can handle.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"     * A to do task, which only has a description and no tied date/ time.","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    TODO {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"        public ToDo validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"            if (cmd.matches(\"(?i)^todo\\\\s.+\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"                return new ToDo(cmd.substring(5));","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Hm... Duke\u0027s confused. Are you trying to create a todo?\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"                        \"\\nMake sure you follow the format: todo [description].\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"                        \"The description of a todo cannot be empty!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"        public ToDo parseSavedFormat(String savedFormat) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"            String[] savedData \u003d TaskType.parseFormatArray(savedFormat);;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"            boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"            String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"            return new ToDo(description, status);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"chloeelim"},"content":"     * An event task, which has a description and start/end datetime.","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"chloeelim"},"content":"    EVENT {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"chloeelim"},"content":"        public Event validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"chloeelim"},"content":"            if (cmd.matches(\"(?i)^event\\\\s.+\\\\s\\\\/(at)\\\\s.+\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"chloeelim"},"content":"                String[] sp \u003d cmd.substring(6).split(\"\\\\/(at)\\\\s\", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime datetime;","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chloeelim"},"content":"                    datetime \u003d LocalDate.parse(sp[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"chloeelim"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"chloeelim"},"content":"                    try {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"chloeelim"},"content":"                        datetime \u003d LocalDateTime.parse(sp[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"chloeelim"},"content":"                    } catch (DateTimeParseException err) {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"chloeelim"},"content":"                        throw new DukeException(String.format(\"Unknown date format %s!\", sp[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"chloeelim"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"chloeelim"},"content":"                return new Event(sp[0], datetime);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Hm... Duke\u0027s confused. Are you trying to create an event?\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"chloeelim"},"content":"                        \"\\nMake sure you follow the format: event [description] /at [event datetime]\");","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"chloeelim"},"content":"        public Event parseSavedFormat(String savedFormat) {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"chloeelim"},"content":"            String[] savedData \u003d TaskType.parseFormatArray(savedFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"chloeelim"},"content":"            boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"chloeelim"},"content":"            String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"chloeelim"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(savedData[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"chloeelim"},"content":"            return new Event(description, datetime, status);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"chloeelim"},"content":"    },","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"chloeelim"},"content":"     * A deadline task, which has a description and needs to be done before a specific date/time.","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"chloeelim"},"content":"    DEADLINE {","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"chloeelim"},"content":"        public Deadline validateCommand(String cmd) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"chloeelim"},"content":"            if (cmd.matches(\"(?i)^deadline\\\\s.+\\\\s\\\\/(by)\\\\s.+\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"chloeelim"},"content":"                String[] sp \u003d cmd.substring(9).split(\"\\\\/(by)\\\\s\", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"chloeelim"},"content":"                LocalDateTime datetime;","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"chloeelim"},"content":"                try {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"chloeelim"},"content":"                    datetime \u003d LocalDate.parse(sp[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"chloeelim"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"chloeelim"},"content":"                    try {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"chloeelim"},"content":"                        datetime \u003d LocalDateTime.parse(sp[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"chloeelim"},"content":"                    } catch (DateTimeParseException err) {","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"chloeelim"},"content":"                        throw new DukeException(\"Unknown date format!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"chloeelim"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"chloeelim"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"chloeelim"},"content":"                return new Deadline(sp[0], datetime);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"chloeelim"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"chloeelim"},"content":"                throw new DukeException(\"Hm... Duke\u0027s confused. Are you trying to create a deadline?\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"chloeelim"},"content":"                        \"\\nMake sure you follow the format: deadline [description] /by [deadline]\");","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"chloeelim"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"chloeelim"},"content":"        @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"chloeelim"},"content":"        public Deadline parseSavedFormat(String savedFormat) {","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"chloeelim"},"content":"            String[] savedData \u003d TaskType.parseFormatArray(savedFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"chloeelim"},"content":"            boolean status \u003d savedData[0].equals(\"Y\");","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"chloeelim"},"content":"            String description \u003d savedData[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"chloeelim"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(savedData[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"chloeelim"},"content":"            return new Deadline(description, datetime, status);","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"chloeelim"},"content":"    };","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"chloeelim"},"content":"     * Takes in a user\u0027s command and validates that it is a valid command (follows the","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"chloeelim"},"content":"     * required format) based on the TaskType.","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"chloeelim"},"content":"     * @param cmd The user\u0027s command","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"chloeelim"},"content":"     * @return The task created by the command, provided the command is valid","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"chloeelim"},"content":"     * @throws DukeException Exception thrown when the provided command is invalid.","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"chloeelim"},"content":"    public abstract Task validateCommand(String cmd) throws DukeException;","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"chloeelim"},"content":"    public abstract Task parseSavedFormat(String savedFormat);","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"chloeelim"},"content":"    private static String[] parseFormatArray(String savedFormat) {","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"chloeelim"},"content":"        String[] result \u003d savedFormat.substring(4).split(\"\\\\ \\\\|\\\\ \");","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"chloeelim"},"content":"        int len \u003d result.length;","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"chloeelim"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"chloeelim"},"content":"            result[i] \u003d result[i].replace(\"\\\\\\\\|\", \"|\");","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"chloeelim"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"chloeelim"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"chloeelim":123}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":" * A to do task is a task that does not have any date/time attached to it.","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"     * Constructor for a to-do task.","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"     * @param description Description of the to-do task","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"    public ToDo(String description, boolean completion) { super(description, completion); }","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"T | %s | %s\", this.isDone ? \"Y\" : \"N\",","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"                this.description.replace(\"|\", \"\\\\|\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chloeelim"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"chloeelim"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"chloeelim"},"content":"     * Returns a string representation for the to-do task,","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"chloeelim"},"content":"     * prefixed with a [T], followed by the task status, and","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"chloeelim"},"content":"     * the task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"chloeelim"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"chloeelim"},"content":"     * @return The string representation of the to-do task","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"chloeelim"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"chloeelim"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"chloeelim"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"chloeelim"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"chloeelim"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"chloeelim"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chloeelim"},"content":"hello","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"chloeelim"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chloeelim"},"content":"deadline test deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chloeelim"},"content":"event test event","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chloeelim"},"content":"todo hi! this is a to-do task!! 12345 \\(^^)/","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"chloeelim"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chloeelim"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"chloeelim"},"content":"deadline complete cs2103t ip /by today 17 Aug 23 59","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chloeelim"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chloeelim"},"content":"event cs2101 lesson /at 18 Aug, Tommorow (12-2PM)","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chloeelim"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"chloeelim"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"chloeelim"},"content":"bye duke","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"chloeelim"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chloeelim":19}}]

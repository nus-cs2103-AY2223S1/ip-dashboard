{"authorDailyContributionsMap":{"chloeelim":[{"date":"2022-08-18","commitResults":[{"hash":"0d550692e19559d33a370b87dfc806b5bfce2f1b","messageTitle":"Level 1. Greet, Echo, Exit","messageBody":"Skeletal implementation of Duke that:\n* greets the user,\n* echoes commands entered by the user,\n* and exits when the user types bye\n","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":2}}},{"hash":"529991b409393f4059bf355af73092a79f92ea25","messageTitle":"Level 2. Add, List","messageBody":"Adds ability to store text entered by the user, and return them in a numbered\nlist when requested.\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":2}}},{"hash":"9ec2d93e5c353c792e01d09ccec3139e9b537bad","messageTitle":"Level 3. Mark as Done","messageBody":"Adds the ability to mark tasks as done/ undone. Also refactors out\ntasks into its own class.\n","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":6}}},{"hash":"3ffe9fb89b4b52c73da8c6b8c20e45321b54361c","messageTitle":"Level 4. ToDos, Events, Deadlines","messageBody":"Add support for tracking three types of tasks: To Dos, Events and Deadlines.\n","fileTypesAndContributionMap":{"java":{"insertions":151,"deletions":5}}},{"hash":"73a69b9caed235113abe3faa3ef04ab6f41e8830","messageTitle":"Automated Text UI Testing","messageBody":"Use the input/output redirection technique to semi-automate the testing of Duke.\n","fileTypesAndContributionMap":{"txt":{"insertions":19,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"0d3005e239bae248c6bb201498817e9281dba6d0","messageTitle":"Level 5. Handle Errors","messageBody":"Added custom exception to handle Duke exceptions.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":27}}},{"hash":"f3b7772604b92a7e38540aa12dc360604e02d8c7","messageTitle":"Level 6. Delete","messageBody":"Adds functionality for task deletion from the task list.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"05c2587a531e385df00d8a42aa352421d864e2ba","messageTitle":"A-Enums: Use Enums","messageBody":"Refactor code to use enums, as well as refactor out task list into its own class.\n","fileTypesAndContributionMap":{"java":{"insertions":133,"deletions":101}}},{"hash":"dcde1b9670d8d2c9fd9167be04a02c6834c4c1fa","messageTitle":"Add JavaDocs","messageBody":"Adds JavaDocs to TaskType and TaskList\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":2}}}]},{"date":"2022-08-23","commitResults":[{"hash":"6d01683a198f1bb7e11c480775358ee07514c828","messageTitle":"Level 7. Save","messageBody":"Adds functionality to save tasks to harddrive and load saved tasks at the start\nof the program, if there were any previously saved tasks.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":167,"deletions":19}}},{"hash":"9b8a330d1ecb58cd90d64c211998270455c33fbd","messageTitle":"Level 8. Dates and Times","messageBody":"Adds datetime recognition for deadline and event tasks in dd/MM/yyyy or dd/MM/yyyy HH:mm format.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":10}}},{"hash":"196b2346daf42530987e914eca9c9a8e65821f30","messageTitle":"fix: fix errors introduced from merging the 2 branches","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"2290d1f2075c849c4b5a4a5540d58c7af3a3488b","messageTitle":"Use More OOP","messageBody":"Refactor out user interactions, parsing, storage, and commands.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":235,"deletions":130}}},{"hash":"40f8f198a11ce2026d6106baddfe58e345d2aeda","messageTitle":"Organize into Packages","messageBody":"Divides classes into respective packages (duke, duke.task, duke.command, duke.exception).\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":1}}}]},{"date":"2022-08-24","commitResults":[{"hash":"6c6198f7b19a847de4615f170262912112344e4a","messageTitle":"fix and set up checkstyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1}}},{"hash":"8df1fd2e2615cdbc72ca64801027643425ce5769","messageTitle":"Add JUnit Tests","messageBody":"Adds JUnit Tests to test ToDo and TaskList class.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}},{"hash":"23bbdaf6beb12235b5d3de4704e9f06a526ba0e2","messageTitle":"A-JavaDoc","messageBody":"Add JavaDoc comments to the code.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":218,"deletions":36}}},{"hash":"4ba60920f316db99c5a2ee4b1254068b726624dc","messageTitle":"A-CodingStandard","messageBody":"Tweaks the code to comply with a given coding standard.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":26}}},{"hash":"5d66195e40a5a7194e526123204b528b23ae1829","messageTitle":"Level 9. Find","messageBody":"Give users a way to find a task by searching for a keyword.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":6}}},{"hash":"1bbe0d836be9280f231cff09076b7506ab1070a7","messageTitle":"fix: infinite loop","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2022-08-25","commitResults":[{"hash":"0817548e6f6cbfc8e6925b4b12cb0c524f1b0c62","messageTitle":"refactor: fix checkstyle errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":9}}}]},{"date":"2022-08-31","commitResults":[{"hash":"981b209d4b2084183d2dbb8ae9fea29366eb679e","messageTitle":"Level 10. GUI Add a GUI to Duke. Use the JavaFX technology to implement the GUI.","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":54,"deletions":0},"java":{"insertions":260,"deletions":55}}},{"hash":"23985493d118cbf94baad149739516f2fe86bca3","messageTitle":"feat: add support for event start-end with datetime","messageBody":"adds functionality to support start and end datetime for events, also\nadds error handling for unparsable saved task formats (ignores these tasks).\n","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":58}}}]},{"date":"2022-09-01","commitResults":[{"hash":"b20d6f82cd37f6eb8055c8510ef0a592fa1caf04","messageTitle":"feat: add event start-end datetime validation","messageBody":"adds datetime validation for events to ensure start is not after end datetime.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":6}}}]},{"date":"2022-09-04","commitResults":[{"hash":"406d36cd41c198e7a3a12ac0f4bda12b445fa38b","messageTitle":"feat: improve gui (list)","messageBody":"improves gui by adding topbar, changing icons, and creating a list view.\n","fileTypesAndContributionMap":{"fxml":{"insertions":122,"deletions":4},"java":{"insertions":218,"deletions":44}}},{"hash":"c1591edfa5e4eef8c402f1fbc691163afcae9d90","messageTitle":"feat: add more personality and fix list view styling","messageBody":"adds more personality to duke (renamed to bobo), and fixes some issues\nwith view (specifically for tasks with long descriptions). also adds list\nview to other commands (addtask, deletetask, findtask, mark/ unmark task).\nalso fixes alignment of datesection (offset to the tasknumber).\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"fxml":{"insertions":3,"deletions":3},"java":{"insertions":119,"deletions":57}}},{"hash":"61726fe70555e003ad666ec40dd2675d1aa916e5","messageTitle":"fix: fix minor style issues and stringified message for number of tasks","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":6,"deletions":6},"java":{"insertions":2,"deletions":1}}}]},{"date":"2022-09-08","commitResults":[{"hash":"a2ea030ef0a0e2a4c9fc5ae6b4845158a4ca4bd8","messageTitle":"Style: fix style errors and improve code quality","messageBody":"Code has a few style violations, such as missing punctuation at\nthe end of the params in the JavaDocs.\n\nThe code quality could also be improve, by enforcing the SLAP principle,\nusing guard clauses and improving readability.\n\nLet\u0027s fix all the styling errors and try to ensure that code quality adheres\nto the coding standard.\n","tags":["A-FullCommitMessage","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":494,"deletions":293}}},{"hash":"dba1e7d3aa10954e1c9184891a0f5d59cc28e75f","messageTitle":"A-Assertions. Use Assertions","messageBody":"The code does not use assertions.\n\nAssertions define assumptions about the program state so that the runtime can verify them.\nAdding assertions can help us catch bugs by verifying our assumptions of the state\nof the program.\n\nLet\u0027s add assertions at some critical junctures of the code and verify that the runtime state\nof our program coheres with our assumptions of the state of the program.\n\nThis will allow us to verify the correctness of the program, and can help us catch bugs\nin the program.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"java":{"insertions":9,"deletions":0}}}]},{"date":"2022-09-09","commitResults":[{"hash":"2923920f3581fafb1d962dc166dbb146be1525ff","messageTitle":"A-Streams. Use Streams","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}},{"hash":"8a310ca78fe88541664a9dbbf21103f31328d00f","messageTitle":"C-NaturalDates. adds more flexibility to datetime parsing","messageBody":"bobo only accepts a very limited and rigid set of datetime formats (dd/MM/YYYY or\ndd/MM/YYYY HH:mm).\n\nThe reference of dates in bobo is thus, very inflexible and not very user friendly.\n\nLet\u0027s add a new class, DateTimeParse to handle datetime parsing. We can use\na linked hashmap to store a large variety of date or datetime formats. This hashmap\nstores the regex expression corresponding to the date or datetime pattern so that\nwe can look through this hashmap for a matching regex expression to the datetime string,\nand map it to its corresponding datetime formatter. Finally, we can parse the datetime\nstring into a datetime object with the formatter.\n\nAbstracting out datetime parsing into its separate class helps enforce OOP principles\nand readability of the code. Especially since it gets rather lengthy and verbose.\nAbstracting it out will also make datetime parsing also more extensible so that\nit is easier to add new datetime formats to be supported in the future.\n\nHowever, the code could be further refactored so it is cleaner- such as using enums\nand abstracting out some of the string processing into its own separate methods.\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":194,"deletions":73}}},{"hash":"f4414e9a487a7c776b5fafef76d9ff2dbb376ab4","messageTitle":"refactor: numerical date format","messageBody":"refactors numerical date format into its own class for extensibility.\n","fileTypesAndContributionMap":{"java":{"insertions":344,"deletions":190}}}]},{"date":"2022-09-10","commitResults":[{"hash":"22890cc23834a1824f1387b5c545754657ed3011","messageTitle":"feat: add more datetime supported formats","messageBody":"adds more datetime supported formats:\n  * support 2, 3 and 4 digit numerical date formats that may\n    be missing at least one of the date (day/ month/ year) fields\n  * support text-dates (month field) like 11 Oct 2022, August 2020,\n    22 March\n  * support 12-hour time formats (11:23 PM, 2:00am...)\n\nalso adds a parent class for dateformats to abstract out common methods.\nto look into also abstracting out time into its own separate class for\nextensibility and to adhere to oop-principles as it is getting a little\nunwieldy.\n","fileTypesAndContributionMap":{"java":{"insertions":246,"deletions":71}}},{"hash":"5384d263b7643c49de1fc98bebb6124369ce4ffc","messageTitle":"style: fix checkstyle errors","messageBody":"rectifies checkstyle errors found in the code.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":6}}}]},{"date":"2022-09-11","commitResults":[{"hash":"23f498f08bed04a46dc127a1a8cd7937960e27f1","messageTitle":"feat: support natural dates and more time formats","messageBody":"Adds support for natural dates (like today, tomorrow...) and also\nextends support for time formats:\n  * Now, dates with only time are also possible (date will be\n    automatically set to today).\n  * In addition, 12-hour time format is now also supported (with AM/PM)\n\nTo do this, abstract natural dates and time into their own classes\nto keep in line with OOP principles.\n","fileTypesAndContributionMap":{"java":{"insertions":206,"deletions":36}}},{"hash":"6f3ff6fcf2af707573f3999683216fe2f361a4f3","messageTitle":"feat: add support for more natural dates","messageBody":"Adds support for more natural dates (days of the week- such that\n{day of the week} will be interpreted to next {day of the week}).\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"57517b6a2085e12e039e5e2cc7bd1c25261e65c9","messageTitle":"C-Update. adds update functionality","messageBody":"After creating tasks, you cannot update (ie: edit) them directly.\n\nTo edit a task, a user would have to first delete the task, then\ncreate a new task with the updated details.\n\nLet\u0027s simplify this process by allowing the user to directly update\nan existing task. The update function will edit the task details\naccording to user\u0027s inputted details. It will not delete and create\na new task so that the order of the task in the task list remains.\n\nHowever, the command to update a task might be a little troublesome\nsince the user would have to edit all the given fields (eg: even\nif the user only wants to edit the end date of an event, the user\nwould have to re-enter the event details and start time as well).\nFuture commits may want to look into improving this aspect.\n","fileTypesAndContributionMap":{"java":{"insertions":156,"deletions":28}}},{"hash":"30c90e4b228b20fa542d462a843a0150f9995d25","messageTitle":"style: fix checkstyle errors","messageBody":"fixes checkstyle errors in the code by removing unnecessary imports.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}}]},{"date":"2022-09-15","commitResults":[{"hash":"ef8fac0850f96748c0843a9cc1472f1afbfdcf7a","messageTitle":"B-ViewSchedules: add feature to view schedules","messageBody":"Adds feature to view schedule, given a specified date or datetime.\nAlso fixes some minor bugs with datetime parsing (4 digit numeric\nshould try to parse as a date before time), as well as some missing\nJavaDocs in NaturalDate.\n","fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":5}}}]}]},"authorFileTypeContributionMap":{"chloeelim":{"java":2676,"md":0,"fxml":172,"sh":0,"bat":0,"gradle":23,"txt":19}},"authorContributionVariance":{"chloeelim":73488.11},"authorDisplayNameMap":{"chloeelim":"CS2103T-W11-3 CHLO..YING"}}

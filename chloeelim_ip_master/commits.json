{"authorDailyContributionsMap":{"chloeelim":[{"date":"2022-08-18","commitResults":[{"hash":"0d550692e19559d33a370b87dfc806b5bfce2f1b","messageTitle":"Level 1. Greet, Echo, Exit","messageBody":"Skeletal implementation of Duke that:\n* greets the user,\n* echoes commands entered by the user,\n* and exits when the user types bye\n","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":2}}},{"hash":"529991b409393f4059bf355af73092a79f92ea25","messageTitle":"Level 2. Add, List","messageBody":"Adds ability to store text entered by the user, and return them in a numbered\nlist when requested.\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":2}}},{"hash":"9ec2d93e5c353c792e01d09ccec3139e9b537bad","messageTitle":"Level 3. Mark as Done","messageBody":"Adds the ability to mark tasks as done/ undone. Also refactors out\ntasks into its own class.\n","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":6}}},{"hash":"3ffe9fb89b4b52c73da8c6b8c20e45321b54361c","messageTitle":"Level 4. ToDos, Events, Deadlines","messageBody":"Add support for tracking three types of tasks: To Dos, Events and Deadlines.\n","fileTypesAndContributionMap":{"java":{"insertions":151,"deletions":5}}},{"hash":"73a69b9caed235113abe3faa3ef04ab6f41e8830","messageTitle":"Automated Text UI Testing","messageBody":"Use the input/output redirection technique to semi-automate the testing of Duke.\n","fileTypesAndContributionMap":{"txt":{"insertions":19,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"0d3005e239bae248c6bb201498817e9281dba6d0","messageTitle":"Level 5. Handle Errors","messageBody":"Added custom exception to handle Duke exceptions.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":27}}},{"hash":"f3b7772604b92a7e38540aa12dc360604e02d8c7","messageTitle":"Level 6. Delete","messageBody":"Adds functionality for task deletion from the task list.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"05c2587a531e385df00d8a42aa352421d864e2ba","messageTitle":"A-Enums: Use Enums","messageBody":"Refactor code to use enums, as well as refactor out task list into its own class.\n","fileTypesAndContributionMap":{"java":{"insertions":133,"deletions":101}}},{"hash":"dcde1b9670d8d2c9fd9167be04a02c6834c4c1fa","messageTitle":"Add JavaDocs","messageBody":"Adds JavaDocs to TaskType and TaskList\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":2}}}]},{"date":"2022-08-23","commitResults":[{"hash":"6d01683a198f1bb7e11c480775358ee07514c828","messageTitle":"Level 7. Save","messageBody":"Adds functionality to save tasks to harddrive and load saved tasks at the start\nof the program, if there were any previously saved tasks.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":167,"deletions":19}}},{"hash":"9b8a330d1ecb58cd90d64c211998270455c33fbd","messageTitle":"Level 8. Dates and Times","messageBody":"Adds datetime recognition for deadline and event tasks in dd/MM/yyyy or dd/MM/yyyy HH:mm format.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":10}}},{"hash":"196b2346daf42530987e914eca9c9a8e65821f30","messageTitle":"fix: fix errors introduced from merging the 2 branches","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"2290d1f2075c849c4b5a4a5540d58c7af3a3488b","messageTitle":"Use More OOP","messageBody":"Refactor out user interactions, parsing, storage, and commands.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":235,"deletions":130}}},{"hash":"40f8f198a11ce2026d6106baddfe58e345d2aeda","messageTitle":"Organize into Packages","messageBody":"Divides classes into respective packages (duke, duke.task, duke.command, duke.exception).\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":1}}}]},{"date":"2022-08-24","commitResults":[{"hash":"6c6198f7b19a847de4615f170262912112344e4a","messageTitle":"fix and set up checkstyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1}}},{"hash":"8df1fd2e2615cdbc72ca64801027643425ce5769","messageTitle":"Add JUnit Tests","messageBody":"Adds JUnit Tests to test ToDo and TaskList class.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}},{"hash":"23bbdaf6beb12235b5d3de4704e9f06a526ba0e2","messageTitle":"A-JavaDoc","messageBody":"Add JavaDoc comments to the code.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":218,"deletions":36}}},{"hash":"4ba60920f316db99c5a2ee4b1254068b726624dc","messageTitle":"A-CodingStandard","messageBody":"Tweaks the code to comply with a given coding standard.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":26}}},{"hash":"5d66195e40a5a7194e526123204b528b23ae1829","messageTitle":"Level 9. Find","messageBody":"Give users a way to find a task by searching for a keyword.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":6}}},{"hash":"1bbe0d836be9280f231cff09076b7506ab1070a7","messageTitle":"fix: infinite loop","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2022-08-25","commitResults":[{"hash":"0817548e6f6cbfc8e6925b4b12cb0c524f1b0c62","messageTitle":"refactor: fix checkstyle errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":9}}}]},{"date":"2022-08-31","commitResults":[{"hash":"981b209d4b2084183d2dbb8ae9fea29366eb679e","messageTitle":"Level 10. GUI Add a GUI to Duke. Use the JavaFX technology to implement the GUI.","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":54,"deletions":0},"java":{"insertions":260,"deletions":55}}},{"hash":"23985493d118cbf94baad149739516f2fe86bca3","messageTitle":"feat: add support for event start-end with datetime","messageBody":"adds functionality to support start and end datetime for events, also\nadds error handling for unparsable saved task formats (ignores these tasks).\n","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":58}}}]},{"date":"2022-09-01","commitResults":[{"hash":"b20d6f82cd37f6eb8055c8510ef0a592fa1caf04","messageTitle":"feat: add event start-end datetime validation","messageBody":"adds datetime validation for events to ensure start is not after end datetime.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":6}}}]},{"date":"2022-09-04","commitResults":[{"hash":"406d36cd41c198e7a3a12ac0f4bda12b445fa38b","messageTitle":"feat: improve gui (list)","messageBody":"improves gui by adding topbar, changing icons, and creating a list view.\n","fileTypesAndContributionMap":{"fxml":{"insertions":122,"deletions":4},"java":{"insertions":218,"deletions":44}}},{"hash":"c1591edfa5e4eef8c402f1fbc691163afcae9d90","messageTitle":"feat: add more personality and fix list view styling","messageBody":"adds more personality to duke (renamed to bobo), and fixes some issues\nwith view (specifically for tasks with long descriptions). also adds list\nview to other commands (addtask, deletetask, findtask, mark/ unmark task).\nalso fixes alignment of datesection (offset to the tasknumber).\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"fxml":{"insertions":3,"deletions":3},"java":{"insertions":119,"deletions":57}}},{"hash":"61726fe70555e003ad666ec40dd2675d1aa916e5","messageTitle":"fix: fix minor style issues and stringified message for number of tasks","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":6,"deletions":6},"java":{"insertions":2,"deletions":1}}}]},{"date":"2022-09-08","commitResults":[{"hash":"a2ea030ef0a0e2a4c9fc5ae6b4845158a4ca4bd8","messageTitle":"Style: fix style errors and improve code quality","messageBody":"Code has a few style violations, such as missing punctuation at\nthe end of the params in the JavaDocs.\n\nThe code quality could also be improve, by enforcing the SLAP principle,\nusing guard clauses and improving readability.\n\nLet\u0027s fix all the styling errors and try to ensure that code quality adheres\nto the coding standard.\n","tags":["A-FullCommitMessage","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":494,"deletions":293}}},{"hash":"dba1e7d3aa10954e1c9184891a0f5d59cc28e75f","messageTitle":"A-Assertions. Use Assertions","messageBody":"The code does not use assertions.\n\nAssertions define assumptions about the program state so that the runtime can verify them.\nAdding assertions can help us catch bugs by verifying our assumptions of the state\nof the program.\n\nLet\u0027s add assertions at some critical junctures of the code and verify that the runtime state\nof our program coheres with our assumptions of the state of the program.\n\nThis will allow us to verify the correctness of the program, and can help us catch bugs\nin the program.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"java":{"insertions":9,"deletions":0}}}]},{"date":"2022-09-09","commitResults":[{"hash":"2923920f3581fafb1d962dc166dbb146be1525ff","messageTitle":"A-Streams. Use Streams","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}}]}]},"authorFileTypeContributionMap":{"chloeelim":{"java":1781,"md":0,"fxml":172,"sh":0,"bat":0,"gradle":23,"txt":19}},"authorContributionVariance":{"chloeelim":67213.555},"authorDisplayNameMap":{"chloeelim":"CS2103T-W11-3 CHLO..YING"}}

{"authorDailyContributionsMap":{"kelvinou01":[{"date":"2022-08-14","commitResults":[{"hash":"f6b7b5b53ce9117e5ee435d35ce9ae8bf3ca68a3","messageTitle":"Rename Duke to Roger, and add core functionality","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":10}}}]},{"date":"2022-08-15","commitResults":[{"hash":"34e94d28420a5ba4dd4a1df572b6f43dbf5afde5","messageTitle":"Add  and","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":4}}},{"hash":"2f1c6c7ac8e5aa61bbb8451928c92c060422c24c","messageTitle":"Add the Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":0}}},{"hash":"1c8296d1482721adbff1e7d7bf3ee7976406464c","messageTitle":"Add mark/unmark functionality, and refactor to use the Task class","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":6}}},{"hash":"9260029b9044f2711b8ef2d69e08f26fb11fcfda","messageTitle":"Add handling for invalid input for `mark` or `unmark`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":4}}},{"hash":"b19937a1921a501024213270235c07a346e35c91","messageTitle":"Add Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"f52d00a6c3068991cf80ec3dfe9cd8b3532ee423","messageTitle":"Add Event class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"ef7402225d66bdd08a24de734531e6c6f5ea8a27","messageTitle":"Add ToDo class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"9ead7c74669d89e9e4ba0c02529684eb7da07d55","messageTitle":"Modify `list()` behaviour when the task list is empty","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"233e8e34a3863317f45176627c000e12202b3da3","messageTitle":"Integrate ToDo, Deadline, and Event into Roger","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":3}}},{"hash":"76882e8f3cfb8a1e28d5a2c44a1ed7a83f7577ea","messageTitle":"Fixed error message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"f4b0643dc5b33f57ef5674d85d7ef4d5d343cb8e","messageTitle":"Change logo to only use ASCII characters, to fix issue with runtest.sh","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"f5aeecb04c4eadb839f24f62f9f99c8d9fced6f7","messageTitle":"Add automated text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"sh":{"insertions":1,"deletions":1}}},{"hash":"7dc65f195c1770e2363560c241b7010e360ee20b","messageTitle":"Add RogerInvalidInputException class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"90d81d51584fc49dace0bcbeed3b6f228073913f","messageTitle":"Integrate RogerInvalidInputException and add exception handling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":62}}},{"hash":"2d3be55b04fe4bc5f4986d0b073520c1ead2e163","messageTitle":"Update automated text UI testing","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0}}},{"hash":"742928b1836c1e4a355d39f0c820972cf2963829","messageTitle":"Fix formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"c86310da5c006e0882e5e7a9b231b096338cf167","messageTitle":"Add delete task functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"0fe70528f679c973057a84ab6a36f15542ae6501","messageTitle":"Update automated text UI testing","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0}}}]},{"date":"2022-08-21","commitResults":[{"hash":"fdce28049d0ffe2352ac59095917559dbdb0f07a","messageTitle":"Add toStorageFormat() for Deadline, Event, ToDo, and Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"9738bbcf5cdb85a2eb46249d1335287d664afc65","messageTitle":"Add task saving and loading to hard disk","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}}]},{"date":"2022-08-22","commitResults":[{"hash":"18300057957a36a496ba80fa30de862db7dfdbd8","messageTitle":"Change `Deadline::date` and `Event::date` to use java.time.LocalDate instead of String","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":7}}},{"hash":"da7fd2ea0cab2a1583e067bfbd4f432eca1798a4","messageTitle":"Refactor command handler methods to take in arguments instead of whole line, and integrate LocalDate functionality.","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":73}}},{"hash":"70a8c8e70bea6714a1e554676f344acc7730c609","messageTitle":"Task class: change to abstract","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}},{"hash":"da9f7699814051415f8556a019eed4e8624ca64d","messageTitle":"Add Storage and StorageParser classes.","messageBody":"File storage logic is spread out between the individual task classes and Roger itself.\n\nEncapsulate local task storage into the Storage class, and encapsulate the storage format into the StorageParser class.\n\nTo obey SRP.\n","fileTypesAndContributionMap":{"java":{"insertions":184,"deletions":96}}},{"hash":"8aa44d9d5953a8121002b482e19cc3d39a9657b8","messageTitle":"StorageParser class: fix format string","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"a5a81082702cb29009d1a9cac6bb303d85022de6","messageTitle":"StorageParser class: add exception handling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":9}}},{"hash":"e289edcc9cdb9c34218e3835b08b737900236077","messageTitle":"Add TaskList class","messageBody":"We are using List\u003cTask\u003e as in-program task storage.\n\nNow, we replace List\u003cTask\u003e with TaskList class.\n\nIt is cleaner to encapsulate actions that we can perform with the list of tasks into a single class.\n","fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":29}}}]},{"date":"2022-08-23","commitResults":[{"hash":"f404252263d7002a4492004dec65b1e06ae91a85","messageTitle":"Add Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":0}}},{"hash":"26a413e3500b8c5de6c5ddea8ea32487c84eaf0e","messageTitle":"TaskList class: Add filtered tasks display.","messageBody":"There is no good way to display filtered tasks.\n\nAdd methods to filter the tasklist, get display strings of the tasks, and get task number for displaying.\n\nThis way, users of the TaskList class can\n* display individual tasks with task number, and\n* diplay ffiltered lists with task numbers,\nwithout having access to the internal List\u003cTask\u003e\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"05a0b1bc58d8058ea7c3f5b7bb20a9979222f6ba","messageTitle":"Add Parser and Command classes.","messageBody":"Parsing is being handled by the main method and handle\u003cCommand\u003e methods, while command execution is handled by \u003ccommand\u003e methods.\n\nEncapsulate parsing user input within a single Parser class, and the various commands in various Command subclasses.\n\nThis ensures that the logic is grouped into single responsibility units.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":357,"deletions":259}}},{"hash":"d0f24787395fdcc965513a418074f2c27f8c8f54","messageTitle":"Refactor everything into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":115,"deletions":8}}},{"hash":"9571437b3b313bd53728f8a50a5f8dcfc5afafb8","messageTitle":"Add Gradle support","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":48,"deletions":0},"java":{"insertions":1,"deletions":1},"bat":{"insertions":103,"deletions":0},"sh":{"insertions":1,"deletions":1}}},{"hash":"da66ed76d7e8b2fcd47c64b0494c352956a748c3","messageTitle":"Fix storage parser args parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"aa87bff3095ae1c9e9d7ab38ad2adaecf1b51461","messageTitle":"Add unit tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"a2c841c9036bdb36b4e331f79684513d0d15e0f8","messageTitle":"Add JavaDocs","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":401,"deletions":57}}},{"hash":"d57751eb3ba84abb37bdfd89276c50d6cdeb435b","messageTitle":"Refactored code to conform to style guide.","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":75}}},{"hash":"cfddfa5b29d01712d75981772158af2e115dc43d","messageTitle":"TaskList class: Add search method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"3d080490cbc02acbc1b97aca41efe3429183008c","messageTitle":"Add `find` command","messageBody":"Users do not have a way to find tasks quickly.\n\nAdd a find command that filters tasks based on a query string.\n\nMakes it easy to find tasks that users are looking for.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":0}}},{"hash":"6cf1c8663a172df6f4932acd98e3c51de9a9de7a","messageTitle":"Refactor StorageParser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":17}}},{"hash":"25780bfe8a1c70051445cd0ff20a19b8c1195186","messageTitle":"Fix wrongly hard coded file path","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2022-08-28","commitResults":[{"hash":"811e42f436de7d19f40a6511cc920102ec0fbc89","messageTitle":"Add CheckStyle plugin","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":9}}}]},{"date":"2022-08-29","commitResults":[{"hash":"a61c0675f6f78edfd4433323939ecdfa4c3f11e9","messageTitle":"Add JavaFX UI","messageBody":"Roger was a CLI program\n\nMajor changes include:\n- Add JavaFX FXML files and controllers\n- Change Roger from a CLI program into a backend, which provides the `getResponse(input)` method.\n- Encapsulate command results into `CommandResult`\nHowever, the core functionality of Roger remains unchanged.\n\nA UI is much nicer to use than a CLI program.\n","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":290,"deletions":212}}},{"hash":"3f657562783bac0d5e280d52d5c6e566cefed5d9","messageTitle":"Refactor code to conform to style guide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":16}}}]},{"date":"2022-09-01","commitResults":[{"hash":"8b4c67a39cd998f71774325211abff01605feb44","messageTitle":"Add greet functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":4}}},{"hash":"56a9a2f75bdd708189c4c69b7a9b2affa3af4bd7","messageTitle":"Refactor to fix style violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":5}}}]},{"date":"2022-09-05","commitResults":[{"hash":"141bf1f7bc49c6eaa50bd89813505535d865de10","messageTitle":"Roger class: Add assertions","messageBody":"No assertions are used to document assumptions made.\n\nWe need to make the assumptions explicit via assertions.\n\nNow, we add assertions to methods that use various fields.\n\nThis way, the assertion will catch any wrong modifications to the code which may cause NullPointerException\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"4ff968d71dc176ebb059a412312250281b761687","messageTitle":"Storage class: Add assertions","messageBody":"No assertions are used to document assumptions made.\n\nWe need to make the assumptions explicit via assertions.\n\nNow, we add assertions to methods that use various fields.\n\nThis way, the assertion will catch any wrong modifications to the code which may cause NullPointerException\n","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"ededb8010835ac1c89e914c4282bc168a85e4c55","messageTitle":"Refactor code to conform to code quality guide","messageBody":"Code conforms largely to code quality guide, but there is still room for improvement.\n\nAdd improvements like extracting magic strings into constants, and extracting methods to SLAP hard.\n\nThis improves code readability and maintainability.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":9}}}]},{"date":"2022-09-07","commitResults":[{"hash":"4035cd6820dd4edc3fbdc791542378a60826da95","messageTitle":"Move `date` from `Event` and `Deadline` into `Task`.","messageBody":"Utilise polymorphism better.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":52}}},{"hash":"a2620e1ed5374c265d312ce8ec29a93c49151e59","messageTitle":"Add Schedule command","messageBody":"","tags":["B-ViewSchedules"],"fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":14}}},{"hash":"da2e5f700d7d7950597ccf51dbd80c9ea33aedba","messageTitle":"Refactor code to conform to style guide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":7}}}]}]},"authorFileTypeContributionMap":{"kelvinou01":{"java":1646,"md":0,"fxml":35,"sh":0,"bat":103,"gradle":54,"txt":18}},"authorContributionVariance":{"kelvinou01":129758.72},"authorDisplayNameMap":{"kelvinou01":"CS2103T-T13-2 OU J.. BIN"}}

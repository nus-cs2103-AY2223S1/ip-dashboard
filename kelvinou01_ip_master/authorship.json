[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"    private String date;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"    public Deadline(String name, String date) {","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"         * Constructor for Deadline class. Sets the deadline name and date.","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"         *","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"         * @param name The task name.","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"         * @param date The date that the task is due.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"        super(name);","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"         * String representation of a deadline. Also indicates if the deadline is done.","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date + \")\";","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":21}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"    private String period;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"    public Event(String name, String period) {","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"         * Constructor for Event class. Sets the event name and time period.","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"         *","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"         * @param name The task name.","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"         * @param period The time period where the event will take place.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"        super(name);","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"        this.period \u003d period;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"         * String representation of an event. Also indicates if the event is done.","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.period + \")\";","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":21}},{"path":"src/main/java/Roger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.util.List;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.lang.NumberFormatException;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import java.lang.StringIndexOutOfBoundsException;","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"public class Roger {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"    private static void sayGoodbye() {","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Bye bye niece and nephew.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"    private static void echo(String input) {","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(input);","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    private static void sayHello() {","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        String logo \u003d \"  ____                                \\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"                      \" |  _ \\\\    ___     __ _    ___   _ __ \\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"                      \" | |_) |  / _ \\\\   / _` |  / _ \\\\ | \u0027__|\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"                      \" |  _ \u003c  | (_) | | (_| | |  __/ | |   \\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"                      \" |_| \\\\_\\\\  \\\\___/   \\\\__, |  \\\\___| |_|   \\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"                      \"                  |___/               \";","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Hello its \\n\" + logo);","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"What you wan? What you wan?\");","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    private void list() {","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"            System.out.println(\"No tasks. Nephew must be a failure.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"            return;","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew got a lot of things to do:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"            System.out.println(String.valueOf(i+1) + \". \" + task.toString());","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"    private void add(String taskName) {","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"        Task task \u003d new Task(taskName);","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew got new task to do:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew now have \" + Integer.toString(this.tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"    private void add(Event event) {","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"        this.tasks.add(event);","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"    private void addToDo(String taskName) {","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"        ToDo toDo \u003d new ToDo(taskName);","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"        this.tasks.add(toDo);","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew got new to-do:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"  \" + toDo.toString());","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew now have \" + Integer.toString(this.tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"kelvinou01"},"content":"    private void addDeadline(String taskName, String date) {","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"kelvinou01"},"content":"        Deadline deadline \u003d new Deadline(taskName, date);","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"kelvinou01"},"content":"        this.tasks.add(deadline);","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew got new deadline, hurry up before I beat you:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"  \" + deadline);","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew now have \" + Integer.toString(this.tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":71,"author":{"gitId":"kelvinou01"},"content":"    private void addEvent(String taskName, String period) {","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"kelvinou01"},"content":"        Event event \u003d new Event(taskName, period);","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"kelvinou01"},"content":"        this.tasks.add(event);","lastModifiedDate":"2022-08-15"},{"lineNumber":74,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew so busy, got new event:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":75,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"  \" + event);","lastModifiedDate":"2022-08-15"},{"lineNumber":76,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew now have \" + Integer.toString(this.tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":77,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":78,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":79,"author":{"gitId":"kelvinou01"},"content":"    private void markAsDone(int taskNum) {","lastModifiedDate":"2022-08-15"},{"lineNumber":80,"author":{"gitId":"kelvinou01"},"content":"        Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":81,"author":{"gitId":"kelvinou01"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-15"},{"lineNumber":82,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Fuiyoh, nephew so efficient! Finished this task:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"kelvinou01"},"content":"    private void unmarkAsDone(int taskNum) {","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"kelvinou01"},"content":"        Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"kelvinou01"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Haven\u0027t done yet, mark what mark? Unmarked this task:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":91,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":92,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":93,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":94,"author":{"gitId":"kelvinou01"},"content":"    private void deleteTask(int taskNum) {","lastModifiedDate":"2022-08-15"},{"lineNumber":95,"author":{"gitId":"kelvinou01"},"content":"        Task task \u003d this.tasks.remove(taskNum - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":96,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":97,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Haiya so lazy. Deleted this task:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":99,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Nephew now have \" + Integer.toString(this.tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":100,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":101,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":102,"author":{"gitId":"kelvinou01"},"content":"    private void handleAddToDo(String input) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-15"},{"lineNumber":103,"author":{"gitId":"kelvinou01"},"content":"        String taskName;","lastModifiedDate":"2022-08-15"},{"lineNumber":104,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":105,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":106,"author":{"gitId":"kelvinou01"},"content":"            taskName \u003d input.substring(5);","lastModifiedDate":"2022-08-15"},{"lineNumber":107,"author":{"gitId":"kelvinou01"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":108,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must tell me the to-do name!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":109,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":110,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":111,"author":{"gitId":"kelvinou01"},"content":"        this.addToDo(taskName);","lastModifiedDate":"2022-08-15"},{"lineNumber":112,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":113,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":114,"author":{"gitId":"kelvinou01"},"content":"    private void handleAddDeadline(String input) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-15"},{"lineNumber":115,"author":{"gitId":"kelvinou01"},"content":"        int dateIdx \u003d input.indexOf(\"/by\");","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":117,"author":{"gitId":"kelvinou01"},"content":"        if (dateIdx \u003d\u003d -1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":118,"author":{"gitId":"kelvinou01"},"content":"            if (input.length() \u003c\u003d 9) {","lastModifiedDate":"2022-08-15"},{"lineNumber":119,"author":{"gitId":"kelvinou01"},"content":"                throw new RogerInvalidInputException(\"Nephew must tell me the deadline name!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":120,"author":{"gitId":"kelvinou01"},"content":"            } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":121,"author":{"gitId":"kelvinou01"},"content":"                throw new RogerInvalidInputException(\"Nephew must tell me when is the deadline, with /by\");","lastModifiedDate":"2022-08-15"},{"lineNumber":122,"author":{"gitId":"kelvinou01"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":123,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":124,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":125,"author":{"gitId":"kelvinou01"},"content":"        String taskName \u003d input.substring(9, dateIdx - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":126,"author":{"gitId":"kelvinou01"},"content":"        String date \u003d input.substring(dateIdx + 4);","lastModifiedDate":"2022-08-15"},{"lineNumber":127,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":128,"author":{"gitId":"kelvinou01"},"content":"        if (taskName.isBlank()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":129,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must tell me the deadline name!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":130,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":131,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":132,"author":{"gitId":"kelvinou01"},"content":"        this.addDeadline(taskName, date);","lastModifiedDate":"2022-08-15"},{"lineNumber":133,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":134,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":135,"author":{"gitId":"kelvinou01"},"content":"    private void handleAddEvent(String input) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-15"},{"lineNumber":136,"author":{"gitId":"kelvinou01"},"content":"        int periodIdx \u003d input.indexOf(\"/at\");","lastModifiedDate":"2022-08-15"},{"lineNumber":137,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":138,"author":{"gitId":"kelvinou01"},"content":"        if (periodIdx \u003d\u003d -1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":139,"author":{"gitId":"kelvinou01"},"content":"            if (input.length() \u003c\u003d 6) {","lastModifiedDate":"2022-08-15"},{"lineNumber":140,"author":{"gitId":"kelvinou01"},"content":"                throw new RogerInvalidInputException(\"Nephew must tell me the event name!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":141,"author":{"gitId":"kelvinou01"},"content":"            } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":142,"author":{"gitId":"kelvinou01"},"content":"                throw new RogerInvalidInputException(\"Nephew must tell me when is the event, with /at\");","lastModifiedDate":"2022-08-15"},{"lineNumber":143,"author":{"gitId":"kelvinou01"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":144,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":145,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":146,"author":{"gitId":"kelvinou01"},"content":"        String taskName \u003d input.substring(6, periodIdx - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":147,"author":{"gitId":"kelvinou01"},"content":"        String period \u003d input.substring(periodIdx + 4);","lastModifiedDate":"2022-08-15"},{"lineNumber":148,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":149,"author":{"gitId":"kelvinou01"},"content":"        if (period.isBlank()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":150,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must tell me the event name!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":151,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":152,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":153,"author":{"gitId":"kelvinou01"},"content":"        this.addEvent(taskName, period);","lastModifiedDate":"2022-08-15"},{"lineNumber":154,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":155,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":156,"author":{"gitId":"kelvinou01"},"content":"    private void handleMark(String input) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-15"},{"lineNumber":157,"author":{"gitId":"kelvinou01"},"content":"        int idx;","lastModifiedDate":"2022-08-15"},{"lineNumber":158,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":159,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":160,"author":{"gitId":"kelvinou01"},"content":"            idx \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2022-08-15"},{"lineNumber":161,"author":{"gitId":"kelvinou01"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":162,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must tell me which task to mark!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":163,"author":{"gitId":"kelvinou01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":164,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must give me the task number!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":165,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":166,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":167,"author":{"gitId":"kelvinou01"},"content":"        if (idx \u003c 1 || this.tasks.size() \u003c idx) {","lastModifiedDate":"2022-08-15"},{"lineNumber":168,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Task \" + String.valueOf(idx) + \" doesn\u0027t exist, just like my love for Aunty Helen.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":169,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":170,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":171,"author":{"gitId":"kelvinou01"},"content":"        this.markAsDone(idx);","lastModifiedDate":"2022-08-15"},{"lineNumber":172,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":173,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":174,"author":{"gitId":"kelvinou01"},"content":"    private void handleUnmark(String input) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-15"},{"lineNumber":175,"author":{"gitId":"kelvinou01"},"content":"        int idx;","lastModifiedDate":"2022-08-15"},{"lineNumber":176,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":177,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":178,"author":{"gitId":"kelvinou01"},"content":"            idx \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-15"},{"lineNumber":179,"author":{"gitId":"kelvinou01"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":180,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must tell me which task to unmark!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":181,"author":{"gitId":"kelvinou01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":182,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must give me the task number!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":183,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":184,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":185,"author":{"gitId":"kelvinou01"},"content":"        if (idx \u003c 1 || this.tasks.size() \u003c idx) {","lastModifiedDate":"2022-08-15"},{"lineNumber":186,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Task \" + String.valueOf(idx) + \" doesn\u0027t exist, just like my love for Aunty Helen.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":187,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":188,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":189,"author":{"gitId":"kelvinou01"},"content":"        this.unmarkAsDone(idx);","lastModifiedDate":"2022-08-15"},{"lineNumber":190,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":191,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":192,"author":{"gitId":"kelvinou01"},"content":"    private void handleDelete(String input) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-15"},{"lineNumber":193,"author":{"gitId":"kelvinou01"},"content":"        int idx;","lastModifiedDate":"2022-08-15"},{"lineNumber":194,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":195,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":196,"author":{"gitId":"kelvinou01"},"content":"            idx \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-15"},{"lineNumber":197,"author":{"gitId":"kelvinou01"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":198,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must tell me which task to delete!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":199,"author":{"gitId":"kelvinou01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":200,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Nephew must give me the task number!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":201,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":202,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":203,"author":{"gitId":"kelvinou01"},"content":"        if (idx \u003c 1 || this.tasks.size() \u003c idx) {","lastModifiedDate":"2022-08-15"},{"lineNumber":204,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Task \" + String.valueOf(idx) + \" doesn\u0027t exist, just like my love for Aunty Helen.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":205,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":206,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":207,"author":{"gitId":"kelvinou01"},"content":"        this.deleteTask(idx);","lastModifiedDate":"2022-08-15"},{"lineNumber":208,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":209,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":210,"author":{"gitId":"kelvinou01"},"content":"    private void handleUnknownInput() {","lastModifiedDate":"2022-08-15"},{"lineNumber":211,"author":{"gitId":"kelvinou01"},"content":"        System.out.println(\"Uncle really don\u0027t understand.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":212,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":213,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":214,"author":{"gitId":"kelvinou01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-15"},{"lineNumber":215,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":216,"author":{"gitId":"kelvinou01"},"content":"         * Logic for Roger program. Takes user input and matches it","lastModifiedDate":"2022-08-15"},{"lineNumber":217,"author":{"gitId":"kelvinou01"},"content":"         * with various commands (list, mark, unmark, todo, deadline, event, bye).","lastModifiedDate":"2022-08-15"},{"lineNumber":218,"author":{"gitId":"kelvinou01"},"content":"         * \u0027bye\u0027 shuts Roger down.","lastModifiedDate":"2022-08-15"},{"lineNumber":219,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":220,"author":{"gitId":"kelvinou01"},"content":"        Roger roger \u003d new Roger();","lastModifiedDate":"2022-08-15"},{"lineNumber":221,"author":{"gitId":"kelvinou01"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-15"},{"lineNumber":222,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":223,"author":{"gitId":"kelvinou01"},"content":"        roger.sayHello();","lastModifiedDate":"2022-08-15"},{"lineNumber":224,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":225,"author":{"gitId":"kelvinou01"},"content":"        while (true) {","lastModifiedDate":"2022-08-15"},{"lineNumber":226,"author":{"gitId":"kelvinou01"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2022-08-15"},{"lineNumber":227,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":228,"author":{"gitId":"kelvinou01"},"content":"            try {","lastModifiedDate":"2022-08-15"},{"lineNumber":229,"author":{"gitId":"kelvinou01"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":230,"author":{"gitId":"kelvinou01"},"content":"                    roger.sayGoodbye();","lastModifiedDate":"2022-08-15"},{"lineNumber":231,"author":{"gitId":"kelvinou01"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":232,"author":{"gitId":"kelvinou01"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":233,"author":{"gitId":"kelvinou01"},"content":"                    roger.list();","lastModifiedDate":"2022-08-15"},{"lineNumber":234,"author":{"gitId":"kelvinou01"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":235,"author":{"gitId":"kelvinou01"},"content":"                    roger.handleMark(input);","lastModifiedDate":"2022-08-15"},{"lineNumber":236,"author":{"gitId":"kelvinou01"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":237,"author":{"gitId":"kelvinou01"},"content":"                    roger.handleUnmark(input);","lastModifiedDate":"2022-08-15"},{"lineNumber":238,"author":{"gitId":"kelvinou01"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":239,"author":{"gitId":"kelvinou01"},"content":"                    roger.handleAddToDo(input);","lastModifiedDate":"2022-08-15"},{"lineNumber":240,"author":{"gitId":"kelvinou01"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":241,"author":{"gitId":"kelvinou01"},"content":"                    roger.handleAddDeadline(input);","lastModifiedDate":"2022-08-15"},{"lineNumber":242,"author":{"gitId":"kelvinou01"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":243,"author":{"gitId":"kelvinou01"},"content":"                    roger.handleAddEvent(input);","lastModifiedDate":"2022-08-15"},{"lineNumber":244,"author":{"gitId":"kelvinou01"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":245,"author":{"gitId":"kelvinou01"},"content":"                    roger.handleDelete(input);","lastModifiedDate":"2022-08-15"},{"lineNumber":246,"author":{"gitId":"kelvinou01"},"content":"                } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":247,"author":{"gitId":"kelvinou01"},"content":"                    roger.handleUnknownInput();","lastModifiedDate":"2022-08-15"},{"lineNumber":248,"author":{"gitId":"kelvinou01"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":249,"author":{"gitId":"kelvinou01"},"content":"            } catch (RogerInvalidInputException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":250,"author":{"gitId":"kelvinou01"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-15"},{"lineNumber":251,"author":{"gitId":"kelvinou01"},"content":"                continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":252,"author":{"gitId":"kelvinou01"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":253,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":254,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":255,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"kelvinou01":255}},{"path":"src/main/java/RogerInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"public class RogerInvalidInputException extends Exception{","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"     * Raised when Roger receives an invalid input.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"    public RogerInvalidInputException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates a Task. Task supports marking as done, unmarking,","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":" * and a string representation.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"    private String name;","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"         * Constructor for Task class. Sets the task name.","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"         *","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"         * @param name The task name.","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"         * Mark this task as done.","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"         * Mark this task as not done.","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"         * String representation of a task. Also indicates if the task is done.","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":39}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"         * Constructor for ToDo class. Sets the ToDo name.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"         *","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"         * @param name The ToDo name.","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"        super(name);","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"        /**","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"         * String representation of a ToDo. Also indicates if the ToDo is done.","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"         */","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"todo borrow book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"blah","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"mark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"mark 4","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"unmark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"unmark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"unmark 4","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"delete 0","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"delete 2","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"delete 3","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"java -classpath ../bin Roger \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"kelvinou01":1}}]

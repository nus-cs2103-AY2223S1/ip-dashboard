[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"plugins {","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"repositories {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"dependencies {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"test {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"    testLogging {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"        showExceptions true","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"        showCauses true","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"application {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"    mainClassName \u003d \"roger.Launcher\"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"shadowJar {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"    archiveBaseName \u003d \"roger\"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"checkstyle {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"    sourceSets \u003d []  // Only run checkstyle when we explicitly call it","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"javafx {","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"    version \u003d \"18.0.2\"","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"run{","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":54}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"@rem","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"goto fail","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"echo.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"kelvinou01"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"kelvinou01"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"kelvinou01"},"content":"goto fail","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"kelvinou01"},"content":":init","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"kelvinou01"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"kelvinou01"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"kelvinou01"},"content":":win9xME_args","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"kelvinou01"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"kelvinou01"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"kelvinou01"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"kelvinou01"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"kelvinou01"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"kelvinou01"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"kelvinou01"},"content":":execute","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"kelvinou01"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"kelvinou01"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"kelvinou01"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"kelvinou01"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"kelvinou01"},"content":":end","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"kelvinou01"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"kelvinou01"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"kelvinou01"},"content":":fail","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"kelvinou01"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"kelvinou01"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"kelvinou01"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"kelvinou01"},"content":"exit /b 1","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"kelvinou01"},"content":":mainEnd","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"kelvinou01"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"kelvinou01"},"content":":omega","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":103}},{"path":"src/main/java/roger/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"     * Main class to launch Roger.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"     * @param args Ignored arguments.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kelvinou01":18}},{"path":"src/main/java/roger/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"import roger.ui.Parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"import roger.ui.Response;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"import roger.ui.controllers.DialogBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"import roger.ui.controllers.MainWindow;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    private Roger roger;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     * Start the Roger backend, and the JavaFX UI elements.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     * @param stage","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"        storage \u003d new Storage(Paths.get(\"data/database.txt\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"        roger \u003d new Roger(parser, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"            MainWindow mainWindow \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"            mainWindow.setRogerClass(roger);","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"            stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"            mainWindow.greet();","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kelvinou01":48}},{"path":"src/main/java/roger/Roger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import roger.exceptions.RogerInvalidInputException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.StorageParser;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"import roger.ui.Parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"import roger.ui.Response;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":" * Main class for the Roger task-tracking GUI program.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"public class Roger {","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"     * Create an instance of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    public Roger(Parser parser, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"            List\u003cString\u003e taskStrings \u003d this.storage.load();","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"            for (String taskString : taskStrings) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"                this.tasks.add(StorageParser.toTask(taskString));","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"        } catch (IOException | IllegalArgumentException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"            System.out.println(\"Storage is corrupted. Starting over with a fresh database.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"     * Save tasks to the database.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"    public void saveTasksToDatabase() {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"            List\u003cString\u003e newTaskStrings \u003d this.tasks.toTaskStrings();","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"            storage.write(newTaskStrings);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"            System.out.println(\"Unable to write tasks to database. Check the path provided.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"     * Returns Roger\u0027s response to the user input","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"     * @param input User input","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"     * @return Roger\u0027s response.","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"            Command command \u003d this.parser.parse(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"kelvinou01"},"content":"            String message \u003d command.execute(this.tasks, this.storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"kelvinou01"},"content":"            return new Response(message, command.isExit(), false);","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"kelvinou01"},"content":"        } catch (RogerInvalidInputException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"kelvinou01"},"content":"            return new Response(e.getMessage(), false, true);","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"kelvinou01"},"content":"     * Returns Roger\u0027s greeting to the user upon program startup","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"kelvinou01"},"content":"     * @return Roger\u0027s greeting.","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"kelvinou01"},"content":"    public Response getGreeting() {","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"kelvinou01"},"content":"        String greeting \u003d \"Hello, this is Roger. \\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"kelvinou01"},"content":"                + \"What you wan? What you wan?\";","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"kelvinou01"},"content":"        return new Response(greeting, false, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"kelvinou01":79}},{"path":"src/main/java/roger/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to add a deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    protected String taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     * Create a AddDeadlineCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"     * @param taskName The deadline name.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"     * @param date The due date.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    public AddDeadlineCommand(String taskName, LocalDate date) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"     * Add the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"        Deadline deadline \u003d new Deadline(this.taskName, this.date);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"        return \"Nephew got new deadline, hurry up before I beat you:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"                + deadline.toString() + \"\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"                + \"Nephew now have \" + Integer.toString(tasks.getLength()) + \" tasks in the list.\";","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":43}},{"path":"src/main/java/roger/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to add an event.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    protected String taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     * Create a AddEventCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"     * @param taskName The event name.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"     * @param date The event date.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    public AddEventCommand(String taskName, LocalDate date) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"     * Add the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"        Event event \u003d new Event(this.taskName, this.date);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"        tasks.add(event);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        return \"Nephew so busy, got new event:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"                + event.toString() + \"\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"                + \"Nephew now have \" + Integer.toString(tasks.getLength()) + \" tasks in the list.\";","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":41}},{"path":"src/main/java/roger/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to add a to-do.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"    protected String taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     * Create a AddToDoCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     * @param taskName The to-do name.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"    public AddToDoCommand(String taskName) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"     * Add the to-do.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"        ToDo toDo \u003d new ToDo(taskName);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"        tasks.add(toDo);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"        return \"Nephew got new to-do:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"                + toDo.toString() + \"\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"                + \"Nephew now have \" + Integer.toString(tasks.getLength()) + \" tasks in the list.\";","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":37}},{"path":"src/main/java/roger/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates a command that the user gives to the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"     * Don\u0027t allow accessing constructor outside Command subclasses.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    protected Command() {}","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     * Execute the command and return any relevant information.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"    public abstract String execute(TaskList tasks, Storage storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"     * Returns true only if the command should cause Roger to exit.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     * @return true only if the command should cause Roger to exit.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":30}},{"path":"src/main/java/roger/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to delete a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    protected int taskNum;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     * Create a DeleteTaskCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     * @param taskNum The taskNum of the task to be deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    public DeleteTaskCommand(int taskNum) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"     * Delete the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"        Task task \u003d tasks.delete(taskNum);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"        return \"Haiya so lazy. Deleted this task:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"                + \"Nephew now have \" + Integer.toString(tasks.getLength()) + \" tasks in the list.\";","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":35}},{"path":"src/main/java/roger/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to exit Roger.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"     * Exit the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        return \"Bye bye niece and nephew\";","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"     * Returns true, signalling the Roger program to exit.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     * @return true","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":31}},{"path":"src/main/java/roger/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to delete a task.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"    protected String query;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     * Create a FindCommand.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"     * @param query The query string to search on.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"        this.query \u003d query;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     * Find and return any tasks that contain the given query string.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"        List\u003cTask\u003e tasksMatched \u003d tasks.search(this.query);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"        if (tasksMatched.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"            return \"No tasks matching that string.\";","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"        for (Task task: tasksMatched) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"            response.append(String.valueOf(tasks.getTaskNum(task)) + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"        return response.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":45}},{"path":"src/main/java/roger/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to list all tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"     * List all tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"            return \"No tasks. Nephew must be a failure.\";","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"        StringBuilder response \u003d new StringBuilder(\"Nephew got a lot of things to do:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"        for (int taskNum \u003d 1; taskNum \u003c tasks.getLength() + 1; ++taskNum) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"            Task task \u003d tasks.get(taskNum);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"            response.append(String.valueOf(taskNum) + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"        return response.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":32}},{"path":"src/main/java/roger/commands/ListOnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to list all tasks on a certain date.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"public class ListOnDateCommand extends ListCommand {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     * Create a ListOnDateCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"     * @param date The date to list tasks for.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    public ListOnDateCommand(LocalDate date) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     * List all tasks on the specified date.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"        response.append(\"Nephew have to do these things on \" + date.toString() + \":\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"        List\u003cTask\u003e filtered \u003d tasks.filter(date);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        for (Task task: filtered) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"            response.append(String.valueOf(tasks.getTaskNum(task)) + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"        return response.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":42}},{"path":"src/main/java/roger/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to mark a task as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    protected int taskNum;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     * Create a MarkCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     * @param taskNum The taskNum of the task to be marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"     * Mark the task as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"        Task task;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"            task \u003d tasks.get(this.taskNum);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"            return \"That task does not exist!\";","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        return \"Fuiyoh, nephew so efficient! Finished this task:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"                + task.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":41}},{"path":"src/main/java/roger/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates a command that the program does not understand.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"     * Notify the user that Roger does not understand the command.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        return \"Uncle really don\u0027t understand.\";","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":21}},{"path":"src/main/java/roger/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the command to unmark a task as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    protected int taskNum;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     * Create an UnmarkCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     * @param taskNum The taskNum of the task to be unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"     * Unmark the task as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The TaskList of the Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     * @param storage The storage to read and load to.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"        Task task;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"            task \u003d tasks.get(this.taskNum);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"            return \"That task does not exist!\";","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        return \"Haven\u0027t done yet, mark what mark? Unmarked this task:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"                + task.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":41}},{"path":"src/main/java/roger/exceptions/RogerInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.exceptions;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":" * Thrown when the user gives invalid input.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"public class RogerInvalidInputException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"     * Create a RogerInvalidInputException.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"     * @param message The message to be shown to the end user.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    public RogerInvalidInputException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":14}},{"path":"src/main/java/roger/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates storage for a text file.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    private Path path;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     * Create a Storage instance.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"     * @param path The file path to load and write to.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    public Storage(Path path) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     * Load a .txt file from the designated storage path.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"     * @return Each line of the .txt file.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"     * @throws IOException Could not read file.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"    public List\u003cString\u003e load() throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"        return Files.readAllLines(this.path);","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"     * Create and write to the .txt file designated in the storage path.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"     * If the file already exists, it will be overwritten.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"     * @param lines The lines of text to write to the file.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"     * @throws IOException Could not write to file.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"    public void write(List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"            Files.delete(path);","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"        } catch (IOException ignored) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"            // File does not exist yet.","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"        File file \u003d new File(String.valueOf(path.toAbsolutePath()));","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"        file.createNewFile();","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"        for (String line: lines) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"            fw.append(line + \u0027\\n\u0027);","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"        fw.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"kelvinou01":61}},{"path":"src/main/java/roger/storage/StorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the storage format for tasks, and conversion between the","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":" * `taskString` storage format and Task instances.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":" * We define two valid taskString formats:","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":" * 1. \"E | 1 | task name | 2022-10-02\"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":" * 2. \"E | 1 | task name\"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"public class StorageParser {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    private static final String TASK_TYPE_EVENT \u003d \"E\";","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"    private static final String TASK_TYPE_DEADLINE \u003d \"D\";","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    private static final String TASK_TYPE_TODO \u003d \"T\";","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    private static final String TASK_INDICATOR_DONE \u003d \"1\";","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    private static final String TASK_INDICATOR_NOT_DONE \u003d \"0\";","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     * Parse the taskString.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"     * @param taskString String in the taskString format.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"     * @return The task corresponding to the taskString.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"    public static Task toTask(String taskString) {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"        String[] args \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"        String taskType \u003d args[0];","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"            switch (taskType) {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"            case TASK_TYPE_EVENT:","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"                return StorageParser.toEvent(args);","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"            case TASK_TYPE_DEADLINE:","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"                return StorageParser.toDeadline(args);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"            case TASK_TYPE_TODO:","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"                return StorageParser.toToDo(args);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"            default:","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"                        \"taskString does not have a valid task type (\u0027E\u0027, \u0027D\u0027, \u0027T\u0027).\");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"            throw new IllegalArgumentException(\"Unable to parse taskString\");","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"    private static Event toEvent(String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"        boolean isDone \u003d args[1].equals(TASK_INDICATOR_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"        String name \u003d args[2];","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"        LocalDate date \u003d LocalDate.parse(args[3]);","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"        Event event \u003d new Event(name, date);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"            event.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"kelvinou01"},"content":"        return event;","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"kelvinou01"},"content":"    private static Deadline toDeadline(String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"kelvinou01"},"content":"        boolean isDone \u003d args[1].equals(TASK_INDICATOR_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"kelvinou01"},"content":"        String name \u003d args[2];","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"kelvinou01"},"content":"        LocalDate date \u003d LocalDate.parse(args[3]);","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"kelvinou01"},"content":"        Deadline deadline \u003d new Deadline(name, date);","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"kelvinou01"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"kelvinou01"},"content":"            deadline.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"kelvinou01"},"content":"        return deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"kelvinou01"},"content":"    private static ToDo toToDo(String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"kelvinou01"},"content":"        boolean isDone \u003d args[1].equals(TASK_INDICATOR_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"kelvinou01"},"content":"        String name \u003d args[2];","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"kelvinou01"},"content":"        ToDo todo \u003d new ToDo(name);","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"kelvinou01"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"kelvinou01"},"content":"            todo.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"kelvinou01"},"content":"        return todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"kelvinou01"},"content":"     * Parse the Task.","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"kelvinou01"},"content":"     * @param task The task to be parsed.","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"kelvinou01"},"content":"     * @return The taskString corresponding to the Task.","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"kelvinou01"},"content":"    public static String toTaskString(Task task) {","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"kelvinou01"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"kelvinou01"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"kelvinou01"},"content":"            return StorageParser.toTaskString(event);","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"kelvinou01"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"kelvinou01"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"kelvinou01"},"content":"            return StorageParser.toTaskString(deadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"kelvinou01"},"content":"        } else if (task instanceof ToDo) {","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"kelvinou01"},"content":"            ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"kelvinou01"},"content":"            return StorageParser.toTaskString(todo);","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"kelvinou01"},"content":"        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"kelvinou01"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"kelvinou01"},"content":"                    \"Task does not belong to either Event, Deadline, or ToDo task.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"kelvinou01"},"content":"    private static String toTaskString(Event event) {","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"kelvinou01"},"content":"        return String.format(","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"kelvinou01"},"content":"                \"%s | %s | %s | %s\",","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"kelvinou01"},"content":"                TASK_TYPE_EVENT,","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"kelvinou01"},"content":"                event.isDone() ? TASK_INDICATOR_DONE : TASK_INDICATOR_NOT_DONE,","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"kelvinou01"},"content":"                event.getName(),","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"kelvinou01"},"content":"                event.getDate().toString()","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"kelvinou01"},"content":"        );","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"kelvinou01"},"content":"    private static String toTaskString(Deadline deadline) {","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"kelvinou01"},"content":"        return String.format(","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"kelvinou01"},"content":"                \"%s | %s | %s | %s\",","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"kelvinou01"},"content":"                TASK_TYPE_DEADLINE,","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"kelvinou01"},"content":"                deadline.isDone() ? TASK_INDICATOR_DONE : TASK_INDICATOR_NOT_DONE,","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"kelvinou01"},"content":"                deadline.getName(),","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"kelvinou01"},"content":"                deadline.getDate().toString()","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"kelvinou01"},"content":"        );","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"kelvinou01"},"content":"    private static String toTaskString(ToDo todo) {","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"kelvinou01"},"content":"        return String.format(","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"kelvinou01"},"content":"                \"%s | %s | %s\",","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"kelvinou01"},"content":"                TASK_TYPE_TODO,","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"kelvinou01"},"content":"                todo.isDone() ? TASK_INDICATOR_DONE : TASK_INDICATOR_NOT_DONE,","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"kelvinou01"},"content":"                todo.getName()","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"kelvinou01"},"content":"        );","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"kelvinou01":142}},{"path":"src/main/java/roger/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates a deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"     * Create a Deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     * @param name The deadline name.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     * @param date The due date.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"        super(name);","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"     * Returns true if the deadline falls on the given date.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     * @param date The date to check with.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     * @return true if the deadline falls on the given date.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"        return this.date.equals(date);","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"     * String representation of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.toString() + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"     * Returns the date of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"     * @return The date of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"        return this.date;","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":50}},{"path":"src/main/java/roger/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates an event.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"     * Create an event.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     * @param name The name of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     * @param date The date of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    public Event(String name, LocalDate date) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        super(name);","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"        return this.date.equals(date);","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     * String representation of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date.toString() + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"     * Returns the date of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"     * @return The date of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"        return this.date;","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":45}},{"path":"src/main/java/roger/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates a Task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"    protected String name;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"     * Create a Task with a name.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"     * Mark as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     * Unmark as done","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"     * String representation of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"     * Get the name of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"     * @return The name of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"    public String getName() {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"        return this.name;","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"     * Returns true if the task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"     * @return true if the task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":59}},{"path":"src/main/java/roger/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import java.util.List;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.StorageParser;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates the list of tasks in a Roger program.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     * Create an empty TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"     * Create a TaskList, and initialize it with a list of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"     * @param tasks The tasks to be added.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"     * Add a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"     * Delete a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"     * @param taskNum The taskNum of the task to be deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"    public Task delete(int taskNum) {","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"        return this.tasks.remove(taskNum - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"     * Get a task from its taskNum.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"     * @param taskNum The taskNum of the task to be retrieved.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"     * @return The desired task.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"    public Task get(int taskNum) {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"        return this.tasks.get(taskNum - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"kelvinou01"},"content":"     * Get the number of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"kelvinou01"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"kelvinou01"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"kelvinou01"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"kelvinou01"},"content":"     * Mark a task as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"kelvinou01"},"content":"     * @param taskNum The taskNum of the task to be marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"kelvinou01"},"content":"    public void markAsDone(int taskNum) {","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"kelvinou01"},"content":"        this.get(taskNum).markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"kelvinou01"},"content":"     * Unmark a task as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"kelvinou01"},"content":"     * @param taskNum The taskNum of the task to be unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"kelvinou01"},"content":"    public void unmarkAsDone(int taskNum) {","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"kelvinou01"},"content":"        this.get(taskNum).unmarkAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"kelvinou01"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"kelvinou01"},"content":"     * @return true only if the TaskList is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"kelvinou01"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"kelvinou01"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"kelvinou01"},"content":"     * Returns the taskStrings of the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"kelvinou01"},"content":"     * @return A list of the taskStrings of the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"kelvinou01"},"content":"    public List\u003cString\u003e toTaskStrings() {","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"kelvinou01"},"content":"        return this.tasks.stream()","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"kelvinou01"},"content":"                .map(StorageParser::toTaskString)","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"kelvinou01"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"kelvinou01"},"content":"     * Returns the string representations of the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"kelvinou01"},"content":"     * @return A list of the string representations of the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"kelvinou01"},"content":"    public List\u003cString\u003e toDisplayStrings() {","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"kelvinou01"},"content":"        return this.tasks.stream()","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"kelvinou01"},"content":"                .map(Task::toString)","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"kelvinou01"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"kelvinou01"},"content":"     * Filter the tasks by date.","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"kelvinou01"},"content":"     * @param date The date to filter on.","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"kelvinou01"},"content":"     * @return A list of tasks that occur on that date.","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"kelvinou01"},"content":"    public List\u003cTask\u003e filter(LocalDate date) {","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"kelvinou01"},"content":"        List\u003cTask\u003e filtered \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"kelvinou01"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); ++i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"kelvinou01"},"content":"            Task task \u003d this.tasks.get(i - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"kelvinou01"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"kelvinou01"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"kelvinou01"},"content":"                if (event.isOnDate(date)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"kelvinou01"},"content":"                    filtered.add(event);","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"kelvinou01"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"kelvinou01"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"kelvinou01"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"kelvinou01"},"content":"                if (deadline.isOnDate(date)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"kelvinou01"},"content":"                    filtered.add(deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"kelvinou01"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"kelvinou01"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"kelvinou01"},"content":"        return filtered;","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"kelvinou01"},"content":"     * Filters the tasks based on whether the query string appeears in the task name.","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"kelvinou01"},"content":"     * @param query The query string to filter on.","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"kelvinou01"},"content":"     * @return A list of tasks whose name contains the query string.","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"kelvinou01"},"content":"    public List\u003cTask\u003e search(String query) {","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"kelvinou01"},"content":"        return this.tasks.stream()","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"kelvinou01"},"content":"                .filter(task -\u003e task.getName().contains(query))","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"kelvinou01"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"kelvinou01"},"content":"     * Returns the taskNum of the task if it is in the list, or -1 otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"kelvinou01"},"content":"     * @param task The task to get the taskNum for.","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"kelvinou01"},"content":"     * @return The taskNum of the task, or -1 if task is not in list.","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"kelvinou01"},"content":"    public int getTaskNum(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"kelvinou01"},"content":"        int taskIndex \u003d this.tasks.indexOf(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"kelvinou01"},"content":"        return taskIndex \u003d\u003d -1 ? -1 : taskIndex + 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"kelvinou01":169}},{"path":"src/main/java/roger/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":" * Encapsualtes a ToDo.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"     * Constructor for ToDo class. Sets the ToDo name.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"     * @param name The ToDo name.","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"        super(name);","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"     * String representation of the todo.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"     * @return The string representation of the todo.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":26}},{"path":"src/main/java/roger/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.AddDeadlineCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.AddEventCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.AddToDoCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.DeleteTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.ExitCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.FindCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.ListCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.ListOnDateCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.MarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.UnknownCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.UnmarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"import roger.exceptions.RogerInvalidInputException;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates logic for parsing user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"    private final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"     * Parses user input and return the corresponding command.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"     * @param input User input.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"     * @return The command corresponding to the user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"     * @throws RogerInvalidInputException If the command is known but the argument format is incorrect.","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"    public Command parse(String input) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"        int cmdArgSeparator \u003d input.indexOf(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"        String command \u003d cmdArgSeparator \u003c 0 ? input : input.substring(0, cmdArgSeparator);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"        String arguments \u003d cmdArgSeparator \u003c 0 ? \"\" : input.substring(cmdArgSeparator + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"        switch (command) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"            return parseListArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"            return parseMarkArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"            return parseUnmarkArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"            return parseFindArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_ADD_TODO:","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"            return parseToDoArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"            return parseDeadlineArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_ADD_EVENT:","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"            return parseEventArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"kelvinou01"},"content":"            return parseDeleteArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"kelvinou01"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"kelvinou01"},"content":"            return parseExitArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"kelvinou01"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"kelvinou01"},"content":"            return parseUnknownCommandArguments(arguments);","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"kelvinou01"},"content":"    private ListCommand parseListArguments(String arguments) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"kelvinou01"},"content":"        String firstArg \u003d arguments.split(\" \")[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"kelvinou01"},"content":"        if (firstArg.isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"kelvinou01"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"kelvinou01"},"content":"            return new ListOnDateCommand(LocalDate.parse(firstArg));","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"kelvinou01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"List tasks with `list` or `list \u003cyyyy-mm-dd\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"kelvinou01"},"content":"    private MarkCommand parseMarkArguments(String arguments) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"kelvinou01"},"content":"        int taskNum;","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"kelvinou01"},"content":"            String firstArg \u003d arguments.split(\" \")[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"kelvinou01"},"content":"            taskNum \u003d Integer.parseInt(firstArg);","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"kelvinou01"},"content":"        } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Mark tasks as done with `mark \u003ctask number\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"kelvinou01"},"content":"        return new MarkCommand(taskNum);","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"kelvinou01"},"content":"    private UnmarkCommand parseUnmarkArguments(String arguments) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"kelvinou01"},"content":"        int taskNum;","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"kelvinou01"},"content":"            String firstArg \u003d arguments.split(\" \")[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"kelvinou01"},"content":"            taskNum \u003d Integer.parseInt(firstArg);","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"kelvinou01"},"content":"        } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Unmark tasks as done with `mark \u003ctask number\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"kelvinou01"},"content":"        return new UnmarkCommand(taskNum);","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"kelvinou01"},"content":"    private FindCommand parseFindArguments(String arguments) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"kelvinou01"},"content":"        String query \u003d arguments.trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"kelvinou01"},"content":"        if (query.isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Where your search term?\");","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"kelvinou01"},"content":"        return new FindCommand(query);","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"kelvinou01"},"content":"    private AddToDoCommand parseToDoArguments(String arguments) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"kelvinou01"},"content":"        String taskName \u003d arguments.trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"kelvinou01"},"content":"        if (taskName.isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Add to-do with `todo \u003cname\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"kelvinou01"},"content":"        return new AddToDoCommand(taskName);","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"kelvinou01"},"content":"    private AddDeadlineCommand parseDeadlineArguments(String arguments) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"kelvinou01"},"content":"        String taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"kelvinou01"},"content":"        LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"kelvinou01"},"content":"        int dateKeywordIndex \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"kelvinou01"},"content":"        if (dateKeywordIndex \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Add deadlines with `deadline \u003cname\u003e /by \u003cyyyy-mm-dd\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"kelvinou01"},"content":"            taskName \u003d arguments.substring(0, dateKeywordIndex - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"kelvinou01"},"content":"            date \u003d LocalDate.parse(arguments.substring(dateKeywordIndex + 4));","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"kelvinou01"},"content":"        } catch (AssertionError | ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Add deadlines with `deadline \u003cname\u003e /by \u003cyyyy-mm-dd\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"kelvinou01"},"content":"        return new AddDeadlineCommand(taskName, date);","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"kelvinou01"},"content":"    private AddEventCommand parseEventArguments(String arguments) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"kelvinou01"},"content":"        String taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"kelvinou01"},"content":"        LocalDate date;","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"kelvinou01"},"content":"        int dateKeywordIndex \u003d arguments.indexOf(\"/at\");","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"kelvinou01"},"content":"        if (dateKeywordIndex \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Add events with `event \u003cname\u003e /at \u003cyyyy-mm-dd\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"kelvinou01"},"content":"            taskName \u003d arguments.substring(0, dateKeywordIndex - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"kelvinou01"},"content":"            date \u003d LocalDate.parse(arguments.substring(dateKeywordIndex + 4));","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"kelvinou01"},"content":"        } catch (AssertionError | ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Add events with `event \u003cname\u003e /at \u003cyyyy-mm-dd\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"kelvinou01"},"content":"        return new AddEventCommand(taskName, date);","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"kelvinou01"},"content":"    private DeleteTaskCommand parseDeleteArguments(String arguments) throws RogerInvalidInputException {","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"kelvinou01"},"content":"        int taskName;","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"kelvinou01"},"content":"            String firstArg \u003d arguments.split(\" \")[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"kelvinou01"},"content":"            taskName \u003d Integer.parseInt(firstArg);","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"kelvinou01"},"content":"        } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"kelvinou01"},"content":"            throw new RogerInvalidInputException(\"Delete tasks with `delete \u003ctask number\u003e`\");","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"kelvinou01"},"content":"        return new DeleteTaskCommand(taskName);","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"kelvinou01"},"content":"    private ExitCommand parseExitArguments(String arguments) {","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"kelvinou01"},"content":"        return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"kelvinou01"},"content":"    private UnknownCommand parseUnknownCommandArguments(String arguments) {","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"kelvinou01"},"content":"        return new UnknownCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":181,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":182,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":182}},{"path":"src/main/java/roger/ui/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":" * Encapsulates a response from Roger to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"public class Response {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"    private String message;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"    private boolean isExit;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"    private boolean isException;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"     * Create a response.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"     * @param message The message from Roger to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"     * @param isExit True if Roger is asking to exit the program.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"     * @param isException True if this response is Roger notifying the user of an exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    public Response(String message, boolean isExit, boolean isException) {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"        this.isException \u003d isException;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"        return isExit;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    public boolean isException() {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"        return isException;","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"        return message;","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kelvinou01":35}},{"path":"src/main/java/roger/ui/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.ui.controllers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"    private void flip() {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"    public static DialogBox getRogerDialog(String text, Image img) {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"        db.flip();","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"        return db;","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kelvinou01":61}},{"path":"src/main/java/roger/ui/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger.ui.controllers;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"import roger.Roger;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"import roger.ui.Response;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"    private Roger roger;","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"kelvinou01"},"content":"    private Image rogerImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Roger.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"kelvinou01"},"content":"     * Initialize the GUI.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"kelvinou01"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"kelvinou01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"kelvinou01"},"content":"    public void setRogerClass(Roger r) {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"kelvinou01"},"content":"        roger \u003d r;","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"kelvinou01"},"content":"     * Greet the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"kelvinou01"},"content":"    public void greet() {","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"kelvinou01"},"content":"        Response greeting \u003d roger.getGreeting();","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"kelvinou01"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getRogerDialog(greeting.getMessage(), rogerImage));","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"kelvinou01"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"kelvinou01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"kelvinou01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"kelvinou01"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"kelvinou01"},"content":"    @FXML","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"kelvinou01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"kelvinou01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"kelvinou01"},"content":"        Response response \u003d roger.getResponse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"kelvinou01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"kelvinou01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"kelvinou01"},"content":"                DialogBox.getRogerDialog(response.getMessage(), rogerImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"kelvinou01"},"content":"        );","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"kelvinou01"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"kelvinou01"},"content":"        if (response.isExit()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"kelvinou01"},"content":"            roger.saveTasksToDatabase();","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"kelvinou01"},"content":"            Platform.exit();","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"kelvinou01"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kelvinou01":73}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kelvinou01":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"roger.ui.controllers.MainWindow\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kelvinou01":19}},{"path":"src/test/java/roger/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.commands.AddEventCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.exceptions.RogerInvalidInputException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.ui.Parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"    public void parse_deadlineNoDate_exceptionThrown() throws Exception {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"        assertThrows(RogerInvalidInputException.class, () -\u003e parser.parse(\"deadline homework\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    public void parse_markNothing_exceptionThrown() throws Exception {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"        assertThrows(RogerInvalidInputException.class, () -\u003e parser.parse(\"mark q\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"    public void parse_event_returnAddEventCommand() throws Exception {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"kelvinou01"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"kelvinou01"},"content":"        assertTrue(parser.parse(\"event happy /at 2022-10-04\") instanceof AddEventCommand);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":30}},{"path":"src/test/java/roger/StorageParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"package roger;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"import roger.storage.StorageParser;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"import roger.tasks.ToDo;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"public class StorageParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"    public void toTask_validEventString_eventReturned() {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"        assertTrue(StorageParser.toTask(\"E | 1 | Party at Marina Bay Sands | 2022-10-22\") instanceof Event);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"    public void toTask_validToDoString_toDoReturned() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"kelvinou01"},"content":"        assertTrue(StorageParser.toTask(\"T | 1 | Party at Marina Bay Sands\") instanceof ToDo);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"kelvinou01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"kelvinou01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"kelvinou01"},"content":"    public void toTask_invalidTaskString_exceptionThrown() {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"kelvinou01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e StorageParser.toTask(\"foo bar\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"kelvinou01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"kelvinou01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"kelvinou01":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kelvinou01"},"content":"todo borrow book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"kelvinou01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"kelvinou01"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"kelvinou01"},"content":"blah","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"kelvinou01"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"kelvinou01"},"content":"mark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"kelvinou01"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"kelvinou01"},"content":"mark 4","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"kelvinou01"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"kelvinou01"},"content":"unmark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"kelvinou01"},"content":"unmark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"kelvinou01"},"content":"unmark 4","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"kelvinou01"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"kelvinou01"},"content":"delete 0","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"kelvinou01"},"content":"delete 2","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"kelvinou01"},"content":"delete 3","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"kelvinou01"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"kelvinou01"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kelvinou01":18}}]

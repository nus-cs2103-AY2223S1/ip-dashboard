[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"3. After that, locate the `src/main/java/wanya.wanya.java` file, right-click it, and choose `Run wanya.wanya.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laxus2308":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"//checkstyle {","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"//    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"//}","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"    mainClassName \u003d \"wanya.Launcher\"","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"    archiveBaseName \u003d \"Wanya\"","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laxus2308":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"# Wanya Bot User Guide","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"Wanya Bot is a chat bot that helps you keep track of tasks easily and efficiently. 😄","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"Notes about the usage format","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"- Words within \u003c\u003e are parameters to be inputted by the users.","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"Wanya Bot is able to store 4 types of tasks. ","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"1. ToDo: tasks without any date/time attached to it e.g., visit new theme park","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"2. Deadline: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2022 5pm","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"3. Event: tasks that will be happening on the specfic date/time e.g., team project meeting on 2/10/2022 2pm","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"4. Period: tasks that start at a specific date/time and ends at a specific date/time e.g., cs2103 lecture from 16/9/2022 4pm to 16/9/2022 6pm","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"### 1. Add a task","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"Adds a task, any of the 4 types mentioned above, to store in Wanya Bot. ","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"The task added will be keep tracked for completeness. ","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"For deadline, event and period, Wanya Bot will keep track of additional date time information specific to the type of tasks.","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"#### Usage","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"`todo \u003cdescription\u003e` - Adds a ToDo task with the description. ","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"`deadline \u003cdescription\u003e /by \u003cdate/time\u003e` - Adds a Deadline task with the description and due date of date/time.","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"`event \u003cdescription\u003e /at \u003cdate/time\u003e` - Adds a Event task with the description and event date of date/time.","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"`period \u003cdescription\u003e /from \u003cdate/time\u003e to \u003cdate/time\u003e` - Adds a Period task with the description and starting date/time and ending date/time.","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"##### \u003cdate/time\u003e format","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"The date/time format accepted will be of type","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"`\"YYYY-MM-DD HH:mm\" or \"YYYY-MM-DD\"` ","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"where YYYY is the year, MM is the month in number, DD is the day, HH is the hour and mm is the minute. **Time is optional but a date must be provided!**","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"Example of usage: `todo 100 push ups` ","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"Expected outcome: Adds a todo task with description 100 push ups","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"Example of usage: `deadline earn a stella star /by 2022-10-23`","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"Expected outcome: Adds a deadline task with description earn a stella star by Oct 23 2022 12:00 am","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"Example of usage: `event sports day /at 2022-09-30 13:00` ","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"Expected outcome: Adds a event task with description sports day at Sep 30 2022 01:00 pm","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"Example of usage: `period recess week /from 2022-09-17 to 2022-09-25 23:59`","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"Expected outcome: Adds a period task with description recess week from Sep 17 2022 12:00am to Sep 25 2022 11:59 pm","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"![image](https://user-images.githubusercontent.com/78785369/190052466-69c8746a-3887-4994-9d5f-61e931df3686.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"### 2. List all tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"laxus2308"},"content":"Display all the tasks currently in task list and their completedness. ","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"laxus2308"},"content":"The first [ ] represents the task type, and the second [ ] represents the completedness. If the task is completed, it will be displayed as [X], otherwise, it will be [ ].","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"laxus2308"},"content":"#### Usage","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"laxus2308"},"content":"`list`","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"laxus2308"},"content":"![image](https://user-images.githubusercontent.com/78785369/190053677-69d52b21-62d0-4ffd-a5cb-d8cac23459ba.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"laxus2308"},"content":"### 3. Mark task","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"laxus2308"},"content":"Marks the task as completed and display that task.","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"laxus2308"},"content":"#### Usage","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"laxus2308"},"content":"`mark \u003cindex\u003e` - Marks the task at index as completed. ","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"laxus2308"},"content":"Example of usage: `mark 4` - Marks the task at index 4 as completed.","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"laxus2308"},"content":"![image](https://user-images.githubusercontent.com/78785369/190054158-75716176-12ad-4ca1-ad7f-ff01ef2f5dd8.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":81,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":82,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"laxus2308"},"content":"### 4. Unmark task","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"laxus2308"},"content":"Marks the task as uncompleted and display that task.","lastModifiedDate":"2022-09-14"},{"lineNumber":86,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"laxus2308"},"content":"#### Usage","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"laxus2308"},"content":"`unmark \u003cindex\u003e` - Unmarks the task at index as uncompleted.","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"laxus2308"},"content":"Example of usage: `unmark 4` - Marks the task at index 4 as uncompleted.","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"laxus2308"},"content":"![image](https://user-images.githubusercontent.com/78785369/190054483-62dbaee2-18f4-4c7b-b3d5-d09d7d3cec0e.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"laxus2308"},"content":"### 5. Delete task","lastModifiedDate":"2022-09-14"},{"lineNumber":94,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"laxus2308"},"content":"Deletes the tasks from task list.","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":97,"author":{"gitId":"laxus2308"},"content":"#### Usage","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"laxus2308"},"content":"`delete \u003cindex\u003e` - Deletes the task at index from task list.","lastModifiedDate":"2022-09-14"},{"lineNumber":99,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":100,"author":{"gitId":"laxus2308"},"content":"Example of usage: `delete 1` - Delete the task at index 1.","lastModifiedDate":"2022-09-14"},{"lineNumber":101,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":102,"author":{"gitId":"laxus2308"},"content":"![image](https://user-images.githubusercontent.com/78785369/190054904-82216cb2-29a3-4bb3-afda-798d59dff8c1.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":103,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":104,"author":{"gitId":"laxus2308"},"content":"### 6. Find task","lastModifiedDate":"2022-09-14"},{"lineNumber":105,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":106,"author":{"gitId":"laxus2308"},"content":"Finds the task by searching for a keyword in the task description.","lastModifiedDate":"2022-09-14"},{"lineNumber":107,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":108,"author":{"gitId":"laxus2308"},"content":"#### Usage","lastModifiedDate":"2022-09-14"},{"lineNumber":109,"author":{"gitId":"laxus2308"},"content":"`find \u003ckeyword\u003e` - Finds the tasks that contains the keyword in the task description.","lastModifiedDate":"2022-09-14"},{"lineNumber":110,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":111,"author":{"gitId":"laxus2308"},"content":"Example of usage: `find 100` - Finds all tasks that contains the keyword \u0027100\u0027.","lastModifiedDate":"2022-09-14"},{"lineNumber":112,"author":{"gitId":"laxus2308"},"content":"![image](https://user-images.githubusercontent.com/78785369/190055418-1ac86534-78a2-462b-93e2-11f7b4f8ff3f.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":113,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":114,"author":{"gitId":"laxus2308"},"content":"### 7. Exit","lastModifiedDate":"2022-09-14"},{"lineNumber":115,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":116,"author":{"gitId":"laxus2308"},"content":"Exit from Wanya bot.","lastModifiedDate":"2022-09-14"},{"lineNumber":117,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":118,"author":{"gitId":"laxus2308"},"content":"#### Usage","lastModifiedDate":"2022-09-14"},{"lineNumber":119,"author":{"gitId":"laxus2308"},"content":"`bye` - Exits the program.","lastModifiedDate":"2022-09-14"},{"lineNumber":120,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":121,"author":{"gitId":"laxus2308"},"content":"Expected outcome: Wanya bot will close.","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"laxus2308":107,"-":14}},{"path":"src/main/java/wanya/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"public class Launcher {","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"laxus2308":11}},{"path":"src/main/java/wanya/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"import wanya.ui.MainWindow;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author laxus2308-reused","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A GUI for Wanya using FXML.","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Wanya wanya \u003d new Wanya();","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            stage.setTitle(\"Wanya Task Bot\");","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWanya(wanya);","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showLoading();","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showGreeting();","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"laxus2308":11,"-":26}},{"path":"src/main/java/wanya/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"// Below code is adapted from","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"// https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":" * Represents a storage to save and load data from hard disk.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"public class Storage {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"    private final Path path;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"     * Initializes a storage when given a filepath.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"     * @param filepath String of the filepath.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"        path \u003d Paths.get(filepath);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"     * Saves the list of tasks to hard disk.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"     * @param tasks TaskList that contains list of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"    public void save(TaskList tasks) throws WanyaException {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"            Files.write(path, tasks.saveToStorage());","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"Oops! Problem encountered! \"","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"                    + \"Wanya cannot save the task to hard disk.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"     * Loads the list of tasks from hard disk.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"     * @return encoded String representaton of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"     * @throws WanyaException if file not found in hard disk.","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"    public List\u003cString\u003e load() throws WanyaException {","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"            return Files.readAllLines(path);","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"Oops! File not found hehe maybe a spy stole the file awayyy...\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"                    + \"Wanya shall create a new list for you\");","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"laxus2308":59}},{"path":"src/main/java/wanya/Wanya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.parser.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"import wanya.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import wanya.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":" * Represents a Wanya bot that act as a task checker.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"public class Wanya {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"     * Creates a Wanya object and initialise Ui, Storage and TaskList.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"    public Wanya() {","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"        storage \u003d new Storage(\"tasks.txt\");","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        } catch (WanyaException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"            ui.showErrorMessage(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"     * Parse the command input by user and returns a response.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"     * @param input Command input by user.","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"     * @return String message in response to user\u0027s input.","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"        return Parser.parseCommand(input, tasks, ui, storage);","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"laxus2308":42}},{"path":"src/main/java/wanya/WanyaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":" * Represents the exceptions that arise from Wanya bot.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"public class WanyaException extends Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"     * Initialises the exception with error message.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"     * @param message error message to be shown.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"    public WanyaException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"        super(\"Whoopsie!!! \" + message);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"laxus2308":15}},{"path":"src/main/java/wanya/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"//Below code are referenced from","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"//https://www.geeksforgeeks.org/java-time-format-datetimeformatterbuilder-class-in-java/","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":" * Represents a parser that parses String to LocalDateTime in various patterns.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"public class DateTimeParser {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"    // only allow format of yyyy-MM-dd and yyyy-MM-dd HH:mm as of now","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // @@author laxus2308-reused","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // https://stackoverflow.com/questions/40175196/java-parsing-string-to-localdatetime-without-providing-time","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter FORMATTER \u003d  new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            .optionalStart()","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            .appendPattern(\" HH:mm\")","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            .optionalEnd()","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .toFormatter();","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"     * Returns LocalDateTime object of the specified date and time.","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"     * Only accepts string of format \"yyyy-MM-dd\" or \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"     * @param dateStr String that contains the date and time.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"     * @throws DateTimeException if invalid string format given.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"    public static LocalDateTime getDateTime(String dateStr) throws DateTimeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"        return LocalDateTime.parse(dateStr, FORMATTER);","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"     * Returns a String representation of LocalDateTime object.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"     * Shows the date and time explicitly for users to understand better.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"     * @param dateTime LocalDateTime object of date and time.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of date and time.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"    public static String getDateTimeString(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"     * Encodes a LocalDateTime object to a String representation for saving file.","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"     * @param dateTime LocalDateTime object of date and time.","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"     * @return Encoded String representation of date and time.","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"    public static String getDateTimeStorage(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"        return DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\").format(dateTime);","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"laxus2308":50,"-":12}},{"path":"src/main/java/wanya/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"import wanya.task.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import wanya.WanyaException;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import wanya.ui.Ui;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":" * Represents a parser that helps to understand user\u0027s input commands.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"     * Checks for empty description of tasks inputted.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"     * @param inputs list of Strings that user has inputted.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"     * @param command the first word of the user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"     * @throws WanyaException if description of task is empty.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"    private static void checkTaskDescription(String[] inputs, String command) throws WanyaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"        //handle the error where no task name","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"        String description \u003d inputs.length \u003e 1 ? inputs[1].trim() : \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        boolean doesDescriptionStartWithAt \u003d description.startsWith(\"/at\");","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"        boolean doesDescriptionStartWithBy \u003d description.startsWith(\"/by\");","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"        boolean doesDescriptionStartWithAft \u003d description.startsWith(\"/aft\");","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"        boolean doesDescriptionStartWithKeyword \u003d doesDescriptionStartWithAt || doesDescriptionStartWithBy","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"                || doesDescriptionStartWithAft;","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"        boolean isDescriptionEmpty \u003d description.equals(\"\");","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"        boolean isInvalidDescription \u003d (doesDescriptionStartWithKeyword || isDescriptionEmpty);","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"        if (isInvalidDescription) {","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"The description of \" + command + \" cannot be empty\");","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"     * Checks for task number to be valid and within the size of task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"     * @param inputs list of Strings that user has inputted.","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"     * @param tasks TaskList that contains all the tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"     * @return task number if it is valid.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"     * @throws WanyaException if task number provided is negative or","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"     *         greater than the number of tasks in TaskList.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"    private static int checkTaskNumber(String[] inputs, TaskList tasks) throws WanyaException {","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"        //handle error without task number","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"        if (inputs.length \u003d\u003d 1 || inputs[1].trim().equals(\"\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"You didn\u0027t put the task number at the back :(.\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"                    + \"Wanya isn\u0027t Anya. I can\u0027t read your mind!\");","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"            int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"            boolean isWithinSize \u003d index \u003e tasks.size();","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"            boolean isSmallerThanOne \u003d index \u003c 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"            if (isWithinSize || isSmallerThanOne) {","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"                throw new WanyaException(\"Invalid task number!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"            return index;","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"The task number got to be an integer!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"laxus2308"},"content":"     * Handles the Mark and Unmark commands for completeness of each tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"laxus2308"},"content":"     * @param command the first word of the user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"laxus2308"},"content":"     * @param inputs list of Strings that user has inputted.","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"laxus2308"},"content":"     * @param tasks TaskList that contains all the tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"laxus2308"},"content":"     * @param storage Storage that stores the tasks in hard drive.","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"laxus2308"},"content":"     * @return String message to be printed to gui whether task is marked successfully.","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"laxus2308"},"content":"     * @throws WanyaException if task number provided is invalid or no task number provided.","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"laxus2308"},"content":"    private static String handleMarkingCommands(String command, String[] inputs,","lastModifiedDate":"2022-09-12"},{"lineNumber":76,"author":{"gitId":"laxus2308"},"content":"                                                TaskList tasks, Storage storage) throws WanyaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":77,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"laxus2308"},"content":"        int indexOfTask \u003d checkTaskNumber(inputs, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"laxus2308"},"content":"        String response \u003d command.equals(\"mark\")","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"laxus2308"},"content":"                          ? tasks.get(indexOfTask).setComplete()","lastModifiedDate":"2022-09-12"},{"lineNumber":81,"author":{"gitId":"laxus2308"},"content":"                          : tasks.get(indexOfTask).setIncomplete();","lastModifiedDate":"2022-09-12"},{"lineNumber":82,"author":{"gitId":"laxus2308"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"laxus2308"},"content":"        return response;","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"laxus2308"},"content":"     * Handles the add task commands to add different type of tasks to task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"laxus2308"},"content":"     * @param command the first word of the user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"laxus2308"},"content":"     * @param inputs list of Strings that user has inputted.","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"laxus2308"},"content":"     * @param tasks TaskList that contains all the tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"laxus2308"},"content":"     * @param storage Storage that stores the tasks in hard drive.","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"laxus2308"},"content":"     * @return String message to be printed to gui whether task is added successfully.","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"laxus2308"},"content":"     * @throws WanyaException if invalid description is provided to add task.","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"laxus2308"},"content":"    private static String handleAddTaskCommands(String command, String[] inputs,","lastModifiedDate":"2022-09-12"},{"lineNumber":97,"author":{"gitId":"laxus2308"},"content":"                                                TaskList tasks, Storage storage) throws WanyaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":98,"author":{"gitId":"laxus2308"},"content":"        checkTaskDescription(inputs, command);","lastModifiedDate":"2022-09-12"},{"lineNumber":99,"author":{"gitId":"laxus2308"},"content":"        String response;","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"laxus2308"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"laxus2308"},"content":"            response \u003d tasks.addToDo(inputs[1]);","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"laxus2308"},"content":"        } else if (command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":103,"author":{"gitId":"laxus2308"},"content":"            response \u003d tasks.addTaskWithDate(command, inputs[1]);","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"laxus2308"},"content":"        } else {","lastModifiedDate":"2022-09-12"},{"lineNumber":105,"author":{"gitId":"laxus2308"},"content":"            assert command.equals(\"period\") : \"Invalid command entered!\";","lastModifiedDate":"2022-09-12"},{"lineNumber":106,"author":{"gitId":"laxus2308"},"content":"            response \u003d tasks.addPeriod(inputs[1]);","lastModifiedDate":"2022-09-12"},{"lineNumber":107,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"laxus2308"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"laxus2308"},"content":"        return response;","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"laxus2308"},"content":"     * Instructs the bot to take actions based on the command given by users.","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"laxus2308"},"content":"     * @param commandInput String that user inputs.","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"laxus2308"},"content":"     * @param tasks TaskList that contains all the tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"laxus2308"},"content":"     * @param ui Ui that handles the strings to print.","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"laxus2308"},"content":"     * @param storage Storage that stores the tasks in hard drive.","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"laxus2308"},"content":"     * @return String message to print on GUI.","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"laxus2308"},"content":"    public static String parseCommand(String commandInput, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"laxus2308"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"laxus2308"},"content":"            String[] inputs \u003d commandInput.split(\" \", 2);","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"laxus2308"},"content":"            assert inputs.length \u003e 0 : \"Invalid command inputted! Command cannot be empty\";","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"laxus2308"},"content":"            String command \u003d inputs[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"laxus2308"},"content":"            String response \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"laxus2308"},"content":"            if (commandInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"laxus2308"},"content":"                return ui.exit();","lastModifiedDate":"2022-09-03"},{"lineNumber":130,"author":{"gitId":"laxus2308"},"content":"            } else if (commandInput.equals(\"list\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"laxus2308"},"content":"                return tasks.showTasks();","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"laxus2308"},"content":"            } else if (command.equals(\"mark\") || command.equals(\"unmark\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"laxus2308"},"content":"               response \u003d handleMarkingCommands(command, inputs, tasks, storage);","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"laxus2308"},"content":"            } else if (command.equals(\"todo\") || command.equals(\"deadline\")","lastModifiedDate":"2022-09-12"},{"lineNumber":135,"author":{"gitId":"laxus2308"},"content":"                    || command.equals(\"event\") || command.equals(\"period\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":136,"author":{"gitId":"laxus2308"},"content":"                response \u003d handleAddTaskCommands(command, inputs, tasks, storage);","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"laxus2308"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"laxus2308"},"content":"                int index \u003d checkTaskNumber(inputs, tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"laxus2308"},"content":"                response \u003d tasks.deleteTask(index);","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"laxus2308"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":141,"author":{"gitId":"laxus2308"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"laxus2308"},"content":"                checkTaskDescription(inputs, command);","lastModifiedDate":"2022-09-12"},{"lineNumber":143,"author":{"gitId":"laxus2308"},"content":"                return tasks.findTasks(inputs[1]);","lastModifiedDate":"2022-09-03"},{"lineNumber":144,"author":{"gitId":"laxus2308"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"laxus2308"},"content":"                throw new WanyaException(\"I am sorry. Wanya doesn\u0027t like to study \"","lastModifiedDate":"2022-09-12"},{"lineNumber":146,"author":{"gitId":"laxus2308"},"content":"                        + \"so Wanya don\u0027t know what that means.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":147,"author":{"gitId":"laxus2308"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"laxus2308"},"content":"            return response;","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"laxus2308"},"content":"        } catch (WanyaException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"laxus2308"},"content":"            return ui.showErrorMessage(e);","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"laxus2308":155}},{"path":"src/main/java/wanya/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.parser.DateTimeParser;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":" * Represents the deadline task.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"    private static final String TASK_TYPE \u003d \"D\";","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"     * Creates a Deadline object when given task name and due date.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"     * @param taskName name of the deadline task.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"     * @param dueDate due date of the deadline task.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"     * @throws DateTimeException if invalid date format is given.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"    public Deadline(String taskName, String dueDate) throws DateTimeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"        super(taskName);","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"        this.dueDate \u003d DateTimeParser.getDateTime(dueDate);","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"     * Creates a Deadline object when given task name, completeness and due date.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"     * @param taskName name of the deadline task.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"     * @param hasCompleted whether the task has been completed.","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"     * @param dueDate due date of the deadline task.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"     * @throws DateTimeException if invalid date format is given.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"    public Deadline(String taskName, boolean hasCompleted, String dueDate) throws DateTimeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"        this(taskName, dueDate);","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"        if (hasCompleted) {","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"            setComplete();","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"            setIncomplete();","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"     * Returns the String representation of the deadline task.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString() + \"(by: \"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"                + DateTimeParser.getDateTimeString(dueDate) + \")\";","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"     * Encodes a deadline object to a String representation for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the deadline task in storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"        return TASK_TYPE + \"|\" + super.toStorageString() + \"|\"","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"laxus2308"},"content":"                + DateTimeParser.getDateTimeStorage(dueDate);","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"laxus2308":64}},{"path":"src/main/java/wanya/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.parser.DateTimeParser;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":" * Represents the event task.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"    private static final String TASK_TYPE \u003d \"E\";","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"     * Creates an Event object when given task name and date.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"     * @param taskName name of the event task.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"     * @param date due date of the event task.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"     * @throws DateTimeException if invalid date format is given.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"    public Event(String taskName, String date) throws DateTimeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"        super(taskName);","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        this.date \u003d DateTimeParser.getDateTime(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"     * Creates an Event object when given task name, completeness and due date.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"     * @param taskName name of the event task.","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"     * @param hasCompleted whether the task has been completed.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"     * @param date due date of the event task.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"     * @throws DateTimeException if invalid date format is given.","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"    public Event(String taskName, boolean hasCompleted, String date) throws DateTimeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"        this(taskName, date);","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"        if (hasCompleted) {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"            setComplete();","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"            setIncomplete();","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"     * Returns the String representation of the event task.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString() + \"(at: \" + DateTimeParser.getDateTimeString(date) + \")\";","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"     * Encodes an event object to a String representation for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the event task in storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"        return TASK_TYPE + \"|\" + super.toStorageString()","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"laxus2308"},"content":"                + \"|\" + DateTimeParser.getDateTimeStorage(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"laxus2308":64}},{"path":"src/main/java/wanya/task/Period.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.task;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.parser.DateTimeParser;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":" * Represents the DoWithinPeriod task.","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"public class Period extends Task {","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"    private static final String TASK_TYPE \u003d \"P\";","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"     * Constructs a Period task given a task name and date in String.","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"     * @param taskName description of the Period task.","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"     * @param startDate start date of the Period task.","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"     * @param endDate end date of the Period task.","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"    public Period(String taskName, String startDate, String endDate)","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"            throws DateTimeException {","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"        super(taskName);","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"        this.startDate \u003d DateTimeParser.getDateTime(startDate);","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"        this.endDate \u003d DateTimeParser.getDateTime(endDate);","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"     * Returns the String representation of the Period task.","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the Period task.","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"    public String toString() {","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString() + \"(from: \"","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"                + DateTimeParser.getDateTimeString(startDate) + \" - \"","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"                + DateTimeParser.getDateTimeString(endDate) + \")\";","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"     * Encodes a Period object to a String representation for storage.","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the Period task in storage.","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"        return TASK_TYPE + \"|\" + super.toStorageString() + \"|\"","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"                + DateTimeParser.getDateTimeStorage(startDate) + \"|\"","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"                + DateTimeParser.getDateTimeStorage(endDate);","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"laxus2308":53}},{"path":"src/main/java/wanya/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":" * Represents a task to be completed.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"    private boolean hasCompleted \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"    private String taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"     * Creates a task when given a task name.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"        return taskName;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"    public boolean hasCompleted() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        return hasCompleted;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"     * @return String message for setting a task to be complete.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"    public String setComplete() {","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"        if (hasCompleted) {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"            String taskAlreadyCompleteMsg \u003d \"Wanya is confused errrrr... You have already marked this task as done!\";","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"            return taskAlreadyCompleteMsg;","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"        this.hasCompleted \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"        String taskCompletedMsg \u003d \"Hehe well done! One task down, one step closer to play time!\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"                + \"This task has been completed:\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"                + this;","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"        return taskCompletedMsg;","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"     * Marks the task as uncompleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"     * @return String message for setting a task to be incomplete.","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"    public String setIncomplete() {","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"        if (!hasCompleted) {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"            String taskAlreadyIncompleteMsg \u003d \"Wanya is confused errrrr... This task is not done yet!\";","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"            return taskAlreadyIncompleteMsg;","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"        hasCompleted \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"        String taskIncompleteMsg \u003d \"Oh nooo!!! Gotta buck up and finish up your tasks before you can play games.\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"                + \"This task has not been completed:\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"                + this;","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"        return taskIncompleteMsg;","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"laxus2308"},"content":"     * Encode a task object to a String representation for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the task in storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"laxus2308"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"laxus2308"},"content":"        String status \u003d hasCompleted ? \"1\" : \"0\";","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"laxus2308"},"content":"        return status + \"|\" + taskName;","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"laxus2308"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"laxus2308"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"laxus2308"},"content":"        String checkbox;","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"laxus2308"},"content":"        if (hasCompleted()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"laxus2308"},"content":"            checkbox \u003d \"[X] \";","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"laxus2308"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"laxus2308"},"content":"            checkbox \u003d \"[ ] \";","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"laxus2308"},"content":"        return checkbox + taskName;","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"laxus2308":87}},{"path":"src/main/java/wanya/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.WanyaException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"import wanya.ui.Ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"public class TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"    private static final String saveFileCorruptedMessage \u003d \"Saved data is corrupted! \";","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"     * Initialises an array of Task.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"     * Initialises an array of Task when given a list of Strings.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"     * @param data encoded data from storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"    public TaskList(List\u003cString\u003e data) throws WanyaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"        this();","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"        for (String encodedTask : data) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"            String[] inputs \u003d encodedTask.split(\"\\\\|\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"            assert inputs.length \u003e\u003d 3 : saveFileCorruptedMessage + \"There is missing information!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"            String taskType \u003d inputs[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"            assert taskType.equals(\"T\") || taskType.equals(\"D\") || taskType.equals(\"E\") || taskType.equals(\"P\")","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"                    : saveFileCorruptedMessage + \"Invalid task type!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"            assert inputs[1].equals(\"1\") || inputs[1].equals(\"0\") : saveFileCorruptedMessage;","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"            boolean completed \u003d inputs[1].equals(\"1\");","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"            String description \u003d inputs[2];","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"            Task taskToBeAdded;","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"            switch(taskType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"            case \"T\":","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"                taskToBeAdded \u003d new ToDo(description, completed);","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"            case \"D\":","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"                assert inputs.length \u003d\u003d 4 : saveFileCorruptedMessage + \"Date required for Deadline task!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"                String dueDate \u003d inputs[3];","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"                taskToBeAdded \u003d new Deadline(description, completed, dueDate);","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"            case \"E\":","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"                assert inputs.length \u003d\u003d 4 : saveFileCorruptedMessage + \"Date required for Event task!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"                String date \u003d inputs[3];","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"                taskToBeAdded \u003d new Event(description, completed, date);","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"                break;","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"            case \"P\":","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"                assert inputs.length \u003d\u003d 5 : saveFileCorruptedMessage + \"Start date and End date required!\";","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"                String startDate \u003d inputs[3];","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"                String endDate \u003d inputs[4];","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"                taskToBeAdded \u003d new Period(description, startDate, endDate);","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"laxus2308"},"content":"            default:","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"laxus2308"},"content":"                throw new WanyaException(saveFileCorruptedMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"laxus2308"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"laxus2308"},"content":"            tasks.add(taskToBeAdded);","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"laxus2308"},"content":"    public int size() {","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"laxus2308"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"laxus2308"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"laxus2308"},"content":"     * @return Boolean value whether task list is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"laxus2308"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"laxus2308"},"content":"        return tasks.size() \u003d\u003d 0;","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"laxus2308"},"content":"     * Gets the task from task list with index.","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"laxus2308"},"content":"     * @param index Index of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"laxus2308"},"content":"     * @return Task in position index of task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"laxus2308"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"laxus2308"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2022-09-12"},{"lineNumber":90,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"laxus2308"},"content":"     * Adds a ToDo task to the TaskList.","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"laxus2308"},"content":"     * @param taskName name of ToDo task.","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"laxus2308"},"content":"     * @return String message for adding a ToDo task.","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"laxus2308"},"content":"    public String addToDo(String taskName)  {","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"laxus2308"},"content":"        Task newTask \u003d new ToDo(taskName);","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"laxus2308"},"content":"        return addTask(newTask);","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"laxus2308"},"content":"     * Adds deadline or event task to task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"laxus2308"},"content":"     * @param command the first word of the user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"laxus2308"},"content":"     * @param commandDescription contains information about the task to be added.","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"laxus2308"},"content":"     * @return String message whether task has been added successfully.","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"laxus2308"},"content":"     * @throws WanyaException if invalid input format is given with command.","lastModifiedDate":"2022-09-12"},{"lineNumber":110,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"laxus2308"},"content":"    public String addTaskWithDate(String command, String commandDescription) throws WanyaException {","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"laxus2308"},"content":"        boolean isDeadline \u003d command.equals(\"deadline\");","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"laxus2308"},"content":"        String[] inputs \u003d isDeadline","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"laxus2308"},"content":"                          ? commandDescription.split(\"/by\")","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"laxus2308"},"content":"                          : commandDescription.split(\"/at\");","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":117,"author":{"gitId":"laxus2308"},"content":"        //no date provided","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"laxus2308"},"content":"        if (inputs.length \u003d\u003d 1 \u0026\u0026 isDeadline) {","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"Deadline must have a due date\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":120,"author":{"gitId":"laxus2308"},"content":"                    + \"Include \u0027/by\u0027 and date with format \\\"yyyy-mm-dd\\\" at the back\");","lastModifiedDate":"2022-09-12"},{"lineNumber":121,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"laxus2308"},"content":"        //must be event","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"laxus2308"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"Event must have a date\\n\"","lastModifiedDate":"2022-09-12"},{"lineNumber":125,"author":{"gitId":"laxus2308"},"content":"                    + \"Include \u0027/at\u0027 and date with format \\\"yyyy-mm-dd\\\" at the back\");","lastModifiedDate":"2022-09-12"},{"lineNumber":126,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"laxus2308"},"content":"        String taskName \u003d inputs[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"laxus2308"},"content":"        String date \u003d inputs[1].trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"laxus2308"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"laxus2308"},"content":"            Task newTask \u003d isDeadline ? new Deadline(taskName, date) : new Event(taskName, date);","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"laxus2308"},"content":"            return addTask(newTask);","lastModifiedDate":"2022-09-03"},{"lineNumber":133,"author":{"gitId":"laxus2308"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"laxus2308"},"content":"             WanyaException exception \u003d isDeadline","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"laxus2308"},"content":"                                        ? new WanyaException(Ui.showDateTimeFormat(\"D\"))","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"laxus2308"},"content":"                                        : new WanyaException(Ui.showDateTimeFormat(\"E\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"laxus2308"},"content":"             throw exception;","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":141,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":142,"author":{"gitId":"laxus2308"},"content":"     * Adds a Period task to task list.","lastModifiedDate":"2022-09-12"},{"lineNumber":143,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":144,"author":{"gitId":"laxus2308"},"content":"     * @param commandDescription contains information about the task to be added.","lastModifiedDate":"2022-09-12"},{"lineNumber":145,"author":{"gitId":"laxus2308"},"content":"     * @return String message whether Period task has been added successfully.","lastModifiedDate":"2022-09-12"},{"lineNumber":146,"author":{"gitId":"laxus2308"},"content":"     * @throws WanyaException if invalid input format is given.","lastModifiedDate":"2022-09-12"},{"lineNumber":147,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":148,"author":{"gitId":"laxus2308"},"content":"    public String addPeriod(String commandDescription) throws WanyaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":149,"author":{"gitId":"laxus2308"},"content":"        String[] inputs \u003d commandDescription.split(\"/from\");","lastModifiedDate":"2022-09-12"},{"lineNumber":150,"author":{"gitId":"laxus2308"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-12"},{"lineNumber":151,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"Period must have valid dates provided in the format of \"","lastModifiedDate":"2022-09-12"},{"lineNumber":152,"author":{"gitId":"laxus2308"},"content":"                    + \"/from DATE to DATE.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":153,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":154,"author":{"gitId":"laxus2308"},"content":"        String taskName \u003d inputs[0];","lastModifiedDate":"2022-09-12"},{"lineNumber":155,"author":{"gitId":"laxus2308"},"content":"        String[] dates \u003d inputs[1].split(\"to\");","lastModifiedDate":"2022-09-12"},{"lineNumber":156,"author":{"gitId":"laxus2308"},"content":"        if (dates.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-12"},{"lineNumber":157,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"Please include a \\\"to\\\" keyword.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":158,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":159,"author":{"gitId":"laxus2308"},"content":"        String startDate \u003d dates[0].trim();","lastModifiedDate":"2022-09-12"},{"lineNumber":160,"author":{"gitId":"laxus2308"},"content":"        String endDate \u003d dates[1].trim();","lastModifiedDate":"2022-09-12"},{"lineNumber":161,"author":{"gitId":"laxus2308"},"content":"        try {","lastModifiedDate":"2022-09-12"},{"lineNumber":162,"author":{"gitId":"laxus2308"},"content":"            Task newTask \u003d new Period(taskName, startDate, endDate);","lastModifiedDate":"2022-09-12"},{"lineNumber":163,"author":{"gitId":"laxus2308"},"content":"            return addTask(newTask);","lastModifiedDate":"2022-09-12"},{"lineNumber":164,"author":{"gitId":"laxus2308"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-09-12"},{"lineNumber":165,"author":{"gitId":"laxus2308"},"content":"            throw new WanyaException(\"Please input valid date format of \\\"yyyy-mm-dd\\\" +\"","lastModifiedDate":"2022-09-12"},{"lineNumber":166,"author":{"gitId":"laxus2308"},"content":"                    + \"behind /from and to\");","lastModifiedDate":"2022-09-12"},{"lineNumber":167,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":168,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":169,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":171,"author":{"gitId":"laxus2308"},"content":"     * Adds the task to the TaskList and display task added.","lastModifiedDate":"2022-08-28"},{"lineNumber":172,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":173,"author":{"gitId":"laxus2308"},"content":"     * @param task task to be added.","lastModifiedDate":"2022-08-28"},{"lineNumber":174,"author":{"gitId":"laxus2308"},"content":"     * @return String message for adding a task.","lastModifiedDate":"2022-09-03"},{"lineNumber":175,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":176,"author":{"gitId":"laxus2308"},"content":"    private String addTask(Task task) {","lastModifiedDate":"2022-09-03"},{"lineNumber":177,"author":{"gitId":"laxus2308"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"laxus2308"},"content":"        String addTaskString \u003d \"You have added:\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":179,"author":{"gitId":"laxus2308"},"content":"                + task","lastModifiedDate":"2022-09-03"},{"lineNumber":180,"author":{"gitId":"laxus2308"},"content":"                + getSizeString();","lastModifiedDate":"2022-09-09"},{"lineNumber":181,"author":{"gitId":"laxus2308"},"content":"        return addTaskString;","lastModifiedDate":"2022-09-09"},{"lineNumber":182,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":185,"author":{"gitId":"laxus2308"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2022-08-28"},{"lineNumber":186,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":187,"author":{"gitId":"laxus2308"},"content":"     * @param index the task number to be deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":188,"author":{"gitId":"laxus2308"},"content":"     * @return String message for successfully deleting a task.","lastModifiedDate":"2022-09-03"},{"lineNumber":189,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":190,"author":{"gitId":"laxus2308"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2022-09-03"},{"lineNumber":191,"author":{"gitId":"laxus2308"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"laxus2308"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":193,"author":{"gitId":"laxus2308"},"content":"        String deleteTaskString \u003d \"WWaku WWaku!!! Wanya has used her magic powers to remove this task:\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":194,"author":{"gitId":"laxus2308"},"content":"                + task","lastModifiedDate":"2022-09-03"},{"lineNumber":195,"author":{"gitId":"laxus2308"},"content":"                + getSizeString();","lastModifiedDate":"2022-09-09"},{"lineNumber":196,"author":{"gitId":"laxus2308"},"content":"        return deleteTaskString;","lastModifiedDate":"2022-09-09"},{"lineNumber":197,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":198,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":199,"author":{"gitId":"laxus2308"},"content":"    private String getSizeString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":200,"author":{"gitId":"laxus2308"},"content":"        String numTaskString \u003d \"\\nNow you have \" + size() + \" tasks in your list.\";","lastModifiedDate":"2022-09-09"},{"lineNumber":201,"author":{"gitId":"laxus2308"},"content":"        return numTaskString;","lastModifiedDate":"2022-09-09"},{"lineNumber":202,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":203,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":204,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":205,"author":{"gitId":"laxus2308"},"content":"     * Displays the list of tasks in TaskList.","lastModifiedDate":"2022-08-28"},{"lineNumber":206,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":207,"author":{"gitId":"laxus2308"},"content":"     * @return List of tasks in String.","lastModifiedDate":"2022-09-03"},{"lineNumber":208,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":209,"author":{"gitId":"laxus2308"},"content":"    public String showTasks() {","lastModifiedDate":"2022-09-03"},{"lineNumber":210,"author":{"gitId":"laxus2308"},"content":"        if (isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":211,"author":{"gitId":"laxus2308"},"content":"            String emptyListString \u003d \"List is empty! Wheee slack time!\";","lastModifiedDate":"2022-09-09"},{"lineNumber":212,"author":{"gitId":"laxus2308"},"content":"            return emptyListString;","lastModifiedDate":"2022-09-09"},{"lineNumber":213,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":214,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":215,"author":{"gitId":"laxus2308"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":216,"author":{"gitId":"laxus2308"},"content":"        taskString.append(\"Your current list now!\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":217,"author":{"gitId":"laxus2308"},"content":"        for (int i \u003d 1; i \u003c\u003d size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":218,"author":{"gitId":"laxus2308"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":219,"author":{"gitId":"laxus2308"},"content":"            taskString.append(i + \".\" + task + \"\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":220,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":221,"author":{"gitId":"laxus2308"},"content":"        return taskString.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":222,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":223,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":224,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":225,"author":{"gitId":"laxus2308"},"content":"     * Encodes the list of tasks in TaskList.","lastModifiedDate":"2022-08-28"},{"lineNumber":226,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":227,"author":{"gitId":"laxus2308"},"content":"     * @return List of Strings of the tasks in TaskList to be stored.","lastModifiedDate":"2022-08-28"},{"lineNumber":228,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":229,"author":{"gitId":"laxus2308"},"content":"    public List\u003cString\u003e saveToStorage() {","lastModifiedDate":"2022-08-26"},{"lineNumber":230,"author":{"gitId":"laxus2308"},"content":"        List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":231,"author":{"gitId":"laxus2308"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":232,"author":{"gitId":"laxus2308"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":233,"author":{"gitId":"laxus2308"},"content":"            data.add(task.toStorageString());","lastModifiedDate":"2022-08-26"},{"lineNumber":234,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":235,"author":{"gitId":"laxus2308"},"content":"        return data;","lastModifiedDate":"2022-08-26"},{"lineNumber":236,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":237,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":238,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":239,"author":{"gitId":"laxus2308"},"content":"     * Finds a list of tasks that contains the keyword and print it.","lastModifiedDate":"2022-08-28"},{"lineNumber":240,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":241,"author":{"gitId":"laxus2308"},"content":"     * @param keyword word to find matching tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":242,"author":{"gitId":"laxus2308"},"content":"     * @return List of tasks that match keyword if any.","lastModifiedDate":"2022-09-03"},{"lineNumber":243,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":244,"author":{"gitId":"laxus2308"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2022-09-03"},{"lineNumber":245,"author":{"gitId":"laxus2308"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":246,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":247,"author":{"gitId":"laxus2308"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":248,"author":{"gitId":"laxus2308"},"content":"            String taskName \u003d task.getTaskName();","lastModifiedDate":"2022-08-28"},{"lineNumber":249,"author":{"gitId":"laxus2308"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":250,"author":{"gitId":"laxus2308"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":251,"author":{"gitId":"laxus2308"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":252,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":253,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":254,"author":{"gitId":"laxus2308"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":255,"author":{"gitId":"laxus2308"},"content":"            String noMatchTasks \u003d \"Oopsie! There are no matching tasks in your list?\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":256,"author":{"gitId":"laxus2308"},"content":"                    + \"Maybe you have typed in wrongly...\";","lastModifiedDate":"2022-09-09"},{"lineNumber":257,"author":{"gitId":"laxus2308"},"content":"            return noMatchTasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":258,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":259,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":260,"author":{"gitId":"laxus2308"},"content":"        StringBuilder matchingTasksString \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":261,"author":{"gitId":"laxus2308"},"content":"        matchingTasksString.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":262,"author":{"gitId":"laxus2308"},"content":"        for (Task task: matchingTasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":263,"author":{"gitId":"laxus2308"},"content":"            matchingTasksString.append(task.toString() + \u0027\\n\u0027);","lastModifiedDate":"2022-09-03"},{"lineNumber":264,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":265,"author":{"gitId":"laxus2308"},"content":"        return matchingTasksString.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":266,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":267,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"laxus2308":267}},{"path":"src/main/java/wanya/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":" * Represents the todo task.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"    private static final String TASK_TYPE \u003d \"T\";","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"     * Creates a todo object when given task name.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"     * @param taskName name of todo task.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"        super(taskName);","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"     * Creates a todo object when given task name and completeness.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"     * @param taskName name of todo task.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"     * @param hasCompleted whether the task has been completed.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"    public ToDo(String taskName, boolean hasCompleted) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"        this(taskName);","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"        if (hasCompleted) {","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"            setComplete();","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"            setIncomplete();","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"     * Returns the String representation of the todo task.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"     * Encodes a todo object to a String representation for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"     * @return String representation of the todo task in storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"        return TASK_TYPE + \"|\" + super.toStorageString();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"laxus2308":52}},{"path":"src/main/java/wanya/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author laxus2308-reused","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static DialogBox getWanyaDialog(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"laxus2308":16,"-":48}},{"path":"src/main/java/wanya/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"import wanya.Wanya;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"import wanya.ui.DialogBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"import wanya.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author laxus2308-reused","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Wanya wanya;","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    //obtained from https://mystickermania.com/sticker-packs/anime/spy-family-anya-peace","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Damian.jpg\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //obtained from https://id.pinterest.com/pin/715650197050549040/","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Image wanyaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Anya.jfif\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setWanya(Wanya w) {","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        wanya \u003d w;","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(DialogBox.getWanyaDialog(Ui.greet(), wanyaImage));","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void showLoading() {","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(DialogBox.getWanyaDialog(Ui.showLoading(), wanyaImage));","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String response \u003d wanya.getResponse(input);","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                DialogBox.getWanyaDialog(response, wanyaImage)","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            //@@author laxus2308-reused","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            //Reused from https://stackoverflow.com/questions/27334455/how-to-close-a-stage-after-a-certain-amount-of-time-javafx","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            PauseTransition end \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            end.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            end.play();","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            //@@author","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"laxus2308"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"laxus2308":19,"-":60}},{"path":"src/main/java/wanya/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":" * Represents user interface to deal with interactions from user.","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"public class Ui {","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"     * Displays the greeting message.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"     * @return String greeting message.","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"    public static String greet() {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"        String startMsg \u003d \"Hello!!! My name is Wanya! WWaku WWaku!\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"                + \"How can I help you?\";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"        return startMsg;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"     * Displays the closing message.","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"     * @return String closing message.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"    public static String exit() {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        String closeMsg \u003d \"Yayyy Wanya gets to slack and watch shows now. Bye bye! :)\";","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"        return closeMsg;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"     * Displays the error message to user.","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"     * @param e Exception thrown.","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"     * @return Error message.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"    public String showErrorMessage(Exception e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"        return e.getMessage();","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"     * Displays the message for user to enter valid date time format.","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"     * @param taskType the initial of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"     * @return String message to inform user of valid date time format.","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"    public static String showDateTimeFormat(String taskType) {","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"        String preposition \u003d taskType.equals(\"E\") ? \"/at\" : \"/by\";","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"        String dateTimeErrorMsg \u003d (\"Please enter a valid date behind \" + preposition + \" with the format \"","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"                + \"\\\"yyyy-mm-dd HH:mm\\\" where time is optional.\\n \"","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"                + \"If time is provided, leave it in 24 hours format.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"        return dateTimeErrorMsg;","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"     * Displays that bot is starting up.","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"     * @return String loading message.","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"    public static String showLoading() {","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"        String loadingMessage \u003d \"....Loa....Loading....Please wait....\";","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"       return loadingMessage;","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"laxus2308":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"\u003c!--    @@author laxus2308-reused  Referenced from @carriezhengjr/ip to make textbox display entire text without shrinking--\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: lightskyblue; -fx-background-radius: 10; -fx-padding: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!--    @@author     --\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"laxus2308":11,"-":10}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"wanya.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter command here\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: pink;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: pink;\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"laxus2308":19}},{"path":"src/test/java/wanya/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.parser.DateTimeParser;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"    public void getDateTime_validDate_correctDateTime() {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"        String date \u003d \"2022-08-12\";","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.getDateTime(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"        assertEquals(LocalDateTime.of(2022, 8, 12, 00, 00),","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"                dateTime);","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"    public void getDateTime_invalidDate_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"        String date \u003d \"2022-13-12\";","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"                () -\u003e DateTimeParser.getDateTime(date));","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"laxus2308"},"content":"    public void getDateTime_validDateTime_correctDateTime() {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"laxus2308"},"content":"        String date \u003d \"2022-08-12 13:23\";","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"laxus2308"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.getDateTime(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"laxus2308"},"content":"        assertEquals(LocalDateTime.of(2022, 8, 12, 13, 23),","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"laxus2308"},"content":"                dateTime);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"laxus2308"},"content":"    public void getDateTime_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"laxus2308"},"content":"        String date \u003d \"2022-08-12 25:12\";","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"laxus2308"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"laxus2308"},"content":"                () -\u003e DateTimeParser.getDateTime(date));","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"laxus2308"},"content":"    public void getDateTimeString_validDate_correctFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"laxus2308"},"content":"        String date \u003d \"2022-08-12\";","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"laxus2308"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.getDateTime(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"Aug 12 2022 12:00 AM\",","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"laxus2308"},"content":"                DateTimeParser.getDateTimeString(dateTime));","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"laxus2308"},"content":"    public void getDateTimeString_validDateTime_correctFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"laxus2308"},"content":"        String date \u003d \"2022-08-12 23:12\";","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"laxus2308"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.getDateTime(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"Aug 12 2022 11:12 PM\",","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"laxus2308"},"content":"                DateTimeParser.getDateTimeString(dateTime));","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"laxus2308"},"content":"    public void getDateTimeStorage_validDate_correctFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"laxus2308"},"content":"        String date \u003d \"2022-08-12\";","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"laxus2308"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.getDateTime(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"2022-08-12 00:00\",","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"laxus2308"},"content":"                DateTimeParser.getDateTimeStorage(dateTime));","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"laxus2308"},"content":"    public void getDateTimeStorage_validDateTime_correctFormat() {","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"laxus2308"},"content":"        String date \u003d \"2022-09-12 12:13\";","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"laxus2308"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.getDateTime(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"2022-09-12 12:13\",","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"laxus2308"},"content":"                DateTimeParser.getDateTimeStorage(dateTime));","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"laxus2308":75}},{"path":"src/test/java/wanya/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.task.Deadline;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"    public void deadlineToStringTest() {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", \"2022-09-12 12:00\");","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"[D][ ] Homework(by: Sep 12 2022 12:00 PM)\", deadline.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"        Deadline deadline2 \u003d new Deadline(\"Homework2\", true, \"2022-08-30 13:13\");","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"[D][X] Homework2(by: Aug 30 2022 01:13 PM)\", deadline2.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"    public void deadlineToStorageTest() {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"        Deadline deadline \u003d new Deadline(\"Homework\", \"2022-09-12 12:00\");","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"D|0|Homework|2022-09-12 12:00\", deadline.toStorageString());","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"        Deadline deadline2 \u003d new Deadline(\"Homework2\", true, \"2022-08-30 13:13\");","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"D|1|Homework2|2022-08-30 13:13\", deadline2.toStorageString());","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"laxus2308":26}},{"path":"src/test/java/wanya/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.task.Event;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"public class EventTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"    public void eventToStringTest() {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"        Event event \u003d new Event(\"Homework\", \"2022-09-12 12:00\");","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"[E][ ] Homework(at: Sep 12 2022 12:00 PM)\", event.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"        Event event2 \u003d new Event(\"Homework2\", true, \"2022-08-30 13:13\");","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"[E][X] Homework2(at: Aug 30 2022 01:13 PM)\", event2.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"    public void eventToStorageTest() {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"        Event event \u003d new Event(\"Homework\", \"2022-09-12 12:00\");","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"E|0|Homework|2022-09-12 12:00\", event.toStorageString());","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"        Event event2 \u003d new Event(\"Homework2\", true, \"2022-08-30 13:13\");","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"E|1|Homework2|2022-08-30 13:13\", event2.toStorageString());","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"laxus2308":26}},{"path":"src/test/java/wanya/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"package wanya;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"import wanya.task.ToDo;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"    public void todoToStringTest() {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"        ToDo todo \u003d new ToDo (\"Homework\", true);","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"[T][X] Homework\", todo .toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"        ToDo todo2 \u003d new ToDo (\"Homework2\", false);","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"[T][ ] Homework2\", todo2.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"    @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"    public void todoToStorageTest() {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"        ToDo todo \u003d new ToDo (\"Homework\", false);","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"T|0|Homework\", todo.toStorageString());","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"        ToDo todo2 \u003d new ToDo (\"Homework2\", true);","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"        assertEquals(\"T|1|Homework2\", todo2.toStorageString());","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"laxus2308"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"laxus2308":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"laxus2308"},"content":"delete 1","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"laxus2308"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"laxus2308"},"content":"todo borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"laxus2308"},"content":"todo","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"laxus2308"},"content":"deadline return book /by 2022-09-13","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"laxus2308"},"content":"deadline","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"laxus2308"},"content":"deadline project","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"laxus2308"},"content":"deadline project /by","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"laxus2308"},"content":"deadline project /by tuesday","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"event project meeting /at 2022-08-28 21:00","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"laxus2308"},"content":"event ","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"laxus2308"},"content":"event cca /at","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"laxus2308"},"content":"event cca /at Tues 7-9pm","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"laxus2308"},"content":"mark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"laxus2308"},"content":"mark 10","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"laxus2308"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"laxus2308"},"content":"mark","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"unmark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"laxus2308"},"content":"unmark 10","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"laxus2308"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"laxus2308"},"content":"unmark","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"laxus2308"},"content":"delete 2","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"laxus2308"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"laxus2308"},"content":"blahhhhh","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"laxus2308"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"laxus2308":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"laxus2308"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\wanya\\*.java","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"laxus2308"},"content":"java -classpath ..\\bin Wanya \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laxus2308":2,"-":19}}]

[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"1.[E][ ]  hi (at: 2pm-4pm)","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"2.[D][ ]  ho (by: 3pm)","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"3.[T][ ] he","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"mohamedsaf1":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":" * A class that creates an object of type Deadline","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":" * which are tasks that have a deadline with keyword \"by\".","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":" * @author Safwan A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"    protected String by;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor to create Deadline object.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"     * @param description Content of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"     * Method that overrides Java.toString() method to convert the Deadline","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"     * task as a string.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"     * @return A string of the Deadline task.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"mohamedsaf1"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"mohamedsaf1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"mohamedsaf1"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to obtain the date as an attribute of its own rather than a string","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"mohamedsaf1"},"content":"     * in the format of \"MMM d yyyy\".","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"mohamedsaf1"},"content":"    public void getDate() {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"mohamedsaf1"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"mohamedsaf1"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"mohamedsaf1"},"content":"            LocalDate deadline \u003d LocalDate.parse(this.by, formatter);","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"mohamedsaf1"},"content":"            this.date \u003d deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"mohamedsaf1"},"content":"            this.by \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"mohamedsaf1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"mohamedsaf1"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"mohamedsaf1":51}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":" * Main class.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":" * @author Safwan A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor for the Duke main class.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"     * @param filePath Location of the file that stores the data as a result of running the main class.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"    public Duke (String filePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to execute the Duke programme.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"mohamedsaf1"},"content":"    public void run() throws DukeException, IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"mohamedsaf1"},"content":"        ui.greetings();","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"mohamedsaf1"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"mohamedsaf1"},"content":"        parser.readInput();","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"mohamedsaf1"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"mohamedsaf1"},"content":"        Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"mohamedsaf1"},"content":"        duke.run();","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mohamedsaf1":48,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":" * Class that creates an exception for this package.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":" * @author Safwan A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"    public DukeException(String error) {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"        super(error);","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"mohamedsaf1":13}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":" * A class that creates an object of type Event","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":" * which are tasks that have a timing with keyword \"at\".","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":" * @author Safwan A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":"    protected String at;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor to create Event object.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"     * @param description Content of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"     * @param at Timing of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"     * Method that overrides Java.toString() method to convert the Deadline","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"     * task as a string.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"     * @return A string of the Deadline task.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"mohamedsaf1":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":" * A class that deals with the interaction of the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":" * @author Safwan A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"public class Parser {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor to create Parser object.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"     * @param taskList the input list for the storage of data.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to read and process input given by the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"    public void readInput() throws DukeException, IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"        while (true) {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"mohamedsaf1"},"content":"            Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"mohamedsaf1"},"content":"            String s \u003d input.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"mohamedsaf1"},"content":"            if (s.equals(\"bye\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"mohamedsaf1"},"content":"                System.out.println(\"Bye. Hope to see you again soon.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"mohamedsaf1"},"content":"                break;","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"mohamedsaf1"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"mohamedsaf1"},"content":"            String[] word \u003d s.split(\" \");","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"mohamedsaf1"},"content":"            if (s.equals(\"list\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"mohamedsaf1"},"content":"                taskList.list();","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"mohamedsaf1"},"content":"            } else if (word[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"mohamedsaf1"},"content":"                Integer num \u003d Integer.parseInt(word[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"mohamedsaf1"},"content":"                taskList.mark(num);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"mohamedsaf1"},"content":"            } else if (word[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"mohamedsaf1"},"content":"                Integer num \u003d Integer.parseInt(word[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"mohamedsaf1"},"content":"                taskList.unmark(num);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"mohamedsaf1"},"content":"            } else if (word[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"mohamedsaf1"},"content":"                if (s.endsWith(\"todo\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"mohamedsaf1"},"content":"                    throw new DukeException(\"Ooops, the description of todo cannot be empty!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"mohamedsaf1"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"mohamedsaf1"},"content":"                String substringtd \u003d s.replaceAll(\"todo \", \"\");","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"mohamedsaf1"},"content":"                taskList.todo(substringtd);","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"mohamedsaf1"},"content":"            } else if (word[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"mohamedsaf1"},"content":"                if (s.endsWith(\"deadline\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"mohamedsaf1"},"content":"                    throw new DukeException(\"Ooops, the description of deadline cannot be empty!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"mohamedsaf1"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"mohamedsaf1"},"content":"                String[] phrase \u003d s.split(\"/by\");","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"mohamedsaf1"},"content":"                String substringdl1 \u003d phrase[0].replaceAll(\"deadline\", \"\");","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"mohamedsaf1"},"content":"                String substringdl2 \u003d phrase[1];","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"mohamedsaf1"},"content":"                taskList.deadline(substringdl1, substringdl2);","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"mohamedsaf1"},"content":"            } else if (word[0].equals(\"event\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"mohamedsaf1"},"content":"                if (s.endsWith(\"event\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"mohamedsaf1"},"content":"                    throw new DukeException(\"Ooops, the description of event cannot be empty!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"mohamedsaf1"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"mohamedsaf1"},"content":"                String[] phrase \u003d s.split(\"/at\");","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"mohamedsaf1"},"content":"                String substringdl1 \u003d phrase[0].replaceAll(\"event\", \"\");","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"mohamedsaf1"},"content":"                String substringdl2 \u003d phrase[1];","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"mohamedsaf1"},"content":"                taskList.event(substringdl1, substringdl2);","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"mohamedsaf1"},"content":"            } else if (word[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"mohamedsaf1"},"content":"                Integer num \u003d Integer.parseInt(word[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"mohamedsaf1"},"content":"                taskList.delete(num);","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"mohamedsaf1"},"content":"            } else if (word[0].equals(\"find\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"mohamedsaf1"},"content":"                String content \u003d s.replace(\"find\", \"\");","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"mohamedsaf1"},"content":"                taskList.find(content);","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"mohamedsaf1"},"content":"            } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"mohamedsaf1"},"content":"                throw new DukeException(\"Oooops, sorry I don\u0027t know what you are talking about :(\");","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"mohamedsaf1"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"mohamedsaf1":94}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"import java.io.File;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":" * A class that is used to store the data in a file.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":" * @author Safwan A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"public class Storage {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"    private static String filePath;","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"    private File file;","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"    private FileWriter fw;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"    private static ArrayList\u003cTask\u003e inputList;","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor to create Storage object.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"     * @param filePath Location of the file that stores the data as a result of running the main class.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"        this.inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"mohamedsaf1"},"content":"     * Method that takes the data stored in the list and inputs it in a text file.","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"mohamedsaf1"},"content":"     * @param textToAdd The input list of data.","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"mohamedsaf1"},"content":"    public static void writeToFile(ArrayList\u003cTask\u003e textToAdd) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"mohamedsaf1"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"mohamedsaf1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"mohamedsaf1"},"content":"            throw new IOException(\"File does not exist.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"mohamedsaf1"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"mohamedsaf1"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"mohamedsaf1"},"content":"        for (Task item : textToAdd) {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"mohamedsaf1"},"content":"            output \u003d output + (textToAdd.indexOf(item) + 1) + \".\" + item  + \"\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"mohamedsaf1"},"content":"        fw.write(output);","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"mohamedsaf1"},"content":"        fw.close();","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to load the contents of the file in a list.","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"mohamedsaf1"},"content":"     * @return A list of all the tasks in the file, in the type of an ArrayList.","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"mohamedsaf1"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException{","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"mohamedsaf1"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"mohamedsaf1"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"mohamedsaf1"},"content":"            if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"mohamedsaf1"},"content":"                throw new DukeException (\"File is Empty!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"mohamedsaf1"},"content":"            } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"mohamedsaf1"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"mohamedsaf1"},"content":"                    String task \u003d scanner.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"mohamedsaf1"},"content":"                    String type \u003d String.valueOf(task.charAt(1));","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"mohamedsaf1"},"content":"                    if (type.equals(\"T\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"mohamedsaf1"},"content":"                        String currTask \u003d task.substring(9);","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"mohamedsaf1"},"content":"                        Task td \u003d new Todo(\" \" + currTask);","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"mohamedsaf1"},"content":"                        inputList.add(td);","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"mohamedsaf1"},"content":"                    } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"mohamedsaf1"},"content":"                        int splitter \u003d task.indexOf(\" (at: \");","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"mohamedsaf1"},"content":"                        String currTask \u003d task.substring(9, splitter);","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"mohamedsaf1"},"content":"                        String time \u003d task.substring(splitter + 6, task.indexOf(\")\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"mohamedsaf1"},"content":"                        Task ev \u003d new Event(\" \" + currTask, time);","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"mohamedsaf1"},"content":"                        inputList.add(ev);","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"mohamedsaf1"},"content":"                    } else if (type.equals(\"D\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"mohamedsaf1"},"content":"                        int splitter \u003d task.indexOf(\" (by: \");","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"mohamedsaf1"},"content":"                        String currTask \u003d task.substring(9, splitter);","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"mohamedsaf1"},"content":"                        String time \u003d task.substring(splitter + 6, task.indexOf(\")\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"mohamedsaf1"},"content":"                        Task dl \u003d new Deadline(\" \" + currTask, time);","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"mohamedsaf1"},"content":"                        inputList.add(dl);","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"mohamedsaf1"},"content":"                    } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"mohamedsaf1"},"content":"                        break;","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"mohamedsaf1"},"content":"                    }","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"mohamedsaf1"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"mohamedsaf1"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"mohamedsaf1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"mohamedsaf1"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"mohamedsaf1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"mohamedsaf1"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"mohamedsaf1"},"content":"            throw new DukeException (\"File is empty!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"mohamedsaf1"},"content":"        return inputList;","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"mohamedsaf1":97}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":" * A class that represents all tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":" * @author Safwan A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":"public class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"    protected String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor that creates a Task object.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"     * @param description Details of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"     * Method that checks if a tasks is done.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"     * @return A string of a notation on the task description.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"      return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"mohamedsaf1"},"content":"    public void mark() {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"mohamedsaf1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to mark a task as undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"mohamedsaf1"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"mohamedsaf1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"mohamedsaf1"},"content":"     * Method that overrides Java.toString() method to convert the Task","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"mohamedsaf1"},"content":"     * object to a string.","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"mohamedsaf1"},"content":"     * @return A string of the Task object.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"mohamedsaf1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"mohamedsaf1"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"mohamedsaf1":51}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":" * A class that creates an object with a list of data of the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":" * @author A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"public class TaskList {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"    private ArrayList\u003cTask\u003e inputList;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor that creates a TaskList object with a list of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"     * @param inputList A list of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"    public TaskList(ArrayList\u003cTask\u003e inputList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"        this.inputList \u003d inputList;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor that creates a TaskList object without a list of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"        this.inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to add a task into the list of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"mohamedsaf1"},"content":"     * @param t Task to be added.","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"mohamedsaf1"},"content":"    public void add(Task t) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"mohamedsaf1"},"content":"        this.inputList.add(t);","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"mohamedsaf1"},"content":"        Storage.writeToFile(inputList);","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to remove a task from the list of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"mohamedsaf1"},"content":"     * @param index The index of the task in the list that has to be removed.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"mohamedsaf1"},"content":"    public void delete(int index) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Noted I have removed this task:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(inputList.get(index - 1));","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"mohamedsaf1"},"content":"        Integer newSize \u003d inputList.size() - 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"mohamedsaf1"},"content":"        inputList.remove(index-1);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Now you have \" + newSize + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"mohamedsaf1"},"content":"        Storage.writeToFile(inputList);","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"mohamedsaf1"},"content":"    public void mark(int index) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"mohamedsaf1"},"content":"        inputList.get(index - 1).mark();","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(inputList.get(index- 1));","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"mohamedsaf1"},"content":"        Storage.writeToFile(inputList);","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to mark a task as undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"mohamedsaf1"},"content":"    public void unmark(int index) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"mohamedsaf1"},"content":"        inputList.get(index - 1).unmark();","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(inputList.get(index- 1));","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"mohamedsaf1"},"content":"        Storage.writeToFile(inputList);","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to display the list of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"mohamedsaf1"},"content":"    public void list() {","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"mohamedsaf1"},"content":"        for (Task item : inputList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"mohamedsaf1"},"content":"            System.out.println(inputList.indexOf(item) + 1 + \".\" + item);","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to store a Todo task in the list.","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"mohamedsaf1"},"content":"     * @param content Description of the Todo task.","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"mohamedsaf1"},"content":"    public void todo(String content) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"mohamedsaf1"},"content":"        Todo td \u003d new Todo(content);","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(td);","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"mohamedsaf1"},"content":"        inputList.add(td);","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Now you have \" + inputList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"mohamedsaf1"},"content":"        Storage.writeToFile(inputList);","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to store a Deadline task in the list.","lastModifiedDate":"2022-08-29"},{"lineNumber":101,"author":{"gitId":"mohamedsaf1"},"content":"     * @param content Description of the Deadline task.","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"mohamedsaf1"},"content":"    public void deadline(String content, String date) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"mohamedsaf1"},"content":"        Deadline dl \u003d new Deadline(content, date);","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":107,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(dl);","lastModifiedDate":"2022-08-29"},{"lineNumber":108,"author":{"gitId":"mohamedsaf1"},"content":"        inputList.add(dl);","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Now you have \" + inputList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":110,"author":{"gitId":"mohamedsaf1"},"content":"        Storage.writeToFile(inputList);","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":112,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":113,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to store an Event task in the list.","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"mohamedsaf1"},"content":"     * @param content Description of the Event task.","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"mohamedsaf1"},"content":"     * @throws IOException","lastModifiedDate":"2022-08-29"},{"lineNumber":117,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":118,"author":{"gitId":"mohamedsaf1"},"content":"    public void event(String content, String date) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":119,"author":{"gitId":"mohamedsaf1"},"content":"        Event ev \u003d new Event(content, date);","lastModifiedDate":"2022-08-29"},{"lineNumber":120,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":121,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(ev);","lastModifiedDate":"2022-08-29"},{"lineNumber":122,"author":{"gitId":"mohamedsaf1"},"content":"        inputList.add(ev);","lastModifiedDate":"2022-08-29"},{"lineNumber":123,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Now you have \" + inputList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":124,"author":{"gitId":"mohamedsaf1"},"content":"        Storage.writeToFile(inputList);","lastModifiedDate":"2022-08-29"},{"lineNumber":125,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":127,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":128,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to get a task from the list.","lastModifiedDate":"2022-08-29"},{"lineNumber":129,"author":{"gitId":"mohamedsaf1"},"content":"     * @param index Index of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":130,"author":{"gitId":"mohamedsaf1"},"content":"     * @return The task of the index given.","lastModifiedDate":"2022-08-29"},{"lineNumber":131,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":132,"author":{"gitId":"mohamedsaf1"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-29"},{"lineNumber":133,"author":{"gitId":"mohamedsaf1"},"content":"        return this.inputList.get(index);","lastModifiedDate":"2022-08-29"},{"lineNumber":134,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":135,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":136,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":137,"author":{"gitId":"mohamedsaf1"},"content":"     * Method to search for tasks that have the keyword that is given by user.","lastModifiedDate":"2022-08-29"},{"lineNumber":138,"author":{"gitId":"mohamedsaf1"},"content":"     * @param str Keyword given by user.","lastModifiedDate":"2022-08-29"},{"lineNumber":139,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":140,"author":{"gitId":"mohamedsaf1"},"content":"    public void find(String str) {","lastModifiedDate":"2022-08-29"},{"lineNumber":141,"author":{"gitId":"mohamedsaf1"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":142,"author":{"gitId":"mohamedsaf1"},"content":"        for (int i \u003d 0; i \u003c inputList.size(); i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":143,"author":{"gitId":"mohamedsaf1"},"content":"            if (inputList.get(i).toString().contains(str)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":144,"author":{"gitId":"mohamedsaf1"},"content":"                list.add(inputList.get(i));","lastModifiedDate":"2022-08-29"},{"lineNumber":145,"author":{"gitId":"mohamedsaf1"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":146,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":147,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":148,"author":{"gitId":"mohamedsaf1"},"content":"        for (Task item : list) {","lastModifiedDate":"2022-08-29"},{"lineNumber":149,"author":{"gitId":"mohamedsaf1"},"content":"            System.out.println(list.indexOf(item) + 1 + \".\" + item);","lastModifiedDate":"2022-08-29"},{"lineNumber":150,"author":{"gitId":"mohamedsaf1"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":151,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":152,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"mohamedsaf1":152}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":" * A class that creates an object of type Todo.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":" * @author Safwan A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"    protected String by;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"     * Constructor that creates a Todo object.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"     * @param description Details of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"     * Method that overrides Java.toString() method to convert the Todo","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"     * task as a string.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"     * @return A string of the Todo task.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"mohamedsaf1":30}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":" * A class that deals with interacting with the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":" *","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":" * @author A0235287X","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":"public class Ui {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":"     * Method that displays a string as a starting message.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"    public void greetings() {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"mohamedsaf1"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"mohamedsaf1"},"content":"     * Method that displays error when file cannot be loaded.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"mohamedsaf1"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"mohamedsaf1"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"mohamedsaf1"},"content":"        System.out.println(\"The file is empty! Let\u0027s create a new file :)\");","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"mohamedsaf1":31}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"    public void getTest() throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"        Task test \u003d new Task(\"Finish CS2103t iP\");","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"        taskList.add(test);","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"        assertEquals(test, taskList.get(0));","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"mohamedsaf1":19}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"mohamedsaf1"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"mohamedsaf1"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"mohamedsaf1"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"mohamedsaf1"},"content":"    public void getTest() {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"mohamedsaf1"},"content":"        Task task \u003d new Task(\"do iP\");","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"mohamedsaf1"},"content":"        task.mark();","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"mohamedsaf1"},"content":"        assertEquals(\"[X]\", task.getStatusIcon());","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"mohamedsaf1"},"content":"        task.unmark();","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"mohamedsaf1"},"content":"        assertEquals(\"[ ]\", task.getStatusIcon());","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"mohamedsaf1"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"mohamedsaf1"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"mohamedsaf1":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mohamedsaf1"},"content":"Hello from","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"mohamedsaf1"},"content":" ____        _","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"mohamedsaf1"},"content":"|  _ \\ _   _| | _____","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"mohamedsaf1"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"mohamedsaf1"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"mohamedsaf1"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"mohamedsaf1":6}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aarontangr":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"checkstyle {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"dependencies {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"aarontangr":10,"-":41}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"T | 1 | read book","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"D | 0 | return book | 06/06/2022","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"E | 0 | project meeting | 01/01/2022 11:12","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"aarontangr":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":" * Represents a deadline for a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    private DateTimeFormatter formatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"     * @param isDone If task is done or not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"     * @param dateString Date represented as a string.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"     * @throws DukeException If date is given in an invalid format.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"    Deadline(String description, boolean isDone, String dateString) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"            this.date \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"            throw new DukeException(\"wrong format!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"     * Generates a String to be saved.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"     * @return String in the format of D | isDone | description | date.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"    public String saveString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"        return String.format(\"D | %s | %s | %s\\n\", super.isDone ? \"1\" : \"0\",","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"                super.description, date.format(formatter));","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"     * Generates a String for representation during list.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"     * @return String in the format of [D][isDone] description (by: date)","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"                super.toString(), date.format(formatter));","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"aarontangr":54}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":" * Duke is a personal chatbot to keep track of things.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"public class Duke {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"     * Constructs an instance of Duke.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"    Duke() {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"    private void run() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"        ui.introduction();","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"        tasks \u003d storage.readData();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"        String input \u003d SCANNER.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"            parser.process(input, tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"            input \u003d SCANNER.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"        storage.saveData(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"        new Duke().run();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"aarontangr":45}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":" * Custom exception for Duke.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"     * @param message Exception message to be created.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"        super(message);","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"aarontangr":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":" * Represents an Event as a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    private DateTimeFormatter formatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"     * Constructor for Event class.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"     * @param isDone If task is done or not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"     * @param dateTimeString Date and time represented as a string.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"     * @throws DukeException If date or time is given in an invalid format.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"    Event(String description, boolean isDone, String dateTimeString) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"            dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"            throw new DukeException(\"wrong format!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"     * Generates a String to be saved.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"     * @return String in the format of E | isDone | description | datetime.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"    public String saveString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"        return String.format(\"E | %s | %s | %s\\n\", super.isDone ? \"1\" : \"0\",","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"                super.description, dateTime.format(formatter));","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"     * Generates a String for representation during list.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"     * @return String in the format of [E][isDone] description (at: datetime)","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"        return String.format(\"[E]%s (at: %s)\",","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"                super.toString(), dateTime.format(formatter));","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"aarontangr":54}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":" * Parses given string to operate on.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"     * Processes String s to be operated on.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"     * @param s String to be processed.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"     * @param tasks Task list to be operated on.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"    protected void process(String s, TaskList tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"        String[] words \u003d s.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"        String command \u003d words[0];","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"        switch (command) {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"        case \"list\":","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"            outputList();","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"        case \"done\":","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"            markItemDone(s);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"            markItemUndone(s);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"            insertTodo(s);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"            insertDeadline(s);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"        case \"event\":","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"            insertEvent(s);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"            deleteTask(s);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"        case \"find\":","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"            find(s);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"        default:","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"sorry, I don\u0027t understand you\");","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"     * Prints out tasks in list in format specified in each tasks\u0027 toString function.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"aarontangr"},"content":"    protected void outputList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"aarontangr"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"you got no tasks\");","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"aarontangr"},"content":"        } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"heres your tasks\");","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"aarontangr"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"aarontangr"},"content":"                System.out.format(\"\\t%d.%s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"aarontangr"},"content":"     * Converts a string to a Todo and inserts into task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"aarontangr"},"content":"     * @param input String to be converted to a Todo.","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"aarontangr"},"content":"    protected void insertTodo(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"aarontangr"},"content":"            String description \u003d input.substring(5);","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"aarontangr"},"content":"            insertTask(new Todo(description, false));","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"aarontangr"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"description cannot be empty\");","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"aarontangr"},"content":"     * Converts a string to a Deadline and inserts into task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"aarontangr"},"content":"     * @param input String to be converted to a Deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"aarontangr"},"content":"    protected void insertDeadline(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"aarontangr"},"content":"            String[] items \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"aarontangr"},"content":"            insertTask(new Deadline(items[0], false, items[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"aarontangr"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"description cannot be empty\");","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"aarontangr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"please enter a valid date format.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"date: dd/mm/YYYY\");","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"aarontangr"},"content":"     * Converts a string to an Event and inserts into task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"aarontangr"},"content":"     * @param input String to be converted to an Event.","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"aarontangr"},"content":"    protected void insertEvent(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"aarontangr"},"content":"            String[] items \u003d input.substring(6).split(\" /at \");","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"aarontangr"},"content":"            insertTask(new Event(items[0], false, items[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"aarontangr"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"description cannot be empty\");","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"aarontangr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"please enter a valid date format.\");","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"date and time: dd/mm/YYYY hh:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"aarontangr"},"content":"     * Inserts task into given task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"aarontangr"},"content":"     * @param task Task to be inserted into the list.","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"aarontangr"},"content":"    protected void insertTask(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"aarontangr"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"aarontangr"},"content":"        System.out.println(\"added: \");","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"aarontangr"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"aarontangr"},"content":"        System.out.format(\"you have %d task(s) in the list\\n\", tasks.size());","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":129,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"aarontangr"},"content":"     * Parses String in the form of mark x, marking index x in the list as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"aarontangr"},"content":"     * @param input String that contains information about item to be marked done.","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"aarontangr"},"content":"    protected void markItemDone(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"aarontangr"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":137,"author":{"gitId":"aarontangr"},"content":"            if (words.length \u003e 2) {","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"aarontangr"},"content":"                throw new DukeException(\"too many parameters!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"aarontangr"},"content":"            int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"aarontangr"},"content":"            tasks.get(index - 1).markDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"cool, this task is marked as done\");","lastModifiedDate":"2022-08-17"},{"lineNumber":143,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"\\t\" + tasks.get(index - 1));","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"aarontangr"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"format: mark \u003cnumber\u003e\");","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"aarontangr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"enter a valid index\");","lastModifiedDate":"2022-08-17"},{"lineNumber":148,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":150,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":151,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"aarontangr"},"content":"     * Parses String in the form of mark x, marking index x in the list as not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"aarontangr"},"content":"     * @param input String that contains information about item to be marked not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"aarontangr"},"content":"    protected void markItemUndone(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":158,"author":{"gitId":"aarontangr"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":159,"author":{"gitId":"aarontangr"},"content":"            if (words.length \u003e 2) {","lastModifiedDate":"2022-08-17"},{"lineNumber":160,"author":{"gitId":"aarontangr"},"content":"                throw new DukeException(\"too many parameters!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":162,"author":{"gitId":"aarontangr"},"content":"            int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":163,"author":{"gitId":"aarontangr"},"content":"            tasks.get(index - 1).markUndone();","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"ok, this task is marked as not done yet\");","lastModifiedDate":"2022-08-17"},{"lineNumber":165,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"\\t\" + tasks.get(index - 1));","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"aarontangr"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":167,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"format: mark \u003cnumber\u003e\");","lastModifiedDate":"2022-08-17"},{"lineNumber":168,"author":{"gitId":"aarontangr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":169,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"enter a valid index\");","lastModifiedDate":"2022-08-17"},{"lineNumber":170,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":173,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"aarontangr"},"content":"     * Parses String in the form of mark x, deleting task at index x in the list.","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"aarontangr"},"content":"     * @param input String that contains information about item to be deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"aarontangr"},"content":"    protected void deleteTask(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":180,"author":{"gitId":"aarontangr"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":181,"author":{"gitId":"aarontangr"},"content":"            if (words.length \u003e 2) {","lastModifiedDate":"2022-08-17"},{"lineNumber":182,"author":{"gitId":"aarontangr"},"content":"                throw new DukeException(\"too many parameters!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":183,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":184,"author":{"gitId":"aarontangr"},"content":"            int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":185,"author":{"gitId":"aarontangr"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":186,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"ok, i removed this task\");","lastModifiedDate":"2022-08-17"},{"lineNumber":187,"author":{"gitId":"aarontangr"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":188,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"format: mark \u003cnumber\u003e\");","lastModifiedDate":"2022-08-17"},{"lineNumber":189,"author":{"gitId":"aarontangr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":190,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"enter a valid index\");","lastModifiedDate":"2022-08-17"},{"lineNumber":191,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":192,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":193,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":194,"author":{"gitId":"aarontangr"},"content":"    protected void find(String s) {","lastModifiedDate":"2022-08-23"},{"lineNumber":195,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":196,"author":{"gitId":"aarontangr"},"content":"            String toFind \u003d s.substring(5);","lastModifiedDate":"2022-08-23"},{"lineNumber":197,"author":{"gitId":"aarontangr"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":198,"author":{"gitId":"aarontangr"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":199,"author":{"gitId":"aarontangr"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":200,"author":{"gitId":"aarontangr"},"content":"                if (task.description.contains(toFind)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":201,"author":{"gitId":"aarontangr"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":202,"author":{"gitId":"aarontangr"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":203,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":204,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":205,"author":{"gitId":"aarontangr"},"content":"            if (matchingTasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":206,"author":{"gitId":"aarontangr"},"content":"                System.out.println(\"\\tyou have no matching tasks!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":207,"author":{"gitId":"aarontangr"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":208,"author":{"gitId":"aarontangr"},"content":"                int count \u003d 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":209,"author":{"gitId":"aarontangr"},"content":"                System.out.println(\"\\there are your matching tasks:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":210,"author":{"gitId":"aarontangr"},"content":"                for (Task task : matchingTasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":211,"author":{"gitId":"aarontangr"},"content":"                    System.out.format(\"\\t%d. %s\\n\", count, task);","lastModifiedDate":"2022-08-23"},{"lineNumber":212,"author":{"gitId":"aarontangr"},"content":"                    count++;","lastModifiedDate":"2022-08-23"},{"lineNumber":213,"author":{"gitId":"aarontangr"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":214,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":215,"author":{"gitId":"aarontangr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":216,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"invalid format! try find item\");","lastModifiedDate":"2022-08-23"},{"lineNumber":217,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":218,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"aarontangr":217,"-":2}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":" * Storage for the Duke chatbot, storing and restoring files into/from a save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"    private static final File FILE_PATH \u003d new File(\"src/main/java/data/duke.txt\");","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"     * Loads data from a save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"     * @return A TaskList with data loaded from a savefile.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"    protected static TaskList readData() {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"            Scanner fileScanner \u003d new Scanner(FILE_PATH);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"                String[] info \u003d fileScanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"                String type \u003d info[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"                boolean isDone \u003d info[1].equals(\"1\") ? true : false;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"                String description \u003d info[2];","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"                Task task;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"                switch (type) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"                case \"T\":","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"                    task \u003d new Todo(description, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"                case \"D\":","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"                    task \u003d new Deadline(description, isDone, info[3]);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"                case \"E\":","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"                    task \u003d new Event(description, isDone, info[3]);","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"                default:","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"                    throw new DukeException(\"invalid task type, try T, D, E\");","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"                tasks.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"            fileScanner.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"            return tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"data cannot be found\");","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"data cannot be read\");","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"        return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"aarontangr"},"content":"     * Saves data from given TaskList into save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"aarontangr"},"content":"     * @param tasks TaskList to be saved.","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"aarontangr"},"content":"    protected void saveData(TaskList tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"aarontangr"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"aarontangr"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"aarontangr"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"aarontangr"},"content":"                String toSave \u003d task.saveString();","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"aarontangr"},"content":"                fw.write(toSave);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"aarontangr"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"aarontangr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"aarontangr"},"content":"            System.out.println(\"data cannot be saved\");","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"aarontangr":77}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":" * A task that is specified by the user.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"     * Constructor for a task. Note that Task is an","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"     * abstract class, therefore this constructor is only used by","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"     * its subclasses.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"     * @param description","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"     * @param isDone","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"     * Returns \"X\" if task is done and \"\" if not.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"     * @return Returns status of the task being done represented as a String.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"        return this.isDone ? \"X\" : \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"     * Marks current task as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"     * Marks current task as undone.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"        String icon \u003d this.getStatus();","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"        return String.format(\"[%s] %s\", icon, this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"     * Generates a String to be saved.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"     * @return String in the format of the more specific task.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"aarontangr"},"content":"    public abstract String saveString();","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"aarontangr":59}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"public class TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    TaskList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"     * Adds a task into the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"    protected void add(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"     * @return A boolean checking whether the task is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"    protected boolean isEmpty() {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"     * Returns a task at index index.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"     * @param index Index of task to be returned.","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"     * @return Task at index index.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"    protected Task get(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"     * Removes a task at index index.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"     * @return Task at index index.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"    protected Task remove(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"        return tasks.remove(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"aarontangr"},"content":"     * Returns the size of the current task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"aarontangr"},"content":"     * @return Size of current task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"aarontangr"},"content":"    protected int size() {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"aarontangr"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"aarontangr":64}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":" * Todo represents a todo for a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"     * @param isDone If task is done or not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"     * Generates a String to be saved.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"     * @return String in the format of T | isDone | description.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"    public String saveString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"        return String.format(\"T | %s | %s\\n\", super.isDone ? \"1\" : \"0\",","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"                super.description);","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"     * Generates a String for representation during list.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"     * @return String in the format of [T][isDone] description","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"aarontangr":39}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":" * User interface for the Duke chatbot, creating various messages.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":" * @author Aaron Tan","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"     * Greets the user.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    protected static void introduction() {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"        System.out.println(\"hello\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"        System.out.println(\"can i help you?\");","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"aarontangr":17}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"    private String invalidDate \u003d \"40/40/999\";","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"    private String validDate \u003d \"1/1/2022\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    private String validDescription \u003d \"test description\";","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"     * Test Deadline with valid input","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"    public void Test1() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"            Deadline test \u003d new Deadline(validDescription, true, validDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"     * Test Deadline with invalid input","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"    public void Test2() {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"            Deadline test \u003d new Deadline(validDescription, false, invalidDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"            assertEquals(\"wrong format!\", e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"aarontangr":38}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"public class EventTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"    private String invalidDateTime \u003d \"01/01/2022 100:00\";","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"    private String validDateTime \u003d \"01/01/2022 11:12\";","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"    private String validDescription \u003d \"test description\";","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"     * Test Events with valid input","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    public void Test1() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"            Event test \u003d new Event(validDescription, true, validDateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"     * Test Events with invalid input","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"    public void Test2() {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"            Deadline test \u003d new Deadline(validDescription, false, invalidDateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"            assertEquals(\"wrong format!\", e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"aarontangr":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"hello","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"deadline return book /by sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"aarontangr":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aarontangr":1,"-":20}}]

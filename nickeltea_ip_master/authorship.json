[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"test {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nickeltea":4,"-":41}},{"path":"src/main/java/seedu/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"    protected String by;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"     * A constructor that creates an instance of Deadline.","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"     * It takes in a description of the task and the deadline of the task.","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm a\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(by, inputFormatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"        this.by \u003d dateTime.format(outputFormatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"    public String toStore() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"        return \"D\" + super.toStore() + \" : \" + by;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nickeltea":34}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"    private static Storage save;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"    private static Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"     * A constructor that returns an instance of Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"     * @param filePath The path to the save file where data is stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"        save \u003d new Storage(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"        TaskList taskList \u003d new TaskList(save);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"        ui \u003d new Ui(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"     * Prints out greeting, initialises the TaskList and opens the scanner to start","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"     * receiving commands.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"    public static void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"        ui.introduction();","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"nickeltea":29,"-":4}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"     * A constructor that creates an instance of DukeException.","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"     * @param message A message to be printed.","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"        String str \u003d \"☹ OOPS!!!\";","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"        return str;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nickeltea":18}},{"path":"src/main/java/seedu/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"    protected String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"     * A constructor that creates an instance of Event.","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"     * It takes in a description of the event and the time of the event.","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"     * @param at The time of the event.","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"    public String toStore() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"        return \"E\" + super.toStore() + \" : \" + at;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nickeltea":27}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"    private Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"     * A constructor that returns an instance of Parser.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"     * @param tasklist The TaskList where tasks are stored during program execution.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"    public Parser(TaskList tasklist) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"     * Calls the Scanner to wait for the next line of user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"    public void nextCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"        String command \u003d scan.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"        this.parse(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"        nextCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"     * Takes in the user\u0027s input and interprets it.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"     * @param command The user\u0027s input.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"    public void parse(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"            this.taskList.list();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"        } else if (command.startsWith(\"mark\") || command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"            taskList.toggleDone(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"            int index \u003d Character.getNumericValue(command.charAt(command.length() - 1));","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"            taskList.delete(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"            taskList.find(command);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"            Ui.bye();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"            // Add a task.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"            taskList.addTask(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nickeltea":49}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"    private File save;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"    private String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"        // Make save file and parent directories if it does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"        File saveFile \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"        saveFile.getParentFile().mkdirs();","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"        catch(IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"            e.getStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"            Ui.saveError();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"        this.save \u003d saveFile;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"     * Initialises the TaskList storage with save data from the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"     * @param storage Where tasks are stored in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"    public void initialise(ArrayList\u003cTask\u003e storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"        storage.clear();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"            Scanner s \u003d new Scanner(save);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"                String[] temp \u003d task.split(\" : \");","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"                Task newTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nickeltea"},"content":"                if (temp[0].equals(\"T\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nickeltea"},"content":"                    newTask \u003d new Todo(temp[2]);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nickeltea"},"content":"                } else if (temp[0].equals(\"D\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nickeltea"},"content":"                    DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nickeltea"},"content":"                    DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm a\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nickeltea"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(temp[3], inputFormatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nickeltea"},"content":"                    newTask \u003d new Deadline(temp[2], dateTime.format(outputFormatter));","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nickeltea"},"content":"                } else if (temp[0].equals(\"E\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nickeltea"},"content":"                    newTask \u003d new Event(temp[2], temp[3]);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"nickeltea"},"content":"                } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"nickeltea"},"content":"                    throw new DukeException(\"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"nickeltea"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"nickeltea"},"content":"                if (temp[1].equals(\"1\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"nickeltea"},"content":"                    newTask.markDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"nickeltea"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"nickeltea"},"content":"                storage.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"nickeltea"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"nickeltea"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"nickeltea"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"nickeltea"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"nickeltea"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"nickeltea"},"content":"            Ui.unknownElement();","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"nickeltea"},"content":"    public void addTask(String taskToAdd) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"nickeltea"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"nickeltea"},"content":"            PrintWriter fw \u003d new PrintWriter(new FileWriter(filePath, true)); // create a FileWriter in append mode","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"nickeltea"},"content":"            fw.println(taskToAdd);","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"nickeltea"},"content":"            fw.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"nickeltea"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"nickeltea"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"nickeltea"},"content":"            Ui.unableToAdd();","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"nickeltea"},"content":"    public void reload(ArrayList\u003cTask\u003e storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"nickeltea"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"nickeltea"},"content":"            PrintWriter writer \u003d new PrintWriter(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"nickeltea"},"content":"            writer.print(\"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"nickeltea"},"content":"            writer.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"nickeltea"},"content":"            Iterator\u003cTask\u003e iter \u003d storage.iterator();","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"nickeltea"},"content":"            while (iter.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"nickeltea"},"content":"                this.addTask(iter.next().toStore());","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"nickeltea"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"nickeltea"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"nickeltea"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"nickeltea"},"content":"    public void reset(ArrayList\u003cTask\u003e storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"nickeltea"},"content":"        storage.clear();","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"nickeltea"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"nickeltea"},"content":"            PrintWriter writer \u003d new PrintWriter(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"nickeltea"},"content":"            writer.print(\"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"nickeltea"},"content":"            writer.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"nickeltea"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"nickeltea"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nickeltea":122}},{"path":"src/main/java/seedu/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"     * A constructor that creates an instance of Task.","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"     * Sets this task as done or not done, depending on the given command.","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"     * @param command The command that determines whether this task is done or not done.","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"    public void toggleDone(String command) {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"        if (command.startsWith(\"mark \")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + this.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"        } else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\" + this.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"     * Marks this task as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"     * Returns a String that reflects whether this task is done or not done.","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"     * @return Returns an \"X\" or \" \" depending on whether this task is done.","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"nickeltea"},"content":"        return \"[\" + this.getStatusIcon()  + \"] \" + description;","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nickeltea"},"content":"     * Returns a String that is written to a file to be stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nickeltea"},"content":"     * @return A String formatted to be stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nickeltea"},"content":"    public String toStore() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nickeltea"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nickeltea"},"content":"            return \" : 1 : \" + description;","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nickeltea"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nickeltea"},"content":"            return \" : 0 : \" + description;","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"nickeltea"},"content":"     * Checks whether this Task\u0027s description contains the String to be found.","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"nickeltea"},"content":"     * @param toMatch The String to be found.","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"nickeltea"},"content":"     * @return true if the description contains the String to be found, false otherwise.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"nickeltea"},"content":"    public boolean checkMatching(String toMatch) {","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"nickeltea"},"content":"        return description.contains(toMatch);","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nickeltea":73}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"    private static ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"    private Storage saveFile;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"     * A constructor that returns an instance of TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"     * @param saveFile Handles storing Tasks in the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"    public TaskList(Storage saveFile) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"        this.saveFile \u003d saveFile;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"        saveFile.initialise(storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"     * Adds Tasks to storage and saves them to the hard disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"     * @param command the user\u0027s input.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"    public void addTask(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"            if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"                Ui.emptyDescription(\"Todo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"                return;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"            Task newTask \u003d new Todo(command.substring(5));","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"            storage.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"            saveFile.addTask(newTask.toStore());","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"                if (command.length() \u003c\u003d 9) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"                    Ui.emptyDescription(\"Deadline\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"                    return;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"                String[] temp \u003d command.substring(9).split(\"/by \");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"                Task newTask \u003d new Deadline(temp[0], temp[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"                storage.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"                saveFile.addTask(newTask.toStore());","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nickeltea"},"content":"                Ui.wrongDateFormat();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nickeltea"},"content":"                return;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nickeltea"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nickeltea"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nickeltea"},"content":"            if (command.length() \u003c\u003d 6) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nickeltea"},"content":"                Ui.emptyDescription(\"Event\");","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nickeltea"},"content":"                return;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nickeltea"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nickeltea"},"content":"            String[] temp \u003d command.substring(6).split(\"/at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nickeltea"},"content":"            Task newTask \u003d new Event(temp[0], temp[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nickeltea"},"content":"            storage.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nickeltea"},"content":"            saveFile.addTask(newTask.toStore());","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"nickeltea"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"nickeltea"},"content":"            Ui.unknownCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"nickeltea"},"content":"            return;","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"nickeltea"},"content":"        Ui.addText(storage.get(storage.size() - 1).toString(), storage.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"nickeltea"},"content":"     *  Removes the specified Task from storage if it exists.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"nickeltea"},"content":"     *  If the specified Task does not exist, a statement telling the user that","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"nickeltea"},"content":"     *  the specified does not exist is printed.","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"nickeltea"},"content":"     * @param index The index of the Task to be removed from storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"nickeltea"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"nickeltea"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"nickeltea"},"content":"            Task toRemove \u003d storage.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"nickeltea"},"content":"            saveFile.reload(storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"nickeltea"},"content":"            Ui.deleteText(toRemove.toString(), storage.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"nickeltea"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"nickeltea"},"content":"            Ui.taskNotFoundText();","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"nickeltea"},"content":"     * Lists all the tasks currently being stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"nickeltea"},"content":"    public void list() {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"nickeltea"},"content":"        System.out.println(\"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"nickeltea"},"content":"                + \"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"nickeltea"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"nickeltea"},"content":"        Iterator\u003cTask\u003e iterator \u003d storage.iterator();","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"nickeltea"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"nickeltea"},"content":"            System.out.printf(\"%d. \", index);","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"nickeltea"},"content":"            System.out.println(iterator.next().toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"nickeltea"},"content":"            index++;","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"nickeltea"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"nickeltea"},"content":"     * Marks the specified Task as done or not done, according to the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"nickeltea"},"content":"     * @param command The user\u0027s input.","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"nickeltea"},"content":"    public void toggleDone(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"nickeltea"},"content":"        int index \u003d Character.getNumericValue(command.charAt(command.length() - 1));","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"nickeltea"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"nickeltea"},"content":"            storage.get(index - 1).toggleDone(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"nickeltea"},"content":"            saveFile.reload(storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"nickeltea"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"nickeltea"},"content":"            Ui.taskNotFoundText();","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"nickeltea"},"content":"     * returns a list of Tasks that contain the word to be found.","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"nickeltea"},"content":"     * @param command the user\u0027s input.","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"nickeltea"},"content":"    public void find(String command) {","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"nickeltea"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"nickeltea"},"content":"        String toFind \u003d command.substring(5);","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"nickeltea"},"content":"        Iterator\u003cTask\u003e iterator \u003d storage.iterator();","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"nickeltea"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"nickeltea"},"content":"            Task curr \u003d iterator.next();","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"nickeltea"},"content":"            if (curr.checkMatching(toFind)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"nickeltea"},"content":"                result.add(curr);","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"nickeltea"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"nickeltea"},"content":"        System.out.println(\"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"nickeltea"},"content":"                + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"nickeltea"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"nickeltea"},"content":"        Iterator\u003cTask\u003e resultIterator \u003d result.iterator();","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"nickeltea"},"content":"        while (resultIterator.hasNext()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"nickeltea"},"content":"            System.out.printf(\"%d. \", index);","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"nickeltea"},"content":"            System.out.println(resultIterator.next().toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"nickeltea"},"content":"            index++;","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"nickeltea"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nickeltea":156}},{"path":"src/main/java/seedu/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"     * A constructor that creates an instance of Todo.","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"     * It takes in the description of the task.","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"    public String toStore() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"        return \"T\" + super.toStore();","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nickeltea":26}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"     * A constructor that returns an instance of Ui.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"     * @param tasklist The TaskList instance for this instance of Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"    public Ui(TaskList tasklist) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"        this.parser \u003d new Parser(tasklist);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"     * Greets the user and calls the Parser to open a scanner and start","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"     * taking in user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"    public void introduction() {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nickeltea"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nickeltea"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nickeltea"},"content":"        System.out.println(\"Hello! I\u0027m Duke \\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nickeltea"},"content":"        parser.nextCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nickeltea"},"content":"     * Informs the user what task has been deleted and how many tasks are left.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nickeltea"},"content":"     * @param deleted The deleted task.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nickeltea"},"content":"     * @param size The number of tasks remaining.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nickeltea"},"content":"    public static void deleteText(String deleted, int size) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nickeltea"},"content":"                        + \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nickeltea"},"content":"                        + deleted + \"\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nickeltea"},"content":"                        + \"Now you have \" + size + \" tasks in the list. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"nickeltea"},"content":"     * Tells the user what Task was added and how many Tasks are in the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"nickeltea"},"content":"     * @param added Description of the Task added.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"nickeltea"},"content":"     * @param size The total number of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"nickeltea"},"content":"    public static void addText(String added, int size) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nickeltea"},"content":"                        + \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nickeltea"},"content":"                        + added + \"\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nickeltea"},"content":"                        + \"Now you have \" + size + \" tasks in the list. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"nickeltea"},"content":"     * Informs the user that the task they tried to access does not exist.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"nickeltea"},"content":"    public static void taskNotFoundText() {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"nickeltea"},"content":"                        + \"☹ OOPS!!! That task doesn\u0027t exist. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"nickeltea"},"content":"     * Informs the user that the format of their command was incorrect.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"nickeltea"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"nickeltea"},"content":"     * @param taskType The type of Task the user tried to create.","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"nickeltea"},"content":"    public static void emptyDescription(String taskType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"nickeltea"},"content":"        if (taskType.equals(\"Event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"nickeltea"},"content":"            System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"nickeltea"},"content":"                    \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"nickeltea"},"content":"                            + \"☹ OOPS!!! The description of an Event cannot be empty. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"nickeltea"},"content":"                            + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"nickeltea"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"nickeltea"},"content":"            System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"nickeltea"},"content":"                    \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"nickeltea"},"content":"                            + \"☹ OOPS!!! The description of a \" + taskType + \" cannot be empty. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"nickeltea"},"content":"                            + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"nickeltea"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that Duke does not recognise the information in the save file.","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"nickeltea"},"content":"    public static void unknownElement() {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"nickeltea"},"content":"                        + \"☹ OOPS!!! Unknown element in save file. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that Duke was unable to add their task to the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"nickeltea"},"content":"    public static void unableToAdd() {","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"nickeltea"},"content":"                        + \"☹ OOPS!!! Unable to add task. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that their date format is incorrect.","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"nickeltea"},"content":"    public static void wrongDateFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"nickeltea"},"content":"                        + \"☹ OOPS!!! The deadline must be in yyyy-MM-dd hh:mm AM/PM format. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that Dukes was unable to find or create a save file.","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"nickeltea"},"content":"    public static void saveError() {","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"nickeltea"},"content":"                        + \"☹ OOPS!!! Unable to find/create save file. \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"nickeltea"},"content":"     * Tells the user that their input was not recognised as a command.","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"nickeltea"},"content":"    public static void unknownCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"nickeltea"},"content":"                        + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"nickeltea"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"nickeltea"},"content":"     * Bids farewell to the user and ends the program.","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"nickeltea"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"nickeltea"},"content":"    public static void bye() {","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"nickeltea"},"content":"        System.out.println(","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"nickeltea"},"content":"                \"____________________________________________________________ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"nickeltea"},"content":"                        + \"Bye. Hope to see you again soon! \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"nickeltea"},"content":"                        + \"____________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"nickeltea"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nickeltea":152}},{"path":"src/test/java/seedu/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"    public void Deadline_wrongDateFormat_exceptionThrown(){","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"                () -\u003e {new Deadline(\"write testcase\", \"now\");});","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"    public void toStore_correctInputs_correctStringReturned(){","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"        assertEquals(\"D : 0 : finish iP : 05 May 2022 11:00 PM\",","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"                new Deadline(\"finish iP\", \"2022-05-05 11:00 PM\").toStore());","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nickeltea":23}},{"path":"src/test/java/seedu/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"    public void toStore_correctInputs_correctStringReturned() {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"        assertEquals(\"T : 0 : finish iP\",","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"                new Todo(\"finish iP\").toStore());","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nickeltea":13}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"T : 0 : borrow book","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"E : 1 : project meeting  : Mon 2-4pm","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"D : 0 : do homework  : no idea :-p","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nickeltea":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nickeltea"},"content":"reset","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nickeltea"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nickeltea"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nickeltea"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nickeltea"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nickeltea"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nickeltea"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"nickeltea"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"nickeltea"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"nickeltea"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"nickeltea"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"nickeltea"},"content":"unmark t","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"nickeltea"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"nickeltea"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nickeltea"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"nickeltea"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"nickeltea"},"content":"help me","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nickeltea"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"nickeltea"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"nickeltea"},"content":"delete 6","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nickeltea":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"nickeltea"},"content":"FC ACTUAL.TXT EXPECTED.TXT /w","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nickeltea":1,"-":20}}]

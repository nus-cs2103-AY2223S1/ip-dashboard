[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"javafx {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    version \u003d \"18.0.2\"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"bryanljx":12,"-":40}},{"path":"src/main/java/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" * Represents a command to be executed that adds a task to the internal duke list.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    private final Task taskItem;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    public AddTaskCommand(Task taskItem) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"        this.taskItem \u003d taskItem;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"        String task \u003d \"  \" + list.addTask(this.taskItem);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        String startLine \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        String endLine \u003d String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"                list.getTaskCount());","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"        setOutputMessage(Ui.formatLinesIntoParagraph(","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"                startLine,","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"                task,","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"                endLine","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        ));","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":36}},{"path":"src/main/java/command/AddTaskFromStorageCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * Represents a command to be executed that adds a task based on input from save file.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"public class AddTaskFromStorageCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    private final Task taskItem;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"     * @param taskItem Task to be added to internal duke list","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    public AddTaskFromStorageCommand(Task taskItem) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"        this.taskItem \u003d taskItem;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        list.addTask(this.taskItem);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":29}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" * Represents a command generated from the internal save file or input from the","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * command line.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    private boolean isTerminated \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    private String outputMessage \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"     * Executes a specific command","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"     * @param list    Duke list that stores all current tasks","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"     * @param storage Storage that handles all storage related functionalities","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    public abstract void execute(TaskList list, Storage storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    public String getOutputMessage() {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        return this.outputMessage;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"    protected void setOutputMessage(String outputMessage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"        this.outputMessage \u003d outputMessage;","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    public boolean getIsTerminated() {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        return isTerminated;","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"    public void setIsTerminated(boolean isTerminated) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        this.isTerminated \u003d isTerminated;","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":40}},{"path":"src/main/java/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * Represents a task to be executed that deletes a specific task from internal","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" * duke list based on given index.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    private final int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     * @param index Index of the element to be deleted within the","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"     *              internal duke list","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        String deletedItem \u003d \"  \" + list.deleteItem(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"        String deleteText \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"        String endLine \u003d String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"                list.getTaskCount());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        setOutputMessage(Ui.formatLinesIntoParagraph(","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"                deleteText,","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"                deletedItem,","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"                endLine","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        ));","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":40}},{"path":"src/main/java/command/FindSearchTextCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import util.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" * Represents a task to be executed that searches and returns a task in the internal","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" * duke list based on search text","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"public class FindSearchTextCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    private final String searchText;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"     * @param searchText Searches duke list for any tasks that contains the","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"     *                   search text","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    public FindSearchTextCommand(String searchText) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"        this.searchText \u003d searchText;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"        ArrayList\u003cString\u003e matchedTasks \u003d list.find(searchText);","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"        if (matchedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"            System.out.println(Ui.formatLinesIntoParagraph(","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"                    \"Sorry but there is no matching task in the list!\"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"            ));","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"            return;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        String res \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"        for (String match : matchedTasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"            res +\u003d Ui.formatLine(match);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"        setOutputMessage(res);","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"bryanljx":46}},{"path":"src/main/java/command/ListAllTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" * Represents a command to be executed that lists all current tasks in the","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * internal duke list.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"public class ListAllTasksCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"        setOutputMessage(","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"                list.toString()","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":22}},{"path":"src/main/java/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * Represents a task to be executed that marks a specific task in the","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" * internal duke list based on given index","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"    private final int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"     * @param index Index of the element to be marked within the","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"     *              internal duke list","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    public MarkTaskCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        String markedItem \u003d \"  \" + list.markItem(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"        String markedText \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        setOutputMessage(Ui.formatLinesIntoParagraph(","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"                markedText,","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"                markedItem","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"        ));","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":34}},{"path":"src/main/java/command/TerminateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" * Represents a command that to be executed that terminates the program","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"public class TerminateCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"        setIsTerminated(true);","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"        storage.saveAllTasks(list);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":20}},{"path":"src/main/java/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * Represents a task to be executed that unmarks a specific task within the","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" * internal duke list based on given index","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    private final int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     * @param index Index of the element to be unmarked within the","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"     *              internal duke list","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    public UnmarkTaskCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        String unmarkedItem \u003d \"  \" + list.unmarkItem(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"        String unmarkedText \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"        setOutputMessage(Ui.formatLinesIntoParagraph(","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"                unmarkedText,","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"                unmarkedItem","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        ));","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":36}},{"path":"src/main/java/date/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package date;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * Stores a representation of Date based on ISO-8601","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"public abstract class Date {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    public Date(String date) throws DateTimeParseException {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"     * @return Date formatted in terms of \"month day year\", e.g Jan 1 2000","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"     * @return A string encoding of the stored date","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"        return date.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":35}},{"path":"src/main/java/date/DeadlineDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package date;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" * Stores a representation of a data and a time based on ISO-8601","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"public class DeadlineDateTime extends Date {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    private LocalTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    private DeadlineDateTime(String date, String time) throws DateTimeParseException {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"        super(date);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"        this.time \u003d LocalTime.parse(time);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"     * Parses a given string and returns an object storing the Date and Time given","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"     * @param dateTime A string with a date and time as per ISO-8601 format,","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"     *                 delimited by a space","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"     * @return DeadlineDateTime object that stores the Date and Time passed in","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"     * @throws DukeException If the dateTime passed in cannot be parsed","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    public static DeadlineDateTime parseDate(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"        String[] splitted \u003d dateTime.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"        if (splitted.length \u003c 2 || splitted[0].strip().equals(\"\") || splitted[1].strip().equals(\"\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.INVALID_DEADLINE_DATETIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"            return new DeadlineDateTime(splitted[0], splitted[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.INVALID_DEADLINE_DATETIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"     * Parses date from encoded data in save file","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"     * @param storedDateTime An encoding of DeadlineDateTime stored in the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"     * @return DeadlineDateTime object that stores the Date and Time","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"     * @throws DukeException If the storedDateTime cannot be parsed","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"    public static DeadlineDateTime parseDateFromStorage(String storedDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"        String[] dateTime \u003d storedDateTime.split(\"\\\\|\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"            return new DeadlineDateTime(dateTime[0], dateTime[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.INVALID_DEADLINE_DATETIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"        String timeColonPattern \u003d \"HH:mm:ss\";","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"        String formattedTime \u003d time.format(DateTimeFormatter.ofPattern(timeColonPattern));","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"        return super.toString() + \u0027 \u0027 + formattedTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bryanljx"},"content":"        String timeColonPattern \u003d \"HH:mm:ss\";","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bryanljx"},"content":"        String formattedTime \u003d time.format(DateTimeFormatter.ofPattern(timeColonPattern));","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bryanljx"},"content":"        return super.encode() + \u0027|\u0027 + formattedTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":77}},{"path":"src/main/java/date/EventDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package date;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" * Stores a representation of a data, start time and end time based on ISO-8601","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"public class EventDateTime extends Date {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    private LocalTime startTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    private EventDateTime(String date, String startTime, String endTime) throws DateTimeParseException {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"        super(date);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"        this.startTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"        this.endTime \u003d LocalTime.parse(endTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"     * Parses a given string and returns an object storing the Date and Time given","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"     * @param dateTime A string with a date, start time and end time as per","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"     *                 ISO-8601 format, delimited by a space","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"     * @return EventDateTime object that stores the Date and Time passed in","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"     * @throws DukeException If the dateTime passed in cannot be parsed","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    public static EventDateTime parseDate(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"        String[] splitted \u003d dateTime.split(\"\\\\s+\", 3);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        if (splitted.length \u003c 3","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"                || splitted[0].strip().equals(\"\")","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"                || splitted[1].strip().equals(\"\")","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"                || splitted[2].strip().equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.INVALID_EVENT_DATETIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"            return new EventDateTime(splitted[0], splitted[1], splitted[2]);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.INVALID_EVENT_DATETIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"     * Parses date from encoded data in save file","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"     * @param storedDateTime An encoding of EventDateTime stored in the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"     * @return EventDateTime object that stores the Date and Time","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"     * @throws DukeException If the storedDateTime cannot be parsed","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"    public static EventDateTime parseDateFromStorage(String storedDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        String[] dateTime \u003d storedDateTime.split(\"\\\\|\", 3);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"            return new EventDateTime(dateTime[0], dateTime[1], dateTime[2]);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.INVALID_EVENT_DATETIME_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"        String timeColonPattern \u003d \"HH:mm:ss\";","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"        String formattedStartTime \u003d startTime.format(DateTimeFormatter.ofPattern(timeColonPattern));","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"        String formattedEndTime \u003d endTime.format(DateTimeFormatter.ofPattern(timeColonPattern));","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanljx"},"content":"        return super.toString() + \u0027 \u0027 + formattedStartTime + \" - \" + formattedEndTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanljx"},"content":"        String timeColonPattern \u003d \"HH:mm:ss\";","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanljx"},"content":"        String formattedStartTime \u003d startTime.format(DateTimeFormatter.ofPattern(timeColonPattern));","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanljx"},"content":"        String formattedEndTime \u003d endTime.format(DateTimeFormatter.ofPattern(timeColonPattern));","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanljx"},"content":"        return super.encode() + \u0027|\u0027 + formattedStartTime + \u0027|\u0027 + formattedEndTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":84}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import command.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import gui.DukeGui;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import util.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"import util.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":" * Entry point of the application that initialises and run the app.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"public class Duke {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    private TaskList dukelist \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"     * @param filePath File path of the internal save file","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"        storage \u003d Storage.initialize(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        storage.load(dukelist);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"            Command cmd \u003d Parser.parseInputLine(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"            cmd.execute(dukelist, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"            if (cmd.getIsTerminated()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"                Platform.exit();","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"            return cmd.getOutputMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"            return e.errorMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"        Application.launch(DukeGui.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":47}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":" * Represents exceptions that occur from Duke operations. Uses an error code","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":" * to represent and differentiate between different types of exception.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"    private final ErrorCode errorCode;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"     * @param errorCode Represents the type of exception that occurred","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    public DukeException(ErrorCode errorCode) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"        this.errorCode \u003d errorCode;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"     * @return Error message pertaining to the exception","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    public String errorMessage() {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"        String errorMsg;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"        switch (errorCode) {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"        case UNKNOWN_CMD:","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"            errorMsg \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"        case MISSING_TODO_ITEM:","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"            errorMsg \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"        case UNKNOWN_TASK_ENCODING:","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"            errorMsg \u003d \"OOPS!!! Unable to parse one of the saved tasks. This task will be skipped.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        case INVALID_DEADLINE_DATETIME_FORMAT:","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"            String dateFormat \u003d \"\\t Please ensure date time is of the \"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"                    + \"following format: yyyy-mm-dd hh:mm:ss\";","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"            errorMsg \u003d \"OOPS!!! Unable to parse date time for deadline.\\n\" + dateFormat;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"        case INVALID_EVENT_DATETIME_FORMAT:","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"            dateFormat \u003d \"\\t Please ensure date time is of the \"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"                    + \"following format: yyyy-mm-dd hh:mm:ss hh:mm:ss hh:mm:ss\";","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"            errorMsg \u003d \"OOPS!!! Unable to parse date time for event.\\n\" + dateFormat;","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"        default:","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"            errorMsg \u003d \"OOPS!!! Unknown duke error occurred. :-(\";","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"        return errorMsg;","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"     * A representation of possible exceptions that occur from Duke operations","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"    public enum ErrorCode {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"        UNKNOWN_CMD,","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        MISSING_TODO_ITEM,","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"        UNKNOWN_TASK_ENCODING,","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"        INVALID_DEADLINE_DATETIME_FORMAT,","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"        INVALID_EVENT_DATETIME_FORMAT","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanljx":60}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package gui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":" * DialogBox serves as the layout where the user interacts with the Duke","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    private Label text;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"     * @param l Label or text to be displayed","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"     * @param iv Avatar of the current speaker","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        text \u003d l;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"        l.setAlignment(Pos.BASELINE_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"     * @param l Command or text entered by user","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"     * @param iv Avatar of the user","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"     * @return A dialog box for the user","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"     * @param l Response returned by Duke","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"     * @param iv Avatar of Duke","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"     * @return A dialog box for Duke","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"bryanljx":68}},{"path":"src/main/java/gui/DukeGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package gui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"import util.Ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":" * Handles the main logic for the graphical user interface for Duke","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"public class DukeGui extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    private final Duke dukeApp \u003d new Duke(\"data/saveFile.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"        displayIntroMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"bryanljx"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"bryanljx"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"bryanljx"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"bryanljx"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"bryanljx"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"bryanljx"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"bryanljx"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"bryanljx"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":85,"author":{"gitId":"bryanljx"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"bryanljx"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"bryanljx"},"content":"        });","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"bryanljx"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"bryanljx"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-01"},{"lineNumber":91,"author":{"gitId":"bryanljx"},"content":"        });","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"bryanljx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"bryanljx"},"content":"        String dukeResponse \u003d dukeApp.getResponse(userInput.getText());","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"bryanljx"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"bryanljx"},"content":"        Label dukeText \u003d new Label(dukeResponse);","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"bryanljx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"bryanljx"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-09-01"},{"lineNumber":100,"author":{"gitId":"bryanljx"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-09-01"},{"lineNumber":101,"author":{"gitId":"bryanljx"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"bryanljx"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"bryanljx"},"content":"    private void displayIntroMessage() {","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"bryanljx"},"content":"        Label introText \u003d new Label(Ui.getIntroMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"bryanljx"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(introText, new ImageView(duke)));","lastModifiedDate":"2022-09-01"},{"lineNumber":108,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"bryanljx":109}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import date.DeadlineDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" * Represents a task with a deadline","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"    private final DeadlineDateTime deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"     * @param deadline Deadline of the task","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    public Deadline(String taskItem, DeadlineDateTime deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"        super(taskItem);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"        String deadlineDisplay \u003d String.format(\" (by: %s)\", this.deadline);","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        return \"[D]\" + super.toString() + deadlineDisplay;","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        int markedStatus \u003d getIsMarked() ? 1 : 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        return String.format(\"D,%d,%s,%s\\n\", markedStatus, getTaskItem(), deadline.encode());","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanljx":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import date.EventDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" * Represents an event task","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"    private final EventDateTime eventTiming;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"     * @param eventTiming Date and time of the event","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    public Event(String taskItem, EventDateTime eventTiming) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"        super(taskItem);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"        this.eventTiming \u003d eventTiming;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"        String eventTimingDisplay \u003d String.format(\" (at: %s)\", this.eventTiming);","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        return \"[E]\" + super.toString() + eventTimingDisplay;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        int markedStatus \u003d getIsMarked() ? 1 : 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        return String.format(\"E,%d,%s,%s\\n\", markedStatus, getTaskItem(), eventTiming.encode());","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanljx":40}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":" * Represents the tasks that are stored within the internal duke list","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"    private final String taskItem;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"    private boolean isMarked;","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"     * @param taskItem Task to be stored","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    public Task(String taskItem) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"        this.taskItem \u003d taskItem;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"     * @return String representation of the task including its markStatus and type","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        String checkbox \u003d isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"        return checkbox + this.taskItem;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"    public void setIsMarked(boolean status) {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"        isMarked \u003d status;","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    protected boolean getIsMarked() {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"        return isMarked;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    protected String getTaskItem() {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        return taskItem;","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"     * @return A string encoding of the task to be stored in the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"    public abstract String encode();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanljx":47}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" * Represents a task to be done","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    public Todo(String taskItem) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"        super(taskItem);","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"     * Validates the input line that represents a command","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"     * to create a Todo object.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"     * @param input Input command to create a Todo","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"     * @throws DukeException If input is invalid","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    public static void validateInput(String[] input) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        if (input.length \u003c 2 || input[1].strip().equals(\"\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.MISSING_TODO_ITEM);","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"        int markedStatus \u003d getIsMarked() ? 1 : 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"        return String.format(\"T,%d,%s\\n\", markedStatus, getTaskItem());","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanljx":47}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package tasklist;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import util.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" * A list that that handles the storing of tasks","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"public class TaskList {","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    private final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     * Adds a given task item to the list","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"     * @param taskItem Task to be added","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"     * @return The same task that is passed in","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    public Task addTask(Task taskItem) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"        this.list.add(taskItem);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"        return taskItem;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"     * @return A string representation of all tasks within the list","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"     *     formatted properly to be printed out as output","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"        String res \u003d Ui.formatLine(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"            String nextListItem \u003d String.format(\"%d.%s\", i + 1, this.list.get(i));","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"            res +\u003d Ui.formatLine(nextListItem);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        return res;","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"     * @param index Index of the task to be marked, based on 1-index","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"     * @return Task that is marked","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"    public Task markItem(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"        Task taskItem \u003d this.list.get(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"        taskItem.setIsMarked(true);","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"        return taskItem;","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"     * @param index Index of the task to be unmarked, based on 1-index","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"     * @return Task that is unmarked","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"    public Task unmarkItem(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"        Task taskItem \u003d this.list.get(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"        taskItem.setIsMarked(false);","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"        return taskItem;","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"     * @param index Index of the task to be removed from list, based on 1-index","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"     * @return Task that is deleted","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"    public Task deleteItem(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"        Task taskItem \u003d this.list.get(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"        this.list.remove(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"        return taskItem;","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"bryanljx"},"content":"     * @param index Index of the task to be retrieved, based on 1-index","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"bryanljx"},"content":"     * @return Task that is retrieved","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"bryanljx"},"content":"    public Task getItem(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanljx"},"content":"        return this.list.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"bryanljx"},"content":"     * @return Number of tasks within the list currently","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"bryanljx"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"bryanljx"},"content":"        return this.list.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"bryanljx"},"content":"     * @param searchText Text to be searched","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"bryanljx"},"content":"     * @return A list of tasks that matches the searchText","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"bryanljx"},"content":"    public ArrayList\u003cString\u003e find(String searchText) {","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"bryanljx"},"content":"        ArrayList\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"bryanljx"},"content":"        if (searchText.strip().equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"bryanljx"},"content":"            return res;","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"bryanljx"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"bryanljx"},"content":"            Task t \u003d list.get(i);","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"bryanljx"},"content":"            if (t.toString().contains(searchText)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"bryanljx"},"content":"                String searchedResult \u003d String.format(\"%d.%s\", i + 1, t.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"bryanljx"},"content":"                res.add(searchedResult);","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"bryanljx"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"bryanljx"},"content":"        return res;","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanljx":108}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import command.AddTaskCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import command.AddTaskFromStorageCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import command.DeleteTaskCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import command.FindSearchTextCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"import command.ListAllTasksCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import command.MarkTaskCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"import command.TerminateCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"import command.UnmarkTaskCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"import date.DeadlineDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"import date.EventDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"import task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"import task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"import task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":" * Parses all input lines from command line or save file and generates commands","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":" * to be executed","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"     * Parses a single line of input from the command line","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"     * @param inputLine Input from the command line containing a command","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"     *                  and its arguments","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"     * @return A command to be executed","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"     * @throws DukeException If inputLine cannot be parsed successfully","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    public static Command parseInputLine(String inputLine) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"        String[] splitted \u003d inputLine.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        String command \u003d splitted[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        Command cmd;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"        switch (command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new TerminateCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"        case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new ListAllTasksCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"            int index \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new MarkTaskCommand(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"            index \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new UnmarkTaskCommand(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"            index \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new DeleteTaskCommand(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"            Todo.validateInput(splitted);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"            Task todo \u003d new Todo(splitted[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new AddTaskCommand(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"            // Regex \"\\\\s+/\" matches one or more space followed by a /by,","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"            // followed by one or more space","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"            String[] taskArgs \u003d splitted[1].split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"            DeadlineDateTime deadlineDateTime \u003d DeadlineDateTime.parseDate(taskArgs[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"            Task deadline \u003d new Deadline(taskArgs[0], deadlineDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new AddTaskCommand(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"bryanljx"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"bryanljx"},"content":"            // Regex \"\\s+/at\\s+\" matches one or more space followed by a /at,","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"bryanljx"},"content":"            // followed by one or more space","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"bryanljx"},"content":"            taskArgs \u003d splitted[1].split(\"\\\\s+/at\\\\s+\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bryanljx"},"content":"            EventDateTime eventDateTime \u003d EventDateTime.parseDate(taskArgs[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bryanljx"},"content":"            Task event \u003d new Event(taskArgs[0], eventDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new AddTaskCommand(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanljx"},"content":"        case \"find\":","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"bryanljx"},"content":"            String searchText \u003d splitted[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"bryanljx"},"content":"            cmd \u003d new FindSearchTextCommand(searchText);","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"bryanljx"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.UNKNOWN_CMD);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"bryanljx"},"content":"        return cmd;","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"bryanljx"},"content":"     * Parses a single line of input from the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"bryanljx"},"content":"     * @param encodedTask Encoding from a task saved in the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"bryanljx"},"content":"     * @return A command to be executed","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"bryanljx"},"content":"     * @throws DukeException If encoded task cannot be parsed successfully","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"bryanljx"},"content":"    public static Command parseEncodedTask(String encodedTask) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"bryanljx"},"content":"        String[] splitted \u003d encodedTask.split(\",\", 4);","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"bryanljx"},"content":"        String taskType \u003d splitted[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"bryanljx"},"content":"        Task taskItem;","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"bryanljx"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"bryanljx"},"content":"        case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"bryanljx"},"content":"            taskItem \u003d new Todo(splitted[2]);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"bryanljx"},"content":"        case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"bryanljx"},"content":"            EventDateTime eventDateTime \u003d EventDateTime.parseDateFromStorage(splitted[3]);","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"bryanljx"},"content":"            taskItem \u003d new Event(splitted[2], eventDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"bryanljx"},"content":"        case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"bryanljx"},"content":"            DeadlineDateTime deadlineDateTime \u003d DeadlineDateTime.parseDateFromStorage(splitted[3]);","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"bryanljx"},"content":"            taskItem \u003d new Deadline(splitted[2], deadlineDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"bryanljx"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"bryanljx"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"bryanljx"},"content":"            throw new DukeException(DukeException.ErrorCode.UNKNOWN_TASK_ENCODING);","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"bryanljx"},"content":"        taskItem.setIsMarked(splitted[1].equals(\"1\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"bryanljx"},"content":"        return new AddTaskFromStorageCommand(taskItem);","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":119}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"import task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"import tasklist.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":" * Handles the any storage related functionality related to the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    private final File saveFile;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    private Storage(File saveFile) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"        this.saveFile \u003d saveFile;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"     * Initialises the save file, creates one if needed","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"     * @param storagePathName Relative path of the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"     * @return Storage object that handles operations to the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    public static Storage initialize(String storagePathName) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"        File saveFile \u003d new File(storagePathName);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"            saveFile.getParentFile().mkdirs();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"            if (saveFile.createNewFile()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"                Ui.formatLinesIntoParagraph(\"Successfully created save file for storage!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"            String errorMsg \u003d \"☹ OOPS!!! Error opening/creating saved storage.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"            System.out.println(Ui.formatLinesIntoParagraph(errorMsg));","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"        return new Storage(saveFile);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"     * Loads and stores all saved tasks into the current duke list","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"     * @param list Duke list of the current running instance of the app","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"    public void load(TaskList list) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"        try (Scanner sc \u003d new Scanner(this.saveFile)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"                    Command cmd \u003d Parser.parseEncodedTask(sc.nextLine());","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"                    cmd.execute(list, this);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"                    System.out.println(Ui.formatLinesIntoParagraph(e.errorMessage()));","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"            String successMsg \u003d \"Successfully loaded tasks from saved storage!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"            System.out.println(Ui.formatLinesIntoParagraph(successMsg));","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"            System.out.println(Ui.formatLinesIntoParagraph(e.getMessage()));","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"     * Saves all tasks from the current duke list into the save file","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"bryanljx"},"content":"     * @param list Duke list of the current running instance of the app","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"bryanljx"},"content":"    public void saveAllTasks(TaskList list) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"bryanljx"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(this.saveFile, false)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"bryanljx"},"content":"            for (int i \u003d 1; i \u003c\u003d list.getTaskCount(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"bryanljx"},"content":"                Task task \u003d list.getItem(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"bryanljx"},"content":"                String encodedTask \u003d task.encode();","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"bryanljx"},"content":"                fileWriter.write(encodedTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"bryanljx"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"bryanljx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"bryanljx"},"content":"            System.out.println(Ui.formatLinesIntoParagraph(e.getMessage()));","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"bryanljx":85}},{"path":"src/main/java/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package util;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":" * A collection of all Ui related utilities","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"     * Formats a single line of text","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"     * @param input String to be formatted","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"     * @return Formatted string to be printed","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    public static String formatLine(String input) {","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"        return input + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"     * Adds Ui elements to prettify a block or paragraph of text","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"     * @param paragraph Paragraph of formatted text to be prettified","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"     * @return Prettified block of text to be printed","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"    public static String formatParagraph(String paragraph) {","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        String divider \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        return divider + paragraph + divider;","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"     * Formats and prettifies lines of text to be printed","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"     * @param lines Lines of text to be formatted and prettified","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"     * @return Prettified block of text to be printed","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"    public static String formatLinesIntoParagraph(String... lines) {","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        String res \u003d \"\";","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"            res +\u003d formatLine(line);","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"        return res;","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"     * Prints the introduction message when starting the app","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"    public static String getIntroMessage() {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"        String introParagraph \u003d Ui.formatLine(\"Hello! I\u0027m duke.\")","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"                + Ui.formatLine(\"What can I do for you?\");","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"        return introParagraph;","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"bryanljx":54}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"import date.DeadlineDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for toString() method of unmarked deadline\")","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    void testToString_for_unmarked_deadline() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"        DeadlineDateTime date \u003d DeadlineDateTime.parseDate(\"2022-01-01 00:00:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"        Deadline test \u003d new Deadline(\"Testing!\", date);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"[D][ ] Testing! (by: Jan 1 2022 00:00:00)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for toString() method of marked deadline\")","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    void testToString_for_marked_deadline() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"        DeadlineDateTime date \u003d DeadlineDateTime.parseDate(\"2022-01-01 00:00:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        Deadline test \u003d new Deadline(\"Testing!\", date);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        test.setIsMarked(true);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"[D][X] Testing! (by: Jan 1 2022 00:00:00)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for encode() method of deadline\")","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"    void encode() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"        DeadlineDateTime date \u003d DeadlineDateTime.parseDate(\"2022-01-01 00:00:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"        Deadline test \u003d new Deadline(\"Testing!\", date);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"D,0,Testing!,2022-01-01|00:00:00\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.encode());","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bryanljx":40}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"import date.EventDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"class EventTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for toString() method of unmarked event\")","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    void testToString_for_unmarked_event() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"        EventDateTime date \u003d EventDateTime.parseDate(\"2022-01-01 00:00:00 12:00:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"        Event test \u003d new Event(\"Testing!\", date);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"[E][ ] Testing! (at: Jan 1 2022 00:00:00 - 12:00:00)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for toString() method of marked event\")","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"    void testToString_for_marked_event() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"        EventDateTime date \u003d EventDateTime.parseDate(\"2022-01-01 00:00:00 12:00:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        Event test \u003d new Event(\"Testing!\", date);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        test.setIsMarked(true);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"[E][X] Testing! (at: Jan 1 2022 00:00:00 - 12:00:00)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for encode() method of event\")","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"    void encode() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"        EventDateTime date \u003d EventDateTime.parseDate(\"2022-01-01 00:00:00 12:00:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"        Event test \u003d new Event(\"Testing!\", date);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"E,0,Testing!,2022-01-01|00:00:00|12:00:00\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.encode());","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bryanljx":40}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"class TodoTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for toString() method of unmarked todo\")","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    void testToString_for_unmarked_todo() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"        Todo test \u003d new Todo(\"Testing!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"[T][ ] Testing!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test validateInput throws exception when task item is not given\")","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    void validateInput_throws_exception_when_input_length_less_than_two() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"        String[] inputLengthLessThanOne \u003d new String[] {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"                \"Testing!\"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        };","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"        assertThrows(","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"                DukeException.class,","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"                () -\u003e Todo.validateInput(inputLengthLessThanOne));","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test validateInput throws exception when task item is whitespace\")","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"    void validateInput_throws_exception_when_second_string_is_whitespace() {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"        String[] secondStringIsWhitespace \u003d new String[] {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"                \"Testing!\",","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"                \"        \",","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"        };","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"        assertThrows(","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"                DukeException.class,","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"                () -\u003e Todo.validateInput(secondStringIsWhitespace));","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for encode() method of unmarked todo\")","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"    void encode_unmarked_todo() {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"        Todo test \u003d new Todo(\"Testing!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"T,0,Testing!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.encode());","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Test for encode() method of marked todo\")","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"    void encode_marked_todo() {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        Todo test \u003d new Todo(\"Testing!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"        test.setIsMarked(true);","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"T,1,Testing!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.encode());","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bryanljx":60}},{"path":"src/test/java/task/stub/MarkedTaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task.stub;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":" * A task stub that is marked","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"public class MarkedTaskStub extends TaskStub {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"    protected boolean getIsMarked() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"     * Overrides the Task encoding to always return a marked task\u0027s encoding","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     * @return Encoding of a marked Task stub","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"        return \"[X] \" + this.getTaskItem();","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bryanljx":23}},{"path":"src/test/java/task/stub/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task.stub;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" * A stub for the Task class","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"    public TaskStub() {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"        super(\"Testing!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"        return this.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"     * Compares two stubs for equality for testing convenience","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"            return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"        if (o instanceof TaskStub) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"            return this.getIsMarked() \u003d\u003d ((TaskStub) o).getIsMarked();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"        return \"Testing!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bryanljx":47}},{"path":"src/test/java/task/stub/UnmarkedTaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package task.stub;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":" * A task stub that is unmarked","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":" * @author Bryan Lim Jing Xiang","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"public class UnmarkedTaskStub extends TaskStub {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"    protected boolean getIsMarked() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"     * Overrides the Task encoding to always return a unmarked task\u0027s encoding","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"     * @return Encoding of an unmarked Task stub","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"    public String encode() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"        return \"[ ] \" + this.getTaskItem();","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bryanljx":23}},{"path":"src/test/java/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"package tasklist;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"bryanljx"},"content":"import task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"bryanljx"},"content":"import task.stub.MarkedTaskStub;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"bryanljx"},"content":"import task.stub.TaskStub;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"bryanljx"},"content":"import task.stub.UnmarkedTaskStub;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"bryanljx"},"content":"class TaskListTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Testing addTask()\")","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"bryanljx"},"content":"    void addTask() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"bryanljx"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"bryanljx"},"content":"        Task stub \u003d new TaskStub();","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"        Task returnedStub \u003d test.addTask(stub);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"        assertAll(","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"bryanljx"},"content":"                () -\u003e assertSame(returnedStub, stub),","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"bryanljx"},"content":"                () -\u003e assertSame(stub, test.getItem(1))","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"bryanljx"},"content":"        );","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Testing toString() when list is empty\")","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"bryanljx"},"content":"    void testToString_when_list_is_empty() {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"bryanljx"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"\\t \" + \"Here are the tasks in your list:\" + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Testing toString() when list is not empty\")","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"bryanljx"},"content":"    void testToString_when_list_is_not_empty() {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"bryanljx"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"bryanljx"},"content":"        Task stub \u003d new TaskStub();","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"bryanljx"},"content":"        test.addTask(stub);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"bryanljx"},"content":"        String taskItemString \u003d String.format(\"\\t 1.%s\\n\", stub.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"\\t \" + \"Here are the tasks in your list:\" + \"\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"bryanljx"},"content":"                + taskItemString;","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Testing markItem()\")","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"bryanljx"},"content":"    void markItem() {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"bryanljx"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"bryanljx"},"content":"        Task stub \u003d new TaskStub();","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"bryanljx"},"content":"        test.addTask(stub);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"bryanljx"},"content":"        Task markedStub \u003d test.markItem(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"bryanljx"},"content":"        Task expectedStub \u003d new MarkedTaskStub();","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"bryanljx"},"content":"        expectedStub.setIsMarked(true);","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expectedStub, markedStub);","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Testing unmarkItem()\")","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"bryanljx"},"content":"    void unmarkItem() {","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"bryanljx"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"bryanljx"},"content":"        Task stub \u003d new TaskStub();","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"bryanljx"},"content":"        test.addTask(stub);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"bryanljx"},"content":"        test.markItem(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"bryanljx"},"content":"        Task actualStub \u003d test.unmarkItem(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"bryanljx"},"content":"        Task expectedStub \u003d new UnmarkedTaskStub();","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"bryanljx"},"content":"        assertEquals(actualStub, expectedStub);","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Testing deleteItem()\")","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"bryanljx"},"content":"    void deleteItem_giving_empty_list() {","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"bryanljx"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"bryanljx"},"content":"        Task stub \u003d new TaskStub();","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"bryanljx"},"content":"        test.addTask(stub);","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"bryanljx"},"content":"        test.deleteItem(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"bryanljx"},"content":"        String expected \u003d \"\\t \" + \"Here are the tasks in your list:\" + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"bryanljx"},"content":"        assertEquals(expected, test.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Testing getTaskCount() when list is empty\")","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"bryanljx"},"content":"    void getTaskCount_when_list_is_empty() {","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"bryanljx"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"bryanljx"},"content":"        assertEquals(test.getTaskCount(), 0);","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"bryanljx"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"bryanljx"},"content":"    @DisplayName(\"Testing getTaskCount() when list has one task\")","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"bryanljx"},"content":"    void getTaskCount_when_list_has_one_task() {","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"bryanljx"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"bryanljx"},"content":"        Task stub \u003d new TaskStub();","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"bryanljx"},"content":"        test.addTask(stub);","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"bryanljx"},"content":"        assertEquals(test.getTaskCount(), 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"bryanljx"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"bryanljx"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"bryanljx":103}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanljx"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"bryanljx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"bryanljx"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"bryanljx"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"bryanljx"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"bryanljx"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"bryanljx"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"bryanljx"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanljx":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"bryanljx"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"bryanljx"},"content":"pause","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"bryanljx":2,"-":21}}]

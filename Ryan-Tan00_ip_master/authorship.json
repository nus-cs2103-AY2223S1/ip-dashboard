[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"# Candice","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"DukePro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"- text-based","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"- easy to learn","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"- ~~FAST~~ *SUPER* FAST to use","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"All you need to do is,","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"1. download it from [here](../../).","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"2. double-click it.","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"3. add your tasks.","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"4. let it manage your tasks for you üòâ","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"And it is **FREE**!","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"Features:","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"- [x] Managing tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"##","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"```java","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"public class Main {","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":5,"Ryan-Tan00":31}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"    archiveBaseName \u003d \"candice\"","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Ryan-Tan00":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"### `Keyword` - Describe command","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"Describe the command and its outcome.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":27,"Ryan-Tan00":2}},{"path":"src/main/java/candice/Candice.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.command.Command;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.EmptyCommandDescriptionException;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.EmptyTimingException;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.InvalidDateException;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.InvalidFormattingException;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.InvalidTimeException;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.UnknownCommandException;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.task.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"import java.lang.IllegalArgumentException;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":" * Represents a program that helps to track tasks using a task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":" * The program allows for different types of tasks to be added, tasks to be deleted or marked as finished/unfinished","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":" * as well as viewing the current list of tasks.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":" * Commands:","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":" * \"todo {task name}\" to add a task with no date associated to it.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":" * \"deadline {task name} /by {deadline date} {optional: deadline time}\" to add tasks that have a deadline associated to","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":" * it. Deadline dates are written in the form of DD/MM/YYYY (1/1/2022 or 31/12/2022). Deadline times are written in the","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":" * form of a 24-hour time (0000 to 2359).","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":" * \"event {task name} /at {event date} {optional: event start time - end time}\" to add events with a date and","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":" * potentially a start plus end time associated to them. Deadline dates are written in the form of DD/MM/YYYY (1/1/2022","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":" * or 31/12/2022). Event start time - end time is written in the form of two 24-hour times (0000-0200 or 1800-2000).","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":" * \"list\" to view the tasks added to the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":" * \"mark {task number}\" to mark the task corresponding to the task number as finished.","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":" * \"unmark {task number}\" to mark the task corresponding to the task number as unfinished.","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":" * \"delete {task number}\" to remove the task corresponding to the task number from the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":" * \"find {key word}\" to find any tasks with a task name containing the keyword.","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":" *","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":" * \"bye\" to exit the program.","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"public class Candice {","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"    /** A task list to store all the tasks */","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"    TaskList taskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for a Candice object encapsulating a TaskList object by using a Path object to instantiate a Storage","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"     * object which will be used by the TaskList to parse any tasks added from previous sessions.","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param storagePath The path to the storage file, specifically the path to the task list text file.","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws IOException If there was an error in creating the storage file.","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"    public Candice(Path storagePath) throws IOException {","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"        Storage storage \u003d new Storage(storagePath);","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"        this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"        this.taskList.parseTaskListText();","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"     * Default constructor for a Candice object, using the default storage.","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws IOException If there was an error in creating the storage file.","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"    public Candice() throws IOException {","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"        Path storagePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\");","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"        Storage storage \u003d new Storage(storagePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"        this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"        this.taskList.parseTaskListText();","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"     * Runs the programme, allowing users to input a command to add, edit and delete tasks to and from a task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"    public String run(String input) {","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"            return command.resolve(taskList);","lastModifiedDate":"2022-09-15"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (EmptyCommandDescriptionException | EmptyTimingException | IllegalArgumentException","lastModifiedDate":"2022-09-15"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"                | InvalidDateException | InvalidFormattingException | InvalidTimeException","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"                | UnknownCommandException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-15"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":91}},{"path":"src/main/java/candice/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.command.Command;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.command.CommandType;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.EmptyCommandDescriptionException;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.EmptyTimingException;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.InvalidDateException;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.InvalidFormattingException;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.InvalidTimeException;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.exception.UnknownCommandException;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":" * Parses inputs and returns Action objects that can be resolved or throws Exceptions if the input cannot be parsed.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"public class Parser {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"     * Parses the name of the task before using the method parseDateAndTime as a helper to return a TimedTaskCommand.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"     * This method also checks for any formatting errors, specifically if /by was used for Deadlines and /at was used","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"     * for Events.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskType The CommandType of the command given, Deadline or Event.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskDescription The description of the task (name of the task, the timed task date and timed task timing).","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return An instance of a TimedTaskCommand encapsulating the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws EmptyTimingException If there was no date and time given for a deadline or event task.","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidDateException If there was a date inputted that does not follow the format or does not exist.","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidFormattingException If there was a command inputted that did not follow the format.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidTimeException If there was a time inputted that was not a 4 digit 24-hour time.","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"    private static Command.TimedTaskCommand parseTimedTaskCommand(CommandType taskType, String taskDescription)","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"            throws EmptyTimingException, InvalidDateException, InvalidFormattingException, InvalidTimeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] splitTaskAndTimestamp \u003d taskDescription.split(\" /\", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"        if (splitTaskAndTimestamp.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"            String taskName \u003d splitTaskAndTimestamp[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"            String timestamp \u003d splitTaskAndTimestamp[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"            String[] splitTimestamp \u003d timestamp.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"            if ((taskType \u003d\u003d CommandType.DEADLINE \u0026\u0026 splitTimestamp[0].equals(\"by\"))","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"                    || (taskType \u003d\u003d CommandType.EVENT \u0026\u0026 splitTimestamp[0].equals(\"at\"))) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"                if (splitTimestamp.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"                    return parseDateAndTime(taskType, taskName, splitTimestamp[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"                } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"                    throw new EmptyTimingException(taskType);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new InvalidFormattingException(taskType);","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new EmptyTimingException(taskType);","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"     * Parses the date of the command inputted and immediately returns the TimedTaskCommand if no time was given.","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"     * If a time was given, the method parseDeadlineTime is used for Deadline commands and the method parseEventTime is","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"     * used for Event commands.","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskType The CommandType of the command given, Deadline or Event.","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskName The name of the task in the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskDateAndTime The date and time of the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return An instance of a TimedTaskCommand encapsulating the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidDateException If there was a date inputted that does not follow the format or does not exist.","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidFormattingException If there was a command inputted that did not follow the format.","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidTimeException If there was a time inputted that was not a 4 digit 24-hour time.","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"    private static Command.TimedTaskCommand parseDateAndTime(CommandType taskType, String taskName,","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"            String taskDateAndTime) throws InvalidDateException, InvalidFormattingException, InvalidTimeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] splitDateAndTime \u003d taskDateAndTime.split(\" \");","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"        if (splitDateAndTime.length \u003e 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new InvalidFormattingException(taskType);","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate taskDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"        String taskDateAsString \u003d splitDateAndTime[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] splitDayMonthYear \u003d taskDateAsString.split(\"/\");","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"        if (splitDayMonthYear.length \u003d\u003d 3) {","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"            StringBuilder day \u003d new StringBuilder(splitDayMonthYear[0]);","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"            StringBuilder month \u003d new StringBuilder(splitDayMonthYear[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"            StringBuilder year \u003d new StringBuilder(splitDayMonthYear[2]);","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"            int dayLength \u003d day.length();","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"            int monthLength \u003d month.length();","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"            int yearLength \u003d year.length();","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"            // Filling the days, months and years to match the format required for LocalDate","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"            for (int i \u003d 0; i \u003c (2 - dayLength); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"Ryan-Tan00"},"content":"                day.insert(0, \"0\");","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"Ryan-Tan00"},"content":"            for (int i \u003d 0; i \u003c (2 - monthLength); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"Ryan-Tan00"},"content":"                month.insert(0, \"0\");","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"Ryan-Tan00"},"content":"            for (int i \u003d 0; i \u003c (4 - yearLength); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"Ryan-Tan00"},"content":"                year.insert(0, \"0\");","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"Ryan-Tan00"},"content":"            String localDateFormat \u003d year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"Ryan-Tan00"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"Ryan-Tan00"},"content":"                taskDate \u003d LocalDate.parse(localDateFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"Ryan-Tan00"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"Ryan-Tan00"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"Ryan-Tan00"},"content":"        if (splitDateAndTime.length \u003d\u003d 2) { // Time was provided","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"Ryan-Tan00"},"content":"            if (taskType \u003d\u003d CommandType.DEADLINE) {","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"Ryan-Tan00"},"content":"                return parseDeadlineTime(taskName, taskDate, splitDateAndTime[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"Ryan-Tan00"},"content":"                return parseEventTime(taskName, taskDate, splitDateAndTime[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"Ryan-Tan00"},"content":"        } else if (taskType \u003d\u003d CommandType.DEADLINE) { // No time was provided","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"Ryan-Tan00"},"content":"            return new Command.DeadlineCommand(taskName, taskDate, null);","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"Ryan-Tan00"},"content":"        } else { // No time was provided and taskType is event","lastModifiedDate":"2022-08-31"},{"lineNumber":126,"author":{"gitId":"Ryan-Tan00"},"content":"            return new Command.EventCommand(taskName, taskDate, null, null);","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":129,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"Ryan-Tan00"},"content":"     * Parses the deadline time of the command inputted to return the DeadlineCommand object.","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":133,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskName The name of the task in the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":134,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param deadlineDate The deadline date of the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":135,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param deadlineTimeAsString The deadline time of the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return An instance of a DeadlineCommand encapsulating the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidTimeException If there was a time inputted that was not a 4 digit 24-hour time.","lastModifiedDate":"2022-09-03"},{"lineNumber":138,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"Ryan-Tan00"},"content":"    private static Command.DeadlineCommand parseDeadlineTime(String taskName, LocalDate deadlineDate,","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"Ryan-Tan00"},"content":"            String deadlineTimeAsString) throws InvalidTimeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"Ryan-Tan00"},"content":"        if (deadlineTimeAsString.length() \u003d\u003d 4) {","lastModifiedDate":"2022-08-31"},{"lineNumber":142,"author":{"gitId":"Ryan-Tan00"},"content":"            String hour \u003d deadlineTimeAsString.substring(0, 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"Ryan-Tan00"},"content":"            String minute \u003d deadlineTimeAsString.substring(2);","lastModifiedDate":"2022-08-31"},{"lineNumber":144,"author":{"gitId":"Ryan-Tan00"},"content":"            String localTimeFormat \u003d hour + \":\" + minute;","lastModifiedDate":"2022-08-31"},{"lineNumber":145,"author":{"gitId":"Ryan-Tan00"},"content":"            LocalTime deadlineTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":146,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":147,"author":{"gitId":"Ryan-Tan00"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":148,"author":{"gitId":"Ryan-Tan00"},"content":"                deadlineTime \u003d LocalTime.parse(localTimeFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":149,"author":{"gitId":"Ryan-Tan00"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":150,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":151,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":152,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"Ryan-Tan00"},"content":"            return new Command.DeadlineCommand(taskName, deadlineDate, deadlineTime);","lastModifiedDate":"2022-08-31"},{"lineNumber":154,"author":{"gitId":"Ryan-Tan00"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":155,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":156,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":157,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":158,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":159,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"Ryan-Tan00"},"content":"     * Parses the event start and end time of the command inputted to return the EventCommand object.","lastModifiedDate":"2022-09-03"},{"lineNumber":161,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskName The name of the task in the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":163,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param eventDate The event date of the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":164,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param eventTimeAsString The event time of the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":165,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return An instance of a EventCommand encapsulating the command given.","lastModifiedDate":"2022-09-03"},{"lineNumber":166,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidTimeException If there was a time inputted that was not a 4 digit 24-hour time.","lastModifiedDate":"2022-09-03"},{"lineNumber":167,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":168,"author":{"gitId":"Ryan-Tan00"},"content":"    private static Command.EventCommand parseEventTime(String taskName, LocalDate eventDate, String eventTimeAsString)","lastModifiedDate":"2022-08-31"},{"lineNumber":169,"author":{"gitId":"Ryan-Tan00"},"content":"            throws InvalidTimeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":170,"author":{"gitId":"Ryan-Tan00"},"content":"        if (eventTimeAsString.length() \u003d\u003d 9) {","lastModifiedDate":"2022-08-31"},{"lineNumber":171,"author":{"gitId":"Ryan-Tan00"},"content":"            String[] splitStartEndTime \u003d eventTimeAsString.split(\"-\");","lastModifiedDate":"2022-08-31"},{"lineNumber":172,"author":{"gitId":"Ryan-Tan00"},"content":"            if (splitStartEndTime.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":173,"author":{"gitId":"Ryan-Tan00"},"content":"                LocalTime eventStartTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":174,"author":{"gitId":"Ryan-Tan00"},"content":"                LocalTime eventEndTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":175,"author":{"gitId":"Ryan-Tan00"},"content":"                // Changing to LocalTime format","lastModifiedDate":"2022-08-31"},{"lineNumber":176,"author":{"gitId":"Ryan-Tan00"},"content":"                for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":177,"author":{"gitId":"Ryan-Tan00"},"content":"                    String eventTime \u003d splitStartEndTime[i];","lastModifiedDate":"2022-08-31"},{"lineNumber":178,"author":{"gitId":"Ryan-Tan00"},"content":"                    String hour \u003d eventTime.substring(0, 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":179,"author":{"gitId":"Ryan-Tan00"},"content":"                    String minute \u003d eventTime.substring(2);","lastModifiedDate":"2022-08-31"},{"lineNumber":180,"author":{"gitId":"Ryan-Tan00"},"content":"                    String localTimeFormat \u003d hour + \":\" + minute;","lastModifiedDate":"2022-08-31"},{"lineNumber":181,"author":{"gitId":"Ryan-Tan00"},"content":"                    splitStartEndTime[i] \u003d localTimeFormat;","lastModifiedDate":"2022-08-31"},{"lineNumber":182,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":183,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":184,"author":{"gitId":"Ryan-Tan00"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":185,"author":{"gitId":"Ryan-Tan00"},"content":"                    eventStartTime \u003d LocalTime.parse(splitStartEndTime[0]);","lastModifiedDate":"2022-08-31"},{"lineNumber":186,"author":{"gitId":"Ryan-Tan00"},"content":"                    eventEndTime \u003d LocalTime.parse(splitStartEndTime[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":187,"author":{"gitId":"Ryan-Tan00"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":188,"author":{"gitId":"Ryan-Tan00"},"content":"                    throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":189,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":190,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":191,"author":{"gitId":"Ryan-Tan00"},"content":"                return new Command.EventCommand(taskName, eventDate, eventStartTime, eventEndTime);","lastModifiedDate":"2022-08-31"},{"lineNumber":192,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":193,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":194,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":195,"author":{"gitId":"Ryan-Tan00"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":196,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":197,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":198,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":199,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":200,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":201,"author":{"gitId":"Ryan-Tan00"},"content":"     * Parses the command given to return a Command object encapsulating the command just given.","lastModifiedDate":"2022-08-31"},{"lineNumber":202,"author":{"gitId":"Ryan-Tan00"},"content":"     * The Command object can then be resolved to execute the programme.","lastModifiedDate":"2022-08-31"},{"lineNumber":203,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":204,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param command The command given.","lastModifiedDate":"2022-08-31"},{"lineNumber":205,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The corresponding Command object that encapsulates the command given.","lastModifiedDate":"2022-08-31"},{"lineNumber":206,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws EmptyCommandDescriptionException If there was a command with no task name given.","lastModifiedDate":"2022-09-04"},{"lineNumber":207,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws EmptyTimingException If there was no date and time given for a deadline or event task.","lastModifiedDate":"2022-08-31"},{"lineNumber":208,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidDateException If there was a date inputted that does not follow the format or does not exist.","lastModifiedDate":"2022-08-31"},{"lineNumber":209,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidFormattingException If there was a command inputted that did not follow the format.","lastModifiedDate":"2022-08-31"},{"lineNumber":210,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidTimeException If there was a time inputted that was not a 4 digit 24-hour time.","lastModifiedDate":"2022-08-31"},{"lineNumber":211,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws UnknownCommandException If a command type was unrecognised.","lastModifiedDate":"2022-08-31"},{"lineNumber":212,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":213,"author":{"gitId":"Ryan-Tan00"},"content":"    public static Command parse(String command) throws EmptyCommandDescriptionException, EmptyTimingException,","lastModifiedDate":"2022-09-04"},{"lineNumber":214,"author":{"gitId":"Ryan-Tan00"},"content":"            InvalidDateException, InvalidFormattingException, InvalidTimeException, UnknownCommandException {","lastModifiedDate":"2022-08-31"},{"lineNumber":215,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] commandSplit \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":216,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":217,"author":{"gitId":"Ryan-Tan00"},"content":"        String commandTypeAsString \u003d commandSplit[0];","lastModifiedDate":"2022-09-04"},{"lineNumber":218,"author":{"gitId":"Ryan-Tan00"},"content":"        CommandType commandType;","lastModifiedDate":"2022-09-04"},{"lineNumber":219,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":220,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":221,"author":{"gitId":"Ryan-Tan00"},"content":"            commandType \u003d CommandType.valueOf(commandTypeAsString.toUpperCase());","lastModifiedDate":"2022-09-04"},{"lineNumber":222,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":223,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2022-09-04"},{"lineNumber":224,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":225,"author":{"gitId":"Ryan-Tan00"},"content":"        ","lastModifiedDate":"2022-08-31"},{"lineNumber":226,"author":{"gitId":"Ryan-Tan00"},"content":"        switch (commandType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":227,"author":{"gitId":"Ryan-Tan00"},"content":"        case BYE:","lastModifiedDate":"2022-09-04"},{"lineNumber":228,"author":{"gitId":"Ryan-Tan00"},"content":"        case LIST:","lastModifiedDate":"2022-09-04"},{"lineNumber":229,"author":{"gitId":"Ryan-Tan00"},"content":"            if (commandSplit.length \u003d\u003d 2) { // Should only have \"bye\" or \"list\"","lastModifiedDate":"2022-08-31"},{"lineNumber":230,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2022-08-31"},{"lineNumber":231,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":232,"author":{"gitId":"Ryan-Tan00"},"content":"                return new Command.SingleWordCommand(commandType);","lastModifiedDate":"2022-09-04"},{"lineNumber":233,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":234,"author":{"gitId":"Ryan-Tan00"},"content":"        case TODO:","lastModifiedDate":"2022-09-04"},{"lineNumber":235,"author":{"gitId":"Ryan-Tan00"},"content":"        case FIND:","lastModifiedDate":"2022-09-04"},{"lineNumber":236,"author":{"gitId":"Ryan-Tan00"},"content":"            if (commandSplit.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":237,"author":{"gitId":"Ryan-Tan00"},"content":"                return new Command.NonTimedCommand(commandType, commandSplit[1]);","lastModifiedDate":"2022-09-04"},{"lineNumber":238,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":239,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new EmptyCommandDescriptionException(commandType);","lastModifiedDate":"2022-09-04"},{"lineNumber":240,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":241,"author":{"gitId":"Ryan-Tan00"},"content":"        case MARK:","lastModifiedDate":"2022-09-04"},{"lineNumber":242,"author":{"gitId":"Ryan-Tan00"},"content":"        case UNMARK:","lastModifiedDate":"2022-09-04"},{"lineNumber":243,"author":{"gitId":"Ryan-Tan00"},"content":"        case DELETE:","lastModifiedDate":"2022-09-04"},{"lineNumber":244,"author":{"gitId":"Ryan-Tan00"},"content":"            if (commandSplit.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":245,"author":{"gitId":"Ryan-Tan00"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":246,"author":{"gitId":"Ryan-Tan00"},"content":"                    int taskNumber \u003d Integer.parseInt(commandSplit[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":247,"author":{"gitId":"Ryan-Tan00"},"content":"                    return new Command.NumberedCommand(commandType, taskNumber);","lastModifiedDate":"2022-09-04"},{"lineNumber":248,"author":{"gitId":"Ryan-Tan00"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":249,"author":{"gitId":"Ryan-Tan00"},"content":"                    throw new NumberFormatException(\"Write properly leh. Your number format is wrong.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":250,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":251,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":252,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new EmptyCommandDescriptionException(commandType);","lastModifiedDate":"2022-09-04"},{"lineNumber":253,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":254,"author":{"gitId":"Ryan-Tan00"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-04"},{"lineNumber":255,"author":{"gitId":"Ryan-Tan00"},"content":"        case EVENT:","lastModifiedDate":"2022-09-04"},{"lineNumber":256,"author":{"gitId":"Ryan-Tan00"},"content":"            if (commandSplit.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":257,"author":{"gitId":"Ryan-Tan00"},"content":"                return parseTimedTaskCommand(commandType, commandSplit[1]);","lastModifiedDate":"2022-09-04"},{"lineNumber":258,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":259,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new EmptyCommandDescriptionException(commandType);","lastModifiedDate":"2022-09-04"},{"lineNumber":260,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":261,"author":{"gitId":"Ryan-Tan00"},"content":"        default:","lastModifiedDate":"2022-08-31"},{"lineNumber":262,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2022-08-31"},{"lineNumber":263,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":264,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":265,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":265}},{"path":"src/main/java/candice/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":" * Abstraction for information stored locally for future usage.","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"public class Storage {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    /** Path to the file used for storage of information */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    private final Path storagePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for a Storage object that encapsulates the path to the storage file. Creates the storage file if it","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"     * does not already exist.","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param storagePath The path to the storage file.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws IOException If there was an error in creating the storage file.","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"    public Storage(Path storagePath) throws IOException {","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"        if (!Files.exists(storagePath)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"            createStorageFile(storagePath);","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"        this.storagePath \u003d storagePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"    public Path getPath() {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"        return this.storagePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"    private void createStorageFile(Path storagePath) throws IOException {","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"        Path directory \u003d storagePath.getParent();","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"        if (!Files.exists(directory)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"            createDirectory(directory);","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"        Files.createFile(storagePath);","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"    private void createDirectory(Path directory) throws IOException{","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"        Path parentDirectory \u003d directory.getParent();","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        if (!Files.exists(parentDirectory)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"            createDirectory(parentDirectory);","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"        Files.createDirectory(directory);","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"     * Adds a task to the storage file.","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskDescription The String representation of a task to be added to the file.","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"    public void addTask(String taskDescription) {","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"            Files.writeString(storagePath, taskDescription, StandardOpenOption.APPEND);","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"     * Updates the storage text to match the Strings inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskDescriptionArray An array of String representation of the tasks used to update the storage file.","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"    public void update(String[] taskDescriptionArray) {","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"        StringBuilder newTaskListText \u003d new StringBuilder();","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"        for (String task: taskDescriptionArray) {","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"            newTaskListText.append(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"            Files.writeString(this.storagePath, newTaskListText.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":84}},{"path":"src/main/java/candice/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.task.Task;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.task.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":" * Prints out visual response to update the user on what is going on.","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"public class Ui {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns a message for when the Candice program starts running.","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The starting message.","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    public static String getMessageForStartingUp() {","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"        return \"Sup bro! My name is Candice.\\nI\u0027m here to help you track your tasks!\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns a message for when the Candice program shuts down.","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The exit message.","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    public static String getMessageForShuttingDown() {","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        return \"Bye bro. See you soon.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns a message for when a task is added to the task list.","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param newTask The task that was added to the task list.","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskList The task list that the task was added to.","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The message reflecting that a task has been added.","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"    public static String getMessageForAddTask(Task newTask, TaskList taskList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        return \"I gotchu fam. Your task has been added:\\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"                + newTask.getStatus() + \"\\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"                + \"You have \" + taskList.getLength() + \" task(s). Stop procrastinating bro.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns a message for when a task is deleted from the task list.","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param removedTask The task that was removed from the task list.","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskList The task list that the task was removed from.","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The message reflecting that a task has been deleted.","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"    public static String getMessageForDeleteTask(Task removedTask, TaskList taskList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"        return \"I hope you\u0027re not deleting this just to avoid work:\\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"                + removedTask.getStatus() + \"\\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"                + \"You have \" + taskList.getLength() + \" task(s). Stop procrastinating bro.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns a message for when a task has been marked as finished.","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param selectedTask The task that was marked as finished.","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The message reflecting that a task has been marked as finished.","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"    public static String getMessageForMarkTask(Task selectedTask) {","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"        return \"Nice one lah, finally doing your work.\\n\" + selectedTask.getStatus();","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns a message for when a task has been marked as unfinished.","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param selectedTask The task that was marked as unfinished.","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The message reflecting that a task has been marked as unfinished.","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"    public static String getMessageForUnmarkTask(Task selectedTask) {","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"        return \"What happened bro.\\n\" + selectedTask.getStatus();","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"     * Prints the current task list.","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskList The task list to be printed.","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The current task list.","lastModifiedDate":"2022-09-15"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"    public static String getMessageForList(TaskList taskList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"        return \"Here are your tasks. You better start now:\\n\" + taskList;","lastModifiedDate":"2022-09-15"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"     * Prints out the tasks that have a name containing the task keyword.","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskList The task list that is being searched for the keyword.","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskKeyword The keyword that the name of the task should contain.","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The tasks in the current task list that have task names containing the keyword.","lastModifiedDate":"2022-09-15"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"    public static String getMessageForFind(TaskList taskList, String taskKeyword) {","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"        return \"No problem fam. Here are the tasks that match the keyword:\\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"                + taskList.findTasks(taskKeyword);","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":96}},{"path":"src/main/java/candice/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.command;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.Ui;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.task.Task;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.task.TaskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.task.TimedTask;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":" * Encapsulates all the relevant info of the command inputted after parsing it.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":" * Command objects can be resolved to execute the respective commands inputted and return the respective messages.","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    /** The type of this Command object */","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    final CommandType commandType;","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for Command objects to contain the type of the command inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param commandType The type of the command inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    public Command(CommandType commandType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    public abstract String resolve(TaskList taskList) throws IllegalArgumentException;","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"     * Encapsulates single word commands, specifically \"bye\" and \"list\".","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class SingleWordCommand extends Command { // bye \u0026 list","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for SingleWordCommand objects to contain the type of the command inputted, specifically bye or","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"         * list.","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param commandType The type of the command inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"        public SingleWordCommand(CommandType commandType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"            super(commandType);","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"         * Returns the current tasks in the task list if the command inputted was \"list\" and the exit message otherwise.","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskList The task list associated with this instance of Candice.","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return The task list if the command type is list or exit message if the command type is bye.","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"        public String resolve(TaskList taskList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"            if (this.commandType \u003d\u003d CommandType.LIST) {","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"                return Ui.getMessageForList(taskList);","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"            } else { // command type is bye","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"                return Ui.getMessageForShuttingDown();","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"     * Encapsulates commands that do not have a time associated to it, specifically todo and find.","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class NonTimedCommand extends Command { // todo \u0026 find","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The description of the inputted command */","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"        private final String commandDescription;","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for a command that does not have a time associated with it, specifically commands to create a","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"         * todo task or finding tasks that have a certain keyword.","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param commandType The type of the command inputted.","lastModifiedDate":"2022-09-05"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param commandDescription The description of the command, specifically the name of the task or the keyword","lastModifiedDate":"2022-09-05"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"         * used to find tasks.","lastModifiedDate":"2022-09-05"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"        public NonTimedCommand(CommandType commandType, String commandDescription) {","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"            super(commandType);","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"            this.commandDescription \u003d commandDescription;","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"         * Creates a new todo task and adds it to the task list if the type of command inputted was \"todo\" or finds","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"         * tasks with names that include the keyword inputted if the type of command inputted was \"find\".","lastModifiedDate":"2022-09-15"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskList The task list associated with this instance of Candice.","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A message reflecting that a todo task was added or the tasks that have a task name that includes the","lastModifiedDate":"2022-09-15"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"         * keyword inputted.","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"        public String resolve(TaskList taskList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"            if (this.commandType \u003d\u003d CommandType.TODO) {","lastModifiedDate":"2022-09-15"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"                Task newTask \u003d new Task.ToDo(commandDescription);","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"                taskList.addTask(newTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"                return Ui.getMessageForAddTask(newTask, taskList);","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"            } else { // Command type is find","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"Ryan-Tan00"},"content":"                return Ui.getMessageForFind(taskList, commandDescription);","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"Ryan-Tan00"},"content":"     * Encapsulates commands to edit or delete tasks in the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class NumberedCommand extends Command { // mark, unmark \u0026 delete","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The number of the task that the inputted command wants to edit or delete */","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"Ryan-Tan00"},"content":"        private final int taskNumber;","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for a command to edit or delete a task in the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param commandType The type of the command inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskNumber The number of the task to be edited or deleted.","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"Ryan-Tan00"},"content":"        public NumberedCommand(CommandType commandType, int taskNumber) {","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"Ryan-Tan00"},"content":"            super(commandType);","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":119,"author":{"gitId":"Ryan-Tan00"},"content":"         * Deletes the respective task if the type of command inputted was \"delete\", sets a task as finished if the","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"Ryan-Tan00"},"content":"         * type of command inputted was \"mark\" and sets a task as unfinished if the type of command inputted was","lastModifiedDate":"2022-09-15"},{"lineNumber":121,"author":{"gitId":"Ryan-Tan00"},"content":"         * \"unmark\".","lastModifiedDate":"2022-09-15"},{"lineNumber":122,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskList The task list associated with this instance of Candice.","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A message reflecting that a task was deleted, marked as finished or marked as unfinished if the","lastModifiedDate":"2022-09-15"},{"lineNumber":125,"author":{"gitId":"Ryan-Tan00"},"content":"         * command type was delete, mark and unmark respectively.","lastModifiedDate":"2022-09-15"},{"lineNumber":126,"author":{"gitId":"Ryan-Tan00"},"content":"         * @throws IllegalArgumentException If the task number inputted was larger than the size of the task list or","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"Ryan-Tan00"},"content":"         * zero and below.","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":129,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"Ryan-Tan00"},"content":"        public String resolve(TaskList taskList) throws IllegalArgumentException {","lastModifiedDate":"2022-09-15"},{"lineNumber":131,"author":{"gitId":"Ryan-Tan00"},"content":"            if (this.commandType \u003d\u003d CommandType.DELETE) {","lastModifiedDate":"2022-09-15"},{"lineNumber":132,"author":{"gitId":"Ryan-Tan00"},"content":"                Task deletedTask \u003d taskList.deleteTask(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"Ryan-Tan00"},"content":"                return Ui.getMessageForDeleteTask(deletedTask, taskList);","lastModifiedDate":"2022-09-15"},{"lineNumber":134,"author":{"gitId":"Ryan-Tan00"},"content":"            } else if (this.commandType \u003d\u003d CommandType.MARK) {","lastModifiedDate":"2022-09-15"},{"lineNumber":135,"author":{"gitId":"Ryan-Tan00"},"content":"                Task selectedTask \u003d taskList.markTask(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":136,"author":{"gitId":"Ryan-Tan00"},"content":"                return Ui.getMessageForMarkTask(selectedTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":137,"author":{"gitId":"Ryan-Tan00"},"content":"            } else { // commandType \u003d\u003d UNMARK","lastModifiedDate":"2022-08-31"},{"lineNumber":138,"author":{"gitId":"Ryan-Tan00"},"content":"                Task selectedTask \u003d taskList.unmarkTask(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":139,"author":{"gitId":"Ryan-Tan00"},"content":"                return Ui.getMessageForUnmarkTask(selectedTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":140,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":142,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":144,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":145,"author":{"gitId":"Ryan-Tan00"},"content":"     * Encapsulates commands to add tasks, with a date and potentially a timing associated to it, to the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":146,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"Ryan-Tan00"},"content":"    public abstract static class TimedTaskCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":148,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The name of the task in the inputted command */","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"Ryan-Tan00"},"content":"        String taskName;","lastModifiedDate":"2022-08-31"},{"lineNumber":150,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The date associated to the task in the inputted command */","lastModifiedDate":"2022-09-15"},{"lineNumber":151,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate taskDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":152,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The time associated to the task in the inputted command */","lastModifiedDate":"2022-09-15"},{"lineNumber":153,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime taskTime;","lastModifiedDate":"2022-09-15"},{"lineNumber":154,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":155,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":156,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for a command to add a task with a date associated to it.","lastModifiedDate":"2022-09-03"},{"lineNumber":157,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":158,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param commandType The type of the command inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":159,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskName The name of the task in the inputted command.","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param date The date attached to the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":161,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param time The time attached to the task.","lastModifiedDate":"2022-09-15"},{"lineNumber":162,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":163,"author":{"gitId":"Ryan-Tan00"},"content":"        public TimedTaskCommand(CommandType commandType, String taskName, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-09-15"},{"lineNumber":164,"author":{"gitId":"Ryan-Tan00"},"content":"            super(commandType);","lastModifiedDate":"2022-08-31"},{"lineNumber":165,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2022-08-31"},{"lineNumber":166,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskDate \u003d date;","lastModifiedDate":"2022-08-31"},{"lineNumber":167,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskTime \u003d time;","lastModifiedDate":"2022-09-15"},{"lineNumber":168,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":169,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":170,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":171,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":172,"author":{"gitId":"Ryan-Tan00"},"content":"     * Encapsulates a command to add a deadline task to the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":173,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":174,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class DeadlineCommand extends TimedTaskCommand { // deadline","lastModifiedDate":"2022-08-31"},{"lineNumber":175,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":176,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for a command to add a task with a deadline to the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":177,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":178,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskName The name of the deadline task.","lastModifiedDate":"2022-09-03"},{"lineNumber":179,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param deadlineDate The deadline date of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":180,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param deadlineTime The deadline time of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":181,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":182,"author":{"gitId":"Ryan-Tan00"},"content":"        public DeadlineCommand(String taskName, LocalDate deadlineDate, LocalTime deadlineTime) {","lastModifiedDate":"2022-08-31"},{"lineNumber":183,"author":{"gitId":"Ryan-Tan00"},"content":"            super(CommandType.DEADLINE, taskName, deadlineDate, deadlineTime);","lastModifiedDate":"2022-09-15"},{"lineNumber":184,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":185,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":186,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":187,"author":{"gitId":"Ryan-Tan00"},"content":"         * Creates a new deadline task and adds it to the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":188,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":189,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskList The task list associated with this instance of Candice.","lastModifiedDate":"2022-09-03"},{"lineNumber":190,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A message reflecting that a deadline task was added to the task list.","lastModifiedDate":"2022-09-15"},{"lineNumber":191,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":192,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":193,"author":{"gitId":"Ryan-Tan00"},"content":"        public String resolve(TaskList taskList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":194,"author":{"gitId":"Ryan-Tan00"},"content":"            Task newDeadline \u003d new TimedTask.Deadline(this.taskName, this.taskDate, this.taskTime);","lastModifiedDate":"2022-09-15"},{"lineNumber":195,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":196,"author":{"gitId":"Ryan-Tan00"},"content":"            taskList.addTask(newDeadline);","lastModifiedDate":"2022-08-31"},{"lineNumber":197,"author":{"gitId":"Ryan-Tan00"},"content":"            return Ui.getMessageForAddTask(newDeadline, taskList);","lastModifiedDate":"2022-09-15"},{"lineNumber":198,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":199,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":200,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":201,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":202,"author":{"gitId":"Ryan-Tan00"},"content":"     * Encapsulates a command to add an event to the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":203,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":204,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class EventCommand extends TimedTaskCommand { // event","lastModifiedDate":"2022-08-31"},{"lineNumber":205,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The end time of the event to be created and added */","lastModifiedDate":"2022-09-03"},{"lineNumber":206,"author":{"gitId":"Ryan-Tan00"},"content":"        private final LocalTime eventEndTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":207,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":208,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":209,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for a command to add an event to the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":210,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":211,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskName The name of the event.","lastModifiedDate":"2022-09-03"},{"lineNumber":212,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param eventDate The date of the event.","lastModifiedDate":"2022-09-03"},{"lineNumber":213,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param eventStartTime The starting time of the event.","lastModifiedDate":"2022-09-03"},{"lineNumber":214,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param eventEndTime The ending time of the event.","lastModifiedDate":"2022-09-03"},{"lineNumber":215,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":216,"author":{"gitId":"Ryan-Tan00"},"content":"        public EventCommand(String taskName, LocalDate eventDate, LocalTime eventStartTime, LocalTime eventEndTime) {","lastModifiedDate":"2022-08-31"},{"lineNumber":217,"author":{"gitId":"Ryan-Tan00"},"content":"            super(CommandType.EVENT, taskName, eventDate, eventStartTime);","lastModifiedDate":"2022-09-15"},{"lineNumber":218,"author":{"gitId":"Ryan-Tan00"},"content":"            this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":219,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":220,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":221,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":222,"author":{"gitId":"Ryan-Tan00"},"content":"         * Creates a new event and adds it to the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":223,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":224,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskList The task list associated with this instance of Candice.","lastModifiedDate":"2022-09-03"},{"lineNumber":225,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A message reflecting that an event was added to the task list.","lastModifiedDate":"2022-09-15"},{"lineNumber":226,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":227,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":228,"author":{"gitId":"Ryan-Tan00"},"content":"        public String resolve(TaskList taskList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":229,"author":{"gitId":"Ryan-Tan00"},"content":"            Task newEvent \u003d new TimedTask.Event(this.taskName, this.taskDate, this.taskTime, this.eventEndTime);","lastModifiedDate":"2022-09-15"},{"lineNumber":230,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":231,"author":{"gitId":"Ryan-Tan00"},"content":"            taskList.addTask(newEvent);","lastModifiedDate":"2022-08-31"},{"lineNumber":232,"author":{"gitId":"Ryan-Tan00"},"content":"            return Ui.getMessageForAddTask(newEvent, taskList);","lastModifiedDate":"2022-09-15"},{"lineNumber":233,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":234,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":235,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":235}},{"path":"src/main/java/candice/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.command;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":" * Enumeration of all the different types of commands that can be inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"    TODO,","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    DEADLINE,","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    EVENT,","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    LIST,","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"    MARK,","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    UNMARK,","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    DELETE,","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    FIND,","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    BYE","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":16}},{"path":"src/main/java/candice/exception/EmptyCommandDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.exception;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.command.CommandType;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":" * Abstraction for exceptions that are thrown when only command types with no further description is inputted.","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"public class EmptyCommandDescriptionException extends Exception {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for an exception thrown when commands lack descriptions.","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskType The type of command inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    public EmptyCommandDescriptionException(CommandType taskType) {","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"You can\u0027t just say \" + taskType + \" without any description.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":17}},{"path":"src/main/java/candice/exception/EmptyTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.exception;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.command.CommandType;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":" * Abstraction for exceptions that are thrown when no date for a task is inputted, specifically for deadlines and","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":" * events.","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"public class EmptyTimingException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for an exception thrown when the deadline or event command inputted lacks a date.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskType The type of command inputted, specifically deadlines or events.","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    public EmptyTimingException(CommandType taskType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"You have not set a timing for your \" + taskType + \" buddy.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":18}},{"path":"src/main/java/candice/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.exception;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":" * Abstraction for exceptions that are thrown when the date inputted for a task, specifically for deadlines and events,","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":" * does not follow the format of a LocalDate or does not exist.","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for an exception thrown when the deadline or event command inputted has an invalid date.","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"    public InvalidDateException() {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"Invalid date bro. You need to write the date as DD/MM/YYYY.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Ryan-Tan00":14}},{"path":"src/main/java/candice/exception/InvalidFormattingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.exception;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.command.CommandType;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":" * Abstraction for exceptions that are thrown when the format of the command inputted is not valid.","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"public class InvalidFormattingException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for an exception thrown when the command inputted does not have valid formatting.","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskType The type of command inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    public InvalidFormattingException(CommandType taskType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"Wrong formatting for a \" + taskType + \" bro.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":17}},{"path":"src/main/java/candice/exception/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.exception;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":" * Abstraction for exceptions that are thrown when the time inputted for a task, specifically for deadlines and events,","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":" * does not follow the format of a LocalTime or does not exist.","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"public class InvalidTimeException extends Exception {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for an exception thrown when the deadline or event command inputted has an invalid time.","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"    public InvalidTimeException() {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"Invalid time bro. You need to write the time as a 24-hour time (1600). For events, you are required \"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"                + \"to give the start and end time (1400-1600)\");","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Ryan-Tan00":15}},{"path":"src/main/java/candice/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.exception;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":" * Abstraction for exceptions that are thrown when the command inputted has a command type that is not recognised.","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for an exception thrown when the command type is unknown.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"I have no clue what you\u0027re trying to do bro.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":13}},{"path":"src/main/java/candice/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.javafx;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"    @FXML","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"    @FXML","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"    private void flip() {","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"    public static DialogBox getCandiceDialog(String text, Image img) {","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"        db.flip();","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"        return db;","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Ryan-Tan00":61}},{"path":"src/main/java/candice/javafx/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.javafx;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.Candice;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"public class Launcher {","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Ryan-Tan00":13}},{"path":"src/main/java/candice/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.javafx;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.Candice;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":" * A GUI for Candice using FXML.","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"    private Candice candice;","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"            this.candice \u003d new Candice();","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"            stage.setTitle(\"Candice\");","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCandice(this.candice);","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sendStartMessage();","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"            stage.show();","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Ryan-Tan00":40}},{"path":"src/main/java/candice/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.javafx;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.Candice;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.Ui;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.Timer;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"    @FXML","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"    @FXML","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"    @FXML","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"    @FXML","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"    private Candice candice;","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"    private Image candiceImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaCandice.jpg\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"    @FXML","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"    public void setCandice(Candice candice) {","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"        this.candice \u003d candice;","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"    public void sendStartMessage() {","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"        String startMessage \u003d Ui.getMessageForStartingUp();","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"        dialogContainer.getChildren().add(DialogBox.getCandiceDialog(startMessage, candiceImage));","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"    @FXML","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"        String response \u003d candice.run(input);","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"                DialogBox.getCandiceDialog(response, candiceImage)","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"        );","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"        // closes the program if bye is inputted","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"            Timer timer \u003d new Timer();","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"            timer.schedule(new TimerTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"                @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"                public void run() {","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"                    System.exit(0);","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"            }, 1000);","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Ryan-Tan00":75}},{"path":"src/main/java/candice/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":" * Encapsulates all relevant information of a task, namely the type of task, whether they have been finished and the","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":" * name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    /** Boolean to represent if the task has been finished. False by default */","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    boolean isFinished \u003d false;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    /** Name of the task */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"    final String taskName;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor of a Task object that encapsulates a task.","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    public void setFinished() {","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"        this.isFinished \u003d true;","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    public void setUnfinished() {","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"        this.isFinished \u003d false;","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns a String indicating if a task has been finished and the name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return A String containing a box with an \"X\" in it if the task has been finished and empty otherwise as well as","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"     * the name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"        String completed \u003d this.isFinished ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"        return completed + this.taskName;","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"    public abstract String getStorageDescription();","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"     * Represents a Task object that does not have any date or time associated with it, namely a todo task.","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for a task with no date or time associated with it.","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskName The name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"        public ToDo(String taskName) {","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"            super(taskName);","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"         * Returns a String indicating that this Task object encapsulates a todo task and the status of the Task.","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A String indicating that it is a todo task, whether it has been finished and the name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStatus() {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"            return \"[T]\" + super.getStatus();","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"         * Returns a String representing all the relevant information of a todo task, in the format of type of task,","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"         * whether the task has been finished and the name of the task, to be placed in a text file as storage.","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A String containing the type of task, whether it has been finished and the name of the task in the","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"         * storage format.","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStorageDescription() {","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"            String finishedStatus \u003d this.isFinished ? \"finished\" : \"unfinished\";","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"            return \"[T], \" + finishedStatus + \", \" + this.taskName + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":79}},{"path":"src/main/java/candice/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import candice.Storage;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":" * Represents a list of tasks that is created by parsing the text file located in the Storage object.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":" * If no text file is located or read, an empty list is created instead.","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"public class TaskList {","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"    /** The storage object that will be used for parsing to create the task array list */","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    /** The array task list used to store the tasks */","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"    private final ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for a TaskList object with an empty list of tasks that can be filled in by using the Storage object","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"     * provided.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param storage The storage object encapsulating the task list text needed for editing this instance of TaskList.","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"     * Parses the task list text using the Storage object in this instance of TaskList to add tasks to the task list in","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"     * this instance of TaskList.","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"    public void parseTaskListText() {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(this.storage.getPath());","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"            String nextLine \u003d reader.readLine();","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"            Task nextTask;","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"            while (nextLine !\u003d null) {","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"                String[] taskDescription \u003d nextLine.split(\", \");","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"                boolean isFinished \u003d taskDescription[1].equals(\"finished\");","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"                String taskName \u003d taskDescription[2];","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"                if (taskDescription[0].equals(\"[T]\")) { // Todo task","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"                    nextTask \u003d new Task.ToDo(taskName);","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"                } else { // Timed task","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"                    String dateAsString \u003d taskDescription[3];","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"                    LocalDate date \u003d LocalDate.parse(dateAsString);","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"                    if (taskDescription[0].equals(\"[D]\")) { // Deadline task","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"                        String deadlineTimeAsString \u003d taskDescription[4];","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"                        LocalTime deadlineTime \u003d deadlineTimeAsString.equals(\"no time given\")","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"                                ? null","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"                                : LocalTime.parse(deadlineTimeAsString);","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"                        nextTask \u003d new TimedTask.Deadline(taskName, date, deadlineTime);","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"                    } else { // Event task","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"                        LocalTime eventStartTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"                        LocalTime eventEndTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"                        if (taskDescription[4].equals(\"no time given\")) {","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"                            eventStartTime \u003d null;","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"                            eventEndTime \u003d null;","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"                        } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"                            eventStartTime \u003d LocalTime.parse(taskDescription[4]);","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"                            eventEndTime \u003d LocalTime.parse(taskDescription[5]);","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"                        }","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"                        nextTask \u003d new TimedTask.Event(taskName, date, eventStartTime, eventEndTime);","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"                    }","lastModifiedDate":"2022-08-30"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"                if (isFinished) {","lastModifiedDate":"2022-08-30"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"                    nextTask.setFinished();","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"                this.taskArrayList.add(nextTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"                nextLine \u003d reader.readLine();","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns the number of tasks inside the task list encapsulated by this TaskList object.","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The number of tasks inside the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"Ryan-Tan00"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"Ryan-Tan00"},"content":"        return this.taskArrayList.size();","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":100,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"Ryan-Tan00"},"content":"     * Adds a task to the list of tasks in this TaskList object.","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param newTask The task to add into the list of tasks.","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"Ryan-Tan00"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"Ryan-Tan00"},"content":"        taskArrayList.add(newTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"Ryan-Tan00"},"content":"        String taskDescription \u003d newTask.getStorageDescription();","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"Ryan-Tan00"},"content":"        this.storage.addTask(taskDescription);","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":111,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"Ryan-Tan00"},"content":"     * Checks if the task number given exists within the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskNumber The task number to check.","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws IllegalArgumentException If the task number does not exist within this task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"Ryan-Tan00"},"content":"    public void checkValidTaskNumber(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"Ryan-Tan00"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.getLength()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new IllegalArgumentException(\"The task number you put is wrong bro. The task must exist for \" +","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"Ryan-Tan00"},"content":"                    \"you to delete it.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":122,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":123,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":125,"author":{"gitId":"Ryan-Tan00"},"content":"     * Removes the task corresponding to the task number given from the task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskNumber The number of the task to be removed.","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2022-09-03"},{"lineNumber":129,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws IllegalArgumentException If the task number does not exist within this task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":130,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"Ryan-Tan00"},"content":"    public Task deleteTask(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"Ryan-Tan00"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"Ryan-Tan00"},"content":"        Task removedTask \u003d taskArrayList.remove(taskNumber - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":134,"author":{"gitId":"Ryan-Tan00"},"content":"        updateStorage();","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"Ryan-Tan00"},"content":"        return removedTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":136,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":137,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":138,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"Ryan-Tan00"},"content":"     * Marks the task corresponding to the task number given as finished.","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":141,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskNumber The number of the task to be marked as finished.","lastModifiedDate":"2022-09-03"},{"lineNumber":142,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The task that was marked as finished.","lastModifiedDate":"2022-09-03"},{"lineNumber":143,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws IllegalArgumentException If the task number does not exist within this task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":144,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":145,"author":{"gitId":"Ryan-Tan00"},"content":"    public Task markTask(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":146,"author":{"gitId":"Ryan-Tan00"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":147,"author":{"gitId":"Ryan-Tan00"},"content":"        Task selectedTask \u003d taskArrayList.get(taskNumber - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":148,"author":{"gitId":"Ryan-Tan00"},"content":"        selectedTask.setFinished();","lastModifiedDate":"2022-08-31"},{"lineNumber":149,"author":{"gitId":"Ryan-Tan00"},"content":"        updateStorage();","lastModifiedDate":"2022-08-31"},{"lineNumber":150,"author":{"gitId":"Ryan-Tan00"},"content":"        return selectedTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":151,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":152,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":154,"author":{"gitId":"Ryan-Tan00"},"content":"     * Marks the task corresponding to the task number given as unfinished.","lastModifiedDate":"2022-09-03"},{"lineNumber":155,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":156,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskNumber The number of the task to be marked as unfinished.","lastModifiedDate":"2022-09-03"},{"lineNumber":157,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The task that was marked as finished.","lastModifiedDate":"2022-09-03"},{"lineNumber":158,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws IllegalArgumentException If the task number does not exist within this task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":159,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"Ryan-Tan00"},"content":"    public Task unmarkTask(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":161,"author":{"gitId":"Ryan-Tan00"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":162,"author":{"gitId":"Ryan-Tan00"},"content":"        Task selectedTask \u003d this.taskArrayList.get(taskNumber - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":163,"author":{"gitId":"Ryan-Tan00"},"content":"        selectedTask.setUnfinished();","lastModifiedDate":"2022-08-31"},{"lineNumber":164,"author":{"gitId":"Ryan-Tan00"},"content":"        updateStorage();","lastModifiedDate":"2022-08-31"},{"lineNumber":165,"author":{"gitId":"Ryan-Tan00"},"content":"        return selectedTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":166,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":167,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":168,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":169,"author":{"gitId":"Ryan-Tan00"},"content":"     * Returns a String representing all the tasks that contain the keyword in the task name.","lastModifiedDate":"2022-09-04"},{"lineNumber":170,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":171,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskKeyword The keyword that is inside the name of the tasks.","lastModifiedDate":"2022-09-04"},{"lineNumber":172,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return A String containing all the tasks that contain the keyword.","lastModifiedDate":"2022-09-04"},{"lineNumber":173,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":174,"author":{"gitId":"Ryan-Tan00"},"content":"    public String findTasks(String taskKeyword) {","lastModifiedDate":"2022-09-04"},{"lineNumber":175,"author":{"gitId":"Ryan-Tan00"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2022-09-04"},{"lineNumber":176,"author":{"gitId":"Ryan-Tan00"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":177,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":178,"author":{"gitId":"Ryan-Tan00"},"content":"        for (int i \u003d 0; i \u003c this.getLength(); i++) {","lastModifiedDate":"2022-09-04"},{"lineNumber":179,"author":{"gitId":"Ryan-Tan00"},"content":"            Task task \u003d this.taskArrayList.get(i);","lastModifiedDate":"2022-09-04"},{"lineNumber":180,"author":{"gitId":"Ryan-Tan00"},"content":"            String taskStatus \u003d task.getStatus();","lastModifiedDate":"2022-09-04"},{"lineNumber":181,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":182,"author":{"gitId":"Ryan-Tan00"},"content":"            if (taskStatus.contains(taskKeyword)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":183,"author":{"gitId":"Ryan-Tan00"},"content":"                taskList.append(taskNumber).append(\".\").append(taskStatus).append(\"\\n\");","lastModifiedDate":"2022-09-04"},{"lineNumber":184,"author":{"gitId":"Ryan-Tan00"},"content":"                taskNumber++;","lastModifiedDate":"2022-09-04"},{"lineNumber":185,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":186,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":187,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":188,"author":{"gitId":"Ryan-Tan00"},"content":"        return taskList.length() !\u003d 0","lastModifiedDate":"2022-09-04"},{"lineNumber":189,"author":{"gitId":"Ryan-Tan00"},"content":"               ? taskList.substring(0, taskList.length() - 1) // to remove the last \"\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":190,"author":{"gitId":"Ryan-Tan00"},"content":"               : taskList.toString();","lastModifiedDate":"2022-09-04"},{"lineNumber":191,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":192,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":193,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":194,"author":{"gitId":"Ryan-Tan00"},"content":"     * Updates the task list text encapsulated by the Storage object in this instance of TaskList to match the task","lastModifiedDate":"2022-09-03"},{"lineNumber":195,"author":{"gitId":"Ryan-Tan00"},"content":"     * list in this instance of TaskList.","lastModifiedDate":"2022-09-03"},{"lineNumber":196,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":197,"author":{"gitId":"Ryan-Tan00"},"content":"    private void updateStorage() {","lastModifiedDate":"2022-08-31"},{"lineNumber":198,"author":{"gitId":"Ryan-Tan00"},"content":"        int taskListLength \u003d this.getLength();","lastModifiedDate":"2022-08-31"},{"lineNumber":199,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] taskDescriptionArray \u003d new String[taskListLength];","lastModifiedDate":"2022-08-31"},{"lineNumber":200,"author":{"gitId":"Ryan-Tan00"},"content":"        for (int i \u003d 0; i \u003c taskListLength; i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":201,"author":{"gitId":"Ryan-Tan00"},"content":"            taskDescriptionArray[i] \u003d this.taskArrayList.get(i).getStorageDescription();","lastModifiedDate":"2022-08-31"},{"lineNumber":202,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":203,"author":{"gitId":"Ryan-Tan00"},"content":"        this.storage.update(taskDescriptionArray);","lastModifiedDate":"2022-08-31"},{"lineNumber":204,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":205,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":206,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":207,"author":{"gitId":"Ryan-Tan00"},"content":"     * Uses the task list in this instance of TaskList to create a String representing the statuses of all the tasks in","lastModifiedDate":"2022-09-03"},{"lineNumber":208,"author":{"gitId":"Ryan-Tan00"},"content":"     * the task list using the getStatus method.","lastModifiedDate":"2022-09-03"},{"lineNumber":209,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":210,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return A String representation of all the tasks in this task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":211,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":212,"author":{"gitId":"Ryan-Tan00"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":213,"author":{"gitId":"Ryan-Tan00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":214,"author":{"gitId":"Ryan-Tan00"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-08-31"},{"lineNumber":215,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":216,"author":{"gitId":"Ryan-Tan00"},"content":"        for (int i \u003d 0; i \u003c this.getLength(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":217,"author":{"gitId":"Ryan-Tan00"},"content":"            Task task \u003d this.taskArrayList.get(i);","lastModifiedDate":"2022-08-31"},{"lineNumber":218,"author":{"gitId":"Ryan-Tan00"},"content":"            String taskNumber \u003d String.valueOf(i + 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":219,"author":{"gitId":"Ryan-Tan00"},"content":"            output.append(taskNumber).append(\".\").append(task.getStatus()).append(\"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":220,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":221,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":222,"author":{"gitId":"Ryan-Tan00"},"content":"        return output.length() !\u003d 0","lastModifiedDate":"2022-09-04"},{"lineNumber":223,"author":{"gitId":"Ryan-Tan00"},"content":"               ? output.substring(0, output.length() - 1) // to remove the last \"\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":224,"author":{"gitId":"Ryan-Tan00"},"content":"               : output.toString();","lastModifiedDate":"2022-09-04"},{"lineNumber":225,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":226,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Ryan-Tan00":226}},{"path":"src/main/java/candice/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":" * Extends the Task class, adding on to the encapsulation of a Task object by adding dates and potentially times","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":" * associated to certain tasks, specifically deadlines and events.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"public abstract class TimedTask extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    /** The date associated to the task */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    LocalDate date;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"     * Constructor for a task with a date associated to it.","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param date The date associated to this task.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"    public TimedTask(String taskName, LocalDate date) {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"        super(taskName);","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"     * Uses the instance of LocalDate associated to this TimedTask object to return the String representation of the","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"     * dates that will be displayed to users of this program.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The String representation of dates that are displayed to users.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"    String convertLocalDate() {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"        int day \u003d date.getDayOfMonth();","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        String month \u003d date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"        int year \u003d date.getYear();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"        return day + \" \" + month + \" \" + year;","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"     * Represents deadline tasks which are tasks that have a date and potentially a time associated to it as the","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"     * deadline of the task. If no time is associated to the deadline task, the time associated to the task will be","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"     * null.","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class Deadline extends TimedTask {","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The time associated to the task */","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime deadlineTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for a deadline task with a date and time associated to it.","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"         * If there was no time specified, the time encapsulated in this Deadline object will be null.","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskName The name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param deadlineDate The date associated to this task.","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param deadlineTime The time associated to this task.","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"        public Deadline(String taskName, LocalDate deadlineDate, LocalTime deadlineTime) {","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"            super(taskName, deadlineDate);","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"            this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"         * Returns a String indicating that this Task object encapsulates a deadline task, whether the task has been","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"         * finished, the name of the task and the deadline time. The deadline time will include the deadline date and","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"         * deadline time if the deadline time was inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A String indicating that this task is a deadline task, whether it has been finished, the name of the","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"         * deadline task and the deadline time.","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStatus() {","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"            String deadlineDate \u003d convertLocalDate();","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"            String dateAndTime \u003d this.deadlineTime \u003d\u003d null","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"                                 ? deadlineDate","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"                                 : deadlineDate + \" \" + this.deadlineTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"            return \"[D]\" + super.getStatus() + \" (by: \" + dateAndTime + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"         * Returns a String representing all the relevant information of a deadline task, in the format of type of task,","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"         * whether the task has been finished, the name of the task, the deadline date and the deadline time. This","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"         * String representation will be placed in a text file as storage.","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A String containing the type of task, whether it has been finished, the name of the task, the","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"         * deadline date and the deadline time if there was a time inputted in the storage format.","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStorageDescription() {","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"            String finishedStatus \u003d super.isFinished ? \"finished\" : \"unfinished\";","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"            if (this.deadlineTime \u003d\u003d null) {","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"                return \"[D], \" + finishedStatus + \", \" + this.taskName + \", \" + this.date","lastModifiedDate":"2022-08-30"},{"lineNumber":95,"author":{"gitId":"Ryan-Tan00"},"content":"                        + \", no time given\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":97,"author":{"gitId":"Ryan-Tan00"},"content":"                return \"[D], \" + finishedStatus + \", \" + this.taskName + \", \" + this.date + \", \"","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"Ryan-Tan00"},"content":"                        + this.deadlineTime + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":100,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"Ryan-Tan00"},"content":"     * Represents event tasks which are tasks that have a date and potentially two times associated to it as the","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"Ryan-Tan00"},"content":"     * start and end time of the event. If no time is associated to the event task, the times associated to the task","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"Ryan-Tan00"},"content":"     * will be null.","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class Event extends TimedTask {","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The start time associated to the task */","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime eventStartTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":111,"author":{"gitId":"Ryan-Tan00"},"content":"        /** The end time associated to the task*/","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime eventEndTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":113,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":114,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"Ryan-Tan00"},"content":"         * Constructor for an event task with a date and 2 times associated to it.","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"Ryan-Tan00"},"content":"         * If there was no time specified, the times encapsulated in this Event object will be null.","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":118,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param taskName The name of the task.","lastModifiedDate":"2022-09-03"},{"lineNumber":119,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param eventDate The date associated to this task.","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param eventStartTime The start time associated to this task.","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"Ryan-Tan00"},"content":"         * @param eventEndTime The end time associated to this task.","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"Ryan-Tan00"},"content":"        public Event(String taskName, LocalDate eventDate, LocalTime eventStartTime, LocalTime eventEndTime) {","lastModifiedDate":"2022-08-30"},{"lineNumber":124,"author":{"gitId":"Ryan-Tan00"},"content":"            super(taskName, eventDate);","lastModifiedDate":"2022-08-30"},{"lineNumber":125,"author":{"gitId":"Ryan-Tan00"},"content":"            this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":126,"author":{"gitId":"Ryan-Tan00"},"content":"            this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":127,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":128,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":129,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":130,"author":{"gitId":"Ryan-Tan00"},"content":"         * Returns a String indicating that this Task object encapsulates an event task, whether the task has been","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"Ryan-Tan00"},"content":"         * finished, the name of the task and the event start to end time. The event time will include the event date","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"Ryan-Tan00"},"content":"         * and event start to end time if the event times were inputted.","lastModifiedDate":"2022-09-03"},{"lineNumber":133,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":134,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A String indicating that this task is an event, whether it has been finished, the name of the","lastModifiedDate":"2022-09-03"},{"lineNumber":135,"author":{"gitId":"Ryan-Tan00"},"content":"         * event and the event time.","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":138,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStatus() {","lastModifiedDate":"2022-08-31"},{"lineNumber":139,"author":{"gitId":"Ryan-Tan00"},"content":"            String eventDate \u003d convertLocalDate();","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"Ryan-Tan00"},"content":"            String dateAndTime \u003d (this.eventStartTime \u003d\u003d null || this.eventEndTime \u003d\u003d null)","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"Ryan-Tan00"},"content":"                                 ? eventDate","lastModifiedDate":"2022-09-02"},{"lineNumber":142,"author":{"gitId":"Ryan-Tan00"},"content":"                                 : eventDate + \" \" + eventStartTime + \"-\" + eventEndTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":144,"author":{"gitId":"Ryan-Tan00"},"content":"            return \"[E]\" + super.getStatus() + \" (at: \" + dateAndTime + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":145,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":146,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":147,"author":{"gitId":"Ryan-Tan00"},"content":"        /**","lastModifiedDate":"2022-09-03"},{"lineNumber":148,"author":{"gitId":"Ryan-Tan00"},"content":"         * Returns a String representing all the relevant information of an event, in the format of type of task,","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"Ryan-Tan00"},"content":"         * whether the task has been finished, the name of the task, the event date and the event start to end time.","lastModifiedDate":"2022-09-03"},{"lineNumber":150,"author":{"gitId":"Ryan-Tan00"},"content":"         * This String representation will be placed in a text file as storage.","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"Ryan-Tan00"},"content":"         *","lastModifiedDate":"2022-09-03"},{"lineNumber":152,"author":{"gitId":"Ryan-Tan00"},"content":"         * @return A String containing the type of task, whether it has been finished, the name of the task, the","lastModifiedDate":"2022-09-03"},{"lineNumber":153,"author":{"gitId":"Ryan-Tan00"},"content":"         * event date, the even start time and event end time if there was a time inputted in the storage format.","lastModifiedDate":"2022-09-03"},{"lineNumber":154,"author":{"gitId":"Ryan-Tan00"},"content":"         */","lastModifiedDate":"2022-09-03"},{"lineNumber":155,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":156,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStorageDescription() {","lastModifiedDate":"2022-08-31"},{"lineNumber":157,"author":{"gitId":"Ryan-Tan00"},"content":"            String finishedStatus \u003d super.isFinished ? \"finished\" : \"unfinished\";","lastModifiedDate":"2022-09-04"},{"lineNumber":158,"author":{"gitId":"Ryan-Tan00"},"content":"            if (this.eventStartTime \u003d\u003d null || this.eventEndTime \u003d\u003d null) {","lastModifiedDate":"2022-09-02"},{"lineNumber":159,"author":{"gitId":"Ryan-Tan00"},"content":"                return \"[E], \" + finishedStatus + \", \" + this.taskName + \", \" + this.date","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"Ryan-Tan00"},"content":"                        + \", no time given\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":161,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":162,"author":{"gitId":"Ryan-Tan00"},"content":"                return \"[E], \" + finishedStatus + \", \" + this.taskName + \", \" + this.date + \", \"","lastModifiedDate":"2022-09-03"},{"lineNumber":163,"author":{"gitId":"Ryan-Tan00"},"content":"                        + this.eventStartTime + \", \" + this.eventEndTime + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":164,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":165,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":166,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":167,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":167}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Ryan-Tan00":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"candice.javafx.MainWindow\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Ryan-Tan00":19}},{"path":"src/test/java/candice/CandiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"public class CandiceTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Ryan-Tan00":4}},{"path":"src/test/java/candice/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"public class ParserTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Ryan-Tan00":4}},{"path":"src/test/java/candice/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"public class StorageTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Ryan-Tan00":4}},{"path":"src/test/java/candice/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"public class UiTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Ryan-Tan00":4}},{"path":"src/test/java/candice/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.command;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"public class CommandTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Ryan-Tan00":4}},{"path":"src/test/java/candice/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"public class TaskListTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Ryan-Tan00":5}},{"path":"src/test/java/candice/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"public class TaskTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    @Test","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    public void testToDoStatusString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"        Task.ToDo toDoTask \u003d new Task.ToDo(\"read a book\");","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[T][ ] read a book\", toDoTask.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"        toDoTask.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[T][X] read a book\", toDoTask.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    @Test","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    public void testToDoStorageDescription() {","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"        Task.ToDo toDoTask \u003d new Task.ToDo(\"watch cs2103 lecture\");","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[T], unfinished, watch cs2103 lecture\\n\", toDoTask.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"        toDoTask.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[T], finished, watch cs2103 lecture\\n\", toDoTask.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Ryan-Tan00":23}},{"path":"src/test/java/candice/task/TimedTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"package candice.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"public class TimedTaskTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"    @Test","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    public void testDeadlineStatusString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2022-01-01\");","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime localTime \u003d LocalTime.parse(\"23:59\");","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"        TimedTask.Deadline deadlineTask \u003d new TimedTask.Deadline(\"read a book\", localDate, localTime);","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[D][ ] read a book (by: 1 Jan 2022 23:59)\", deadlineTask.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"        deadlineTask.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[D][X] read a book (by: 1 Jan 2022 23:59)\", deadlineTask.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"        TimedTask.Deadline deadlineTaskWithoutTime \u003d new TimedTask.Deadline(\"read a book\", localDate, null);","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[D][ ] read a book (by: 1 Jan 2022)\", deadlineTaskWithoutTime.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"        deadlineTaskWithoutTime.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[D][X] read a book (by: 1 Jan 2022)\", deadlineTaskWithoutTime.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"    @Test","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"    public void testDeadlineStorageDescription() {","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2022-01-01\");","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime localTime \u003d LocalTime.parse(\"23:59\");","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"        TimedTask.Deadline deadlineTask \u003d new TimedTask.Deadline(\"read a book\", localDate, localTime);","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[D], unfinished, read a book, 2022-01-01, 23:59\\n\", deadlineTask.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"        deadlineTask.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[D], finished, read a book, 2022-01-01, 23:59\\n\", deadlineTask.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"        TimedTask.Deadline deadlineTaskWithoutTime \u003d new TimedTask.Deadline(\"read a book\", localDate, null);","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[D], unfinished, read a book, 2022-01-01, no time given\\n\",","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"                deadlineTaskWithoutTime.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"        deadlineTaskWithoutTime.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[D], finished, read a book, 2022-01-01, no time given\\n\",","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"                deadlineTaskWithoutTime.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"    @Test","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"    public void testEventStatusString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2022-01-01\");","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime startTime \u003d LocalTime.parse(\"16:00\");","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime endTime \u003d LocalTime.parse(\"20:00\");","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"        TimedTask.Event eventTask \u003d new TimedTask.Event(\"read a book\", localDate, startTime, endTime);","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[E][ ] read a book (at: 1 Jan 2022 16:00-20:00)\", eventTask.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"        eventTask.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[E][X] read a book (at: 1 Jan 2022 16:00-20:00)\", eventTask.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"        TimedTask.Event eventTaskWithoutTime \u003d new TimedTask.Event(\"read a book\",","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"                localDate, null, null);","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[E][ ] read a book (at: 1 Jan 2022)\", eventTaskWithoutTime.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"        eventTaskWithoutTime.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[E][X] read a book (at: 1 Jan 2022)\", eventTaskWithoutTime.getStatus());","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"    @Test","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"    public void testEventStorageDescription() {","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2022-01-01\");","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime startTime \u003d LocalTime.parse(\"16:00\");","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime endTime \u003d LocalTime.parse(\"20:00\");","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"        TimedTask.Event eventTask \u003d new TimedTask.Event(\"read a book\", localDate, startTime, endTime);","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[E], unfinished, read a book, 2022-01-01, 16:00, 20:00\\n\", eventTask.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"        eventTask.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[E], finished, read a book, 2022-01-01, 16:00, 20:00\\n\", eventTask.getStorageDescription());","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"        TimedTask.Event eventTaskWithoutTime \u003d new TimedTask.Event(\"read a book\",","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"                localDate, null, null);","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[E], unfinished, read a book, 2022-01-01, no time given\\n\",","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"                eventTaskWithoutTime.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"        eventTaskWithoutTime.setFinished();","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"        assertEquals(\"[E], finished, read a book, 2022-01-01, no time given\\n\",","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"                eventTaskWithoutTime.getStorageDescription());","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Ryan-Tan00":94}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"[T] | unfinished | read book","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"[D] | unfinished | return book | Sunday","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"[E] | unfinished | kahoot night | Next Thursday 9:00-11:00pm","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Ryan-Tan00":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"todo read book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 1/1/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 2/2/2022 2000","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 3/3/2022 1800-2000","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 12/12/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"list","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"todo","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"deadline","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"event","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"mark","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"unmark","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"delete","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"mark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"mark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"unmark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"unmark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"unmark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"mark 0","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"mark 6","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"mark -1","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"mark 4a","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"unmark 4a","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"delete 4a","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"help","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /at","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /at Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /at 12/12/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /by Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 32/1/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 32/13/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 1/1/2022 2400","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 1/1/2022 2400 1000","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 1/1/2022 1400","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 1/1/2022 1400-","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 1/1/2022 1400/2000","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":42}}]

[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"### `Keyword` - Describe command","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"Describe the command and its outcome.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":27,"Ryan-Tan00":2}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"    private final CommandType commandType;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"    public Command(CommandType commandType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"    public abstract void resolve(TaskList taskList) throws IllegalArgumentException;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class SingleWordCommand extends Command { // bye \u0026 list","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"        public SingleWordCommand(CommandType commandType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"            super(commandType);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"        public void resolve(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"            if (super.commandType \u003d\u003d CommandType.LIST) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"                Ui.printMessageForList(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"            } else { // Command is \"bye\"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"                System.out.println(\"Bye bro. See you soon.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class NonTimedTaskCommand extends Command { // todo","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"        private final String taskName;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"        public NonTimedTaskCommand(String taskName) {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"            super(CommandType.TODO);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"        public void resolve(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"            Task newTask \u003d new Task.ToDo(taskName);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"            Ui.printMessageForAddTask(newTask, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class NumberedCommand extends Command { // mark, unmark \u0026 delete","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"        private final int taskNumber;","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        public NumberedCommand(CommandType commandType, int taskNumber) {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"            super(commandType);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"        public void resolve(TaskList taskList) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"                if (super.commandType \u003d\u003d CommandType.DELETE) {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"                    Task deletedTask \u003d taskList.deleteTask(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"                    Ui.printMessageForDeleteTask(deletedTask, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"                } else if (super.commandType \u003d\u003d CommandType.MARK) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"                    Task selectedTask \u003d taskList.markTask(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"                    Ui.printMessageForMarkTask(selectedTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"                } else { // commandType \u003d\u003d UNMARK","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"                    Task selectedTask \u003d taskList.unmarkTask(this.taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"                    Ui.printMessageForUnmarkTask(selectedTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"                throw e;","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"    public abstract static class TimedTaskCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"        String taskName;","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate taskDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"        public TimedTaskCommand(CommandType commandType, String taskName, LocalDate date) {","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"            super(commandType);","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskDate \u003d date;","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class DeadlineCommand extends TimedTaskCommand { // deadline","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"        private final LocalTime deadlineTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"        public DeadlineCommand(String taskName, LocalDate deadlineDate, LocalTime deadlineTime) {","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"            super(CommandType.DEADLINE, taskName, deadlineDate);","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"            this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"        public void resolve(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"            Task newDeadline \u003d new TimedTask.Deadline(this.taskName, this.taskDate, this.deadlineTime);","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"            taskList.addTask(newDeadline);","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"Ryan-Tan00"},"content":"            Ui.printMessageForAddTask(newDeadline, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class EventCommand extends TimedTaskCommand { // event","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"Ryan-Tan00"},"content":"        private final LocalTime eventStartTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"Ryan-Tan00"},"content":"        private final LocalTime eventEndTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"Ryan-Tan00"},"content":"        public EventCommand(String taskName, LocalDate eventDate, LocalTime eventStartTime, LocalTime eventEndTime) {","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"Ryan-Tan00"},"content":"            super(CommandType.EVENT, taskName, eventDate);","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"Ryan-Tan00"},"content":"            this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"Ryan-Tan00"},"content":"            this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"Ryan-Tan00"},"content":"        public void resolve(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"Ryan-Tan00"},"content":"            Task newEvent \u003d new TimedTask.Event(this.taskName, this.taskDate, this.eventStartTime,","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"Ryan-Tan00"},"content":"                    this.eventEndTime);","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"Ryan-Tan00"},"content":"            taskList.addTask(newEvent);","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"Ryan-Tan00"},"content":"            Ui.printMessageForAddTask(newEvent, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":118}},{"path":"src/main/java/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"    BYE,","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"    LIST,","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"    TODO,","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"    MARK,","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"    UNMARK,","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"    DELETE,","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    EVENT","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":10}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.lang.IllegalArgumentException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":" * Executes the programme","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    TaskList taskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    public Duke(Path storagePath) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"        Storage storage \u003d new Storage(storagePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"        this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"        this.taskList.parseTaskListText();","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"    public void run() {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"        Ui.printMessageForStartingUp();","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"        Scanner scanner \u003d new Scanner(System.in); // Scans input","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"                command.resolve(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"            } catch (EmptyTaskNameException | EmptyTimingException | IllegalArgumentException | InvalidDateException","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"                    | InvalidFormattingException | InvalidTimeException | UnknownCommandException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"        Ui.printMessageForShuttingDown();","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"        Path storagePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\"); // Current directory","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"        Path dataDir \u003d Paths.get(currentDir, \"data\");","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"        Path tasks \u003d Paths.get(currentDir, \"data\", \"tasks.txt\");","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"        // Creating the data directory if it does not exist","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"        if (!Files.exists(dataDir)) {","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"            try {","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"                Files.createDirectory(dataDir);","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"        // Creating the task list text file if it does not exist","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"        if (!Files.exists(tasks)) {","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"            try {","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"                Files.createFile(tasks);","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"        new Duke(storagePath).run();","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"-":4,"Ryan-Tan00":67}},{"path":"src/main/java/EmptyTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"public class EmptyTaskNameException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"    public EmptyTaskNameException(CommandType taskType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"You can\u0027t just say \" + taskType + \" without any description.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":5}},{"path":"src/main/java/EmptyTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"public class EmptyTimingException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"    public EmptyTimingException(CommandType taskType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"You have not set a timing for your \" + taskType + \" buddy.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":5}},{"path":"src/main/java/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"    public InvalidDateException() {","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"Invalid date bro. You need to write the date as DD/MM/YYYY.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Ryan-Tan00":5}},{"path":"src/main/java/InvalidFormattingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"public class InvalidFormattingException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"    public InvalidFormattingException(CommandType taskType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"Wrong formatting for a \" + taskType + \" bro.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":5}},{"path":"src/main/java/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"public class InvalidTimeException extends Exception {","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"    public InvalidTimeException() {","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"Invalid time bro. You need to write the time as a 24-hour time (1600). For events, you are required \"","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"                + \"to give the start and end time (1400-1600)\");","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Ryan-Tan00":6}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":" * Parses inputs and returns Action objects that can be resolved or throws Exceptions if the input cannot be parsed.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"public class Parser {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    private static Command.TimedTaskCommand parseTimedTaskCommand(CommandType taskType, String taskDescription)","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"            throws EmptyTimingException, InvalidDateException, InvalidFormattingException, InvalidTimeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] splitTaskAndTimestamp \u003d taskDescription.split(\" /\", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"        if (splitTaskAndTimestamp.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"            String taskName \u003d splitTaskAndTimestamp[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"            String timestamp \u003d splitTaskAndTimestamp[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"            String[] splitTimestamp \u003d timestamp.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"            if ((taskType \u003d\u003d CommandType.DEADLINE \u0026\u0026 splitTimestamp[0].equals(\"by\"))","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"                    || (taskType \u003d\u003d CommandType.EVENT \u0026\u0026 splitTimestamp[0].equals(\"at\"))) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"                if (splitTimestamp.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"                    return parseDateAndTime(taskType, taskName, splitTimestamp[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"                } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"                    throw new EmptyTimingException(taskType);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new InvalidFormattingException(taskType);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new EmptyTimingException(taskType);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"    private static Command.TimedTaskCommand parseDateAndTime(CommandType taskType, String taskName, String taskDateAndTime)","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"            throws InvalidDateException, InvalidFormattingException, InvalidTimeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] splitDateAndTime \u003d taskDateAndTime.split(\" \");","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"        if (splitDateAndTime.length \u003e 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new InvalidFormattingException(taskType);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalDate taskDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"        String taskDateAsString \u003d splitDateAndTime[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] splitDayMonthYear \u003d taskDateAsString.split(\"/\");","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"        if (splitDayMonthYear.length \u003d\u003d 3) {","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"            StringBuilder day \u003d new StringBuilder(splitDayMonthYear[0]);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"            StringBuilder month \u003d new StringBuilder(splitDayMonthYear[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"            StringBuilder year \u003d new StringBuilder(splitDayMonthYear[2]);","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"            int dayLength \u003d day.length();","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"            int monthLength \u003d month.length();","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"            int yearLength \u003d year.length();","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"            // Filling the days, months and years to match the format required for LocalDate","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"            for (int i \u003d 0; i \u003c (2 - dayLength); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"                day.insert(0, \"0\");","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"            for (int i \u003d 0; i \u003c (2 - monthLength); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"                month.insert(0, \"0\");","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"            for (int i \u003d 0; i \u003c (4 - yearLength); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"                year.insert(0, \"0\");","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"            String localDateFormat \u003d year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"                taskDate \u003d LocalDate.parse(localDateFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"        if (splitDateAndTime.length \u003d\u003d 2) { // Time was provided","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"            if (taskType \u003d\u003d CommandType.DEADLINE) {","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"                return parseDeadlineTime(taskName, taskDate, splitDateAndTime[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"                return parseEventTime(taskName, taskDate, splitDateAndTime[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"        } else if (taskType \u003d\u003d CommandType.DEADLINE) { // No time was provided","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"            return new Command.DeadlineCommand(taskName, taskDate, null);","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"        } else { // No time was provided and taskType is event","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"            return new Command.EventCommand(taskName, taskDate, null, null);","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"    private static Command.DeadlineCommand parseDeadlineTime(String taskName, LocalDate deadlineDate,","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"Ryan-Tan00"},"content":"            String deadlineTimeAsString) throws InvalidTimeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"Ryan-Tan00"},"content":"        if (deadlineTimeAsString.length() \u003d\u003d 4) {","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"Ryan-Tan00"},"content":"            String hour \u003d deadlineTimeAsString.substring(0, 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"Ryan-Tan00"},"content":"            String minute \u003d deadlineTimeAsString.substring(2);","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"Ryan-Tan00"},"content":"            String localTimeFormat \u003d hour + \":\" + minute;","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"Ryan-Tan00"},"content":"            LocalTime deadlineTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"Ryan-Tan00"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"Ryan-Tan00"},"content":"                deadlineTime \u003d LocalTime.parse(localTimeFormat);","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"Ryan-Tan00"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"Ryan-Tan00"},"content":"            return new Command.DeadlineCommand(taskName, deadlineDate, deadlineTime);","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"Ryan-Tan00"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"Ryan-Tan00"},"content":"    private static Command.EventCommand parseEventTime(String taskName, LocalDate eventDate, String eventTimeAsString)","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"Ryan-Tan00"},"content":"            throws InvalidTimeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"Ryan-Tan00"},"content":"        if (eventTimeAsString.length() \u003d\u003d 9) {","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"Ryan-Tan00"},"content":"            String[] splitStartEndTime \u003d eventTimeAsString.split(\"-\");","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"Ryan-Tan00"},"content":"            if (splitStartEndTime.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"Ryan-Tan00"},"content":"                LocalTime eventStartTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"Ryan-Tan00"},"content":"                LocalTime eventEndTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"Ryan-Tan00"},"content":"                // Changing to LocalTime format","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"Ryan-Tan00"},"content":"                for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"Ryan-Tan00"},"content":"                    String eventTime \u003d splitStartEndTime[i];","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"Ryan-Tan00"},"content":"                    String hour \u003d eventTime.substring(0, 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"Ryan-Tan00"},"content":"                    String minute \u003d eventTime.substring(2);","lastModifiedDate":"2022-08-31"},{"lineNumber":126,"author":{"gitId":"Ryan-Tan00"},"content":"                    String localTimeFormat \u003d hour + \":\" + minute;","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"Ryan-Tan00"},"content":"                    splitStartEndTime[i] \u003d localTimeFormat;","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":129,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"Ryan-Tan00"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":131,"author":{"gitId":"Ryan-Tan00"},"content":"                    eventStartTime \u003d LocalTime.parse(splitStartEndTime[0]);","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"Ryan-Tan00"},"content":"                    eventEndTime \u003d LocalTime.parse(splitStartEndTime[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"Ryan-Tan00"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":134,"author":{"gitId":"Ryan-Tan00"},"content":"                    throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":136,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":137,"author":{"gitId":"Ryan-Tan00"},"content":"                return new Command.EventCommand(taskName, eventDate, eventStartTime, eventEndTime);","lastModifiedDate":"2022-08-31"},{"lineNumber":138,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":139,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"Ryan-Tan00"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":142,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":144,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":145,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":146,"author":{"gitId":"Ryan-Tan00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":147,"author":{"gitId":"Ryan-Tan00"},"content":"     * Parses the command given to return a Command object encapsulating the command just given.","lastModifiedDate":"2022-08-31"},{"lineNumber":148,"author":{"gitId":"Ryan-Tan00"},"content":"     * The Command object can then be resolved to execute the programme.","lastModifiedDate":"2022-08-31"},{"lineNumber":149,"author":{"gitId":"Ryan-Tan00"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":150,"author":{"gitId":"Ryan-Tan00"},"content":"     * @param command The command given.","lastModifiedDate":"2022-08-31"},{"lineNumber":151,"author":{"gitId":"Ryan-Tan00"},"content":"     * @return The corresponding Command object that encapsulates the command given.","lastModifiedDate":"2022-08-31"},{"lineNumber":152,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws EmptyTaskNameException If there was a command with no task name given.","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws EmptyTimingException If there was no date and time given for a deadline or event task.","lastModifiedDate":"2022-08-31"},{"lineNumber":154,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidDateException If there was a date inputted that does not follow the format or does not exist.","lastModifiedDate":"2022-08-31"},{"lineNumber":155,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidFormattingException If there was a command inputted that did not follow the format.","lastModifiedDate":"2022-08-31"},{"lineNumber":156,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws InvalidTimeException If there was a time inputted that was not a 4 digit 24-hour time.","lastModifiedDate":"2022-08-31"},{"lineNumber":157,"author":{"gitId":"Ryan-Tan00"},"content":"     * @throws UnknownCommandException If a command type was unrecognised.","lastModifiedDate":"2022-08-31"},{"lineNumber":158,"author":{"gitId":"Ryan-Tan00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":159,"author":{"gitId":"Ryan-Tan00"},"content":"    public static Command parse(String command) throws EmptyTaskNameException, EmptyTimingException,","lastModifiedDate":"2022-08-31"},{"lineNumber":160,"author":{"gitId":"Ryan-Tan00"},"content":"            InvalidDateException, InvalidFormattingException, InvalidTimeException, UnknownCommandException {","lastModifiedDate":"2022-08-31"},{"lineNumber":161,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] commandSplit \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":162,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":163,"author":{"gitId":"Ryan-Tan00"},"content":"        String commandType \u003d commandSplit[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":164,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":165,"author":{"gitId":"Ryan-Tan00"},"content":"        switch (commandType) {","lastModifiedDate":"2022-08-31"},{"lineNumber":166,"author":{"gitId":"Ryan-Tan00"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-31"},{"lineNumber":167,"author":{"gitId":"Ryan-Tan00"},"content":"        case \"list\":","lastModifiedDate":"2022-08-31"},{"lineNumber":168,"author":{"gitId":"Ryan-Tan00"},"content":"            if (commandSplit.length \u003d\u003d 2) { // Should only have \"bye\" or \"list\"","lastModifiedDate":"2022-08-31"},{"lineNumber":169,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2022-08-31"},{"lineNumber":170,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":171,"author":{"gitId":"Ryan-Tan00"},"content":"                return new Command.SingleWordCommand(CommandType.valueOf(commandType.toUpperCase()));","lastModifiedDate":"2022-08-31"},{"lineNumber":172,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":173,"author":{"gitId":"Ryan-Tan00"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-31"},{"lineNumber":174,"author":{"gitId":"Ryan-Tan00"},"content":"            if (commandSplit.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":175,"author":{"gitId":"Ryan-Tan00"},"content":"                return new Command.NonTimedTaskCommand(commandSplit[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":176,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":177,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new EmptyTaskNameException(CommandType.TODO);","lastModifiedDate":"2022-08-31"},{"lineNumber":178,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":179,"author":{"gitId":"Ryan-Tan00"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-31"},{"lineNumber":180,"author":{"gitId":"Ryan-Tan00"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-31"},{"lineNumber":181,"author":{"gitId":"Ryan-Tan00"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-31"},{"lineNumber":182,"author":{"gitId":"Ryan-Tan00"},"content":"            if (commandSplit.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":183,"author":{"gitId":"Ryan-Tan00"},"content":"                try {","lastModifiedDate":"2022-08-31"},{"lineNumber":184,"author":{"gitId":"Ryan-Tan00"},"content":"                    int taskNumber \u003d Integer.parseInt(commandSplit[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":185,"author":{"gitId":"Ryan-Tan00"},"content":"                    return new Command.NumberedCommand(CommandType.valueOf(commandType.toUpperCase()), taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":186,"author":{"gitId":"Ryan-Tan00"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":187,"author":{"gitId":"Ryan-Tan00"},"content":"                    throw new NumberFormatException(\"Write properly leh. Your number format is wrong.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":188,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":189,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":190,"author":{"gitId":"Ryan-Tan00"},"content":"                throw new EmptyTaskNameException(CommandType.valueOf(commandType.toUpperCase()));","lastModifiedDate":"2022-08-31"},{"lineNumber":191,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":192,"author":{"gitId":"Ryan-Tan00"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-31"},{"lineNumber":193,"author":{"gitId":"Ryan-Tan00"},"content":"        case \"event\":","lastModifiedDate":"2022-08-31"},{"lineNumber":194,"author":{"gitId":"Ryan-Tan00"},"content":"            if (commandSplit.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-31"},{"lineNumber":195,"author":{"gitId":"Ryan-Tan00"},"content":"                return parseTimedTaskCommand(CommandType.valueOf(commandType.toUpperCase()), commandSplit[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":196,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":197,"author":{"gitId":"Ryan-Tan00"},"content":"                if (commandType.equals(\"deadline\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":198,"author":{"gitId":"Ryan-Tan00"},"content":"                    throw new EmptyTaskNameException(CommandType.DEADLINE);","lastModifiedDate":"2022-08-31"},{"lineNumber":199,"author":{"gitId":"Ryan-Tan00"},"content":"                } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":200,"author":{"gitId":"Ryan-Tan00"},"content":"                    throw new EmptyTaskNameException(CommandType.EVENT);","lastModifiedDate":"2022-08-31"},{"lineNumber":201,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":202,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":203,"author":{"gitId":"Ryan-Tan00"},"content":"        default:","lastModifiedDate":"2022-08-31"},{"lineNumber":204,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2022-08-31"},{"lineNumber":205,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":206,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":207,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":207}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"public class Storage {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    private final Path storagePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    public Storage(Path storagePath) {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        this.storagePath \u003d storagePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    public Path getPath() {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"        return this.storagePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"    public void addTask(String taskDescription) {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"            Files.writeString(storagePath, taskDescription, StandardOpenOption.APPEND);","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    public void update(String[] taskDescriptionArray) {","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"        StringBuilder newTaskListText \u003d new StringBuilder();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"        for (String task: taskDescriptionArray) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"            newTaskListText.append(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"            Files.writeString(this.storagePath, newTaskListText.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":38}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"    boolean finished \u003d false;","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"    final String taskName;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"    public void setFinished() {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"        this.finished \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    public void setUnfinished() {","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"        this.finished \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"        String completed \u003d this.finished ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"        return completed + this.taskName;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    public abstract String getStorageDescription();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        public ToDo(String taskName) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"            super(taskName);","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStatus() {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"            return \"[T]\" + super.getStatus();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStorageDescription() {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"            String finishedStatus \u003d this.finished ? \"finished\" : \"unfinished\";","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"            return \"[T], \" + finishedStatus + \", \" + this.taskName + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":40}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"public class TaskList {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    private ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"    public void parseTaskListText() {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(this.storage.getPath());","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"            String nextLine \u003d reader.readLine();","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"            Task nextTask;","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"            while (nextLine !\u003d null) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"                String[] taskDescription \u003d nextLine.split(\", \");","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"                boolean isFinished \u003d taskDescription[1].equals(\"finished\");","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"                String taskName \u003d taskDescription[2];","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"                if (taskDescription[0].equals(\"[T]\")) { // Todo task","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"                    nextTask \u003d new Task.ToDo(taskName);","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"                } else { // Timed task","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"                    String dateAsString \u003d taskDescription[3];","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"                    LocalDate date \u003d LocalDate.parse(dateAsString);","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"                    if (taskDescription[0].equals(\"[D]\")) { // Deadline task","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"                        String deadlineTimeAsString \u003d taskDescription[4];","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"                        LocalTime deadlineTime \u003d deadlineTimeAsString.equals(\"no time given\")","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"                                ? null","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"                                : LocalTime.parse(deadlineTimeAsString);","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"                        nextTask \u003d new TimedTask.Deadline(taskName, date, deadlineTime);","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"                    } else { // Event task","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"                        LocalTime eventStartTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"                        LocalTime eventEndTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"                        if (taskDescription[4].equals(\"no time given\")) {","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"                            eventStartTime \u003d null;","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"                            eventEndTime \u003d null;","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"                        } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"                            eventStartTime \u003d LocalTime.parse(taskDescription[4]);","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"                            eventEndTime \u003d LocalTime.parse(taskDescription[5]);","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"                        }","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"                        nextTask \u003d new TimedTask.Event(taskName, date, eventStartTime, eventEndTime);","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"                    }","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"                if (isFinished) {","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"                    nextTask.setFinished();","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"                }","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"                this.taskArrayList.add(nextTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"                nextLine \u003d reader.readLine();","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"            this.taskArrayList \u003d new ArrayList\u003c\u003e(); // Creates an empty taskArrayList if there is an error","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"        return this.taskArrayList.size();","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"        taskArrayList.add(newTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"        String taskDescription \u003d newTask.getStorageDescription();","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"        this.storage.addTask(taskDescription);","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"    public void checkValidTaskNumber(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.getLength()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"            throw new IllegalArgumentException(\"The task number you put is wrong bro. The task must exist for \" +","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"                    \"you to delete it.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"Ryan-Tan00"},"content":"    public Task deleteTask(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"Ryan-Tan00"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"Ryan-Tan00"},"content":"        Task removedTask \u003d taskArrayList.remove(taskNumber - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"Ryan-Tan00"},"content":"        updateStorage();","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"Ryan-Tan00"},"content":"        return removedTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"Ryan-Tan00"},"content":"    public Task markTask(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"Ryan-Tan00"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"Ryan-Tan00"},"content":"        Task selectedTask \u003d taskArrayList.get(taskNumber - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"Ryan-Tan00"},"content":"        selectedTask.setFinished();","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"Ryan-Tan00"},"content":"        updateStorage();","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"Ryan-Tan00"},"content":"        return selectedTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"Ryan-Tan00"},"content":"    public Task unmarkTask(int taskNumber) throws IllegalArgumentException {","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"Ryan-Tan00"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"Ryan-Tan00"},"content":"        Task selectedTask \u003d this.taskArrayList.get(taskNumber - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"Ryan-Tan00"},"content":"        selectedTask.setUnfinished();","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"Ryan-Tan00"},"content":"        updateStorage();","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"Ryan-Tan00"},"content":"        return selectedTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"Ryan-Tan00"},"content":"    private void updateStorage() {","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"Ryan-Tan00"},"content":"        int taskListLength \u003d this.getLength();","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"Ryan-Tan00"},"content":"        String[] taskDescriptionArray \u003d new String[taskListLength];","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"Ryan-Tan00"},"content":"        for (int i \u003d 0; i \u003c taskListLength; i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"Ryan-Tan00"},"content":"            taskDescriptionArray[i] \u003d this.taskArrayList.get(i).getStorageDescription();","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"Ryan-Tan00"},"content":"        this.storage.update(taskDescriptionArray);","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"Ryan-Tan00"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"Ryan-Tan00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"Ryan-Tan00"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"Ryan-Tan00"},"content":"        for (int i \u003d 0; i \u003c this.getLength(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":126,"author":{"gitId":"Ryan-Tan00"},"content":"            Task task \u003d this.taskArrayList.get(i);","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"Ryan-Tan00"},"content":"            String taskNumber \u003d String.valueOf(i + 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"Ryan-Tan00"},"content":"            output.append(taskNumber).append(\".\").append(task.getStatus()).append(\"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":129,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"Ryan-Tan00"},"content":"        return output.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":131,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":132,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Ryan-Tan00":132}},{"path":"src/main/java/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"public abstract class TimedTask extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"    LocalDate date;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"    public TimedTask(String taskName, LocalDate date) {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        super(taskName);","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"    String convertLocalDate() {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"        int day \u003d date.getDayOfMonth();","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"        String month \u003d date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH);","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"        int year \u003d date.getYear();","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"        return day + \" \" + month + \" \" + year;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class Deadline extends TimedTask {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime deadlineTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        public Deadline(String taskName, LocalDate deadlineDate, LocalTime deadlineTime) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"            super(taskName, deadlineDate);","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"            this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStatus() {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"            String deadlineDate \u003d convertLocalDate();","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"            String dateAndTime \u003d this.deadlineTime !\u003d null","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"                                 ? deadlineDate + \" \" + this.deadlineTime","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"                                 : deadlineDate;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"            return \"[D]\" + super.getStatus() + \" (by: \" + dateAndTime + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStorageDescription() {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"            String finishedStatus \u003d super.finished ? \"finished\" : \"unfinished\";","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"            if (this.deadlineTime \u003d\u003d null) {","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"                return \"[D], \" + finishedStatus + \", \" + this.taskName + \", \" + this.date","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"                        + \", no time given\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"                return \"[D], \" + finishedStatus + \", \" + this.taskName + \", \" + this.date + \", \"","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"                        + this.deadlineTime + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"    public static class Event extends TimedTask {","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime eventStartTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"        LocalTime eventEndTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"Ryan-Tan00"},"content":"        public Event(String taskName, LocalDate eventDate, LocalTime eventStartTime, LocalTime eventEndTime) {","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"Ryan-Tan00"},"content":"            super(taskName, eventDate);","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"Ryan-Tan00"},"content":"            this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Ryan-Tan00"},"content":"            this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStatus() {","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"Ryan-Tan00"},"content":"            String eventDate \u003d convertLocalDate();","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"Ryan-Tan00"},"content":"            String dateAndTime \u003d this.eventStartTime !\u003d null","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"Ryan-Tan00"},"content":"                                 ? eventDate + \" \" + eventStartTime + \"-\" + eventEndTime","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"Ryan-Tan00"},"content":"                                 : eventDate;","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"Ryan-Tan00"},"content":"            return \"[E]\" + super.getStatus() + \" (at: \" + dateAndTime + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"Ryan-Tan00"},"content":"        @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"Ryan-Tan00"},"content":"        public String getStorageDescription() {","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"Ryan-Tan00"},"content":"            String finishedStatus \u003d super.finished ? \"finished\" : \"unfinished\";","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"Ryan-Tan00"},"content":"            if (this.eventStartTime \u003d\u003d null) {","lastModifiedDate":"2022-08-30"},{"lineNumber":78,"author":{"gitId":"Ryan-Tan00"},"content":"                return \"[D], \" + finishedStatus + \", \" + this.taskName + \", \" + this.date","lastModifiedDate":"2022-08-30"},{"lineNumber":79,"author":{"gitId":"Ryan-Tan00"},"content":"                        + \", no time given\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"Ryan-Tan00"},"content":"            } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"Ryan-Tan00"},"content":"                return \"[D], \" + finishedStatus + \", \" + this.taskName + \", \" + this.date + \", \"","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"Ryan-Tan00"},"content":"                        + this.eventStartTime + \", \" + this.eventEndTime + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"Ryan-Tan00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"Ryan-Tan00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":86}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":" * Prints out","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"public class Ui {","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"    private static final String LINE_BREAK \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void printMessageForStartingUp() {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"Sup bro! My name is Candice.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"I\u0027m here to help you track your tasks!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void printMessageForShuttingDown() {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"Bye bro. See you soon.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void printMessageForAddTask(Task newTask, TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"I gotchu fam. Your task has been added:\");","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"  \" + newTask.getStatus());","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"You have \" + taskList.getLength() + \" task(s). Stop procrastinating bro.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void printMessageForDeleteTask(Task removedTask, TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"I hope you\u0027re not deleting this just to avoid work:\");","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"  \" + removedTask.getStatus());","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"You have \" + taskList.getLength() + \" task(s). Stop procrastinating bro.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void printMessageForMarkTask(Task selectedTask) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"Nice one lah, finally doing your work.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(selectedTask.getStatus());","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void printMessageForUnmarkTask(Task selectedTask) {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"What happened bro.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(selectedTask.getStatus());","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"Ryan-Tan00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"Ryan-Tan00"},"content":"    public static void printMessageForList(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(\"Here are your tasks. You better start now:\");","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(taskList.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"Ryan-Tan00"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":56}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"        super(\"I have no clue what you\u0027re trying to do bro.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"Ryan-Tan00":5}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"[T] | unfinished | read book","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"[D] | unfinished | return book | Sunday","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"[E] | unfinished | kahoot night | Next Thursday 9:00-11:00pm","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Ryan-Tan00":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ryan-Tan00"},"content":"todo read book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 1/1/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 2/2/2022 2000","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 3/3/2022 1800-2000","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 12/12/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Ryan-Tan00"},"content":"list","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Ryan-Tan00"},"content":"todo","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Ryan-Tan00"},"content":"deadline","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Ryan-Tan00"},"content":"event","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Ryan-Tan00"},"content":"mark","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Ryan-Tan00"},"content":"unmark","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Ryan-Tan00"},"content":"delete","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Ryan-Tan00"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Ryan-Tan00"},"content":"mark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Ryan-Tan00"},"content":"mark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Ryan-Tan00"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Ryan-Tan00"},"content":"unmark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"Ryan-Tan00"},"content":"unmark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Ryan-Tan00"},"content":"unmark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Ryan-Tan00"},"content":"mark 0","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Ryan-Tan00"},"content":"mark 6","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Ryan-Tan00"},"content":"mark -1","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Ryan-Tan00"},"content":"mark 4a","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Ryan-Tan00"},"content":"unmark 4a","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Ryan-Tan00"},"content":"delete 4a","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Ryan-Tan00"},"content":"help","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /at","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /at Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /at 12/12/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /by Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 32/1/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 32/13/2022","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 1/1/2022 2400","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Ryan-Tan00"},"content":"deadline return book /by 1/1/2022 2400 1000","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 1/1/2022 1400","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 1/1/2022 1400-","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Ryan-Tan00"},"content":"event kahoot night /at 1/1/2022 1400/2000","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Ryan-Tan00"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Ryan-Tan00":42}}]

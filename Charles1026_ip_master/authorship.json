[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"# duke.Duke project template","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Charles1026":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Charles1026":1,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":" * Chatbot main.","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    private void run() {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"        TaskList taskList \u003d new TaskList(ui);","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"        boolean breakLoop \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"        while(!breakLoop) {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"            String rawInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"            Command command \u003d parser.parse(rawInput);","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"            switch(command.getCommand()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"            case UNKNOWN:","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"                ui.printDefaultMessage();","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"            case BYE:","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"                breakLoop \u003d true;","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"                ui.printGoodbyeMessage();","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"            case HELP:","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"                ui.printHelpMessage();","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"                break;","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"            case ERROR:","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"                ui.printErrorMessage(command.getArguments()[0]);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"                break;","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"            default:","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"                String response \u003d taskList.executeTask(command);","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"                if(response !\u003d null) {","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"                    System.out.println(response);","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"        taskList.destructor();","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"     * Run the chatbot.","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"     * @param args This is useless.","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"        duke.run();","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Charles1026":55,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import duke.commands.CommandsList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":" * Parser to parse the text inputs from the user into Command objects.","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"public class Parser {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"     * Parse the text inputs from the user into Command objects.","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"     * @param rawInput Takes in the raw String provided by the user.","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    public Command parse(String rawInput) {","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"        String[] input \u003d rawInput.trim().split(\" \", 2);","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"        switch (input[0].trim()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"        case \"list\":","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"            return new Command(CommandsList.LIST);","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"            try {","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.TODO, input[1].trim());","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.ERROR,","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"                        \"Whoops! todo needs a description of the task Dattebayo!\\n    \u0027todo \u003cTask\u003e\u0027\");","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"            try {","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"                String[] splitArgs \u003d input[1].split(\" /by \", 2);","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.DEADLINE, splitArgs);","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.ERROR, \"Whoops! deadline needs a description of the task and due date Dattebayo!\" +","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"                        \"\\n    \u0027deadline \u003cTask\u003e /by \u003cDue By\u003e\u0027\");","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"        case \"event\":","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"            try {","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"                String[] splitArgs \u003d input[1].split(\" /at \", 2);","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.EVENT, splitArgs);","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.ERROR, \"Whoops! event needs a description of the task and time Dattebayo!\" +","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"                        \"\\n    \u0027event \u003cTask\u003e /by \u003cTime\u003e\u0027\");","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"            try {","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.MARK, input[1].trim());","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.ERROR, \"Whoops! it seems you your index is not an integer Dattebayo!\" +","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"                        \"\\n\u0027mark \u003cIndex\u003e\u0027\");","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.ERROR, \"Whoops! mark needs the index of the item Dattebayo!\" +","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"                        \"\\n    \u0027mark \u003cIndex\u003e\u0027\");","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"            try {","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.UNMARK, input[1].trim());","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.ERROR, \"Whoops! unmark needs the index of the item Dattebayo!\" +","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"                        \"\\n    \u0027unmark \u003cIndex\u003e\u0027\");","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"            try {","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.DELETE, input[1].trim());","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.ERROR, \"Whoops! delete needs the index of the item Dattebayo!\" +","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"                        \"\\n    \u0027delete \u003cIndex\u003e\u0027\");","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"        case \"find\":","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"            try {","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.FIND, input[1].trim());","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"                String response \u003d \"Whoops! find needs a parameter to search for \" +","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"                        \"\\n    \u0027find \u003cParameter\u003e\u0027\";","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"                return new Command(CommandsList.ERROR, response);","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"            return new Command(CommandsList.BYE);","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"        case \"help\":","lastModifiedDate":"2022-09-07"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"            return new Command(CommandsList.HELP);","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"        return new Command(CommandsList.UNKNOWN);","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":93}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import duke.items.Deadline;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import duke.items.Event;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import duke.items.Item;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import duke.items.ToDo;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import org.json.simple.parser.JSONParser;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import org.json.simple.parser.ParseException;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":" * Object to handle storing and loading of user\u0027s list of tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"public class Storage {","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    private String filePath \u003d \"/src/main/data/items.json\";","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"     * Creates an object to store \u0026 load user\u0027s items.","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    public Storage() {","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"        String currDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"        this.filePath \u003d Paths.get(currDir + this.filePath).toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"     * Function to load items from file.","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"     * @return ArrayList of items loaded from the file.","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"    protected ArrayList\u003cItem\u003e loadItems(){","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"        JSONArray itemsJson;","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"        ArrayList\u003cItem\u003e storedItems \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"        try (FileReader reader \u003d new FileReader(this.filePath)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"            JSONParser parser \u003d new JSONParser();","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"            itemsJson \u003d (JSONArray) parser.parse(reader);","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"            itemsJson.forEach(obj -\u003e this.parseJsonToItem((JSONObject) obj, storedItems));","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"            System.out.println(\"Save File does not exist, starting with a new list.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"            System.out.println(\"Error whilst opening file, please try again later.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"            System.out.println(\"Error loading save file, save may be corrupted, please try again later.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"        return storedItems;","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"    private void parseJsonToItem(JSONObject jsonObj, ArrayList\u003cItem\u003e storedItems) {","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"        String itemType \u003d (String) jsonObj.get(\"itemType\");","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"        String name \u003d (String) jsonObj.get(\"name\");","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"        boolean isDone \u003d (Boolean) jsonObj.get(\"isDone\");","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"        String time \u003d (String) jsonObj.get(\"time\");","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"            switch (itemType) {","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"                case \"[D]\":","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"                    storedItems.add(new Deadline(name, time, isDone));","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"                    break;","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"                case \"[E]\":","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"                    storedItems.add(new Event(name, time, isDone));","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"                    break;","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"                case \"[T]\":","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"                    storedItems.add(new ToDo(name, isDone));","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"                    break;","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"            System.out.println(\"Failed to load items from save, file may be corrupted, please try again later.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"     * Function to save items from an Arraylist into file.","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"     * @param storedItems ArrayList of items from the user to be stored.","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"     * @return","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"    protected boolean saveItems(ArrayList\u003cItem\u003e storedItems) {","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"        JSONArray jsonArray \u003d new JSONArray();","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"        storedItems.forEach(item -\u003e this.parseItemToJson(item, jsonArray));","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(this.filePath)){","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"            fileWriter.write(jsonArray.toJSONString());","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"            System.out.println(\"Error Writing to File.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"            return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"        return true;","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"    private void parseItemToJson(Item item, JSONArray jsonArray) {","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"        JSONObject jsonItem \u003d new JSONObject();","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"        jsonItem.put(\"name\", item.getName());","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"        jsonItem.put(\"isDone\", item.isDone());","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"        String itemType \u003d item.getItemType().toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"        jsonItem.put(\"itemType\", itemType);","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"        if (item.getDateTimeString() !\u003d null) {","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"Charles1026"},"content":"            jsonItem.put(\"time\", item.getDateTimeString());","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"        jsonArray.add(jsonItem);","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"Charles1026":108}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import duke.items.Deadline;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import duke.items.Event;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import duke.items.Item;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import duke.items.ToDo;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":" * Object that takes in a Command Object then creates and stores the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"public class TaskList {","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    private final ArrayList\u003cItem\u003e storedItems;","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    private final Storage saveManager \u003d new Storage();","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"    private final UI ui;","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"     * Creates a Tasklist Object.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"     * @param ui UI Object to display messages to user.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"    public TaskList(UI ui) {","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"        this.storedItems \u003d this.saveManager.loadItems();","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"     * Saves the items in the list of tasks to file upon closing of the app.","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    public void destructor() {","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"        this.saveManager.saveItems(this.storedItems);","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"     * Creates the tasks from a Command Object.","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"     * @param command Command to turn into a task.","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"     * @return A String for the UI object to print.","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    public String executeTask(Command command) {","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"        String[] arguments \u003d command.getArguments();","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"        switch (command.getCommand()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"        case TODO:","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"            return addToDo(command.getArguments()[0]);","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"            return addDeadline(arguments[0], arguments[1]);","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"        case EVENT:","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"            return addEvent(arguments[0], arguments[1]);","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"        case LIST:","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"            return getList();","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"        case MARK:","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"            return markItem(arguments[0]);","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"        case UNMARK:","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"            return unMarkItem(arguments[0]);","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"        case DELETE:","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"            return deleteItem(arguments[0]);","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"        case FIND:","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"            return findString(arguments[0]);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"        return null;","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"    private String addItem(Item item) {","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"        this.storedItems.add(item);","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"        return \"    Alright! I\u0027ve added it to our list:\\n      \" + item.toString()","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"                + \"\\n    Now we have \" + this.storedItems.size() + \" tasks in our list Dattebayo!\";","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"    private String addToDo(String item) {","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"        ToDo todo \u003d new ToDo(item);","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"        return this.addItem(todo);","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"    private String addDeadline(String item, String due) {","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"            Deadline deadline \u003d new Deadline(item, due);","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"            return this.addItem(deadline);","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"            ui.printErrorMessage(\"Error Parsing Date Time Info, duke.items.Item not added, \" +","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"                    \"please use this format /by YYYY-MM-DD HH:MM (omit time if not necessary)\");","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"            return null;","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"    private String addEvent(String item, String at) {","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"            Event event \u003d new Event(item, at);","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"            return this.addItem(event);","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"            ui.printErrorMessage(\"Error Parsing Date Time Info, duke.items.Item not added, \" +","lastModifiedDate":"2022-09-04"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"                    \"please use this format /at YYYY-MM-DD HH:MM (omit time if necessary)\");","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"            return null;","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"    private String getList() {","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"        if (this.storedItems.isEmpty()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"            return \"    The list is currently empty Dattebayo!\";","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"        StringBuilder list \u003d new StringBuilder(\"    Here\u0027s the list you asked for Dattebayo:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"        for (int count \u003d 0; count \u003c this.storedItems.size(); count++){","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"Charles1026"},"content":"            list.append(\"\\n\").append(\"    \").append(count + 1).append(\".\").append(storedItems.get(count).toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"        return list.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"    private String markItem(String strIndex) {","lastModifiedDate":"2022-09-04"},{"lineNumber":110,"author":{"gitId":"Charles1026"},"content":"        int index \u003d this.string2Int(strIndex) - 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"        if (index \u003e\u003d this.storedItems.size() || index \u003c 0) {","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"Charles1026"},"content":"            return \"Whoops it appears you entered an invalid index, there are \" + this.storedItems.size()","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"Charles1026"},"content":"                    + \" items in the list Dattebayo!\";","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"Charles1026"},"content":"        this.storedItems.get(index).setDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"Charles1026"},"content":"        return \"    Alright! I\u0027ve marked this task as done Dattebayo:\\n  \" + this.storedItems.get(index).toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"Charles1026"},"content":"    private String unMarkItem(String strIndex) {","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"Charles1026"},"content":"        int index \u003d this.string2Int(strIndex) - 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":121,"author":{"gitId":"Charles1026"},"content":"        if (index \u003e\u003d this.storedItems.size() || index \u003c 0) {","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"Charles1026"},"content":"            ui.printErrorMessage(\"Whoops it appears you entered an invalid index, there are \" + this.storedItems.size()","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"Charles1026"},"content":"                    + \" items in the list Dattebayo!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":124,"author":{"gitId":"Charles1026"},"content":"            return null;","lastModifiedDate":"2022-09-04"},{"lineNumber":125,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"Charles1026"},"content":"        this.storedItems.get(index).setUnDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"Charles1026"},"content":"        return \"    Alright! I\u0027ve marked this task as not done yet Dattebayo: \\n  \"","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"Charles1026"},"content":"                + this.storedItems.get(index).toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":132,"author":{"gitId":"Charles1026"},"content":"    private String deleteItem(String strIndex) {","lastModifiedDate":"2022-09-04"},{"lineNumber":133,"author":{"gitId":"Charles1026"},"content":"        int index \u003d this.string2Int(strIndex) - 1;","lastModifiedDate":"2022-09-04"},{"lineNumber":134,"author":{"gitId":"Charles1026"},"content":"        if (index \u003e\u003d this.storedItems.size() || index \u003c 0) {","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"Charles1026"},"content":"            return \"Whoops it appears you entered an invalid index, there are \" + this.storedItems.size()","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"Charles1026"},"content":"                    + \" items in the list Dattebayo!\";","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"Charles1026"},"content":"        Item item \u003d this.storedItems.get(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":139,"author":{"gitId":"Charles1026"},"content":"        this.storedItems.remove(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":140,"author":{"gitId":"Charles1026"},"content":"        return \"    Alright! I\u0027ve removed this task Dattebayo: \\n  \" + item.toString()","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"Charles1026"},"content":"                + \"\\n    Now we have \" + this.storedItems.size() + \" tasks in our list Dattebayo!\";","lastModifiedDate":"2022-08-19"},{"lineNumber":142,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"Charles1026"},"content":"    private int string2Int(String input) {","lastModifiedDate":"2022-09-04"},{"lineNumber":145,"author":{"gitId":"Charles1026"},"content":"        try{","lastModifiedDate":"2022-09-04"},{"lineNumber":146,"author":{"gitId":"Charles1026"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":147,"author":{"gitId":"Charles1026"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":148,"author":{"gitId":"Charles1026"},"content":"            ui.printErrorMessage(\"Whoops! it seems you your index is not an integer Dattebayo!\" +","lastModifiedDate":"2022-09-04"},{"lineNumber":149,"author":{"gitId":"Charles1026"},"content":"                    \"\\n\u0027delete \u003cIndex\u003e\u0027\");","lastModifiedDate":"2022-09-04"},{"lineNumber":150,"author":{"gitId":"Charles1026"},"content":"            return -1;","lastModifiedDate":"2022-09-04"},{"lineNumber":151,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":152,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":154,"author":{"gitId":"Charles1026"},"content":"    private String findString(String searchParam) {","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"Charles1026"},"content":"        if (this.storedItems.isEmpty()) {","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"Charles1026"},"content":"            return \"    The list is currently empty Dattebayo!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"Charles1026"},"content":"        StringBuilder strBuilder \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"Charles1026"},"content":"                new StringBuilder(\"    Here\u0027s the search results for \u0027\" + searchParam + \"\u0027 Dattebayo:\");","lastModifiedDate":"2022-09-08"},{"lineNumber":160,"author":{"gitId":"Charles1026"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":161,"author":{"gitId":"Charles1026"},"content":"        boolean min1ItemFound \u003d false;","lastModifiedDate":"2022-09-08"},{"lineNumber":162,"author":{"gitId":"Charles1026"},"content":"        for (Item item : this.storedItems) {","lastModifiedDate":"2022-09-08"},{"lineNumber":163,"author":{"gitId":"Charles1026"},"content":"            String name \u003d item.getName();","lastModifiedDate":"2022-09-08"},{"lineNumber":164,"author":{"gitId":"Charles1026"},"content":"            if (name.contains(searchParam)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":165,"author":{"gitId":"Charles1026"},"content":"                strBuilder.append(\"\\n\").append(\"    \").append(count).append(\".\").append(item);","lastModifiedDate":"2022-09-08"},{"lineNumber":166,"author":{"gitId":"Charles1026"},"content":"                min1ItemFound \u003d true;","lastModifiedDate":"2022-09-08"},{"lineNumber":167,"author":{"gitId":"Charles1026"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":168,"author":{"gitId":"Charles1026"},"content":"            count++;","lastModifiedDate":"2022-09-08"},{"lineNumber":169,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":170,"author":{"gitId":"Charles1026"},"content":"        return min1ItemFound ? strBuilder.toString() :","lastModifiedDate":"2022-09-08"},{"lineNumber":171,"author":{"gitId":"Charles1026"},"content":"                \"    Sorry there were no results for \u0027\" + searchParam + \"\u0027 Dattebayo:\";","lastModifiedDate":"2022-09-08"},{"lineNumber":172,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":173,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":174,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Charles1026":174}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":" * UI Object to print expected UI feedback.","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"public class UI {","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"    private final String lineBreak \u003d \"-\".repeat(20);","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"        System.out.println(\"Hello! I\u0027m Naruto and one day I will be Hokage! \\nWhat can i do for you today Dattebayo?\");","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"     * Prints the message when a command is not understood.","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"    public void printDefaultMessage() {","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"        System.out.println(\"I have no clue whats going on here, but I\u0027ll act like i do Dattebayo, \" +","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"                \"use help to view the available commands desu.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"     * Prints the specified error message.","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"     * @param description String describing the error.","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"    public void printErrorMessage(String description) {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"        System.out.println(\"    Aw Shucks: \" + description);","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"     * Prints the list of commands a user can use.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"        System.out.println(\"    Hi are you in need of help? These are the commands you can use Dattebayo:\" +","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"                \"\\n      todo \u003cTask\u003e: add a task you need to do\" +","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"                \"\\n      deadline \u003cTask\u003e /by\u003cduke.items.Deadline\u003e: add a deadline you need to complete\" +","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"                \"\\n      event \u003cTask\u003e /at\u003cTime\u003e: add an event you need to attend\" +","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"                \"\\n      mark \u003cindex\u003e: mark an task as completed by index\" +","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"                \"\\n      unmark \u003cindex\u003e: unmark a completed task by index\" +","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"                \"\\n      list: view all you tasks by index\" +","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"                \"\\n      delete \u003cindex\u003e: remove a specific task by index\");","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"        System.out.println(\"    Looks like this is the end for now, till we meet again! Ja Ne!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":52}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke.commands;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":" * Command object to store a command and its arguments.","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"public class Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"    private final CommandsList command;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"    private final String[] arguments;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"     * Constructs a Command with an empty argument list.","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"     * @param command Type of command constructed, based on the CommandsList enum.","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    public Command(CommandsList command) {","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"        this.arguments \u003d null;","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"     * Constructs a Command with a single argument.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"     * @param command Type of command constructed, based on the CommandsList enum.","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"     * @param argument The argument for the command as a String.","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"    public Command(CommandsList command, String argument) {","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"        this.arguments \u003d new String[]{argument};","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"     * Constructs a Command with an argument list.","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"     * @param command Type of command constructed, based on the CommandsList enum.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"     * @param arguments The list arguments for the command as a String array.","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"    public Command(CommandsList command, String[] arguments) {","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"    public CommandsList getCommand() {","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"        return command;","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"    public String[] getArguments() {","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"        return this.arguments;","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"        if (!(obj instanceof Command)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"            return false;","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"        Command otherCommand \u003d (Command) obj;","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"        return otherCommand.getCommand().equals(this.command) \u0026\u0026","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"                Arrays.equals(otherCommand.getArguments(), this.arguments);","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":58}},{"path":"src/main/java/duke/commands/CommandsList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke.commands;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":" * Enum to describe the list of commands available.","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"public enum CommandsList {","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"    TODO,","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"    DEADLINE,","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"    EVENT,","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"    MARK,","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"    UNMARK,","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    LIST,","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"    DELETE,","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    FIND,","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    BYE,","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    HELP,","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    UNKNOWN,","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"    ERROR","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":19}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":4}},{"path":"src/main/java/duke/items/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke.items;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":" * Object representing a Deadline Item.","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"public class Deadline extends Item {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"     * Create an incomplete Deadline Item.","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"     * @param name Item description.","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"     * @param dueDate When the deadline is due.","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"     * @throws DateTimeParseException If the input string for dueDate is not in correct format.","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    public Deadline(String name, String dueDate) throws DateTimeParseException {","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"        super(name, ItemTypes.DEADLINE, dueDate);","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"     * Create a Deadline Item and set its completion status.","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"     * @param name Item description.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"     * @param dueDate When the deadline is due.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"     * @throws DateTimeParseException If the input string for dueDate is not in correct format.","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"    public Deadline(String name, String dueDate, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"        super(name, isDone, ItemTypes.DEADLINE, dueDate);","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"        return this.getItemType() + super.toString() + \" (by: \" + this.getDateTimeString() + \")\";","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Charles1026":34}},{"path":"src/main/java/duke/items/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke.items;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":" * Object representing an Event Item.","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"public class Event extends Item {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"     * Create an incomplete Event Item.","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"     * @param name Item description.","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"     * @param eventTime Time of the event.","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"     * @throws DateTimeParseException If the input string for eventTime is not in correct format.","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"    public Event(String name, String eventTime) throws DateTimeParseException {","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"        super(name, ItemTypes.EVENT, eventTime);","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"     * Create an Event Item and set its completion status.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"     * @param name Item description.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"     * @param eventTime Time of the event.","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"     * @throws DateTimeParseException If the input string for eventTime is not in correct format.","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    public Event(String name, String eventTime, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"        super(name, isDone, ItemTypes.EVENT, eventTime);","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"        return this.getItemType() + super.toString() + \" (at: \" + this.getDateTimeString() + \")\";","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Charles1026":35}},{"path":"src/main/java/duke/items/Item.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke.items;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"public abstract class Item {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"    private final ItemTypes itemType;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    private boolean isTimed;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    private final String name;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"     * Creates an incomplete Item.","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"     * @param name Item description.","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"     * @param itemType Type of the item.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"     * @param time Time of the item.","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"     * @throws DateTimeParseException If the input string for time is not in correct format.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    public Item(String name, ItemTypes itemType, String time) throws DateTimeParseException {","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"        this.itemType \u003d itemType;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"        this.setLocalDateTime(time);","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"     * Create an Item and set its completion status.","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"     * @param name Item description.","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"     * @param itemType Type of the item.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"     * @param time Time of the item.","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"     * @throws DateTimeParseException If the input string for time is not in correct format.","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Charles1026"},"content":"    public Item(String name, boolean isDone, ItemTypes itemType, String time) throws DateTimeParseException {","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"Charles1026"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"Charles1026"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"Charles1026"},"content":"        this.itemType \u003d itemType;","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"Charles1026"},"content":"        this.setLocalDateTime(time);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Charles1026"},"content":"    protected LocalTime getTime() {","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Charles1026"},"content":"        return this.time !\u003d null ? isTimed ? this.time.toLocalTime() : null : null;","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Charles1026"},"content":"    protected LocalDate getDate() {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"Charles1026"},"content":"        return this.time !\u003d null ? this.time.toLocalDate() : null;","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"Charles1026"},"content":"    public String getDateTimeString() {","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"Charles1026"},"content":"        if(this.time \u003d\u003d null) {","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"Charles1026"},"content":"            return null;","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Charles1026"},"content":"        return this.getDate().toString() + ((this.getTime() !\u003d null) ? \" \" + this.getTime().toString() : \"\");","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"Charles1026"},"content":"    public ItemTypes getItemType() {","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"Charles1026"},"content":"        return this.itemType;","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"Charles1026"},"content":"    public String getName() {","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"Charles1026"},"content":"        return this.name;","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"Charles1026"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"Charles1026"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"Charles1026"},"content":"    public void setDone() {","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"Charles1026"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"Charles1026"},"content":"    public void setUnDone() {","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"Charles1026"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"Charles1026"},"content":"     * Parses the string for item time and sets it in the item.","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"Charles1026"},"content":"     * @param str input string for item time.","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"Charles1026"},"content":"     * @throws DateTimeParseException If the input string for time is not in correct format.","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"Charles1026"},"content":"    protected void setLocalDateTime(String str) throws DateTimeParseException {","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"Charles1026"},"content":"        if(str \u003d\u003d null) {","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"Charles1026"},"content":"            isTimed \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"Charles1026"},"content":"            return;","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"Charles1026"},"content":"        str \u003d str.trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"Charles1026"},"content":"        String[] splitInput \u003d str.split(\" \", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"Charles1026"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"Charles1026"},"content":"        LocalDate date \u003d LocalDate.parse(splitInput[0].trim(), dateFormatter);","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"Charles1026"},"content":"        if (splitInput.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"Charles1026"},"content":"            this.isTimed \u003d true;","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"Charles1026"},"content":"            DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"Charles1026"},"content":"            LocalTime time \u003d LocalTime.parse(splitInput[1].trim(), timeFormatter);","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"Charles1026"},"content":"            this.time \u003d date.atTime(time);","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"Charles1026"},"content":"        } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"Charles1026"},"content":"            this.isTimed \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"Charles1026"},"content":"            this.time \u003d date.atStartOfDay();","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"Charles1026"},"content":"        String done \u003d \"[X] \";","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"Charles1026"},"content":"        String unDone \u003d \"[ ] \";","lastModifiedDate":"2022-09-04"},{"lineNumber":110,"author":{"gitId":"Charles1026"},"content":"        return (this.isDone ? done : unDone) + this.name;","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Charles1026":112}},{"path":"src/main/java/duke/items/ItemTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke.items;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":" * Type of Items.","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"public enum ItemTypes {","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"    TODO,","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"    DEADLINE,","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"    EVENT;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"        switch(this) {","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"            case TODO:","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"                return \"[T]\";","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"            case DEADLINE:","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"                return \"[D]\";","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"            case EVENT:","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"                return \"[E]\";","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"        return null;","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":23}},{"path":"src/main/java/duke/items/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"package duke.items;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":" * Object representing a ToDo Item.","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"public class ToDo extends Item {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"     * Create an incomplete ToDo Item.","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"     * @param name Item description.","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"        super(name, ItemTypes.TODO, null);","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"     * Create a ToDo Item and set the completion status of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"     * @param name Item description.","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"        super(name, isDone, ItemTypes.TODO, null);","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"        return super.getItemType() + super.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Charles1026":29}},{"path":"src/test/java/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"public class CommandTest {","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":7}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"public class DukeTest {","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"    public void ToDoTest() {","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":9}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"import duke.UI;","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import duke.commands.CommandsList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"public class ParserTest {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"    public void parseToDoTest() {","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"        assertEquals(parser.parse(\"todo Help\"), new Command(CommandsList.TODO, new String[]{\"Help\"}));","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"    public void parseDeadlineTest() {","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Charles1026"},"content":"        assertEquals(parser.parse(\"deadline Help /by 2022-08-22\"),","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"Charles1026"},"content":"                new Command(CommandsList.DEADLINE, new String[]{\"Help\", \"2022-08-22\"}));","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"Charles1026"},"content":"    public void parseEventTest() {","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"Charles1026"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Charles1026"},"content":"        assertEquals(parser.parse(\"event Help /at 2022-08-22 10:49\"),","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"Charles1026"},"content":"                new Command(CommandsList.EVENT, new String[]{\"Help\", \"2022-08-22 10:49\"}));","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"Charles1026"},"content":"    public void parseEmptyTest() {","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"Charles1026"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Charles1026"},"content":"        assertEquals(parser.parse(\"\"), new Command(CommandsList.UNKNOWN));","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":35}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"import duke.UI;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"import duke.commands.CommandsList;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"public class TaskListTest {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"Charles1026"},"content":"    public void ToDoTest() {","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"Charles1026"},"content":"        TaskList taskList \u003d new TaskList(new UI());","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"Charles1026"},"content":"        Command command \u003d new Command(CommandsList.TODO, \"Hello\");","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"Charles1026"},"content":"        assertEquals(\"    Alright! I\u0027ve added it to our list:\\n      \" +","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"Charles1026"},"content":"                \"[T][ ] Hello\\n    Now we have 3 tasks in our list Dattebayo!\", taskList.executeTask(command));","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"Charles1026"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"Charles1026"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Charles1026":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Charles1026"},"content":"todo CS2100","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Charles1026"},"content":"deadline CS2103 Ass /by tonight","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Charles1026"},"content":"event CS2103 Lecture /at tomorrow 4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Charles1026"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Charles1026"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Charles1026"},"content":"unmark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Charles1026"},"content":"delete 2","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Charles1026"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Charles1026"},"content":"todo ST2334","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Charles1026"},"content":"list","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Charles1026":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Charles1026"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Charles1026":1,"-":20}}]

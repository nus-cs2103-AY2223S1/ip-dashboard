[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"checkstyle {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ConradLew"},"content":"if (hasProperty(\u0027buildScan\u0027)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ConradLew"},"content":"    buildScan {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ConradLew"},"content":"        termsOfServiceUrl \u003d \u0027https://gradle.com/terms-of-service\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ConradLew"},"content":"        termsOfServiceAgree \u003d \u0027yes\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"-":42,"ConradLew":11}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":" * Basic enum containing the list of commands accepted","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":" * by Duke.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"public enum Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"    BYE,","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"    LIST,","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"    MARK,","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"    UNMARK,","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"    TODO,","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"    DEADLINE,","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"    EVENT,","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"    DELETE,","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"    FIND","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ConradLew":20}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":" * Encapsulates a task with a given deadline.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"     * Constructor for creating a task with a deadline.","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"     * @param taskDescription A description of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"     * @param taskDeadline The time by which the task has to be completed.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"    public Deadline(String taskDescription, LocalDate taskDeadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"        super(taskDescription);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"        this.deadline \u003d taskDeadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"     * Returns a string representation of the deadline task to be stored locally.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"     * @return The storage representation of the event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"        return \"D|\" + (this.isCompleted() ? \"1|\" : \"0|\")","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"                + this.getTaskDescription() + \"|\" + this.deadline + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"     * Returns a string representation of a task with a deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"ConradLew"},"content":"     * @return The string representation of a task with a deadline.","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"ConradLew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"ConradLew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"ConradLew"},"content":"        String taskStatusIndicator \u003d \"[D]\" + (this.isCompleted() ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"ConradLew"},"content":"        return taskStatusIndicator + this.getTaskDescription()","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ConradLew"},"content":"                + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"ConradLew":48}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":" * A task-keeping chatbot with a command line interface.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"public class Duke {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"     * Constructor for the \u003ccode\u003eDuke\u003c/code\u003e chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"     * @param filePath The URL location of the local storage text file.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"     * @return A \u003ccode\u003eDuke\u003c/code\u003e chatbot instance.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"            ui.showError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"     * Starts the bot for the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ConradLew"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ConradLew"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ConradLew"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ConradLew"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ConradLew"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ConradLew"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ConradLew"},"content":"                String userResponse \u003d sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ConradLew"},"content":"                Command command \u003d Parser.parseUserResponse(userResponse);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ConradLew"},"content":"                switch (command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ConradLew"},"content":"                case BYE:","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ConradLew"},"content":"                    this.storage.saveTasks(this.tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showGoodbye();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ConradLew"},"content":"                    isExit \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ConradLew"},"content":"                case LIST:","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showTasks(this.tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ConradLew"},"content":"                case MARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"ConradLew"},"content":"                    this.tasks.markTask(Parser.parseTaskNumber(userResponse));","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showMarkSuccess(Parser.parseTaskNumber(userResponse));","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"ConradLew"},"content":"                case UNMARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ConradLew"},"content":"                    this.tasks.unmarkTask(Parser.parseTaskNumber(userResponse));","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showUnmarkSuccess(Parser.parseTaskNumber(userResponse));","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ConradLew"},"content":"                case TODO:","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"ConradLew"},"content":"                    this.tasks.addTask(Parser.parseTodoTask(userResponse));","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showAddTaskSuccess(this.tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ConradLew"},"content":"                case EVENT:","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"ConradLew"},"content":"                    this.tasks.addTask(Parser.parseEventTask(userResponse));","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showAddTaskSuccess(this.tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ConradLew"},"content":"                case DEADLINE:","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ConradLew"},"content":"                    this.tasks.addTask(Parser.parseDeadlineTask(userResponse));","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showAddTaskSuccess(this.tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ConradLew"},"content":"                case DELETE:","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"ConradLew"},"content":"                    this.tasks.deleteTask(Parser.parseTaskNumber(userResponse));","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showRemoveTaskSuccess(Parser.parseTaskNumber(userResponse), this.tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"ConradLew"},"content":"                case FIND:","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"ConradLew"},"content":"                    this.ui.showMatchingTasks(Parser.parseSearchInput(userResponse), this.tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"ConradLew"},"content":"                default:","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"ConradLew"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ConradLew"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ConradLew"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"ConradLew"},"content":"                this.ui.showError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"ConradLew"},"content":"        sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"ConradLew"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"ConradLew"},"content":"        new Duke(\"src/main/java/tasks.txt\").run();","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ConradLew":100}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":" * Encapsulates specific errors unique to Duke.","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"     * Constructor for creating a Duke-specific exception.","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"     * @param msg Description of the error.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"        super(msg);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ConradLew":20}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":" * Encapsulates an Event task which occurs at a","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":" * specified time.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"    private String eventTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"     * Constructor for creating an event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"     * @param taskDescription A description of the event.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"     * @param eventTime The time at which the event takes place.","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"    public Event(String taskDescription, String eventTime) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"        super(taskDescription);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"     * Returns a string representation of the event task to be stored locally.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"     * @return The storage representation of the event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"        return \"E|\" + (this.isCompleted() ? \"1|\" : \"0|\")","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"                + this.getTaskDescription() + \"|\" + this.eventTime + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"     * Returns a string representation of an event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"     * @return The string representation of an event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"ConradLew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"ConradLew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"ConradLew"},"content":"        String taskStatusIndicator \u003d \"[E]\" + (this.isCompleted() ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"ConradLew"},"content":"        return taskStatusIndicator + this.getTaskDescription() + \" (at: \" + this.eventTime + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"ConradLew":45}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":" * Represents a parser for user input given to Duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"     * Parses the task number from the user input command into its \u003ccode\u003eTaskList\u003c/code\u003e index.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"     * @param userInput String input provided by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"     * @return An integer representing the index of the task in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"     * @throws DukeException If input is not of the type [command] [taskNumber]","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"    public static int parseTaskNumber(String userInput) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"        String[] parsedInput \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"        String taskNumberString \u003d parsedInput[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"            return Integer.parseInt(taskNumberString) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"            throw new DukeException(\"   \" + taskNumberString + \" is not a valid task number.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"     * Parses the user input into a \u003ccode\u003eTodo\u003c/code\u003e task.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"     * @param userInput String input provided by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"     * @return An \u003ccode\u003eTodo\u003c/code\u003e task with the specified description.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"    public static Todo parseTodoTask(String userInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"        String[] parsedUserResponse \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ConradLew"},"content":"        String newTaskDescription \u003d String.join(\" \",","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ConradLew"},"content":"                Arrays.copyOfRange(parsedUserResponse, 1, parsedUserResponse.length));","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ConradLew"},"content":"        return new Todo(newTaskDescription);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ConradLew"},"content":"     * Parses the user input into an \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ConradLew"},"content":"     * @param userInput String input provided by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ConradLew"},"content":"     * @return An \u003ccode\u003eEvent\u003c/code\u003e task with the specified description and time of occurrence.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ConradLew"},"content":"    public static Event parseEventTask(String userInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ConradLew"},"content":"        String[] parsedUserResponse \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ConradLew"},"content":"        int atSeparationIndex \u003d Arrays.asList(parsedUserResponse).indexOf(\"/at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ConradLew"},"content":"        String newTaskDescription \u003d String.join(\" \",","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ConradLew"},"content":"                Arrays.copyOfRange(parsedUserResponse,","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ConradLew"},"content":"                        1,","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ConradLew"},"content":"                        atSeparationIndex));","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ConradLew"},"content":"        String newEventTime \u003d String.join(\" \",","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"ConradLew"},"content":"                Arrays.copyOfRange(parsedUserResponse,","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ConradLew"},"content":"                        atSeparationIndex + 1,","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ConradLew"},"content":"                        parsedUserResponse.length));","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"ConradLew"},"content":"        return new Event(newTaskDescription, newEventTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ConradLew"},"content":"     * Parses the user input into a \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ConradLew"},"content":"     * @param userInput String input provided by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"ConradLew"},"content":"     * @return An \u003ccode\u003eDeadline\u003c/code\u003e task with the specified description and deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"ConradLew"},"content":"    public static Deadline parseDeadlineTask(String userInput) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"ConradLew"},"content":"        String[] parsedUserResponse \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ConradLew"},"content":"        int bySeparationIndex \u003d Arrays.asList(parsedUserResponse).indexOf(\"/by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ConradLew"},"content":"        String newTaskDescription \u003d String.join(\" \",","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ConradLew"},"content":"                Arrays.copyOfRange(parsedUserResponse,","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ConradLew"},"content":"                        1,","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"ConradLew"},"content":"                        bySeparationIndex));","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"ConradLew"},"content":"            LocalDate deadline \u003d LocalDate.parse(parsedUserResponse[bySeparationIndex + 1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"ConradLew"},"content":"            return new Deadline(newTaskDescription, deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"ConradLew"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"ConradLew"},"content":"            throw new DukeException(\"    \" + \"Error: No date added for the deadline.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"ConradLew"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"ConradLew"},"content":"            throw new DukeException(\"    \"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"ConradLew"},"content":"                    + \"Error: Invalid deadline format, please key in as yyyy-mm-dd\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ConradLew"},"content":"     * Parses the user input into a \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"ConradLew"},"content":"     * @param userResponse String input provided by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"ConradLew"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e representing the action requested from Duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"ConradLew"},"content":"    public static Command parseUserResponse(String userResponse) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"ConradLew"},"content":"        String[] parsedUserResponse \u003d userResponse.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"ConradLew"},"content":"        String mainCommand \u003d parsedUserResponse[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"ConradLew"},"content":"        switch(mainCommand) {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"ConradLew"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"ConradLew"},"content":"            if (parsedUserResponse.length \u003e 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"Invalid number of arguments, only one required\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"ConradLew"},"content":"                return Command.BYE;","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"ConradLew"},"content":"        case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"ConradLew"},"content":"            if (parsedUserResponse.length \u003e 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"Invalid number of arguments, only one required\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"ConradLew"},"content":"                return Command.LIST;","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"ConradLew"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"ConradLew"},"content":"            if (parsedUserResponse.length !\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"Invalid number of arguments, two required\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"ConradLew"},"content":"                return Command.MARK;","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"ConradLew"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"ConradLew"},"content":"            if (parsedUserResponse.length !\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"Invalid number of arguments, two required\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"ConradLew"},"content":"                return Command.UNMARK;","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"ConradLew"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"ConradLew"},"content":"            if (parsedUserResponse.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \"","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"ConradLew"},"content":"                        + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"ConradLew"},"content":"                return Command.TODO;","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"ConradLew"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"ConradLew"},"content":"            int bySeparationIndex \u003d Arrays.asList(parsedUserResponse).indexOf(\"/by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"ConradLew"},"content":"            if (bySeparationIndex \u003d\u003d -1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"Error: No date added for the deadline.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"ConradLew"},"content":"                return Command.DEADLINE;","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"ConradLew"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"ConradLew"},"content":"            int atSeparationIndex \u003d Arrays.asList(parsedUserResponse).indexOf(\"/at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"ConradLew"},"content":"            if (atSeparationIndex \u003d\u003d -1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"Error: No date added for the event.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"ConradLew"},"content":"                return Command.EVENT;","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"ConradLew"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"ConradLew"},"content":"            if (parsedUserResponse.length !\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"Invalid number of arguments, two required\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"ConradLew"},"content":"                return Command.DELETE;","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"ConradLew"},"content":"        case \"find\":","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"ConradLew"},"content":"            if (parsedUserResponse.length \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"Invalid number of arguments, at least two required\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"ConradLew"},"content":"                return Command.FIND;","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"ConradLew"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"ConradLew"},"content":"            throw new DukeException(\"    \"","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"ConradLew"},"content":"                    + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":164,"author":{"gitId":"ConradLew"},"content":"     * Parses the user input into a query string to be matched.","lastModifiedDate":"2022-08-31"},{"lineNumber":165,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":166,"author":{"gitId":"ConradLew"},"content":"     * @param userInput","lastModifiedDate":"2022-08-31"},{"lineNumber":167,"author":{"gitId":"ConradLew"},"content":"     * @return A query string.","lastModifiedDate":"2022-08-31"},{"lineNumber":168,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":169,"author":{"gitId":"ConradLew"},"content":"    public static String parseSearchInput(String userInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"ConradLew"},"content":"        String[] parsedUserResponse \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"ConradLew"},"content":"        String searchInput \u003d String.join(\" \", Arrays.copyOfRange(parsedUserResponse, 1, parsedUserResponse.length));","lastModifiedDate":"2022-08-31"},{"lineNumber":172,"author":{"gitId":"ConradLew"},"content":"        return searchInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ConradLew":174}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":" * Represents a storage system for tasks given to Duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"    private String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"     * Loads the tasks locally from the previous session.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of tasks read from the input file.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"     * @throws IOException If the file does not exist.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"     * @throws DukeException         If the file does not have the correct format.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"        if (!f.exists()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"            f.createNewFile();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"            String taskTextRepresentation \u003d s.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"            String[] parsedTaskTextRepresentation \u003d taskTextRepresentation.split(\"\\\\|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ConradLew"},"content":"            String taskType \u003d parsedTaskTextRepresentation[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ConradLew"},"content":"            boolean isTaskDone \u003d Integer.parseInt(parsedTaskTextRepresentation[1]) \u003d\u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ConradLew"},"content":"            String taskDescription \u003d parsedTaskTextRepresentation[2];","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ConradLew"},"content":"            switch (taskType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ConradLew"},"content":"            case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ConradLew"},"content":"                Task savedTodo \u003d new Todo(taskDescription);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ConradLew"},"content":"                if (isTaskDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ConradLew"},"content":"                    savedTodo.setCompleted();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ConradLew"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ConradLew"},"content":"                userTasks.add(savedTodo);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ConradLew"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ConradLew"},"content":"            case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ConradLew"},"content":"                LocalDate taskDeadline \u003d LocalDate.parse(parsedTaskTextRepresentation[3]);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ConradLew"},"content":"                Task savedDeadline \u003d new Deadline(taskDescription, taskDeadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ConradLew"},"content":"                if (isTaskDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ConradLew"},"content":"                    savedDeadline.setCompleted();","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ConradLew"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ConradLew"},"content":"                userTasks.add(savedDeadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ConradLew"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ConradLew"},"content":"            case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"ConradLew"},"content":"                String taskEventTime \u003d parsedTaskTextRepresentation[3];","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ConradLew"},"content":"                Task savedEvent \u003d new Event(taskDescription, taskEventTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ConradLew"},"content":"                if (isTaskDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"ConradLew"},"content":"                    savedEvent.setCompleted();","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ConradLew"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"ConradLew"},"content":"                userTasks.add(savedEvent);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ConradLew"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ConradLew"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"Corrupted task file\");","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ConradLew"},"content":"        return userTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ConradLew"},"content":"     * Saves the tasks locally from the current session.","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ConradLew"},"content":"     * @param tasks A list of tasks to be saved.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"ConradLew"},"content":"     * @throws DukeException If there is an error while accessing the file information.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"ConradLew"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"ConradLew"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"ConradLew"},"content":"            fw.write(tasks.getStorageRepresentation());","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"ConradLew"},"content":"            fw.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"ConradLew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"ConradLew"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ConradLew":91}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":" * Encapsulates a task to be completed.","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"    private boolean completed;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"     * Constructor for creating a task.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"     * @param taskDescription A description of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"    public void setCompleted() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"        this.completed \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"    public void setUncompleted() {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"ConradLew"},"content":"     * Checks if the given task is completed.","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"ConradLew"},"content":"     * @return A boolean representing whether the task is marked as completed.","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"ConradLew"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"ConradLew"},"content":"        return this.completed;","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"ConradLew"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ConradLew"},"content":"        return \"Invalid Type\";","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"ConradLew"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"ConradLew"},"content":"     * @return A string representing the description of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"ConradLew"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"ConradLew"},"content":"        return this.taskDescription;","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"ConradLew"},"content":"     * Returns a string representation of a task.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"ConradLew"},"content":"     * @return The string representation of a task.","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"ConradLew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"ConradLew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"ConradLew"},"content":"        String taskStatusIndicator \u003d this.completed ? \" [X] \" : \" [ ] \";","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"ConradLew"},"content":"        return taskStatusIndicator + this.taskDescription;","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ConradLew"},"content":"    public boolean matchesString(String searchInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ConradLew"},"content":"        return this.taskDescription.contains(searchInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"ConradLew":77}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":" * Represents a list of tasks given to Duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"    private ArrayList\u003cTask\u003e userTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"    public TaskList(ArrayList\u003cTask\u003e userTasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"        this.userTasks \u003d userTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"        this.userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"     * Adds the given \u003ccode\u003eTask\u003c/code\u003e to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"     * @param t \u003ccode\u003eTask\u003c/code\u003e to be added to the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"        this.userTasks.add(t);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"     * Deletes the task with the given task number from the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"     * @param taskNumber Array index of the task number to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"     * @throws DukeException If the task number does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"    public void deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"            Task userTask \u003d this.userTasks.get(taskNumber);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ConradLew"},"content":"            this.userTasks.remove(taskNumber);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ConradLew"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ConradLew"},"content":"            throw new DukeException(\"    \" + \"No such task exists.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ConradLew"},"content":"     * Marks the task with the given task number as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ConradLew"},"content":"     * @param taskNumber Array index of the task number to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ConradLew"},"content":"     * @throws DukeException If the task number does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ConradLew"},"content":"    public void markTask(int taskNumber) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ConradLew"},"content":"            Task userTask \u003d this.userTasks.get(taskNumber);","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ConradLew"},"content":"            if (userTask.isCompleted()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \" + \"This task is already marked as done.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ConradLew"},"content":"                userTask.setCompleted();","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"ConradLew"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ConradLew"},"content":"            throw new DukeException(\"    \" + \"No such task exists.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ConradLew"},"content":"     * Marks the task with the given task number as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"ConradLew"},"content":"     * @param taskNumber Array index of the task number to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ConradLew"},"content":"     * @throws DukeException If the task number does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ConradLew"},"content":"    public void unmarkTask(int taskNumber) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"ConradLew"},"content":"            Task userTask \u003d this.userTasks.get(taskNumber);","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ConradLew"},"content":"            if (!userTask.isCompleted()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ConradLew"},"content":"                throw new DukeException(\"    \"","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ConradLew"},"content":"                        + \"This task is already marked as not done yet.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ConradLew"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"ConradLew"},"content":"                userTask.setUncompleted();","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"ConradLew"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"ConradLew"},"content":"            throw new DukeException(\"    \" + \"No such task exists.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"ConradLew"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ConradLew"},"content":"     * @return A number representing the number of tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"ConradLew"},"content":"    public int length() {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ConradLew"},"content":"        return this.userTasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"ConradLew"},"content":"     * Returns a representation of the current list to be stored locally.","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"ConradLew"},"content":"     * @return A string representing the task list in storage.","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"ConradLew"},"content":"    public String getStorageRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"ConradLew"},"content":"        String storageRepresentation \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"ConradLew"},"content":"        for (Task userTask : this.userTasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"ConradLew"},"content":"            storageRepresentation +\u003d userTask.getTextRepresentation();","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"ConradLew"},"content":"        return storageRepresentation;","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"ConradLew"},"content":"     * Returns a string representation of a task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"ConradLew"},"content":"     * @return The string representation of a task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"ConradLew"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"ConradLew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"ConradLew"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"ConradLew"},"content":"        for (int i \u003d 0; i \u003c this.userTasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"ConradLew"},"content":"            Task userTask \u003d this.userTasks.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"ConradLew"},"content":"            output +\u003d \"        \" + (i + 1) + \". \" + userTask + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"ConradLew"},"content":"        return output;","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"ConradLew"},"content":"    public String getMatchingTasksRepresentation(String searchInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"ConradLew"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"ConradLew"},"content":"        for (int i \u003d 0; i \u003c this.userTasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"ConradLew"},"content":"            Task userTask \u003d this.userTasks.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"ConradLew"},"content":"            if (userTask.matchesString(searchInput)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"ConradLew"},"content":"                output +\u003d \"        \" + (i + 1) + \". \" + userTask + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"ConradLew"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"ConradLew"},"content":"        return output;","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ConradLew":134}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":" * Encapsulates a todo, a task which has to be completed without any time constraints.","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"     * Constructor for creating a todo.","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"     * @param taskDescription A description of the todo.","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"    public Todo(String taskDescription) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"        super(taskDescription);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"     * Returns a string representation of the event task to be stored locally.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"     * @return The storage representation of the event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"        return \"T|\" + (this.isCompleted() ? \"1|\" : \"0|\") + this.getTaskDescription() + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"     * Returns a string representation of a todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"     * @return The string representation of a todo.","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"        String taskStatusIndicator \u003d \"[T]\" + (this.isCompleted() ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"        return taskStatusIndicator + this.getTaskDescription();","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"ConradLew":39}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":" * Represents a user interface for user interaction with Duke chatbot.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":" * @author Conrad","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"     * Prints the welcome message.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"        String dukeGreeting \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"        System.out.println(dukeGreeting);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"        String dukeGoodbye \u003d \"    \" + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"        System.out.println(dukeGoodbye);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"     * Prints the error message arising from invalid user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ConradLew"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ConradLew"},"content":"     * Prints the error message arising from issues in loading or storing tasks locally.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ConradLew"},"content":"    public void showLoadingError(Exception e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ConradLew"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ConradLew"},"content":"     * Prints the tasks currently in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ConradLew"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ConradLew"},"content":"        if (tasks.length() !\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ConradLew"},"content":"            System.out.println(\"    \" + \"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ConradLew"},"content":"            System.out.println(tasks.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ConradLew"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ConradLew"},"content":"            System.out.println(\"    \" + \"There are no tasks in your list.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ConradLew"},"content":"     * Prints a success message for marking a task as complete.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ConradLew"},"content":"     * @param taskNumber Index of the task as in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"ConradLew"},"content":"    public void showMarkSuccess(int taskNumber) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ConradLew"},"content":"        System.out.println(\"    \" + \"Nice! I\u0027ve marked task \"","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"ConradLew"},"content":"                + (taskNumber + 1) + \" as done.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ConradLew"},"content":"     * Prints a success message for marking a task as incomplete.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ConradLew"},"content":"     * @param taskNumber Index of the task as in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"ConradLew"},"content":"    public void showUnmarkSuccess(int taskNumber) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ConradLew"},"content":"        System.out.println(\"    \" + \"OK, I\u0027ve marked task \"","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ConradLew"},"content":"                + (taskNumber + 1) + \" as not done yet.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ConradLew"},"content":"     * Prints a success message for removing a task.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"ConradLew"},"content":"     * @param taskNumber Index of the task as in the task list.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"ConradLew"},"content":"     * @param tasks Current list of tasks stored by the bot.","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"ConradLew"},"content":"    public void showRemoveTaskSuccess(int taskNumber, TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"ConradLew"},"content":"        System.out.println(\"    \" + \"Noted. I\u0027ve removed task \" + (taskNumber + 1) + \".\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"ConradLew"},"content":"                + \"    \" + \"Now you have \" + tasks.length() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"ConradLew"},"content":"     * Prints a success message for adding a task.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"ConradLew"},"content":"     * @param tasks Current list of tasks stored by the bot.","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"ConradLew"},"content":"    public void showAddTaskSuccess(TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"ConradLew"},"content":"        System.out.println(\"    \" + \"Task added. You now have \"","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"ConradLew"},"content":"                + tasks.length() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"ConradLew"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"ConradLew"},"content":"     * Prints the tasks matching the user query string.","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"ConradLew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"ConradLew"},"content":"     * @param searchInput The query string to search for.","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"ConradLew"},"content":"     * @param tasks The current \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"ConradLew"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"ConradLew"},"content":"    public void showMatchingTasks(String searchInput, TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"ConradLew"},"content":"        System.out.println(\"    \" + \"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"ConradLew"},"content":"        System.out.println(tasks.getMatchingTasksRepresentation(searchInput));","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ConradLew":109}},{"path":"src/main/java/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"T|0|test1","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"T|0|test 2","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"T|1|test3","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"T|0|test4","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"D|1|test5|2020-12-12","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":"T|0|test 10","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":"E|0|test7|meow","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"T|0|read book","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"T|0|return book","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ConradLew":9}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"    public void testGetTextRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"        Deadline testDeadline \u003d new Deadline(\"test\", LocalDate.parse(\"1999-02-02\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"        assertEquals(\"D|0|test|1999-02-02\\n\", testDeadline.getTextRepresentation());","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"    public void testStringRepresentation() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"        Deadline testDeadline \u003d new Deadline(\"test\", LocalDate.parse(\"1999-02-02\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"        assertEquals(\"[D][ ] test (by: Feb 2 1999)\", testDeadline.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ConradLew":22}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"    public void testParseTaskNumber_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"            assertEquals(1, Parser.parseTaskNumber(\"mark 2\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"            fail(); // Should not occur","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"    public void testParseTaskNumber_exceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"            assertEquals(23, Parser.parseTaskNumber(\"mark 2e3\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"            assertEquals(\"   2e3 is not a valid task number.\\n\", e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ConradLew":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ConradLew"},"content":"todo read book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"ConradLew"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"ConradLew"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"ConradLew"},"content":"todo join sports club","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"ConradLew"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"ConradLew"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"ConradLew"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"ConradLew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"ConradLew"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"ConradLew"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"ConradLew"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"ConradLew"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"ConradLew"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"ConradLew"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"ConradLew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"ConradLew"},"content":"delete 4","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ConradLew"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ConradLew"},"content":"blah","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"ConradLew"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"ConradLew"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"ConradLew"},"content":"event do tasks","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"ConradLew"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"ConradLew"},"content":"deadline do tasks","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ConradLew"},"content":"list a","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"ConradLew"},"content":"bye 2","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"ConradLew"},"content":"mark","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"ConradLew"},"content":"unmark","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"ConradLew"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"ConradLew"},"content":"mark 15","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"ConradLew"},"content":"unmark 15","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"ConradLew"},"content":"delete 15","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"ConradLew"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"ConradLew":32}}]

[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    private String deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    public Deadline(boolean isDone, String text, String deadline) {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"        super(isDone, text);","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), this.deadline);","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zsiggg":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"        System.out.println(\"------------------------------\");","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        System.out.println(\"------------------------------\");","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        while(true) {","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"            String[] commandArr \u003d command.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"            System.out.println(\"------------------------------\");","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"            switch(commandArr[0]) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"                case \"mark\":","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"                    int markI;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"                    try {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"                        markI \u003d Integer.parseInt(commandArr[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"                    } catch (NumberFormatException e) {     // if second word not integer","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"                        System.out.println(\"üôÅ OOPS!!! Provide a number to mark a task.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"                    if (markI \u003e\u003d 1 \u0026\u0026 markI \u003c\u003d tasks.size()) {   // ensure i given is within range","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"                        tasks.get(markI - 1).mark();","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"                    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"                        System.out.printf(\"üôÅ OOPS!!! Provide a valid number (from 1 to %d) to mark a task.\\n\", tasks.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"                case \"unmark\":","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"                    int unmarkI;","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"                    try {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"                        unmarkI \u003d Integer.parseInt(commandArr[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"                    } catch (NumberFormatException e) {     // if second word not integer","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"                        System.out.println(\"üôÅ OOPS!!! Provide a number to unmark a task.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"                    if (unmarkI \u003e\u003d 1 \u0026\u0026 unmarkI \u003c\u003d tasks.size()) {   // ensure i given is within range","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"                        tasks.get(unmarkI - 1).unmark();","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"                    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"                        System.out.printf(\"üôÅ OOPS!!! Provide a valid number (from 1 to %d) to unmark a task.\\n\", tasks.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"                case \"todo\":","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"                    String todoText \u003d command.replaceFirst(\"todo\", \"\").strip();","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"                    if (todoText.isEmpty()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"                        System.out.println(\"üôÅ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"                    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"                        tasks.add(new Todo(false, todoText));","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"                        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"                case \"deadline\":","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"                    String[] c1 \u003d command.split(\"/by\");","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"                    String deadlineText \u003d c1[0].replaceFirst(\"deadline\", \"\").strip();","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"                    String deadlineTime \u003d c1.length \u003e 1 ? c1[1].strip() : \"\";","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"                    if (deadlineText.isEmpty()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"                        System.out.println(\"üôÅ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"                    } else if (deadlineTime.isEmpty()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"                        System.out.println(\"üôÅ OOPS!!! Provide a time for the deadline.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"                    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"                        tasks.add(new Deadline(false, deadlineText, deadlineTime));","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"                        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"                case \"event\":","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"                    String[] c2 \u003d command.split(\"/at\");","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"                    String eventText \u003d c2[0].replaceFirst(\"event\", \"\").strip();","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"                    String eventTime \u003d c2.length \u003e 1 ? c2[1].strip() : \"\";","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"                    if (eventText.isEmpty()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"                        System.out.println(\"üôÅ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"                    } else if (eventTime.isEmpty()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"                        System.out.println(\"üôÅ OOPS!!! Provide a time for the event.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"                    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"                        tasks.add(new Event(false, eventText, eventTime));","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"                        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"zsiggg"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"zsiggg"},"content":"                    int deleteI;","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"zsiggg"},"content":"                    try {","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"                        deleteI \u003d Integer.parseInt(commandArr[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"                    } catch (NumberFormatException e) {     // if second word not integer","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"                        System.out.println(\"üôÅ OOPS!!! Provide a number to delete a task.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"                    if (deleteI \u003e\u003d 1 \u0026\u0026 deleteI \u003c\u003d tasks.size()) {   // ensure i given is within range","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"                        String taskToString \u003d tasks.get(deleteI - 1).toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"                        tasks.remove(deleteI - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"zsiggg"},"content":"                        System.out.printf(\"Noted. I\u0027ve removed this task:\\n  %s\\n\", taskToString);","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"                    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"                        System.out.printf(\"üôÅ OOPS!!! Provide a valid number (from 1 to %d) to delete a task.\\n\", tasks.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"                default:","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"                    switch (command) {","lastModifiedDate":"2022-08-16"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"                        case \"bye\":","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"zsiggg"},"content":"                            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":99,"author":{"gitId":"zsiggg"},"content":"                            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":100,"author":{"gitId":"zsiggg"},"content":"                        case \"list\":","lastModifiedDate":"2022-08-16"},{"lineNumber":101,"author":{"gitId":"zsiggg"},"content":"                            if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":102,"author":{"gitId":"zsiggg"},"content":"                                System.out.println(\"üôÅ OOPS!!! There are no tasks in your list yet.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":103,"author":{"gitId":"zsiggg"},"content":"                            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"                                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"zsiggg"},"content":"                                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":106,"author":{"gitId":"zsiggg"},"content":"                                    System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"zsiggg"},"content":"                                }","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"zsiggg"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"zsiggg"},"content":"                            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":110,"author":{"gitId":"zsiggg"},"content":"                        default:","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"zsiggg"},"content":"                            System.out.println(\"üôÅ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"zsiggg"},"content":"                            break;","lastModifiedDate":"2022-08-16"},{"lineNumber":113,"author":{"gitId":"zsiggg"},"content":"                    }","lastModifiedDate":"2022-08-16"},{"lineNumber":114,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"zsiggg"},"content":"            System.out.println(\"------------------------------\");","lastModifiedDate":"2022-08-16"},{"lineNumber":116,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zsiggg":114,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    private String time;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    public Event(boolean isDone, String text, String time) {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"        super(isDone, text);","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        return String.format(\"[E] %s (at: %s)\", super.toString(), this.time);","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zsiggg":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"    private String text;","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    public Task(boolean isDone, String text) {","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        System.out.printf(\"Got it. I\u0027ve added this task:\\n  \");","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    public void mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"        return String.format(\"[%c] %s\", isDone ? \u0027X\u0027 : \u0027 \u0027, this.text);","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"zsiggg":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    public Todo(boolean isDone, String text) {","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"        super(isDone, text);","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zsiggg":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"aaa bbb","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"todo read book","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"deadline do exam /by Mon 8pm","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"event eat dinner /at 5pm-9pm on Tuesday","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"unmark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"list","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zsiggg":10}}]

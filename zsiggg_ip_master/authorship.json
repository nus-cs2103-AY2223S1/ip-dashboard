[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    protected Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    public AddCommand(String command, Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        super(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"        taskList.add(this.task, super.command, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"            this.execute(taskList, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"            ui.println(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"            return;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        ui.printWithDivider(String.format(\"Got it. I\u0027ve added this task:\\n  %s\", this.task.toString()));","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":26}},{"path":"src/main/java/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    private AddDeadlineCommand(String command, Deadline deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        super(command, deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    public static AddDeadlineCommand of(String command) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        boolean isDone \u003d command.contains(\"/done\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"            command \u003d command.replace(\"/done\", \"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"        String[] c1 \u003d command.split(\"/by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        String text \u003d c1[0].replaceFirst(\"deadline\", \"\").strip();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"        String time \u003d c1.length \u003e 1 ? c1[1].strip() : \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        if (text.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"        } else if (time.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! Provide a time for the deadline.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"            LocalDateTime timeObj \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"                timeObj \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"                throw new IllegalArgumentException(\"üôÅ OOPS!!! Provide a valid time (dd/MM/yy HHmm) for the deadline.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"            return new AddDeadlineCommand(command, new Deadline(isDone, text, timeObj));","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":32}},{"path":"src/main/java/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    private AddEventCommand(String command, Event event) {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        super(command, event);","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    public static AddEventCommand of(String command) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        boolean isDone \u003d command.contains(\"/done\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"            command \u003d command.replace(\"/done\", \"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"        String[] c2 \u003d command.split(\"/at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        String text \u003d c2[0].replaceFirst(\"event\", \"\").strip();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"        String time \u003d c2.length \u003e 1 ? c2[1].strip() : \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        if (text.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! The description of an event cannot be empty.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"        } else if (time.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! Provide a time for the event.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"            LocalDateTime timeObj \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"                timeObj \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"                throw new IllegalArgumentException(\"üôÅ OOPS!!! Provide a valid time (dd/MM/yy HHmm) for the event.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"            return new AddEventCommand(command, new Event(isDone, text, timeObj));","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":32}},{"path":"src/main/java/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    private AddTodoCommand(String command, Todo todo) {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        super(command, todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    public static AddTodoCommand of(String command) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        boolean isDone \u003d command.contains(\"/done\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"            command \u003d command.replace(\"/done\", \"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        String text \u003d command.replaceFirst(\"todo\", \"\").strip();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        if (text.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"            return new AddTodoCommand(command, new Todo(isDone, text));","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":24}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    public ByeCommand(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"        super(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        super.isExit \u003d true;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"        this.execute(taskList, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        ui.printWithDivider(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":16}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    public enum Commands {","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"        mark, unmark, todo, deadline, event, delete, bye, list","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    protected String command;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    public Command(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        return isExit;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    public abstract void execute(TaskList taskList, Storage storage, Ui ui);","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"    // this method will not print anything","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"    public abstract void execute(TaskList taskList, Storage storage) throws IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":23}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"    public Deadline(boolean isDone, String text, LocalDateTime deadline) {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        super(isDone, text);","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")));","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zsiggg":16}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    private Task task;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    private int taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    private DeleteCommand(String command, Task task, int taskIndex, TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"        super(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    public static DeleteCommand of(String command, TaskList taskList) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        int taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"            taskIndex \u003d Parser.getTaskIndex(command, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! Provide a number to delete a task.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"        Task task;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"            task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"                    String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"                            \"üôÅ OOPS!!! Provide a valid number (from 1 to %d) to delete a task.\\n\", taskList.size())","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"            );","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"        return new DeleteCommand(command, task, taskIndex, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList tasklist, Storage storage) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"        this.taskList.remove(taskIndex, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"    };","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList tasklist, Storage storage, Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"            this.execute(tasklist, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"            ui.println(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"            return;","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"        ui.printWithDivider(String.format(\"Noted. I\u0027ve removed this task:\\n  %s\", this.task.toString()));","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":50}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    public Duke(String fileName, String... directories) {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        this.storage \u003d new Storage(ui, fileName, directories);","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"            storage.load(taskList, ui);","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"            this.taskList \u003d new TaskList();     // if error loading, use an empty task list","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"    // starts taking in the user\u0027s commands","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    public void run() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"        while (!isExit \u0026\u0026 scanner.hasNext()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"            String commandString \u003d scanner.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"            Command command;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"                command \u003d Parser.parse(commandString, taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"                ui.println(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"                continue;","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"            command.execute(this.taskList, this.storage, this.ui);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"            isExit \u003d command.getIsExit();","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"        new Duke(\"data.txt\", \"data\").run();","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zsiggg":39,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"    public Event(boolean isDone, String text, LocalDateTime time) {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        super(isDone, text);","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        return String.format(\"[E] %s (at: %s)\", super.toString(), this.time.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")));","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zsiggg":16}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"        super(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        return;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"        String s \u003d taskList.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        if (s.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"            ui.println(\"üôÅ OOPS!!! There are no tasks in your list yet.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"            ui.printWithDivider(String.format(\"Here are the tasks in your list:\\n%s\", s));","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":20}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"public abstract class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    // should return the command, or throw an exception if command is wrong","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    public static Command parse(String commandString, TaskList taskList) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"        String[] commandArr \u003d commandString.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        Command.Commands commandWord \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"            commandWord \u003d Command.Commands.valueOf(commandArr[0]);","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"        if (!Objects.isNull(commandWord)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"            switch(commandWord) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"                case mark:","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"                    command \u003d UpdateMarkCommand.of(commandString, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"                case unmark:","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"                    command \u003d UpdateUnmarkCommand.of(commandString, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"                case todo:","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"                    command \u003d AddTodoCommand.of(commandString);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"                case deadline:","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"                    command \u003d AddDeadlineCommand.of(commandString);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"                case event:","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"                    command \u003d AddEventCommand.of(commandString);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"                case delete:","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"                    command \u003d DeleteCommand.of(commandString, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"                case bye:","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"                    command \u003d new ByeCommand(commandString);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"                case list:","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"                    command \u003d new ListCommand(commandString);","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"        return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"    // returns the 0-based index of task","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"    public static int getTaskIndex(String command, TaskList taskList) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"        int i;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"        String[] commandArr \u003d command.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"            i \u003d Integer.parseInt(commandArr[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"        } catch (NumberFormatException e) {     // if second word not integer","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"        return i - 1;","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":59}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"public class Storage {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    private File file;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    // for third arg, e.g. src/main/data/data.txt -\u003e pass in src, main, data, data.txt","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"    public Storage(Ui ui, String fileName, String... directories) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"        // platform independent paths","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        String directoriesString \u003d Arrays","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"                .stream(directories)","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"                .reduce(\"\", (prev, curr) -\u003e prev + curr + File.separator);","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"        String pathString \u003d directoriesString + fileName;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"        // create file and directory if does not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        if (!Files.exists(Paths.get(pathString))) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"                Files.createDirectories(Paths.get(directoriesString));","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"                ui.printWithDivider(\"There was a problem creating the output file directory.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"                System.exit(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"                Files.createFile(Paths.get(pathString));","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"                ui.printWithDivider(\"There was a problem creating the output file.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"                System.exit(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"        // initialise the scanner for the file","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"        this.file \u003d new File(pathString);","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"            this.scanner \u003d new Scanner(file);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"            ui.printWithDivider(\"There was a problem creating the output file.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"            System.exit(1);","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"    // initialises the tasklist with commands from output file","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"    public void load(TaskList taskList, Ui ui) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"        if (!this.scanner.hasNext()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"            ui.printWithDivider(\"No previous tasks found, starting with empty task list!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"            return;","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"            ui.printDivider();","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"            ui.println(\"Reading previous tasks...\");","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"            while (this.scanner.hasNext()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"                String commandString \u003d this.scanner.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"                String[] commandArr \u003d commandString.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"                Command.Commands commandWord \u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"                try {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"                    commandWord \u003d Command.Commands.valueOf(commandArr[0]);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"                    ui.println(String.format(\"Error reading command in output file: %s\", commandString));","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"                    break;  // move to next command if error reading this line","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"                Command command \u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"                switch(commandWord) {","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"                case todo:","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"                    command \u003d AddTodoCommand.of(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"                case deadline:","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"                    command \u003d AddDeadlineCommand.of(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"                case event:","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"                    command \u003d AddEventCommand.of(commandString);","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"zsiggg"},"content":"                default:","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"zsiggg"},"content":"                    ui.println(String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"                            \"Invalid command in output file (should only contain add command): %s\",","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"                            commandString));","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"                if (!Objects.isNull(command)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"                    command.execute(taskList, this);","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"zsiggg"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"            ui.println(\"Successfully read previous tasks.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"            ui.printDivider();","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"zsiggg"},"content":"            ui.println(\"\");","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"            new ListCommand(\"list\").execute(taskList, this, ui);","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"zsiggg"},"content":"    public void write(String s) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"zsiggg"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"zsiggg"},"content":"        fw.write(s);","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"zsiggg"},"content":"        fw.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"zsiggg":104}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"    private String text;","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    public Task(boolean isDone, String text) {","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    public void mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"        return String.format(\"[%c] %s\", isDone ? \u0027X\u0027 : \u0027 \u0027, this.text);","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"zsiggg":22}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    private ArrayList\u003cString\u003e addCommands;   // running these commands will always give the tasks array","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    // delete, update, list functions","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"        this.addCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"    public void add(Task task, String command, Storage storage) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        this.addCommands.add(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"        StringJoiner sj \u003d new StringJoiner(\"\\n\", \"\", \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"        this.addCommands.stream().forEach(c -\u003e sj.add(c));","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"            storage.write(sj.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"            this.tasks.remove(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"            this.addCommands.remove(command);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"            throw new IOException(\"There was a problem writing the change to the file. Task not added.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"    // gets the (i-1)th task in tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"    public Task get(int i) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"    public void remove(int i, Storage storage) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"        Task task \u003d this.get(i);","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"        String commandString \u003d this.addCommands.get(i);","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"zsiggg"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"zsiggg"},"content":"        this.addCommands.remove(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"zsiggg"},"content":"        StringJoiner sj \u003d new StringJoiner(\"\\n\", \"\", \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"zsiggg"},"content":"        this.addCommands.stream().forEach(c -\u003e sj.add(c));","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"zsiggg"},"content":"            storage.write(sj.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"zsiggg"},"content":"            this.tasks.add(i, task);","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"zsiggg"},"content":"            this.addCommands.add(i, commandString);","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"zsiggg"},"content":"            throw new IOException(\"There was a problem writing the change to the file. Task not removed.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"zsiggg"},"content":"    public void mark(int i, Storage storage) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"zsiggg"},"content":"        this.get(i).mark();","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"zsiggg"},"content":"        String commandString \u003d this.addCommands.get(i);","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"zsiggg"},"content":"        if (!commandString.contains(\"/done\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"zsiggg"},"content":"            this.addCommands.set(i, commandString + \" /done\");","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"zsiggg"},"content":"        StringJoiner sj \u003d new StringJoiner(\"\\n\", \"\", \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"zsiggg"},"content":"        this.addCommands.stream().forEach(c -\u003e sj.add(c));","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"zsiggg"},"content":"            storage.write(sj.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"zsiggg"},"content":"            this.get(i).unmark();","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"zsiggg"},"content":"            this.addCommands.set(i, commandString);","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"zsiggg"},"content":"            throw new IOException(\"There was a problem writing the change to the file. Task not marked.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"zsiggg"},"content":"    public void unmark(int i, Storage storage) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"zsiggg"},"content":"        this.get(i).unmark();","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"zsiggg"},"content":"        String commandString \u003d this.addCommands.get(i);","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"zsiggg"},"content":"        if (commandString.contains(\"/done\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"zsiggg"},"content":"            this.addCommands.set(i, commandString.replace(\"/done\", \"\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"zsiggg"},"content":"        StringJoiner sj \u003d new StringJoiner(\"\\n\", \"\", \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"zsiggg"},"content":"        this.addCommands.stream().forEach(c -\u003e sj.add(c));","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"zsiggg"},"content":"            storage.write(sj.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"zsiggg"},"content":"            this.get(i).mark();","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"zsiggg"},"content":"            this.addCommands.set(i, commandString);","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"zsiggg"},"content":"            throw new IOException(\"There was a problem writing the change to the file. Task not unmarked.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"zsiggg"},"content":"        return String.join(\"\\n\",","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"zsiggg"},"content":"                IntStream.range(1, this.size() + 1)","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"zsiggg"},"content":"                    .mapToObj(i -\u003e String.format(\"%d. %s\", i, this.get(i - 1).toString()))","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"zsiggg"},"content":"                    .toArray(String[]::new));","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":100}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    public Todo(boolean isDone, String text) {","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"        super(isDone, text);","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zsiggg":10}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"public class Ui {","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    private final PrintStream OUTPUT \u003d System.out;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    public void printDivider() {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        OUTPUT.println(\"------------------------------\");","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"    public void printWithDivider(String s) {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"        this.printDivider();","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        OUTPUT.printf(\"%s\\n\", s);","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"        this.printDivider();","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        OUTPUT.print(\"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"    public void println(String s) {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"        OUTPUT.println(s);","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"        this.printWithDivider(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"        this.printWithDivider(","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"                \"There was a problem loading the tasks from the output file. Starting with empty list.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"zsiggg":29}},{"path":"src/main/java/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"public abstract class UpdateCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"    protected Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"    protected int taskIndex;  // stores 0-based index of task in TaskList","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"    public UpdateCommand(String command, Task task, int taskIndex) {","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"        super(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":10}},{"path":"src/main/java/UpdateMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"public class UpdateMarkCommand extends UpdateCommand {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    private UpdateMarkCommand(String command, Task task, int taskIndex) {","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"        super(command, task, taskIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    public static UpdateMarkCommand of(String command, TaskList taskList) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"        int taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"            taskIndex \u003d Parser.getTaskIndex(command, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! Provide a number to mark a task.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"            task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"                    String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"                            \"üôÅ OOPS!!! Provide a valid number (from 1 to %d) to mark a task.\\n\", taskList.size())","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"            );","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"        return new UpdateMarkCommand(command, task, taskIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        taskList.mark(super.taskIndex, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"            this.execute(taskList, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"            ui.println(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"        ui.printWithDivider(String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", super.task.toString()));","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":42}},{"path":"src/main/java/UpdateUnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"public class UpdateUnmarkCommand extends UpdateCommand {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"    private UpdateUnmarkCommand(String command, Task task, int taskIndex) {","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"        super(command, task, taskIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"    public static UpdateUnmarkCommand of(String command, TaskList taskList) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"        int taskIndex;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zsiggg"},"content":"            taskIndex \u003d Parser.getTaskIndex(command, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zsiggg"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(\"üôÅ OOPS!!! Provide a number to unmark a task.\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zsiggg"},"content":"        Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zsiggg"},"content":"            task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zsiggg"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zsiggg"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zsiggg"},"content":"                    String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zsiggg"},"content":"                            \"üôÅ OOPS!!! Provide a valid number (from 1 to %d) to unmark a task.\\n\", taskList.size())","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zsiggg"},"content":"            );","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zsiggg"},"content":"        return new UpdateUnmarkCommand(command, task, taskIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"zsiggg"},"content":"        taskList.unmark(super.taskIndex, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zsiggg"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zsiggg"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"zsiggg"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"zsiggg"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"zsiggg"},"content":"            this.execute(taskList, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"zsiggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"zsiggg"},"content":"            ui.println(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"zsiggg"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"zsiggg"},"content":"        ui.printWithDivider(String.format(\"OK, I\u0027ve marked this task as not done yet:\\n  %s\", super.task.toString()));","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"zsiggg"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"zsiggg"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zsiggg":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zsiggg"},"content":"aaa bbb","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zsiggg"},"content":"todo read book","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zsiggg"},"content":"deadline do exam /by Mon 8pm","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"zsiggg"},"content":"event eat dinner /at 5pm-9pm on Tuesday","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"zsiggg"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zsiggg"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zsiggg"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zsiggg"},"content":"unmark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"zsiggg"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zsiggg"},"content":"list","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zsiggg":10}}]

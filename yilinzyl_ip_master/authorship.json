[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"test {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"dependencies {","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"-":40,"yilinzyl":10}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"1. [T][ ] task1","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"2. [T][ ] task3","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"3. [T][X] task4","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"4. [D][ ] deadline task3 (by: Jan 01 2022 06:00)","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"5. [E][ ] event task3 (at: Jan 01 2022 06:00)","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"6. [D][X] task4 (by: Feb 02 2021 02:24)","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"7. [E][ ] task1 (at: Dec 12 2034 23:45)","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yilinzyl":8}},{"path":"src/main/java/duke/CommandWords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Commands that the user can use in the Duke Application.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"public enum CommandWords {","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"    BYE, LIST, UNMARK, MARK, TODO, EVENT, DEADLINE, DELETE, FIND","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":" * Represents the main entry point of the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Duke application with UI and storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param filePath Path of file to store created tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * Starts running this application, accepting and responding to inputs from user.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    public void run() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"            try {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"            } finally {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"     * Creates an instance of Duke to start the application.","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"yilinzyl":54}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Represents any exception the Duke application can encounter.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"     * Initialise the Exception with a message.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"     * @param message Message describing the exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":" * Represents the parser of the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"public class Parser {","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * Parses the input.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * @param input Line of command that user has typed in.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @return Command for taking the next action.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If the input is in the wrong format.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"        CommandWords commandWord \u003d getCommand(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        case BYE:","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        case LIST:","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        case MARK:","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"            return new MarkCommand(getTaskNumber(4, input));","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"            return new UnmarkCommand(getTaskNumber(6, input));","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        case DELETE:","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"            return new DeleteCommand(getTaskNumber(6, input));","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"        case TODO:","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"            if (!input.substring(4, 5).equals(\" \")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"                throw new DukeException(\"Command and description should be separated by a space.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"            Task newTask \u003d new Todo(input.substring(5));","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"        case EVENT:","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"            String[] eventDescDate \u003d parseDescDate(\"/at\", \"event\", input);","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"            return new AddCommand(new Event(eventDescDate[0], parseDate(eventDescDate[1])));","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"            String[] deadlineDescDate \u003d parseDescDate(\"/by\", \"deadline\", input);","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"            return new AddCommand(new Deadline(deadlineDescDate[0], parseDate(deadlineDescDate[1])));","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        case FIND:","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"                throw new DukeException(\"The keyword to search for cannot be empty.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"            if (!input.substring(4, 5).equals(\" \")) {","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"                throw new DukeException(\"Command and keyword should be separated by a space.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"            return new FindCommand(input.substring(5));","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"        default:","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"    private static int getTaskNumber(int commandLength, String input) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"        if (input.length() \u003d\u003d commandLength || (input.length() \u003d\u003d commandLength + 1 \u0026\u0026","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"                input.substring(commandLength, commandLength + 1).equals(\" \"))) {","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Task number cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"        if (input.length() \u003e commandLength \u0026\u0026 !input.substring(commandLength, commandLength + 1).equals(\" \")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Command and task number should be separated by a space.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"            int taskNumber \u003d Integer.parseInt(input.substring(commandLength + 1));","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"            return taskNumber;","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Task number invalid.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"    private static CommandWords getCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.BYE;","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.LIST;","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.MARK;","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.UNMARK;","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.TODO;","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 7 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.DEADLINE;","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.EVENT;","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.DELETE;","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"find\")) {","lastModifiedDate":"2022-08-30"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.FIND;","lastModifiedDate":"2022-08-30"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"yilinzyl"},"content":"    private static String[] parseDescDate(String parser, String command, String input) throws DukeException{","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"yilinzyl"},"content":"        int commandLength \u003d command.length();","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"        if (input.length() \u003c commandLength + 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"        if (!input.substring(commandLength, commandLength + 1).equals(\" \")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Command and description should be separated by a space.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"        String inputWithoutCommand \u003d input.substring(commandLength + 1);","lastModifiedDate":"2022-08-30"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"        String[] descDate \u003d inputWithoutCommand.split(\" \" + parser + \" \");","lastModifiedDate":"2022-08-30"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"        if (descDate.length \u003c 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(command + \" date cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"        if (descDate.length \u003e 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"More than one \" + command + \" date entered.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"yilinzyl"},"content":"        return descDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"yilinzyl"},"content":"    private static LocalDateTime parseDate(String dateTime) throws DukeException{","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"yilinzyl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":132,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"yilinzyl"},"content":"            return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"yilinzyl"},"content":"        } catch (DateTimeParseException exp) {","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Date and time of wrong format.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":140}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.io.File;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" * Represents the storage of the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"public class Storage {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    private File file;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    private String filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a storage object with given path to file.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     * @param filePath Path to file where data should be stored.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * Updates the contents of this storage with the given task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @param list Updated task list to be stored.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If the application is unable to edit the file.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public void update(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"            FileWriter fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"            fileWriter.write(tasks.toString());","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Unable to write to file\");","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"     * Reads content from the file specified in the filePath. Creates the file if it does not exist.","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"     * @return A list with each element being each line of the file.","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to create the file from filepath.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException{","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"            Scanner s \u003d new Scanner(file).useDelimiter(\"\\\\r?\\\\n|\\\\r\");","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"            ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"            while (s.hasNext()){","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"                taskStrings.add(s.next());","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"            s.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"            return taskStrings;","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"                int directoryEndIndex \u003d filePath.lastIndexOf(\"/\");","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"                if (directoryEndIndex !\u003d -1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"                    String directory \u003d filePath.substring(0, directoryEndIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"                    new File(directory).mkdir();","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"                // System.out.println(ioException.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"                throw new DukeException(\"Unable to create file. Changes made will not be saved.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":" * Represents the list of tasks that have been created in the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"public class TaskList {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * Initialises an empty task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a task list from an existing list of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param taskStringList List with each element containing details of a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"    public TaskList(ArrayList\u003cString\u003e taskStringList) {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"        for (int i \u003d 0; i \u003c taskStringList.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"            String taskString \u003d taskStringList.get(i);","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"            Task task \u003d parseTaskString(taskString);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"     * Adds a task to this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"     * Deletes a task from this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"     * @param index Task number of task to be deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"     * @return Deleted task.","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If task number \u003c\u003d 0 or exceeds number of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"    public Task deleteTask(int i) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"        if (i \u003c 1 || i \u003e tasks.size()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"        Task removedTask \u003d tasks.remove(i - 1);","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"        return removedTask;","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"     * Gets the number of tasks in this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"     * @return Number of tasks in this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"    public int getNumTasks() {","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"     * Gets the task at the provided number in this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"     * @param i task number of task to be retrieved.","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"     * @return Task with that task number i.","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If task number \u003c\u003d 0 or exceeds number of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"    public Task getTask(int i) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"        if (i \u003c 1 || i \u003e tasks.size()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"        return tasks.get(i - 1);","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"     * Returns TaskList containing all found tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"     * @param keyword Keyword to be searched for.","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"     * @return TaskList containing all tasks that matched keyword.","lastModifiedDate":"2022-08-30"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"yilinzyl"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2022-08-30"},{"lineNumber":92,"author":{"gitId":"yilinzyl"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"                foundTasks.addTask(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"        return foundTasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"     * Gets String representation of this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"     * @return string representation of this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2022-08-30"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-30"},{"lineNumber":107,"author":{"gitId":"yilinzyl"},"content":"            tasksString +\u003d \"\\n\" + (i + 1) + \". \" + tasks.get(i).toString();","lastModifiedDate":"2022-08-30"},{"lineNumber":108,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"        return tasksString;","lastModifiedDate":"2022-08-30"},{"lineNumber":110,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"     * Creates a task object from its string description.","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"     * @param taskString Task description in string.","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"     * @return Task that is described by taskString.","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":117,"author":{"gitId":"yilinzyl"},"content":"    private Task parseTaskString(String taskString) {","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"yilinzyl"},"content":"        String withoutNumber \u003d taskString.substring(taskString.indexOf(\".\") + 2);","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"        String typeOfTask \u003d withoutNumber.substring(1, 2);","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"        String marked \u003d withoutNumber.substring(4, 5);","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"        String description \u003d withoutNumber.substring(7);","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"        if (typeOfTask.equals(\"T\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"            Task task \u003d new Todo(description);","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"            if (marked.equals(\"X\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"                task.markAsDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"yilinzyl"},"content":"            return task;","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"        } else if (typeOfTask.equals(\"D\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"yilinzyl"},"content":"            String[] descriptionAndDate \u003d description.split(\" \\\\(by: \");","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"yilinzyl"},"content":"            String descriptionOnly \u003d descriptionAndDate[0];","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"yilinzyl"},"content":"            String dateOnly \u003d descriptionAndDate[1].substring(0, descriptionAndDate[1].length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":132,"author":{"gitId":"yilinzyl"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"yilinzyl"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateOnly, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"yilinzyl"},"content":"            Task task \u003d new Deadline(descriptionOnly, dateTime);","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"yilinzyl"},"content":"            if (marked.equals(\"X\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"yilinzyl"},"content":"                task.markAsDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"yilinzyl"},"content":"            return task;","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"yilinzyl"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"yilinzyl"},"content":"            String[] descriptionAndDate \u003d description.split(\" \\\\(at: \");","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"yilinzyl"},"content":"            String descriptionOnly \u003d descriptionAndDate[0];","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"yilinzyl"},"content":"            String dateOnly \u003d descriptionAndDate[1].substring(0, descriptionAndDate[1].length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"yilinzyl"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"yilinzyl"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateOnly, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":147,"author":{"gitId":"yilinzyl"},"content":"            Task task \u003d new Event(descriptionOnly, dateTime);","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"yilinzyl"},"content":"            if (marked.equals(\"X\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":149,"author":{"gitId":"yilinzyl"},"content":"                task.markAsDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"yilinzyl"},"content":"            return task;","lastModifiedDate":"2022-08-28"},{"lineNumber":152,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":155}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":" * Represents the User Interface of the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"public class Ui {","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the user interface of the application.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    public Ui() {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * Displays the default welcome message.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(logo + \"\\nHello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * Displays the default exit message.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    public void showExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"        String exit \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(exit);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"     * Displays the line separator between commands.","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"     * Displays all task from given TaskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks TaskList to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"     * Display list of found tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task List to find in.","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"     * @param keyword Keyword that should match tasks found.","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"    public void showFindResults(TaskList tasks, String keyword) {","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(message + tasks.find(keyword).toString());","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"     * Displays added message on successful addition of task.","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task that has been added.","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"     * @param numTask Number of tasks in the current TaskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"    public void showAddMessage(Task task, int numTask) {","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n  \" + task.toString() +","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"                \"\\nNow you have \" + numTask + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"     * Displays deleted message on successful deletion of task.","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task that has been deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"     * @param numTask Number of tasks in the current TaskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"    public void showDeleteMessage(Task task, int numTask) {","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n  \" + task.toString() +","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"                \"\\nNow you have \" + numTask + \" tasks in the list.\";","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"     * Displays marked message on successful marking of task.","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task that has been marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"    public void showMarkedMessage(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done\\n  \" + task.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"     * Displays unmarked message on successful unmarking of task.","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task that has been unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"    public void showUnmarkedMessage(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task.toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"     * Displays error message if file cannot be loaded.","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(\"Unable to load data\");","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":111,"author":{"gitId":"yilinzyl"},"content":"     * Displays given error message.","lastModifiedDate":"2022-08-29"},{"lineNumber":112,"author":{"gitId":"yilinzyl"},"content":"     * @param errorMessage Error message to be displayed.","lastModifiedDate":"2022-08-29"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"        System.out.println(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"     * Get the next line of user input.","lastModifiedDate":"2022-08-29"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"     * @return The line of user input.","lastModifiedDate":"2022-08-29"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"        return command;","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":128}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to add a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    private Task task;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the AddCommand with the task to be added.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to add a task to the list and update storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that task is added to.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param ui UI to display success on addition.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to be updated with newly added task.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to write to storage file.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        ui.showAddMessage(this.task, tasks.getNumTasks());","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"     * Checks if Duke application should exit after this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"     * @return False as this command is not bye.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":48}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"abstract public class Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list to be altered during the execution.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param ui UI to display results of the execution.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to store results of the execution to.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If user enters an invalid input.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     * Checks if Duke application should exit after this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"     * @return Boolean of whether application should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the DeleteCommand with the task number of task to be deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * @param taskNumber Task number of task to be deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to delete a task from the list and update storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that task at task number is deleted from.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param ui UI to display success on deletion.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to be updated after deleting task.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to write to storage file.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        Task deletedTask \u003d tasks.deleteTask(this.taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        ui.showDeleteMessage(deletedTask, tasks.getNumTasks());","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"     * Checks if Duke application should exit after this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"     * @return False as this command is not bye.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":48}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the exit command.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list used in application.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     * @param ui UI to display bye message.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage used in application.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        ui.showExit();","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * Checks if Duke application should exit after this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * @return True as bye is the command to exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        return true;","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":37}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to list all current tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    private String keyword;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the find command with the keyword to find.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param keyword Keyword that matches task descriptions to be found.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list to be listed.","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"     * @param ui UI to display list.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage used in application.","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        ui.showFindResults(tasks, keyword);","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"     * Checks if Duke application should exit after this command.","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"     * @return False as this command is not bye.","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yilinzyl":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to list all current tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the list command.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list to be listed.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     * @param ui UI to display list.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage used in application.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        ui.showList(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * Checks if Duke application should exit after this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * @return False as this command is not bye.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":37}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the MarkCommand with the task number of task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * @param taskNumber Task number of task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to mark a task as done and update storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that task at task number is retrieved from.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @param ui UI to display success on marking.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to be updated after marking task.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to write to storage file.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        ui.showMarkedMessage(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"     * Checks if Duke application should exit after this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"     * @return False as this command is not bye.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":50}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the UnmarkCommand with the task number of task to be unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * @param taskNumber Task number of task to be unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to mark a task as not done and update storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that task at task number is retrieved from.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param ui UI to display success on unmarking.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to be updated after unmarking task.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to write to storage file.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        ui.showUnmarkedMessage(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"     * Checks if Duke application should exit after this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"     * @return False as this command is not bye.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":49}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"    private LocalDateTime by;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Deadline with its description and due date.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param by Due date of the deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"     * Gets String representation of this deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"     * @return String representation of this deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":" * Represents a task that occurs at a specific time.","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"    private LocalDateTime at;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     * Initialises an Event with its description and date.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the event.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param at DateTime that event occurs.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"     * Gets String representation of this event.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"     * @return String representation of this event.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"abstract public class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"    private String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Task with its description.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"     * Gets description of task.","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"     * @return Description of task.","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        return this.description;","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"     * Gets String representation of this task.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":53}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Represents a task without any date/time attached.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Todo with its description.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     * Gets String representation of this todo.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * @return String representation of this todo.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":25}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"    public void testParse_byeCommand_success() {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"            assertEquals(true, Parser.parse(\"bye\").isExit());","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"            fail();","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"yilinzyl":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    public void testGetNumberOfTasks() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(0, new TaskList().getNumTasks());","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"yilinzyl":14}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(\"[T][ ] Task1\", new Todo(\"Task1\").toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"yilinzyl":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"todo borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"list","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":4}}]

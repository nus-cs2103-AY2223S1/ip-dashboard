[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"yilinzyl":17}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"1. [T][ ] task3","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"2. [T][X] task4","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"3. [E][ ] event task3 (at: Jan 01 2022 06:00)","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"4. [D][X] task4 (by: Feb 02 2021 02:24)","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"5. [E][ ] task1 (at: Dec 12 2034 23:45)","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"6. [D][ ] ip (by: Sep 02 2022 16:00)","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"7. [T][X] ip","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"8. [T][ ] meet layne","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"yilinzyl":9}},{"path":"src/main/java/duke/CommandWords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Commands that the user can use in the Duke Application.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"public enum CommandWords {","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"    BYE, LIST, UNMARK, MARK, TODO, EVENT, DEADLINE, DELETE, FIND, SORT","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Represents the main entry point of the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Duke application with storage.","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     * @param filePath Path of file to store created tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"     * Loads tasks from storage.","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * @return True if loading/file creation is successful, False if there is an error loading/creating file.","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    public boolean loadFile() {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"            return true;","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"            return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"     * Gets the response of an input.","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"     * @param input String input entered by user.","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"     * @return A Response from executing the input\u0027s command.","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"            return new Response(e.getMessage(), false);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"yilinzyl":49}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"public class Launcher {","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yilinzyl":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"            stage.show();","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yilinzyl":32}},{"path":"src/main/java/duke/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Represents the response of executing a command.","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"public class Response {","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"    private String message;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"    private boolean isBye;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the Response with the message of the execution and whether it is bye.","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     * @param message Message to display to user after executing command.","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     * @param isBye Boolean to represent if the app should be closed.","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    public Response(String message, boolean isBye) {","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"        this.isBye \u003d isBye;","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"     * Gets the message of the response.","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     * @return Message string.","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        return this.message;","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * Checks if application should exit.","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * @return Boolean if application should exit.","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        return this.isBye;","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yilinzyl":37}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import java.io.File;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":" * Represents the storage of the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"public class Storage {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    private File file;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    private String filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a storage object with given path to file.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     * @param filePath Path to file where data should be stored.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     * Updates the contents of this storage with the given task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Updated task list to be stored.","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If the application is unable to edit the file.","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"    public void update(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"            FileWriter fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"            fileWriter.write(tasks.toString());","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Unable to write to file\");","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"     * Reads content from the file specified in the filePath. Creates the file if it does not exist.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"     * @return A list with each element being each line of the file.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to create the file from filepath.","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException{","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"            Scanner s \u003d new Scanner(file).useDelimiter(\"\\\\r?\\\\n|\\\\r\");","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"            ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"            while (s.hasNext()){","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"                taskStrings.add(s.next());","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"            s.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"            return taskStrings;","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"                int directoryEndIndex \u003d filePath.lastIndexOf(\"/\");","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"                if (directoryEndIndex !\u003d -1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"                    String directory \u003d filePath.substring(0, directoryEndIndex);","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"                    new File(directory).mkdir();","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"                throw new DukeException(\"Unable to create file. Changes made will not be saved.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":75}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeRuntimeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.task.DatedTask;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import java.util.Date;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":" * Represents the list of tasks that have been created in the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"public class TaskList {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"     * Initialises an empty task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a task list from an existing list of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     * @param taskStringList List with each element containing details of a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public TaskList(ArrayList\u003cString\u003e taskStringList) {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        for (String taskString : taskStringList) {","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"            Task task \u003d parseTaskString(taskString);","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"     * Adds a task to this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"        assert task !\u003d null : \"Task to be added to tasks is null.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"     * Deletes a task from this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"     * @param i Task number of task to be deleted.","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"     * @return Deleted task.","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If task number \u003c\u003d 0 or exceeds number of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"    public Task deleteTask(int i) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"        boolean isTaskNumberWithinLimit \u003d i \u003c 1 || i \u003e tasks.size();","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        if (isTaskNumberWithinLimit) {","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"        return tasks.remove(i - 1);","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"     * Gets the number of tasks in this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"     * @return Number of tasks in this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"    public int getNumTasks() {","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"     * Gets the task at the provided number in this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"     * @param i task number of task to be retrieved.","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"     * @return Task with that task number i.","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If task number \u003c\u003d 0 or exceeds number of tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"    public Task getTask(int i) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        boolean isTaskNumberWithinLimit \u003d i \u003c 1 || i \u003e tasks.size();","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"        if (isTaskNumberWithinLimit) {","lastModifiedDate":"2022-09-18"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"        return tasks.get(i - 1);","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"     * Returns TaskList containing all found tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"     * @param keyword Keyword to be searched for.","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"yilinzyl"},"content":"     * @return TaskList containing all tasks that matched keyword.","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":92,"author":{"gitId":"yilinzyl"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-18"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2022-08-30"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"                foundTasks.addTask(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"        return foundTasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"     * Returns TaskList containing all tasks in sorted order.","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"     * @param taskType Type of tasks to be sorted - Deadline, event or both.","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"     * @return TaskList containing matching tasks in sorted order.","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"yilinzyl"},"content":"    public TaskList sort(String taskType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"        ArrayList\u003cDatedTask\u003e filteredTasks \u003d filterByDatedTask(taskType);","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"yilinzyl"},"content":"        filteredTasks.sort((x, y) -\u003e x.compareTo(y));","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"yilinzyl"},"content":"        TaskList sortedTasks \u003d new TaskList();","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"yilinzyl"},"content":"        for (Task sortedTask : filteredTasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"            sortedTasks.addTask(sortedTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"        return sortedTasks;","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"yilinzyl"},"content":"    private ArrayList\u003cDatedTask\u003e filterByDatedTask(String taskType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"        ArrayList\u003cDatedTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"        switch (taskType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"                    DatedTask datedTask \u003d (DatedTask) task;","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"                    filteredList.add(datedTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"yilinzyl"},"content":"        case \"event\":","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"yilinzyl"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"yilinzyl"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"yilinzyl"},"content":"                    DatedTask datedTask \u003d (DatedTask) task;","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"yilinzyl"},"content":"                    filteredList.add(datedTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"yilinzyl"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"yilinzyl"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"yilinzyl"},"content":"        case \"dated\":","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"yilinzyl"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"yilinzyl"},"content":"                if (task instanceof DatedTask) {","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"yilinzyl"},"content":"                    DatedTask datedTask \u003d (DatedTask) task;","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"yilinzyl"},"content":"                    filteredList.add(datedTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":142,"author":{"gitId":"yilinzyl"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"yilinzyl"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"yilinzyl"},"content":"        default:","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeRuntimeException(\"TaskList::filter invalid task type entered.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"yilinzyl"},"content":"        return filteredList;","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":151,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":152,"author":{"gitId":"yilinzyl"},"content":"     * Gets String representation of this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":153,"author":{"gitId":"yilinzyl"},"content":"     * @return string representation of this task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":154,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":155,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"yilinzyl"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2022-08-30"},{"lineNumber":158,"author":{"gitId":"yilinzyl"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-30"},{"lineNumber":159,"author":{"gitId":"yilinzyl"},"content":"            tasksString +\u003d \"\\n\" + (i + 1) + \". \" + tasks.get(i).toString();","lastModifiedDate":"2022-08-30"},{"lineNumber":160,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"yilinzyl"},"content":"        return tasksString;","lastModifiedDate":"2022-08-30"},{"lineNumber":162,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":163,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":165,"author":{"gitId":"yilinzyl"},"content":"     * Creates a task object from its string description.","lastModifiedDate":"2022-08-29"},{"lineNumber":166,"author":{"gitId":"yilinzyl"},"content":"     * @param taskString Task description in string.","lastModifiedDate":"2022-08-29"},{"lineNumber":167,"author":{"gitId":"yilinzyl"},"content":"     * @return Task that is described by taskString.","lastModifiedDate":"2022-08-29"},{"lineNumber":168,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":169,"author":{"gitId":"yilinzyl"},"content":"    private Task parseTaskString(String taskString) {","lastModifiedDate":"2022-08-28"},{"lineNumber":170,"author":{"gitId":"yilinzyl"},"content":"        String withoutNumber \u003d taskString.substring(taskString.indexOf(\".\") + 2);","lastModifiedDate":"2022-08-28"},{"lineNumber":171,"author":{"gitId":"yilinzyl"},"content":"        String typeOfTask \u003d withoutNumber.substring(1, 2);","lastModifiedDate":"2022-08-28"},{"lineNumber":172,"author":{"gitId":"yilinzyl"},"content":"        boolean isTodo \u003d typeOfTask.equals(\"T\");","lastModifiedDate":"2022-09-18"},{"lineNumber":173,"author":{"gitId":"yilinzyl"},"content":"        boolean isEvent \u003d typeOfTask.equals(\"E\");","lastModifiedDate":"2022-09-18"},{"lineNumber":174,"author":{"gitId":"yilinzyl"},"content":"        boolean isDeadline \u003d typeOfTask.equals(\"D\");","lastModifiedDate":"2022-09-18"},{"lineNumber":175,"author":{"gitId":"yilinzyl"},"content":"        assert (isTodo || isDeadline || isEvent) : \"Invalid stored task type.\";","lastModifiedDate":"2022-09-18"},{"lineNumber":176,"author":{"gitId":"yilinzyl"},"content":"        String marked \u003d withoutNumber.substring(4, 5);","lastModifiedDate":"2022-08-28"},{"lineNumber":177,"author":{"gitId":"yilinzyl"},"content":"        String description \u003d withoutNumber.substring(7);","lastModifiedDate":"2022-08-28"},{"lineNumber":178,"author":{"gitId":"yilinzyl"},"content":"        if (isTodo) {","lastModifiedDate":"2022-09-18"},{"lineNumber":179,"author":{"gitId":"yilinzyl"},"content":"            Task task \u003d new Todo(description);","lastModifiedDate":"2022-08-28"},{"lineNumber":180,"author":{"gitId":"yilinzyl"},"content":"            if (marked.equals(\"X\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":181,"author":{"gitId":"yilinzyl"},"content":"                task.markAsDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":182,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":183,"author":{"gitId":"yilinzyl"},"content":"            return task;","lastModifiedDate":"2022-08-28"},{"lineNumber":184,"author":{"gitId":"yilinzyl"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2022-09-18"},{"lineNumber":185,"author":{"gitId":"yilinzyl"},"content":"            assert description.contains(\" (by: \") : \"Stored deadline does not contain by date.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":186,"author":{"gitId":"yilinzyl"},"content":"            return parseDescriptionDate(\"by\", CommandWords.DEADLINE, description, marked);","lastModifiedDate":"2022-09-18"},{"lineNumber":187,"author":{"gitId":"yilinzyl"},"content":"        } else if (isEvent) {","lastModifiedDate":"2022-09-18"},{"lineNumber":188,"author":{"gitId":"yilinzyl"},"content":"            assert description.contains(\" (at: \") : \"Stored event does not contain at date.\";","lastModifiedDate":"2022-09-18"},{"lineNumber":189,"author":{"gitId":"yilinzyl"},"content":"            return parseDescriptionDate(\"at\", CommandWords.EVENT, description, marked);","lastModifiedDate":"2022-09-18"},{"lineNumber":190,"author":{"gitId":"yilinzyl"},"content":"        } else {","lastModifiedDate":"2022-09-18"},{"lineNumber":191,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeRuntimeException(\"TaskList::parseTaskString Stored task is not a todo, deadline or event\");","lastModifiedDate":"2022-09-18"},{"lineNumber":192,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":193,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":194,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":195,"author":{"gitId":"yilinzyl"},"content":"    private Task parseDescriptionDate(String separator, CommandWords command, String description, String marked) {","lastModifiedDate":"2022-09-18"},{"lineNumber":196,"author":{"gitId":"yilinzyl"},"content":"        String[] descriptionAndDate \u003d description.split(\" \\\\(\"+ separator + \": \");","lastModifiedDate":"2022-09-18"},{"lineNumber":197,"author":{"gitId":"yilinzyl"},"content":"        String descriptionOnly \u003d descriptionAndDate[0];","lastModifiedDate":"2022-08-28"},{"lineNumber":198,"author":{"gitId":"yilinzyl"},"content":"        String dateOnly \u003d descriptionAndDate[1].substring(0, descriptionAndDate[1].length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":199,"author":{"gitId":"yilinzyl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":200,"author":{"gitId":"yilinzyl"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dateOnly, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":201,"author":{"gitId":"yilinzyl"},"content":"        Task task;","lastModifiedDate":"2022-09-18"},{"lineNumber":202,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":203,"author":{"gitId":"yilinzyl"},"content":"        switch (command) {","lastModifiedDate":"2022-09-18"},{"lineNumber":204,"author":{"gitId":"yilinzyl"},"content":"        case EVENT:","lastModifiedDate":"2022-09-18"},{"lineNumber":205,"author":{"gitId":"yilinzyl"},"content":"            task \u003d new Event(descriptionOnly, dateTime);","lastModifiedDate":"2022-09-18"},{"lineNumber":206,"author":{"gitId":"yilinzyl"},"content":"            break;","lastModifiedDate":"2022-09-18"},{"lineNumber":207,"author":{"gitId":"yilinzyl"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-18"},{"lineNumber":208,"author":{"gitId":"yilinzyl"},"content":"            task \u003d new Deadline(descriptionOnly, dateTime);","lastModifiedDate":"2022-09-18"},{"lineNumber":209,"author":{"gitId":"yilinzyl"},"content":"            break;","lastModifiedDate":"2022-09-18"},{"lineNumber":210,"author":{"gitId":"yilinzyl"},"content":"        default:","lastModifiedDate":"2022-09-18"},{"lineNumber":211,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeRuntimeException(\"TaskList::parseDescriptionDate Invalid input\");","lastModifiedDate":"2022-09-18"},{"lineNumber":212,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":213,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":214,"author":{"gitId":"yilinzyl"},"content":"        boolean isMarked \u003d marked.equals(\"X\");","lastModifiedDate":"2022-09-18"},{"lineNumber":215,"author":{"gitId":"yilinzyl"},"content":"        if (isMarked) {","lastModifiedDate":"2022-09-18"},{"lineNumber":216,"author":{"gitId":"yilinzyl"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":217,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":218,"author":{"gitId":"yilinzyl"},"content":"        return task;","lastModifiedDate":"2022-08-28"},{"lineNumber":219,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":220,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":221,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":221}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to add a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    private Task task;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the AddCommand with the task to be added.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to add a task to the list and update storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that task is added to.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to be updated with newly added task.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to write to storage file.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public Response execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n  \" + task.toString() +","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"                \"\\nNow you have \" + tasks.getNumTasks() + \" tasks in the list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        return new Response(message, false);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"abstract public class Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list to be altered during the execution.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to store results of the execution to.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If user enters an invalid input.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    public abstract Response execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the DeleteCommand with the task number of task to be deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * @param taskNumber Task number of task to be deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to delete a task from the list and update storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that task at task number is deleted from.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to be updated after deleting task.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to write to storage file.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public Response execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        Task deletedTask \u003d tasks.deleteTask(this.taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n  \" + deletedTask.toString() +","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"                \"\\nNow you have \" + tasks.getNumTasks() + \" tasks in the list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        return new Response(message, false);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":40}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the exit command.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list used in application.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage used in application.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    public Response execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        return new Response(\"Bye. Hope to see you again soon!\", true);","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to list all current tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    private String keyword;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the find command with the keyword to find.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param keyword Keyword that matches task descriptions to be found.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list to find from.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage used in application.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    public Response execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"        return new Response(message + tasks.find(keyword).toString(), false);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yilinzyl":33}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to list all current tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the list command.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list to be listed.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage used in application.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    public Response execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        return new Response(tasks.toString(), false);","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the MarkCommand with the task number of task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * @param taskNumber Task number of task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to mark a task as done and update storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that task at task number is retrieved from.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to be updated after marking task.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to write to storage file.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public Response execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done\\n  \" + task.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        return new Response(message, false);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":41}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to sort dated tasks according to their dates.","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    /* Type of task to be shown - Event, Deadline or both */","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    private String taskType;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the SortCommand with the task type of tasks to be sorted.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * @param taskType Type of tasks to be displayed.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    public SortCommand(String taskType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the SortCommand with all deadline and events to be sorted.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    public SortCommand() {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        this.taskType \u003d \"dated\";","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to sort all deadlines and events, or just deadlines or events.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that contains tasks to be sorted.","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage used in application.","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    public Response execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"        TaskList sortedTasks \u003d tasks.sort(taskType);","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d sortedTasks.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"        return new Response(message, false);","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"yilinzyl":45}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.Response;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the UnmarkCommand with the task number of task to be unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * @param taskNumber Task number of task to be unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * Executes this command to mark a task as not done and update storage.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * @param tasks Task list that task at task number is retrieved from.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param storage Storage to be updated after unmarking task.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * @return The response of the execution.","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If unable to write to storage file.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public Response execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        storage.update(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        String message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        return new Response(message, false);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    };","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":40}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.exception;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Represents any checked exception the Duke application can encounter.","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the Exception with a message.","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"     * @param message Message describing the exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":16}},{"path":"src/main/java/duke/exception/DukeRuntimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Represents any unchecked exception the Duke application can encounter (that should have been avoided).","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"public class DukeRuntimeException extends RuntimeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"     * Initialises the Exception with a message.","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"     * @param message Message describing the exception.","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    public DukeRuntimeException(String message) {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"        super(\"(Runtime Exception)\" + message);","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"yilinzyl":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.CommandWords;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":" * Represents the parser of the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"public class Parser {","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     * Parses the input.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * @param input Line of command that user has typed in.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * @return Command for taking the next action.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     * @throws DukeException If the input is in the wrong format.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        CommandWords commandWord \u003d getCommand(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        int startIndexOfDescription;","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        case BYE:","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"        case LIST:","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        case MARK:","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"            return new MarkCommand(getTaskNumber(4, input));","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"            return new UnmarkCommand(getTaskNumber(6, input));","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"        case DELETE:","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"            return new DeleteCommand(getTaskNumber(6, input));","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"        case TODO:","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"            checkSeperatedBySpace(4, input);","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"            startIndexOfDescription \u003d 6;","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"            if (input.length() \u003c startIndexOfDescription) {","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"            Task newTask \u003d new Todo(input.substring(5));","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"        case EVENT:","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"            String[] eventDescDate \u003d parseDescDate(\"/at\", \"event\", input);","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"            return new AddCommand(new Event(eventDescDate[0], parseDate(eventDescDate[1])));","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"            String[] deadlineDescDate \u003d parseDescDate(\"/by\", \"deadline\", input);","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"            return new AddCommand(new Deadline(deadlineDescDate[0], parseDate(deadlineDescDate[1])));","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"        case FIND:","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"            checkSeperatedBySpace(4, input);","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"            startIndexOfDescription \u003d 6;","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"            if (input.length() \u003c startIndexOfDescription) {","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"                throw new DukeException(\"The keyword to search for cannot be empty.\");","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"            return new FindCommand(input.substring(5));","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"        case SORT:","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"            int commandLength \u003d 4;","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"            if (input.length() \u003d\u003d commandLength) {","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"                return new SortCommand();","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"            if (input.equals(\"sort deadline\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"                return new SortCommand(\"deadline\");","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"            if (input.equals(\"sort event\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"                return new SortCommand(\"event\");","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        default:","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"    private static CommandWords getCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.BYE;","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.LIST;","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.MARK;","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.UNMARK;","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.TODO;","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 7 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.DEADLINE;","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.EVENT;","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.DELETE;","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"find\")) {","lastModifiedDate":"2022-08-30"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.FIND;","lastModifiedDate":"2022-08-30"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"        } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"sort\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"            return CommandWords.SORT;","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"yilinzyl"},"content":"    private static void checkSeperatedBySpace(int commandLength, String input) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":112,"author":{"gitId":"yilinzyl"},"content":"        boolean hasSpace \u003d input.charAt(commandLength) !\u003d \u0027 \u0027;","lastModifiedDate":"2022-09-18"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"        if (!hasSpace) {","lastModifiedDate":"2022-09-18"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Command and keyword should be separated by a space.\");","lastModifiedDate":"2022-09-18"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":117,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":118,"author":{"gitId":"yilinzyl"},"content":"    private static int getTaskNumber(int commandLength, String input) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"        boolean doesOnlyContainCommand \u003d input.length() \u003d\u003d commandLength;","lastModifiedDate":"2022-09-18"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"        boolean doesOnlyContainCommandAndSpace \u003d input.length() \u003d\u003d commandLength + 1 \u0026\u0026","lastModifiedDate":"2022-09-18"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"                input.charAt(commandLength) \u003d\u003d \u0027 \u0027;","lastModifiedDate":"2022-09-18"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"        if (doesOnlyContainCommand || doesOnlyContainCommandAndSpace) {","lastModifiedDate":"2022-09-18"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Task number cannot be empty.\");","lastModifiedDate":"2022-09-18"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"        checkSeperatedBySpace(commandLength, input);","lastModifiedDate":"2022-09-18"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":127,"author":{"gitId":"yilinzyl"},"content":"            return Integer.parseInt(input.substring(commandLength + 1));","lastModifiedDate":"2022-09-18"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":129,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Task number invalid.\");","lastModifiedDate":"2022-09-18"},{"lineNumber":130,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":131,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":132,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":133,"author":{"gitId":"yilinzyl"},"content":"    private static String[] parseDescDate(String parser, String command, String input) throws DukeException{","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"yilinzyl"},"content":"        int commandLength \u003d command.length();","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"yilinzyl"},"content":"        if (input.length() \u003c commandLength + 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"yilinzyl"},"content":"        checkSeperatedBySpace(commandLength, input);","lastModifiedDate":"2022-09-18"},{"lineNumber":139,"author":{"gitId":"yilinzyl"},"content":"        String inputWithoutCommand \u003d input.substring(commandLength + 1);","lastModifiedDate":"2022-08-30"},{"lineNumber":140,"author":{"gitId":"yilinzyl"},"content":"        String[] descDate \u003d inputWithoutCommand.split(\" \" + parser + \" \");","lastModifiedDate":"2022-08-30"},{"lineNumber":141,"author":{"gitId":"yilinzyl"},"content":"        boolean hasDate \u003d descDate.length \u003e\u003d 2;","lastModifiedDate":"2022-09-18"},{"lineNumber":142,"author":{"gitId":"yilinzyl"},"content":"        boolean hasMoreThanOneDate \u003d descDate.length \u003e 2;","lastModifiedDate":"2022-09-18"},{"lineNumber":143,"author":{"gitId":"yilinzyl"},"content":"        if (!hasDate) {","lastModifiedDate":"2022-09-18"},{"lineNumber":144,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(command + \" date cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"yilinzyl"},"content":"        if (hasMoreThanOneDate) {","lastModifiedDate":"2022-09-18"},{"lineNumber":147,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"More than one \" + command + \" date entered.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":149,"author":{"gitId":"yilinzyl"},"content":"        return descDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":152,"author":{"gitId":"yilinzyl"},"content":"    private static LocalDateTime parseDate(String dateTime) throws DukeException{","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"yilinzyl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"yilinzyl"},"content":"            return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"yilinzyl"},"content":"        } catch (DateTimeParseException exp) {","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"yilinzyl"},"content":"            throw new DukeException(\"Date and time of wrong format.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":158,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":159,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":160,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-28"},{"lineNumber":162,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"yilinzyl":162}},{"path":"src/main/java/duke/task/DatedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":" * Represents a task that is associated with a date.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"abstract public class DatedTask extends Task {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Task with its description.","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    public DatedTask(String description) {","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"        super(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * Checks if another DatedTask occurs later or earlier than self.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     * @param task Task to compare to.","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"     * @return returns 1 if self is later than task, -1 if task if it is earlier.","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    public abstract int compareTo(DatedTask task);","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * Gets the date the task occurs/is due.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @return LocalDateTime of date.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"    public abstract LocalDateTime getDate();","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"yilinzyl":32}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"public class Deadline extends DatedTask {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"    private LocalDateTime by;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Deadline with its description and due date.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param by Due date of the deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"        return by;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    public int compareTo(DatedTask task) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        return this.by.isAfter(task.getDate()) ? 1 : -1;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import java.util.Date;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Represents a task that occurs at a specific time.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"public class Event extends DatedTask {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    private LocalDateTime at;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"     * Initialises an Event with its description and date.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the event.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     * @param at DateTime that event occurs.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        return at;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"    public int compareTo(DatedTask task) {","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"        return this.at.isAfter(task.getDate()) ? 1 : -1;","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"abstract public class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"    private String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Task with its description.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"     * Gets description of task.","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"     * @return Description of task.","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        return this.description;","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"     * Gets String representation of this task.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":53}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":" * Represents a task without any date/time attached.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"     * Initialises a Todo with its description.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":21}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    private void flip() {","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"        db.flip();","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        return db;","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yilinzyl":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        boolean isLoadFileSuccess \u003d duke.loadFile();","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        if (isLoadFileSuccess) {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"                    \"Hello! I\u0027m Duke\\n What can I do for you?\", dukeImage));","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"        } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"                    \"Unable to load data\", dukeImage));","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"        String response \u003d duke.getResponse(input).getMessage();","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"        );","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yilinzyl":60}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yilinzyl":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yilinzyl":21}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"//    @Test","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"//    public void testParse_byeCommand_success() {","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"//        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"//            assertEquals(true, Parser.parse(\"bye\").execute().isExit());","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"//        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"//            fail();","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"//        }","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"//    }","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"yilinzyl":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    public void testGetNumberOfTasks() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(0, new TaskList().getNumTasks());","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"yilinzyl":14}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package duke.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(\"[T][ ] Task1\", new Todo(\"Task1\").toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"yilinzyl":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"todo borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"list","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yilinzyl":4}}]

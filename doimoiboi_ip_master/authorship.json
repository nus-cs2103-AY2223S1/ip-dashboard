[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"doimoiboi":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"plugins {","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"repositories {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"dependencies {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"test {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"    testLogging {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"        showExceptions true","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"        showCauses true","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"application {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"    mainClassName \u003d \"duke.launcher.DukeLauncher\"","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"shadowJar {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"run{","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":55}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"T|false|your mother|0|","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"E|true|your sister|20/02/2030 1900|","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":2}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"D|false|your sister|01/01/2025 1900|","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"E|false|your father|01/01/2033 1500|","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"T|false|your mother|0|","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"T|false|your sister|0|","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"T|false|your family|0|","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"T|false|your granny|0|","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"T|false|your grandpa|0|","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"T|false|your brother|0|","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"T|false|your sister|0|","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"D|false|your sister|01/01/2023 1900|","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"E|false|your family|01/01/2023 1900|","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"A|true|your younger brother|01/01/2025 0000|","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"doimoiboi":12}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"Duke is a desktop app for the highest of achievers to manage their tasks.","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"It is optimised for use via a Command Line Interface (CLI). If you are a hard","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"worker and a visionary among your contemporaries, Duke can manage your tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"faster than traditional GUI apps, provided that you can type fast.","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"## Quick Start","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"1. Ensure you have Java 11 installed in your computer.","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"2. Download Duke.jar","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"3. Copy the file to the folder you want to use as the home folder for your AddressBook.","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"![Duke GUI](https://https://github.com/doimoiboi/ip/blob/master/resources/duke-gui.png)","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"6. Refer to the Features section below for details of the commands.","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"### Adding tasks : `todo/deadline/event/doafter`","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"Adds a task of the specified type to the task list.","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"Format:","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"- `todo \u003cdescription\u003e`","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"- `deadline \u003cdescription\u003e /by DD/MM/YYYY HHMM`","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"- `event \u003cdescription\u003e /at DD/MM/YYYY HHMM`","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"- `doafter \u003cdescription\u003e /after DD/MM/YYYY HHMM`","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"### List : `list`","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"Lists out all tasks and their status of completion.","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"Format: `list`","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"### Changing status of completion: `mark/unmark`","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"Changes the status of completion of the specified task to either done","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"or not done.","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"Format: ","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"- `mark \u003ctask index\u003e`","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"- `unmark \u003ctask index\u003e`","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"### Deleting tasks: `delete`","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"Removes the specified task from the task list.","lastModifiedDate":"2022-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"Format: `delete \u003ctask index\u003e`","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"doimoiboi"},"content":"### Finding tasks: `find`","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"doimoiboi"},"content":"Displays all the tasks that contain the text that is searched for.","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"doimoiboi"},"content":"Format: `find \u003ctext to find\u003e`","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":65,"author":{"gitId":"doimoiboi"},"content":"### Exiting Duke: `bye`","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"doimoiboi"},"content":"Closes the Duke program.","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"doimoiboi"},"content":"Format: `bye`","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"doimoiboi":43,"-":26}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"goto fail","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"doimoiboi"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"doimoiboi"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"doimoiboi"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"doimoiboi"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"doimoiboi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"doimoiboi"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"doimoiboi"},"content":"goto fail","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"doimoiboi"},"content":":init","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"doimoiboi"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"doimoiboi"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"doimoiboi"},"content":":win9xME_args","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"doimoiboi"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"doimoiboi"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"doimoiboi"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"doimoiboi"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"doimoiboi"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"doimoiboi"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"doimoiboi"},"content":":execute","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"doimoiboi"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"doimoiboi"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"doimoiboi"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"doimoiboi"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"doimoiboi"},"content":":end","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"doimoiboi"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"doimoiboi"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"doimoiboi"},"content":":fail","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"doimoiboi"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"doimoiboi"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"doimoiboi"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"doimoiboi"},"content":"exit /b 1","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"doimoiboi"},"content":":mainEnd","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"doimoiboi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"doimoiboi"},"content":":omega","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":103}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"    private Label text;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"        text \u003d l;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"    private void flip() {","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"        db.flip();","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"        return db;","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"doimoiboi":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"    public Duke() {","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"     * Constructor that creates an instance of duke.Duke linked to the specified file path.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"     * @param filePath The file path name on a computer.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(\"Duke starting\");","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(\"Duke started\");","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"        duke.run();","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"doimoiboi"},"content":"     * Method runs duke.Duke list making program.","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"doimoiboi"},"content":"    public void run() {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"doimoiboi"},"content":"        this.ui.greet();","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"doimoiboi"},"content":"        this.storage.readData(this.tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"doimoiboi"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"doimoiboi"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"doimoiboi"},"content":"                String fullCommand \u003d this.ui.readInput();","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"doimoiboi"},"content":"                this.ui.printLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"doimoiboi"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"doimoiboi"},"content":"                c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"doimoiboi"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"doimoiboi"},"content":"                System.out.println(\"That command was not valid. Try again!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"doimoiboi"},"content":"            } finally {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"doimoiboi"},"content":"                this.ui.printLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"doimoiboi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"doimoiboi"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"doimoiboi"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"doimoiboi"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"doimoiboi"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"doimoiboi"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"doimoiboi"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"doimoiboi"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"doimoiboi"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"doimoiboi"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"doimoiboi"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"doimoiboi"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"doimoiboi"},"content":"        stage.show();","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"doimoiboi"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"doimoiboi"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"doimoiboi"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"doimoiboi"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"doimoiboi"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"doimoiboi"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"doimoiboi"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"doimoiboi"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"doimoiboi"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"doimoiboi"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"doimoiboi"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"doimoiboi"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"doimoiboi"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"doimoiboi"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"doimoiboi"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":118,"author":{"gitId":"doimoiboi"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":119,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"doimoiboi"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"doimoiboi"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"doimoiboi"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"doimoiboi"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-03"},{"lineNumber":125,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"doimoiboi"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-09-10"},{"lineNumber":127,"author":{"gitId":"doimoiboi"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-10"},{"lineNumber":128,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":129,"author":{"gitId":"doimoiboi"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2022-09-10"},{"lineNumber":130,"author":{"gitId":"doimoiboi"},"content":"        assert duke.tasks !\u003d null : \"TaskList should exist!\";","lastModifiedDate":"2022-09-17"},{"lineNumber":131,"author":{"gitId":"doimoiboi"},"content":"        duke.storage.readData(duke.tasks);","lastModifiedDate":"2022-09-10"},{"lineNumber":132,"author":{"gitId":"doimoiboi"},"content":"        Label greeting \u003d getDialogLabel(this.ui.greet());","lastModifiedDate":"2022-09-17"},{"lineNumber":133,"author":{"gitId":"doimoiboi"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, new ImageView(this.duke)));","lastModifiedDate":"2022-09-17"},{"lineNumber":134,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(\"Duke started\");","lastModifiedDate":"2022-09-10"},{"lineNumber":135,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":136,"author":{"gitId":"doimoiboi"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"doimoiboi"},"content":"            handleUserInput(duke);","lastModifiedDate":"2022-09-10"},{"lineNumber":138,"author":{"gitId":"doimoiboi"},"content":"        });","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"doimoiboi"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-09-03"},{"lineNumber":141,"author":{"gitId":"doimoiboi"},"content":"            handleUserInput(duke);","lastModifiedDate":"2022-09-10"},{"lineNumber":142,"author":{"gitId":"doimoiboi"},"content":"        });","lastModifiedDate":"2022-09-03"},{"lineNumber":143,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":144,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":145,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":146,"author":{"gitId":"doimoiboi"},"content":"     * Iteration 1:","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"doimoiboi"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-09-03"},{"lineNumber":148,"author":{"gitId":"doimoiboi"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"doimoiboi"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-09-03"},{"lineNumber":150,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"doimoiboi"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-09-03"},{"lineNumber":152,"author":{"gitId":"doimoiboi"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-09-03"},{"lineNumber":153,"author":{"gitId":"doimoiboi"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-09-03"},{"lineNumber":154,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":155,"author":{"gitId":"doimoiboi"},"content":"        return textToAdd;","lastModifiedDate":"2022-09-03"},{"lineNumber":156,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":157,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":158,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":159,"author":{"gitId":"doimoiboi"},"content":"     * Iteration 2:","lastModifiedDate":"2022-09-10"},{"lineNumber":160,"author":{"gitId":"doimoiboi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-10"},{"lineNumber":161,"author":{"gitId":"doimoiboi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-10"},{"lineNumber":162,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":163,"author":{"gitId":"doimoiboi"},"content":"    private void handleUserInput(Duke bot) {","lastModifiedDate":"2022-09-10"},{"lineNumber":164,"author":{"gitId":"doimoiboi"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-09-10"},{"lineNumber":165,"author":{"gitId":"doimoiboi"},"content":"        Label dukeText \u003d new Label(bot.getResponse(userInput.getText()));","lastModifiedDate":"2022-09-10"},{"lineNumber":166,"author":{"gitId":"doimoiboi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-10"},{"lineNumber":167,"author":{"gitId":"doimoiboi"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-09-10"},{"lineNumber":168,"author":{"gitId":"doimoiboi"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-09-10"},{"lineNumber":169,"author":{"gitId":"doimoiboi"},"content":"        );","lastModifiedDate":"2022-09-10"},{"lineNumber":170,"author":{"gitId":"doimoiboi"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-10"},{"lineNumber":171,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":172,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":173,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":174,"author":{"gitId":"doimoiboi"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-10"},{"lineNumber":175,"author":{"gitId":"doimoiboi"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-10"},{"lineNumber":176,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":177,"author":{"gitId":"doimoiboi"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":178,"author":{"gitId":"doimoiboi"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":179,"author":{"gitId":"doimoiboi"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":180,"author":{"gitId":"doimoiboi"},"content":"            return c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2022-09-10"},{"lineNumber":181,"author":{"gitId":"doimoiboi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":182,"author":{"gitId":"doimoiboi"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-17"},{"lineNumber":183,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":184,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":185,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"doimoiboi":184,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.command.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.dukeexception.MissingTimingException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.dukeexception.UnknownCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"import static java.lang.Boolean.parseBoolean;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"    private static DateTimeFormatter DATE_TIME_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"     * Method that takes in user input and parses through it to return an executable command.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"     * @param input String input that the user keys in.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"     * @return Command object that can be executed by duke.Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"     * @throws UnknownCommandException When the input is invalid and is not executable.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"    public static Command parse(String input) throws UnknownCommandException {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"            //logic to mark tasks with error handling","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"            if (input.indexOf(\"mark\") \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"                String substring \u003d input.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"                //Since first task is of index 0 in ArrayList","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"                int taskIndex \u003d Integer.parseInt(substring) - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"                return new MarkCommand(taskIndex, true);","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"            //logic to unmark tasks with error handling","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"            if (input.indexOf(\"unmark\") \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"                String substring \u003d input.substring(7);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"                //Since first task is of index 0 in ArrayList","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"                int taskIndex \u003d Integer.parseInt(substring) - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"                return new MarkCommand(taskIndex, false);","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"            //logic to create duke.task.ToDos","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"            if (input.indexOf(\"todo\") \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"                String description \u003d input.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"                ToDos todo \u003d new ToDos(description, false);","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"                return new AddCommand(todo);","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"            //logic to create duke.task.Deadlines","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"            if (input.indexOf(\"deadline\") \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"                String sub \u003d input.substring(9);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"doimoiboi"},"content":"                //parse deadline details","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"doimoiboi"},"content":"                Deadlines deadline \u003d parseDeadlineInput(sub);","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"doimoiboi"},"content":"                return new AddCommand(deadline);","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"doimoiboi"},"content":"            //logic to create duke.task.Events","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"doimoiboi"},"content":"            if (input.indexOf(\"event\") \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"doimoiboi"},"content":"                String sub \u003d input.substring(6);","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"doimoiboi"},"content":"                //parse event details","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"doimoiboi"},"content":"                Events event \u003d parseEventInput(sub);","lastModifiedDate":"2022-09-17"},{"lineNumber":65,"author":{"gitId":"doimoiboi"},"content":"                return new AddCommand(event);","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"doimoiboi"},"content":"            //logic to create duke.task.DoAfter","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"doimoiboi"},"content":"            if (input.indexOf(\"doafter\") \u003d\u003d 0) {","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"doimoiboi"},"content":"                String sub \u003d input.substring(8);","lastModifiedDate":"2022-09-17"},{"lineNumber":70,"author":{"gitId":"doimoiboi"},"content":"                //parse event details","lastModifiedDate":"2022-09-17"},{"lineNumber":71,"author":{"gitId":"doimoiboi"},"content":"                DoAfter after \u003d parseDoAfterInput(sub);","lastModifiedDate":"2022-09-17"},{"lineNumber":72,"author":{"gitId":"doimoiboi"},"content":"                return new AddCommand(after);","lastModifiedDate":"2022-09-17"},{"lineNumber":73,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":74,"author":{"gitId":"doimoiboi"},"content":"            if (input.indexOf(\"delete\") \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"doimoiboi"},"content":"                String substring \u003d input.substring(7);","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"doimoiboi"},"content":"                //Since first task is of index 0 in ArrayList","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"doimoiboi"},"content":"                int taskIndex \u003d Integer.parseInt(substring) - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"doimoiboi"},"content":"                return new DeleteCommand(taskIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"doimoiboi"},"content":"            if (input.indexOf(\"find\") \u003d\u003d 0) {","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"doimoiboi"},"content":"                String search \u003d input.substring(5);","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"doimoiboi"},"content":"                return new FindCommand(search);","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"doimoiboi"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"Please indicate which task to mark!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"doimoiboi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"Please input a valid task index!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"doimoiboi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"duke.task.Task with that index does not exist!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"doimoiboi"},"content":"        } catch (MissingTimingException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"Please specify the time!\");","lastModifiedDate":"2022-09-17"},{"lineNumber":92,"author":{"gitId":"doimoiboi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"Please input a valid time in the format DD/MM/YYYY HHMM\");","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"doimoiboi"},"content":"        throw new UnknownCommandException();","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":99,"author":{"gitId":"doimoiboi"},"content":"     * Method that takes in String input to create a deadline and returns a Deadlines object.","lastModifiedDate":"2022-09-17"},{"lineNumber":100,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":101,"author":{"gitId":"doimoiboi"},"content":"     * @param input String representation of input command.","lastModifiedDate":"2022-09-17"},{"lineNumber":102,"author":{"gitId":"doimoiboi"},"content":"     * @return Deadlines object encapsulating information from input","lastModifiedDate":"2022-09-17"},{"lineNumber":103,"author":{"gitId":"doimoiboi"},"content":"     * @throws MissingTimingException When the input is missing a specified time.","lastModifiedDate":"2022-09-17"},{"lineNumber":104,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":105,"author":{"gitId":"doimoiboi"},"content":"    public static Deadlines parseDeadlineInput(String input) throws MissingTimingException {","lastModifiedDate":"2022-09-17"},{"lineNumber":106,"author":{"gitId":"doimoiboi"},"content":"        int timeIndex \u003d input.lastIndexOf(\"/by\");","lastModifiedDate":"2022-09-17"},{"lineNumber":107,"author":{"gitId":"doimoiboi"},"content":"        if (timeIndex \u003d\u003d -1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":108,"author":{"gitId":"doimoiboi"},"content":"            throw new MissingTimingException();","lastModifiedDate":"2022-09-17"},{"lineNumber":109,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":110,"author":{"gitId":"doimoiboi"},"content":"        String description \u003d input.substring(0, timeIndex - 1);","lastModifiedDate":"2022-09-17"},{"lineNumber":111,"author":{"gitId":"doimoiboi"},"content":"        String deadlineString \u003d input.substring(timeIndex + 4);","lastModifiedDate":"2022-09-17"},{"lineNumber":112,"author":{"gitId":"doimoiboi"},"content":"        LocalDateTime timing \u003d LocalDateTime.parse(deadlineString, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-09-17"},{"lineNumber":113,"author":{"gitId":"doimoiboi"},"content":"        Deadlines deadline \u003d new Deadlines(description, timing, false);","lastModifiedDate":"2022-09-17"},{"lineNumber":114,"author":{"gitId":"doimoiboi"},"content":"        return deadline;","lastModifiedDate":"2022-09-17"},{"lineNumber":115,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":116,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":117,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":118,"author":{"gitId":"doimoiboi"},"content":"     * Method that takes in String input to create a deadline and returns an Events object.","lastModifiedDate":"2022-09-17"},{"lineNumber":119,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":120,"author":{"gitId":"doimoiboi"},"content":"     * @param input String representation of input command.","lastModifiedDate":"2022-09-17"},{"lineNumber":121,"author":{"gitId":"doimoiboi"},"content":"     * @return Events object encapsulating information from input","lastModifiedDate":"2022-09-17"},{"lineNumber":122,"author":{"gitId":"doimoiboi"},"content":"     * @throws MissingTimingException When the input is missing a specified time.","lastModifiedDate":"2022-09-17"},{"lineNumber":123,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":124,"author":{"gitId":"doimoiboi"},"content":"    public static Events parseEventInput(String input) throws MissingTimingException {","lastModifiedDate":"2022-09-17"},{"lineNumber":125,"author":{"gitId":"doimoiboi"},"content":"        int timeIndex \u003d input.lastIndexOf(\"/at\");","lastModifiedDate":"2022-09-17"},{"lineNumber":126,"author":{"gitId":"doimoiboi"},"content":"        if (timeIndex \u003d\u003d -1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":127,"author":{"gitId":"doimoiboi"},"content":"            throw new MissingTimingException();","lastModifiedDate":"2022-09-17"},{"lineNumber":128,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":129,"author":{"gitId":"doimoiboi"},"content":"        String description \u003d input.substring(0, timeIndex - 1);","lastModifiedDate":"2022-09-17"},{"lineNumber":130,"author":{"gitId":"doimoiboi"},"content":"        String timingString \u003d input.substring(timeIndex + 4);","lastModifiedDate":"2022-09-17"},{"lineNumber":131,"author":{"gitId":"doimoiboi"},"content":"        LocalDateTime timing \u003d LocalDateTime.parse(timingString, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-09-17"},{"lineNumber":132,"author":{"gitId":"doimoiboi"},"content":"        Events event \u003d new Events(description, timing, false);","lastModifiedDate":"2022-09-17"},{"lineNumber":133,"author":{"gitId":"doimoiboi"},"content":"        return event;","lastModifiedDate":"2022-09-17"},{"lineNumber":134,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":135,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":136,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":137,"author":{"gitId":"doimoiboi"},"content":"     * Method that takes in String input to create a deadline and returns an Events object.","lastModifiedDate":"2022-09-17"},{"lineNumber":138,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":139,"author":{"gitId":"doimoiboi"},"content":"     * @param input String representation of input command.","lastModifiedDate":"2022-09-17"},{"lineNumber":140,"author":{"gitId":"doimoiboi"},"content":"     * @return Events object encapsulating information from input","lastModifiedDate":"2022-09-17"},{"lineNumber":141,"author":{"gitId":"doimoiboi"},"content":"     * @throws MissingTimingException When the input is missing a specified time.","lastModifiedDate":"2022-09-17"},{"lineNumber":142,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":143,"author":{"gitId":"doimoiboi"},"content":"    public static DoAfter parseDoAfterInput(String input) throws MissingTimingException {","lastModifiedDate":"2022-09-17"},{"lineNumber":144,"author":{"gitId":"doimoiboi"},"content":"        int timeIndex \u003d input.lastIndexOf(\"/after\");","lastModifiedDate":"2022-09-17"},{"lineNumber":145,"author":{"gitId":"doimoiboi"},"content":"        if (timeIndex \u003d\u003d -1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":146,"author":{"gitId":"doimoiboi"},"content":"            throw new MissingTimingException();","lastModifiedDate":"2022-09-17"},{"lineNumber":147,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":148,"author":{"gitId":"doimoiboi"},"content":"        String description \u003d input.substring(0, timeIndex - 1);","lastModifiedDate":"2022-09-17"},{"lineNumber":149,"author":{"gitId":"doimoiboi"},"content":"        String timingString \u003d input.substring(timeIndex + 7);","lastModifiedDate":"2022-09-17"},{"lineNumber":150,"author":{"gitId":"doimoiboi"},"content":"        LocalDateTime timing \u003d LocalDateTime.parse(timingString, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-09-17"},{"lineNumber":151,"author":{"gitId":"doimoiboi"},"content":"        DoAfter after \u003d new DoAfter(description, timing, false);","lastModifiedDate":"2022-09-17"},{"lineNumber":152,"author":{"gitId":"doimoiboi"},"content":"        return after;","lastModifiedDate":"2022-09-17"},{"lineNumber":153,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":154,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":155,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"doimoiboi"},"content":"     * Static method that reads task data stored in hard disk storage and returns the duke.task.Task representation of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"doimoiboi"},"content":"     * @param data String data representing a task.","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"doimoiboi"},"content":"     * @return duke.task.Task object that encapsulates the specified task.","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"doimoiboi"},"content":"    public static Task dataToInfo(String data) {","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"doimoiboi"},"content":"        String currData \u003d data;","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"doimoiboi"},"content":"        String[] info \u003d new String[4];","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"doimoiboi"},"content":"        //store string data between \"|\" characters in an array","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"doimoiboi"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"doimoiboi"},"content":"            int index \u003d currData.indexOf(\u0027|\u0027);","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"doimoiboi"},"content":"            info[i] \u003d currData.substring(0, index);","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"doimoiboi"},"content":"            currData \u003d currData.substring(index + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"doimoiboi"},"content":"        String taskType \u003d info[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"doimoiboi"},"content":"        boolean isDone \u003d parseBoolean(info[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"doimoiboi"},"content":"        String description \u003d info[2];","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"doimoiboi"},"content":"        String timingString \u003d info[3];","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"doimoiboi"},"content":"        Task task;","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"doimoiboi"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"doimoiboi"},"content":"            task \u003d new ToDos(description, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"doimoiboi"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"doimoiboi"},"content":"            LocalDateTime timing \u003d LocalDateTime.parse(timingString, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"doimoiboi"},"content":"            task \u003d new Deadlines(description, timing, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"doimoiboi"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":184,"author":{"gitId":"doimoiboi"},"content":"            LocalDateTime timing \u003d LocalDateTime.parse(timingString, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"doimoiboi"},"content":"            task \u003d new Events(description, timing, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"doimoiboi"},"content":"        } else { //taskType.equals(\"A\")","lastModifiedDate":"2022-09-17"},{"lineNumber":187,"author":{"gitId":"doimoiboi"},"content":"            LocalDateTime timing \u003d LocalDateTime.parse(timingString, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-09-17"},{"lineNumber":188,"author":{"gitId":"doimoiboi"},"content":"            task \u003d new DoAfter(description, timing, isDone);","lastModifiedDate":"2022-09-17"},{"lineNumber":189,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"doimoiboi"},"content":"        return task;","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":193,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":193}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"    private File file;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"     * Constructor to create duke.Storage object linked to file in specified file path.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"     * @param filePath File path specified as a String.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"                System.out.println(\"file created!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"                System.out.println(\"file exists!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"IO exception\");","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"     * Method to read data from storage file into the current instance of duke.Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks duke.TaskList object that will store the parsed data from the storage file.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"    public void readData(TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"            Scanner reader \u003d new Scanner(this.file);","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"                String data \u003d reader.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"                Task toAdd \u003d Parser.dataToInfo(data);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"                tasks.add(toAdd);","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"            reader.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"            //readData is only called on duke object that has storage initialised with \"createNewFile\",","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"            // hence file will always exist.","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"     * Method to write data to the storage file without overriding the data on it.","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"     * @param toWrite The task that will be written onto the storage file.","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"doimoiboi"},"content":"    public void writeData(Task toWrite) {","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"doimoiboi"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"doimoiboi"},"content":"            FileWriter writer \u003d new FileWriter(this.file, true);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"doimoiboi"},"content":"            writer.write(toWrite.processData() + \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"doimoiboi"},"content":"            writer.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"doimoiboi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"ioexception\");","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"doimoiboi"},"content":"     * Method to override data in storage file, replacing it with data from specified duke.TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks duke.TaskList whose data will be written onto the storage file.","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"doimoiboi"},"content":"    public void overwriteData(TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"doimoiboi"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"doimoiboi"},"content":"            FileWriter writer \u003d new FileWriter(this.file, false);","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"doimoiboi"},"content":"            writer.write(\"\");","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"doimoiboi"},"content":"            writer.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"doimoiboi"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"doimoiboi"},"content":"                this.writeData(tasks.get(i));","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"doimoiboi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"ioexception\");","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":85}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"     * Default constructor for duke.TaskList creates a duke.TaskList of capacity 100.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"     * Constructor creates a duke.TaskList of the specified capacity.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"     * @param capacity The capacity of the duke.TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"    public TaskList(int capacity) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(capacity);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"     * Method to add a duke.task.Task to duke.TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"     * @param task duke.task.Task to be added to the duke.TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"     * Overloaded method to add duke.task.Task to specified index in duke.TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"     * @param index Index in duke.TaskList to add duke.task.Task to.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"     * @param task duke.task.Task to be added to the duke.TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"    public void add(int index, Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"        this.tasks.add(index, task);","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"     * Method to access duke.task.Task at specified index in duke.TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"     * @param index Index of duke.task.Task to be accessed.","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"     * @return A duke.task.Task object.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"doimoiboi"},"content":"     * Method to delete duke.task.Task from duke.TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"doimoiboi"},"content":"     * @param index Index of duke.task.Task to be deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"doimoiboi"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"doimoiboi"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"doimoiboi"},"content":"     * Method changes the isDone status of task at the specified index in task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"doimoiboi"},"content":"     * @param index Index of task in task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"doimoiboi"},"content":"     * @param isDone isDone status to be updated to the task at the specified index.","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"doimoiboi"},"content":"    public void changeDoneStatus(int index, boolean isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"doimoiboi"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"doimoiboi"},"content":"            this.tasks.get(index).markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"doimoiboi"},"content":"            this.tasks.get(index).markAsNotDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"doimoiboi"},"content":"     * Method returns true if the specified string is present in the description of the task at the specified index","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"doimoiboi"},"content":"     * of the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"doimoiboi"},"content":"     * @param index Index of the task to be searched.","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"doimoiboi"},"content":"     * @param search String to be checked if present in the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"doimoiboi"},"content":"     * @return True if string is present, false otherwise.","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"doimoiboi"},"content":"    public boolean isDescriptionAt(int index, String search) {","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"doimoiboi"},"content":"        String description \u003d this.get(index).getDescription();","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"doimoiboi"},"content":"        return description.contains(search);","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"doimoiboi"},"content":"     * Method gets the current size of the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"doimoiboi"},"content":"     * @return Size of the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"doimoiboi"},"content":"    public int size() {","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"doimoiboi"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":100}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    private static String NAME \u003d \"DoiMoiBot: \";","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"     * Constructor to create instance of duke.Ui.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"    public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"         this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"     * Method prints out duke.Duke\u0027s default greeting.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"    public String greet() {","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"        return \"Hello! I\u0027m doimoibot\\n\" + \"What can I do you for?\";","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"     * Method to encapsulate the printing of seperator lines.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"    public void printLine() {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(\"------------------------------------------------------------------------------------\");","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"     * Method prints duke.Duke\u0027s default farewell.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"     * @return returns string representation of notification.","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"    public String farewell() {","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(NAME + \"Goodbye! See you soon!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"        return NAME + \"Goodbye! See you soon!\";","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"     * Method reads the user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"     * @return String representation of user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"    public String readInput() {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"     * Method prints out notification that specified task has been added to task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"     * @param task duke.task.Task to be added to task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"     * @return returns string representation of notification.","lastModifiedDate":"2022-09-17"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"doimoiboi"},"content":"    public String notifyAdded(Task task) {","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(\"Successfully added Task!\\n\" + task);","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"doimoiboi"},"content":"        return \"Successfully added Task!\\n\" + task;","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"doimoiboi"},"content":"     * Method prints notification that specified task has been marked done or undone according to boolean parameter.","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"doimoiboi"},"content":"     * @param task The task that has been marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"doimoiboi"},"content":"     * @param isDone The status of the task has been marked as.","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"doimoiboi"},"content":"     * @return returns string representation of notification.","lastModifiedDate":"2022-09-17"},{"lineNumber":67,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"doimoiboi"},"content":"    public String notifyMarked(Task task, boolean isDone) {","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"doimoiboi"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"Marked as done!\\n\" + task);","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"doimoiboi"},"content":"            return \"Marked as done!\\n\" + task;","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(\"Marked as not done!\\n\" + task);","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"doimoiboi"},"content":"            return \"Marked as not done!\\n\" + task;","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"doimoiboi"},"content":"     * Method prints notification that specified task has been deleted from task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"doimoiboi"},"content":"     * @param task duke.task.Task to be deleted from task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"doimoiboi"},"content":"     * @return returns string representation of notification","lastModifiedDate":"2022-09-17"},{"lineNumber":83,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"doimoiboi"},"content":"    public String notifyDeleted(Task task) {","lastModifiedDate":"2022-09-10"},{"lineNumber":85,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(\"Deleted task!\\n\" + task);","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"doimoiboi"},"content":"        return \"Deleted task!\\n\" + task;","lastModifiedDate":"2022-09-10"},{"lineNumber":87,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"doimoiboi"},"content":"     * Prints notification whether tasks have been found.","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"doimoiboi"},"content":"    public void notifyFound() {","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(\"I\u0027ve found these tasks:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"doimoiboi"},"content":"     * Prints out string representation of task.","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"doimoiboi"},"content":"     * @param task Task whose string representation is to be printed out.","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":101,"author":{"gitId":"doimoiboi"},"content":"    public void printTask(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"doimoiboi"},"content":"        System.out.println(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"doimoiboi"},"content":"     * Method prints out the information currently stored in the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks duke.TaskList object whose information will be printed.","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"doimoiboi"},"content":"     * @return String representation of list of tasks to print.","lastModifiedDate":"2022-09-17"},{"lineNumber":109,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"doimoiboi"},"content":"    public String printList(TaskList tasks) {","lastModifiedDate":"2022-09-10"},{"lineNumber":111,"author":{"gitId":"doimoiboi"},"content":"        String toPrint \u003d \"\";","lastModifiedDate":"2022-09-10"},{"lineNumber":112,"author":{"gitId":"doimoiboi"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"doimoiboi"},"content":"            System.out.println(i + \": \" + tasks.get(i - 1));","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"doimoiboi"},"content":"            toPrint \u003d toPrint + i + \": \" + tasks.get(i - 1) + \"\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":115,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"doimoiboi"},"content":"        return toPrint;","lastModifiedDate":"2022-09-10"},{"lineNumber":117,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":118}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    private Task task;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"     * Constructor to create a new task command that adds the specified task to the task list and storage when","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     * executed.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"     * @param task Index of the task in the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"     * Method that executes the mark command to mark the specified task done or not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks Task list containing the task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"     * @param ui Ui that will output messages to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"     * @param storage Storage on hard disk that stores the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"     * @return String to notify of addition of a task.","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"        tasks.add(this.task);","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"        storage.writeData(this.task);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        return ui.notifyAdded(this.task);","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    public Command() {}","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":11}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    private int index;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"     * Constructor to create a delete command that deletes the task at the specified index when executed.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     * @param index Index of the task in the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"     * Method that executes the mark command to mark the specified task done or not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks Task list containing the task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"     * @param ui Ui that will output messages to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"     * @param storage Storage on hard disk that stores the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"     * @return String to notify of deleted task.","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"        tasks.delete(this.index);","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"        storage.overwriteData(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"        return ui.notifyDeleted(tasks.get(this.index));","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":33}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    public ExitCommand() {}","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"     * Method that executes the mark command to mark the specified task done or not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks Task list containing the task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"     * @param ui Ui that will output messages to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"     * @param storage Storage on hard disk that stores the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     * @return String to bid farewell.","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"        return ui.farewell();","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    private String search;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"    public FindCommand(String search) {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"        this.search \u003d search;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     * Method that executes the find command to find tasks with descriptions containing the search input.","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks Task list containing the task to be marked.","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"     * @param ui Ui that will output messages to the user.","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"     * @param storage Storage on hard disk that stores the task list.","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"     * @return String that shows all tasks with matching descriptions.","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"        ui.notifyFound();","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"        TaskList foundList \u003d new TaskList(tasks.size());","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"            if (tasks.isDescriptionAt(i, this.search)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"                foundList.add(task);","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"                ui.printTask(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"        return ui.printList(foundList);","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"doimoiboi":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    public ListCommand() {}","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"     * Method that executes the mark command to mark the specified task done or not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks Task list containing the task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"     * @param ui Ui that will output messages to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"     * @param storage Storage on hard disk that stores the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     * @return String listing the tasks in the task list.","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"        return ui.printList(tasks);","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":22}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    private int index;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"     * Constructor for a command to mark an object done or not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"     * @param index Index of the task in the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"     * @param isDone Boolean of which the specified task will be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"    public MarkCommand(int index, boolean isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"     * Method that executes the mark command to mark the specified task done or not done.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"     * @param tasks Task list containing the task to be marked.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"     * @param ui Ui that will output messages to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"     * @param storage Storage on hard disk that stores the task list.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"     * @return String to notify of marked task.","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"        tasks.changeDoneStatus(this.index, this.isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        storage.overwriteData(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"        return ui.notifyMarked(tasks.get(this.index), this.isDone);","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":36}},{"path":"src/main/java/duke/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"    public DukeException() {","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"        super();","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"doimoiboi":11}},{"path":"src/main/java/duke/dukeexception/MissingTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"public class MissingTimingException extends DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"    public MissingTimingException() {","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"        super();","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"doimoiboi":7}},{"path":"src/main/java/duke/dukeexception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.dukeexception;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"        super(\"That command was not valid. Try again!\");","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":9}},{"path":"src/main/java/duke/launcher/DukeGuiLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.launcher;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"public class DukeGuiLauncher {","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"doimoiboi":11}},{"path":"src/main/java/duke/launcher/DukeLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.launcher;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"public class DukeLauncher {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"        DukeGuiLauncher.main(args);","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"doimoiboi":8}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    private static DateTimeFormatter DATE_TIME_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    private static DateTimeFormatter DATE_TIME_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     * Constructor that creates Deadline object with specified description, deadline, and isDone status.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     * @param deadline    Timing of the Deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"     * @param isDone      isDone status of the Deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"     * @throws DateTimeParseException Exception thrown when format of input date is invalid.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    public Deadlines(String description, LocalDateTime deadline, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"        super(isDone);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"    public String processData() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"        if (this.getIsDone()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"D|true|%s|%s|\", this.getDescription(), this.deadline.format(DATE_TIME_INPUT_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"D|false|%s|%s|\", this.getDescription(), this.deadline.format(DATE_TIME_INPUT_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"        if (this.getIsDone()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"[D] %s [X] (by %s)\", this.getDescription(),","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"                    this.deadline.format(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"[D] %s [ ] (by %s)\", this.getDescription(),","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"                    this.deadline.format(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"doimoiboi":50}},{"path":"src/main/java/duke/task/DoAfter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.task;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class DoAfter extends Task {","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    private static DateTimeFormatter DATE_TIME_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    private static DateTimeFormatter DATE_TIME_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     * Constructor that creates DoAfter object with specified description, start time, and isDone status.","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     * @param startTime    Timing to start task after.","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"     * @param isDone      isDone status of the task.","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"     * @throws DateTimeParseException Exception thrown when format of input date is invalid.","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    public DoAfter(String description, LocalDateTime startTime, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"        super(isDone);","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"    public String processData() {","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"        if (this.getIsDone()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"A|true|%s|%s|\", this.getDescription(), this.startTime.format(DATE_TIME_INPUT_FORMAT));","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"A|false|%s|%s|\", this.getDescription(), this.startTime.format(DATE_TIME_INPUT_FORMAT));","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"    public String toString() {","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"        if (this.getIsDone()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"[A] %s [X] (after %s)\", this.getDescription(),","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"                    this.startTime.format(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"[A] %s [ ] (after %s)\", this.getDescription(),","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"                    this.startTime.format(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"doimoiboi":49}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class Events extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"    private LocalDateTime timing;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    private static DateTimeFormatter DATE_TIME_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    private static DateTimeFormatter DATE_TIME_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"     * Constructor that creates Event object with specified description, timing, and isDone status.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"     * @param description Description of Event.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     * @param timing Timing of the Event.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"     * @param isDone isDone status of the Event.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"     * @throws DateTimeParseException Exception thrown when format of input date is invalid.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    public Events(String description, LocalDateTime timing, boolean isDone) throws DateTimeParseException{","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"        super(isDone);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"     * Method converts Event into String representation that is stored in the storage.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"     * @return String representation of Event.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"    public String processData() {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"        if (this.getIsDone()){","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"E|true|%s|%s|\", this.getDescription(), this.timing.format(DATE_TIME_INPUT_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"E|false|%s|%s|\", this.getDescription(), this.timing.format(DATE_TIME_INPUT_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"        if (this.getIsDone()){","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"[E] %s [X] (at %s)\", this.getDescription(),","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"                    this.timing.format(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"[E] %s [ ] (at %s)\", this.getDescription(),","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"                    this.timing.format(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"doimoiboi":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"abstract public class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"    protected String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"    public Task(){","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"        this.description \u003d null;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    };","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"    public Task(boolean isDone){","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"        this.description \u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"        return this.description;","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"doimoiboi"},"content":"    public abstract String processData();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"doimoiboi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"doimoiboi"},"content":"        if (isDone){","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"%s [X]\", this.description);","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"%s [ ]\", this.description);","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"doimoiboi":55}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"     * Constructor that creates duke.task.ToDos object with specified description and isDone status.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"     * @param description Description of duke.task.ToDos.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"     * @param isDone isDone status of the duke.task.ToDos.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"        super(isDone);","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"     * Method converts duke.task.ToDos into String representation that is stored in the storage.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"     * @return String representation of duke.task.ToDos.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"    public String processData() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"        if (this.getIsDone()){","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"T|true|%s|0|\", this.getDescription());","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"T|false|%s|0|\", this.getDescription());","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"doimoiboi"},"content":"        String str;","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"doimoiboi"},"content":"        if (this.getIsDone()){","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"[T] %s [X]\", this.getDescription());","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"doimoiboi"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"doimoiboi"},"content":"            str \u003d String.format(\"[T] %s [ ]\", this.getDescription());","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"doimoiboi"},"content":"        return str;","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"doimoiboi":41}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"    public void dataToInfo_ToDosTask_success() {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"        assertEquals(\"[T] hello [ ]\", Parser.dataToInfo(\"T|0|hello|0|\").toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":18}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"    public void get_indexOne_success() {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"doimoiboi"},"content":"        Task task \u003d new ToDos(\"hello\", false);","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"doimoiboi"},"content":"        TaskList tasks \u003d new TaskList(10);","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"doimoiboi"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"doimoiboi"},"content":"        assertEquals(task, tasks.get(0));","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"doimoiboi"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"doimoiboi"},"content":"    public void get_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"doimoiboi"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"doimoiboi"},"content":"            Task task \u003d new ToDos(\"hello\", false);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"doimoiboi"},"content":"            TaskList tasks \u003d new TaskList(10);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"doimoiboi"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"doimoiboi"},"content":"            assertEquals(task, tasks.get(5));","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"doimoiboi"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"doimoiboi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"doimoiboi"},"content":"            assertEquals(\"Index 5 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"doimoiboi"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":32}},{"path":"src/test/java/duke/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"public class ToDosTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"doimoiboi"},"content":"        assertEquals(\"[T] pack bag [X]\", new ToDos(\"pack bag\", true).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"doimoiboi"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"doimoiboi"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"doimoiboi":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"doimoiboi"},"content":"todo bang the drum","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"doimoiboi"},"content":"deadline bang the triangle /by tomorrow","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"doimoiboi"},"content":"event bang the cowbell /at tuesday","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"doimoiboi"},"content":"event bang /by","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"doimoiboi"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"doimoiboi"},"content":"mark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"doimoiboi"},"content":"mark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"doimoiboi"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"doimoiboi"},"content":"unmark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"doimoiboi"},"content":"list","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"doimoiboi":10}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cowlinn":1,"-":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String TYPE \u003d \"[D]\";","lastModifiedDate":"2022-08-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public Deadline(String description, String notFormattedDate) {","lastModifiedDate":"2022-08-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        by \u003d LocalDate.parse(notFormattedDate);","lastModifiedDate":"2022-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //Abstract out formatter to another function","lastModifiedDate":"2022-08-09"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"    public String customFormatter(LocalDate ld) {","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return ld.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"        return TYPE + super.toString() + \"(by: \" + customFormatter(by) + \")\";","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-07"}],"authorContributionMap":{"cowlinn":3,"-":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-08-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.*;","lastModifiedDate":"2022-08-09"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":" * Main class of the program","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":" * Stores a taskList of tasks","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-08-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String ENDING_MESSAGE \u003d \"That\u0027s all? Hope to see you again soon :)\";","lastModifiedDate":"2022-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Duke() {","lastModifiedDate":"2022-08-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        tasks \u003d Storage.load();","lastModifiedDate":"2022-08-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"        new Duke().run();","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"     * Displays the welcome message.","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"     * Initializes the scanner to scan for inputs","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"     * Lets the parser parse the correct input","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"     * Terminate the program if the user requests for it","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void run() {","lastModifiedDate":"2022-08-10"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String input;","lastModifiedDate":"2022-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2022-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2022-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-10"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"                Ui.displayMessage(ENDING_MESSAGE);","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            //if not, parser can parse data","lastModifiedDate":"2022-08-10"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"            Parser.parseData(input, tasks);","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"}],"authorContributionMap":{"cowlinn":18,"-":35}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String TYPE \u003d \"[E]\";","lastModifiedDate":"2022-08-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public Event(String description, String unformattedDate) {","lastModifiedDate":"2022-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        by \u003d LocalDate.parse(unformattedDate); //TODO: figure out how to parse multiple types","lastModifiedDate":"2022-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"     * Formats the data nicely using the LocalData library","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"     * And an appropriately formatted string","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"     * @param ld","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"     * @return Event","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"    public String customFormatter(LocalDate ld) {","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return ld.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"        return TYPE + super.toString() + \"(at: \" + customFormatter(by) + \")\";","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-07"}],"authorContributionMap":{"cowlinn":10,"-":24}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-08-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":" * Handles the main logic of parsing raw input","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2022-08-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"    private static final List\u003cString\u003e PERMISSIBLE_TASKS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"            Arrays.asList(\"todo\", \"event\", \"deadline\"));","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"     * parseData takes in a user\u0027s command as a string","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"     * and makes sense of the command by calling TaskList\u0027s appropriate functionality","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"     * @param input","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"     * @param taskList","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"    public static void parseData(String input, TaskList taskList) {","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"        //TODO: Update with a switch statement for parsing data","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        //Case 1: Mark","lastModifiedDate":"2022-08-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            //split by space, then the second value","lastModifiedDate":"2022-08-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            int taskIndex \u003d Integer.valueOf(input.split(\" \", 0)[1]) - 1;","lastModifiedDate":"2022-08-10"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"            taskList.markTask(taskIndex);","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        //Case 2: Unmark","lastModifiedDate":"2022-08-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            int taskIndex \u003d Integer.valueOf(input.split(\" \", 0)[1]) - 1;","lastModifiedDate":"2022-08-10"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"            taskList.unmarkTask(taskIndex);","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        //Case 3: List","lastModifiedDate":"2022-08-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-10"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"            taskList.list();","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Case 4: Delete","lastModifiedDate":"2022-08-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            int taskIndex \u003d Integer.valueOf(input.split(\" \", 0)[1]) - 1;","lastModifiedDate":"2022-08-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"            taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"            String[] tempArr \u003d input.split(\" \", 2); //split into 2","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"            String keyword \u003d tempArr[1]; //the remainder of the input minus whitespace","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"            taskList.findTask(keyword);","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        //Case 5: Add a valid task","lastModifiedDate":"2022-08-10"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"        } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-08-10"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"                validateTask(input);","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"            } catch (InvalidCommandException ice) {","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"cowlinn"},"content":"                Ui.displayException(ice);","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"                Ui.displayMessage(\"This was your invalid command: \" + input);","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"            } catch (EmptyTaskException ete) {","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"                Ui.displayException(ete);","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"cowlinn"},"content":"                String[] tempArr \u003d input.split(\" \", 0);","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"cowlinn"},"content":"                if (tempArr[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"                    Ui.displayMessage(\"todo requires at least a task description\");","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2022-08-10"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"                    Ui.displayMessage(\"Event/Deadline requires both a task description and a date\");","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-08-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"            Task newTask \u003d generateTask(input);","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"     * helper method for input validation whenever an add task command is given","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"     * @param String input","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"     * @throws InvalidCommandException if the command is not","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"     * in our list of permissible tasks","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"cowlinn"},"content":"     * @throws EmptyTaskException if the correct command is given","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"cowlinn"},"content":"     * but not enough information is provided","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"cowlinn"},"content":"    private static void validateTask(String input) throws InvalidCommandException, EmptyTaskException {","lastModifiedDate":"2022-08-14"},{"lineNumber":80,"author":{"gitId":"cowlinn"},"content":"        String[] tempArr \u003d input.split(\" \", 0); //splits into words","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        //first word is invalid","lastModifiedDate":"2022-08-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (! PERMISSIBLE_TASKS.contains(tempArr[0])) {","lastModifiedDate":"2022-08-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new InvalidCommandException(\"I\u0027m sorry, I don\u0027t understand what that means \\n\"","lastModifiedDate":"2022-08-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    + \"Please enter a valid response in the future\");","lastModifiedDate":"2022-08-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tempArr.length \u003c\u003d 1) {","lastModifiedDate":"2022-08-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new EmptyTaskException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2022-08-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":95,"author":{"gitId":"cowlinn"},"content":"    //changed to public for testing, TODO: change private after validation","lastModifiedDate":"2022-08-13"},{"lineNumber":96,"author":{"gitId":"cowlinn"},"content":"    public static Task generateTask(String input) {","lastModifiedDate":"2022-08-14"},{"lineNumber":97,"author":{"gitId":"cowlinn"},"content":"        String[] tempArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new Todo(tempArr[1]);","lastModifiedDate":"2022-08-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            int firstSplit \u003d tempArr[1].indexOf(\"/by\");","lastModifiedDate":"2022-08-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            String eventName \u003d tempArr[1].substring(0, firstSplit);","lastModifiedDate":"2022-08-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            String date \u003d tempArr[1].substring(firstSplit + 4);","lastModifiedDate":"2022-08-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new Deadline(eventName, date);","lastModifiedDate":"2022-08-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } else { //must be Event","lastModifiedDate":"2022-08-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            int firstSplit \u003d tempArr[1].indexOf(\"/at\");","lastModifiedDate":"2022-08-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String eventName \u003d tempArr[1].substring(0, firstSplit);","lastModifiedDate":"2022-08-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            String date \u003d tempArr[1].substring(firstSplit + 4);","lastModifiedDate":"2022-08-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return new Event(eventName, date);","lastModifiedDate":"2022-08-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-10"}],"authorContributionMap":{"cowlinn":48,"-":64}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.*;","lastModifiedDate":"2022-08-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-08-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":" * deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2022-08-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"    private static final String DIRECTORY_NAME \u003d \"SavedData\";","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"    private static final String FILE_NAME \u003d \"SavedData/SaveData.txt\";","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"     * Takes in a list of items","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"     * and saves it to a binary file","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"     * @param saveItems","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"    public static void save(List\u003cTask\u003e saveItems) {","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-09"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"            FileOutputStream fos \u003d new FileOutputStream(FILE_NAME);","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2022-08-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            oos.writeObject(saveItems);","lastModifiedDate":"2022-08-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            oos.close();","lastModifiedDate":"2022-08-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            System.out.println(\"Cannot save, File not found\");","lastModifiedDate":"2022-08-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            System.out.println(\"Cannot Initialize Stream\");","lastModifiedDate":"2022-08-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-09"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"     * Takes in a list of items","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"     * and saves it to a binary file","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"     * @return List\u003cTask\u003e saveItems","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"     * @throws FileNotFoundException if the file/path has not been created or initalized","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"     * @throws IOException if the file is unable to read for any other reason","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"    public static List\u003cTask\u003e readItems() {","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"        //1) Create file","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"            File directory \u003d new File(DIRECTORY_NAME);","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"            directory.mkdir();","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"cowlinn"},"content":"            File f \u003d new File(FILE_NAME);","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"cowlinn"},"content":"            boolean createNewSaveFile \u003d f.createNewFile();","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"            if (createNewSaveFile) {","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"                System.out.println(\"File doesn\u0027t exist, creating one\");","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"        } catch (IOException exp) {","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"            System.out.println(\"IOException occurred\");","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"            exp.printStackTrace();","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"            FileInputStream fis \u003d new FileInputStream(FILE_NAME);","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2022-08-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            ArrayList\u003cTask\u003e readItems \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2022-08-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            ois.close();","lastModifiedDate":"2022-08-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return readItems;","lastModifiedDate":"2022-08-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e(); //empty Task list for initial initialization","lastModifiedDate":"2022-08-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-09"},{"lineNumber":68,"author":{"gitId":"cowlinn"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2022-08-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            System.out.println(\"Class not found\");","lastModifiedDate":"2022-08-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2022-08-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static TaskList load() {","lastModifiedDate":"2022-08-10"},{"lineNumber":77,"author":{"gitId":"cowlinn"},"content":"        List\u003cTask\u003e currItems \u003d readItems();","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new TaskList(currItems);","lastModifiedDate":"2022-08-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-09"}],"authorContributionMap":{"cowlinn":37,"-":45}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.io.*;","lastModifiedDate":"2022-08-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Task implements Serializable {","lastModifiedDate":"2022-08-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2022-08-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void removeDone() {","lastModifiedDate":"2022-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String fullStatusIcon() {","lastModifiedDate":"2022-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return \"[\" + getStatusIcon() + \"]\";","lastModifiedDate":"2022-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"        return description;","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return fullStatusIcon() + \" \" + description;","lastModifiedDate":"2022-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-07"}],"authorContributionMap":{"cowlinn":3,"-":32}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-08-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":" * Encapsulation of Array","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":" * Has the functionality of add/delete","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":" * mark/unmark","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":" * list/finding tasks","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2022-08-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    //To be given to UI to handle","lastModifiedDate":"2022-08-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String ENDING_MESSAGE \u003d \"That\u0027s all? Hope to see you again soon :)\";","lastModifiedDate":"2022-08-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String LIST_HEADER \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-08-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String DELETE_HEADER \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-08-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-08-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String UNDONE_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"    public static final String FIND_HEADER \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ADD_HEADER \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-08-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"     * searches the taskList based on taskIndex","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"     * and marks it as done","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"     * @param taskIndex","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Task currentTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        currentTask.setDone();","lastModifiedDate":"2022-08-10"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"        Ui.displayMessage(DONE_MESSAGE);","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"        Ui.indentTaskDisplay(currentTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"cowlinn"},"content":"        Storage.save(taskList);","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":47,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"cowlinn"},"content":"     * searches the taskList based on taskIndex","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"cowlinn"},"content":"     * and marks it as undone","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"     * @param taskIndex","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"cowlinn"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Task currentTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        currentTask.removeDone();","lastModifiedDate":"2022-08-10"},{"lineNumber":56,"author":{"gitId":"cowlinn"},"content":"        Ui.displayMessage(UNDONE_MESSAGE);","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"cowlinn"},"content":"        Ui.indentTaskDisplay(currentTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"cowlinn"},"content":"        Storage.save(taskList);","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":61,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"cowlinn"},"content":"     * Loops through the taskList","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"cowlinn"},"content":"     * And signifies to the UI to display it nicely","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"cowlinn"},"content":"    public void list() {","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"cowlinn"},"content":"        Ui.displayMessage(LIST_HEADER);","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"cowlinn"},"content":"        Ui.displayOrderedList(taskList);","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":70,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"cowlinn"},"content":"     * searches the taskList based on taskIndex","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"cowlinn"},"content":"     * and deletes it","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"cowlinn"},"content":"     * @param taskIndex","lastModifiedDate":"2022-08-15"},{"lineNumber":74,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"cowlinn"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Task deletedTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-08-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2022-08-10"},{"lineNumber":79,"author":{"gitId":"cowlinn"},"content":"        Ui.displayMessage(DELETE_HEADER);","lastModifiedDate":"2022-08-14"},{"lineNumber":80,"author":{"gitId":"cowlinn"},"content":"        Ui.indentTaskDisplay(deletedTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"cowlinn"},"content":"        Ui.displayTasksLeft(taskList.size());","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"cowlinn"},"content":"        Storage.save(taskList);","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":85,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"cowlinn"},"content":"     * Adds a new task to the taskList","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"cowlinn"},"content":"     * @param t of type Task","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":89,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":90,"author":{"gitId":"cowlinn"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        taskList.add(t);","lastModifiedDate":"2022-08-10"},{"lineNumber":92,"author":{"gitId":"cowlinn"},"content":"        Storage.save(taskList);","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"cowlinn"},"content":"        Ui.displayMessage(ADD_HEADER);","lastModifiedDate":"2022-08-14"},{"lineNumber":94,"author":{"gitId":"cowlinn"},"content":"        Ui.indentTaskDisplay(t);","lastModifiedDate":"2022-08-14"},{"lineNumber":95,"author":{"gitId":"cowlinn"},"content":"        Ui.displayTasksLeft(taskList.size());","lastModifiedDate":"2022-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":98,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":99,"author":{"gitId":"cowlinn"},"content":"     * Populates a list of tasks that contain the keyword in it\u0027s description","lastModifiedDate":"2022-08-14"},{"lineNumber":100,"author":{"gitId":"cowlinn"},"content":"     * And signposts the UI to display it nicely","lastModifiedDate":"2022-08-14"},{"lineNumber":101,"author":{"gitId":"cowlinn"},"content":"     * @param keyword","lastModifiedDate":"2022-08-15"},{"lineNumber":102,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":103,"author":{"gitId":"cowlinn"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2022-08-14"},{"lineNumber":104,"author":{"gitId":"cowlinn"},"content":"        List\u003cTask\u003e tasksContainingKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-14"},{"lineNumber":105,"author":{"gitId":"cowlinn"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-14"},{"lineNumber":106,"author":{"gitId":"cowlinn"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2022-08-14"},{"lineNumber":107,"author":{"gitId":"cowlinn"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2022-08-14"},{"lineNumber":108,"author":{"gitId":"cowlinn"},"content":"                tasksContainingKeyword.add(t);","lastModifiedDate":"2022-08-14"},{"lineNumber":109,"author":{"gitId":"cowlinn"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":110,"author":{"gitId":"cowlinn"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":111,"author":{"gitId":"cowlinn"},"content":"        Ui.displayMessage(FIND_HEADER);","lastModifiedDate":"2022-08-14"},{"lineNumber":112,"author":{"gitId":"cowlinn"},"content":"        Ui.displayOrderedList(tasksContainingKeyword);","lastModifiedDate":"2022-08-14"},{"lineNumber":113,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-10"}],"authorContributionMap":{"cowlinn":73,"-":43}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":" * Extension class To Do from Task.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":" * Doesn\u0027t have a date attached to it","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String TYPE \u003d \"[T]\";","lastModifiedDate":"2022-08-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-07"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return TYPE + super.toString();","lastModifiedDate":"2022-08-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-07"}],"authorContributionMap":{"cowlinn":6,"-":12}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-11"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-08-10"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":" * Class that deals with interactions with the user","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":" * Has static methods and does not need to be initialized (for now)","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2022-08-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello! I\u0027m Duke \\n\"","lastModifiedDate":"2022-08-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2022-08-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"     * Helper method that prints out a message fed into the UI","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"     * @param message","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"    public static void displayMessage(String message) {","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"    public static void indentTaskDisplay(Task t) {","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2022-08-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"     * Given a lists of tasks.","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"     * Prints it out nicely with the appropriate numbering \u0026 indentation","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"     * @param taskList","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"cowlinn"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"cowlinn"},"content":"    public static void displayOrderedList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-08-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            System.out.println(i + 1 + \". \" + currentTask);","lastModifiedDate":"2022-08-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":50,"author":{"gitId":"cowlinn"},"content":"    public static void displayTasksLeft(int tasksLeft) {","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        System.out.println(\"Now you have \" + tasksLeft + \" tasks in the list\");","lastModifiedDate":"2022-08-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":54,"author":{"gitId":"cowlinn"},"content":"    public static void displayException(Exception e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        System.out.println(e);","lastModifiedDate":"2022-08-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-10"}],"authorContributionMap":{"cowlinn":23,"-":35}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cowlinn"},"content":"import duke.*;","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"cowlinn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"cowlinn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"cowlinn"},"content":"import java.util.List;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"cowlinn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"cowlinn"},"content":"public class DukeTest {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"cowlinn"},"content":"    @Test","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"cowlinn"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"cowlinn"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"cowlinn"},"content":"    //Testing Parser.GenerateTask() for the 3 different types of tasks","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"cowlinn"},"content":"    // Also testing their toString() formatting","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"cowlinn"},"content":"    @Test","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"cowlinn"},"content":"    public void TestTaskGeneration() {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"cowlinn"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"cowlinn"},"content":"        Task todoTest \u003d p.generateTask(\"todo borrow book\");","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"cowlinn"},"content":"        Task deadlineTest \u003d p.generateTask(\"deadline return book /by 2019-10-15\");","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"cowlinn"},"content":"        Task eventTest \u003d p.generateTask(\"event project meeting /at 2019-10-15\");","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"cowlinn"},"content":"        assertEquals(todoTest.toString(), \"[T][ ] borrow book\");","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"cowlinn"},"content":"        assertEquals(deadlineTest.toString(), \"[D][ ] return book (by: Oct 15 2019)\");","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"cowlinn"},"content":"        assertEquals(eventTest.toString(), \"[E][ ] project meeting (at: Oct 15 2019)\");","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"cowlinn"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"cowlinn"},"content":"    //Testing Task Marking/Unmarking in TaskList","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"cowlinn"},"content":"    @Test","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"cowlinn"},"content":"    public void TestMarkUnmark() {","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"cowlinn"},"content":"        Task todoTest \u003d Parser.generateTask(\"todo borrow book\");","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"cowlinn"},"content":"        List\u003cTask\u003e emptyTaskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"cowlinn"},"content":"        TaskList tl \u003d new TaskList(emptyTaskList);","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"cowlinn"},"content":"        tl.addTask(todoTest);","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"cowlinn"},"content":"        tl.markTask(0);","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"cowlinn"},"content":"        assertEquals(todoTest.toString(), \"[T][X] borrow book\");","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"cowlinn"},"content":"        tl.unmarkTask(0);","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"cowlinn"},"content":"        assertEquals(todoTest.toString(), \"[T][ ] borrow book\");","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"cowlinn"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"cowlinn"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"cowlinn":40}},{"path":"SaveData.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"SavedData/SaveData.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"cowlinn":0}}]

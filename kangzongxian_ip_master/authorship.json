[{"path":"src/main/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"D |   | return book","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"kangzongxian":1}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"public class Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of a Command","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"    protected CommandName givenCommand;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"     * Constructor for the Command class","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"     * @param givenCommand the given command","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"    public Command(CommandName givenCommand) {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"        this.givenCommand \u003d givenCommand;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    public void printCommand() {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"        switch (givenCommand) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"            case GREETINGS:","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"            case DEPARTURE:","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(\"Bye. Hope to see you again soon ^^!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":24}},{"path":"src/main/java/CommandName.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"public enum CommandName {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"    GREETINGS, DEPARTURE","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of a Deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"    protected String byTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"     * The information regarding the Deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"     * @param description the description of the task to do by the deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"     * @param byDate the due date","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"     * @param byTime the due time","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"     * @throws DukeException self created exception","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    public Deadline(String description, LocalDate byDate, String byTime) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"     * The string representation of the deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing the description and the due date of the deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byTime.toString() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"     * A string representation to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"     * @return a string that represents what to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    public String saveToDisk() {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"        String alreadyDone \u003d super.getStatusIcon();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"        return \"D | \" + alreadyDone + \" | \" + super.getDescription() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    private static String fileDestination;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"     * This method checks if a string typed can be a number or not","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"     * @param number the string that is entered that could be a number","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value indicating whether the string entered can be parsed as an integer","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isNumeric(String number) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        if (number \u003d\u003d null) {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"            return false;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"            // try to parse the integer as a number","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"            int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"            return false;","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"        return true;","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"     * This method joins the individual string elements in an array from a start position","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"     * @param stringArray the array of strings","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"     * @param start the starting position","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"     * @return the string representing the elements joined from the starting position to the end","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    public static String joinString(String[] stringArray, int start) {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"        StringBuilder outputString \u003d new StringBuilder();","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"        for (int i \u003d start; i \u003c stringArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"            String toAdd \u003d stringArray[i] + \" \";","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"            outputString.append(toAdd);","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"        return outputString.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"    public static FileWriter createFileWriter() throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"        return new FileWriter(fileDestination);","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"    public static LocalDate createLocalDate(String stringDate) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"        String[] currDateWords \u003d stringDate.split(\"/\");","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"        String year \u003d currDateWords[2];","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"        String month \u003d currDateWords[1].length() \u003c 2 ? \"0\" + currDateWords[1] : currDateWords[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"        String day \u003d currDateWords[0].length() \u003c 2 ? \"0\" + currDateWords[0] : currDateWords[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"        String currDateString \u003d year + \u0027-\u0027 + month + \u0027-\u0027 + day;","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"        return LocalDate.parse(currDateString);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"kangzongxian"},"content":"     * The main function","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"kangzongxian"},"content":"     * @param args arguments","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"        // PrintWriter variable to write and print characters from the file","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"kangzongxian"},"content":"        FileWriter fileWriter \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"        fileDestination \u003d \"src/main/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"        // Create the commands for greeting and departure","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"        Command greeting \u003d new Command(CommandName.GREETINGS);","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"        Command departure \u003d new Command(CommandName.DEPARTURE);","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"        // Create the PrintWriter to write to the duke.txt file","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"kangzongxian"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"            // File output only saved once close file","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"kangzongxian"},"content":"            fileWriter \u003d createFileWriter();","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"kangzongxian"},"content":"        } catch (java.io.IOException exception) {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"kangzongxian"},"content":"            // This is when file is not found, create a file in this case","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"kangzongxian"},"content":"            // Also handle if any exception occurs","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"kangzongxian"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"                File myObj \u003d new File(fileDestination);","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"                if (myObj.createNewFile()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"                    System.out.println(\"File created: \" + myObj.getName());","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"                    System.out.println(\"File already exists.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"kangzongxian"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"        // Create an Array to store the Tasks the user has entered of size 100","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"        String userCommand \u003d \"\";","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"kangzongxian"},"content":"        // Creates a scanner to accept input","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"        Scanner enterInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":103,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"kangzongxian"},"content":"        // Greet user","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"        greeting.printCommand();","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"kangzongxian"},"content":"        userCommand \u003d enterInput.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"        // When user does not type bye, ask for input and print out the input","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"kangzongxian"},"content":"        while (!userCommand.equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"kangzongxian"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(\"----------------------\");","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"kangzongxian"},"content":"                // If user types list, output all the text being stored","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"kangzongxian"},"content":"                if (userCommand.equals(\"list\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"kangzongxian"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"kangzongxian"},"content":"                    for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"kangzongxian"},"content":"                        Task currentTask \u003d taskArrayList.get(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"kangzongxian"},"content":"                        System.out.println(String.valueOf(i + 1) + \".\" + currentTask.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"kangzongxian"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"kangzongxian"},"content":"                } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"kangzongxian"},"content":"                    // Get all the words the user has typed","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"kangzongxian"},"content":"                    String[] words \u003d userCommand.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"kangzongxian"},"content":"                    if (words.length \u003e 1 \u0026\u0026","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"kangzongxian"},"content":"                            (words[0].equals(\"mark\") || words[0].equals(\"unmark\")) \u0026\u0026 isNumeric(words[1])) {","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"kangzongxian"},"content":"                        // If user first word is marked or unmarked and second word can be a number, it is a mark or unmark","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"kangzongxian"},"content":"                        // Get the index of task to mark or unmark","lastModifiedDate":"2022-08-17"},{"lineNumber":127,"author":{"gitId":"kangzongxian"},"content":"                        // Get the task and mark it as done or not done depending on the user","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"kangzongxian"},"content":"                        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":129,"author":{"gitId":"kangzongxian"},"content":"                        // Check if the user enters a number out of range","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"kangzongxian"},"content":"                        if (taskNumber \u003c 0 || taskNumber \u003e taskArrayList.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"kangzongxian"},"content":"                            throw new DukeException(\"Number out of range!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"kangzongxian"},"content":"                        else {","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"kangzongxian"},"content":"                            // If number is valid, undergo the operation","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"kangzongxian"},"content":"                            Task currentTask \u003d taskArrayList.get(taskNumber - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"kangzongxian"},"content":"                            if (words[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":137,"author":{"gitId":"kangzongxian"},"content":"                                // Mark task","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"kangzongxian"},"content":"                                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"kangzongxian"},"content":"                                currentTask.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"kangzongxian"},"content":"                                System.out.println(currentTask.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"kangzongxian"},"content":"                            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"kangzongxian"},"content":"                                // Unmark task","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"kangzongxian"},"content":"                                System.out.println(\"0K, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":144,"author":{"gitId":"kangzongxian"},"content":"                                currentTask.markNotDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"kangzongxian"},"content":"                                System.out.println(currentTask.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"kangzongxian"},"content":"                            }","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"kangzongxian"},"content":"                    } else if (words.length \u003e 1 \u0026\u0026 words[0].equals(\"delete\") \u0026\u0026 isNumeric(words[1])) {","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"kangzongxian"},"content":"                        // Get the taskNumber to delete","lastModifiedDate":"2022-08-18"},{"lineNumber":150,"author":{"gitId":"kangzongxian"},"content":"                        // Delete the task","lastModifiedDate":"2022-08-18"},{"lineNumber":151,"author":{"gitId":"kangzongxian"},"content":"                        // Check if the user enters a number out of range","lastModifiedDate":"2022-08-18"},{"lineNumber":152,"author":{"gitId":"kangzongxian"},"content":"                        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"kangzongxian"},"content":"                        if (taskNumber \u003c 0 || taskNumber \u003e taskArrayList.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"kangzongxian"},"content":"                            throw new DukeException(\"Number out of range!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":155,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":156,"author":{"gitId":"kangzongxian"},"content":"                        else {","lastModifiedDate":"2022-08-18"},{"lineNumber":157,"author":{"gitId":"kangzongxian"},"content":"                            Task currentTask \u003d taskArrayList.get(taskNumber - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(currentTask.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"kangzongxian"},"content":"                            taskArrayList.remove(taskNumber - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Now you have \" + String.valueOf(taskArrayList.size()) +\" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"kangzongxian"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"kangzongxian"},"content":"                    else {","lastModifiedDate":"2022-08-18"},{"lineNumber":165,"author":{"gitId":"kangzongxian"},"content":"                        // User is trying to add a new to-do / deadline / event","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"kangzongxian"},"content":"                        // Create a string to be outputted","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"kangzongxian"},"content":"                        String outputString \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"kangzongxian"},"content":"                        if (words[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":169,"author":{"gitId":"kangzongxian"},"content":"                            // If user is trying to add a to-do, save the description","lastModifiedDate":"2022-08-18"},{"lineNumber":170,"author":{"gitId":"kangzongxian"},"content":"                            // Have a default value in case the user did not add any description","lastModifiedDate":"2022-08-18"},{"lineNumber":171,"author":{"gitId":"kangzongxian"},"content":"                            String description \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":172,"author":{"gitId":"kangzongxian"},"content":"                            if (words.length \u003e 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":173,"author":{"gitId":"kangzongxian"},"content":"                                description \u003d joinString(words, 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"kangzongxian"},"content":"                                description \u003d description.substring(0, description.length() - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"kangzongxian"},"content":"                            }","lastModifiedDate":"2022-08-18"},{"lineNumber":176,"author":{"gitId":"kangzongxian"},"content":"                            Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":177,"author":{"gitId":"kangzongxian"},"content":"                            taskArrayList.add(newTodo);","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"kangzongxian"},"content":"                            outputString \u003d newTodo.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"kangzongxian"},"content":"                            fileWriter.write(newTodo.saveToDisk());","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Got it. I \u0027ve added this task:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":181,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(outputString);","lastModifiedDate":"2022-08-18"},{"lineNumber":182,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Now you have \" + String.valueOf(taskArrayList.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":183,"author":{"gitId":"kangzongxian"},"content":"                        } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":184,"author":{"gitId":"kangzongxian"},"content":"                            // If user is trying to add a deadline, save the description and the \u0027by\u0027 date","lastModifiedDate":"2022-08-18"},{"lineNumber":185,"author":{"gitId":"kangzongxian"},"content":"                            // Have a default value in case the user did not add any description","lastModifiedDate":"2022-08-18"},{"lineNumber":186,"author":{"gitId":"kangzongxian"},"content":"                            String remainingDescription \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":187,"author":{"gitId":"kangzongxian"},"content":"                            String description \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":188,"author":{"gitId":"kangzongxian"},"content":"                            String[] remainingWords \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":189,"author":{"gitId":"kangzongxian"},"content":"                            String[] dateTimeArray \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":190,"author":{"gitId":"kangzongxian"},"content":"                            String by \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":191,"author":{"gitId":"kangzongxian"},"content":"                            if (words.length \u003e 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":192,"author":{"gitId":"kangzongxian"},"content":"                                // Remaining description are the words after the task description","lastModifiedDate":"2022-08-18"},{"lineNumber":193,"author":{"gitId":"kangzongxian"},"content":"                                remainingDescription \u003d joinString(words, 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":194,"author":{"gitId":"kangzongxian"},"content":"                                remainingWords \u003d remainingDescription.split(\" /by \");","lastModifiedDate":"2022-08-18"},{"lineNumber":195,"author":{"gitId":"kangzongxian"},"content":"                                description \u003d remainingWords[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":196,"author":{"gitId":"kangzongxian"},"content":"                                by \u003d remainingWords[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":197,"author":{"gitId":"kangzongxian"},"content":"                                dateTimeArray \u003d by.split(\" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":198,"author":{"gitId":"kangzongxian"},"content":"                                // Cut down a white spacing at the end","lastModifiedDate":"2022-08-18"},{"lineNumber":199,"author":{"gitId":"kangzongxian"},"content":"                                by \u003d by.substring(0, by.length() - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":200,"author":{"gitId":"kangzongxian"},"content":"                            }","lastModifiedDate":"2022-08-18"},{"lineNumber":201,"author":{"gitId":"kangzongxian"},"content":"                            assert dateTimeArray !\u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":202,"author":{"gitId":"kangzongxian"},"content":"                            LocalDate byDate \u003d createLocalDate(dateTimeArray[0].strip());","lastModifiedDate":"2022-08-24"},{"lineNumber":203,"author":{"gitId":"kangzongxian"},"content":"                            Deadline newDeadline \u003d new Deadline(description, byDate, by);","lastModifiedDate":"2022-08-24"},{"lineNumber":204,"author":{"gitId":"kangzongxian"},"content":"                            taskArrayList.add(newDeadline);","lastModifiedDate":"2022-08-18"},{"lineNumber":205,"author":{"gitId":"kangzongxian"},"content":"                            outputString \u003d newDeadline.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":206,"author":{"gitId":"kangzongxian"},"content":"                            fileWriter.write(newDeadline.saveToDisk());","lastModifiedDate":"2022-08-24"},{"lineNumber":207,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Got it. I \u0027ve added this task:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":208,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(outputString);","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Now you have \" + String.valueOf(taskArrayList.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":210,"author":{"gitId":"kangzongxian"},"content":"                        } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":211,"author":{"gitId":"kangzongxian"},"content":"                            // If user is trying to add an event, save the description and the \u0027at\u0027 date","lastModifiedDate":"2022-08-18"},{"lineNumber":212,"author":{"gitId":"kangzongxian"},"content":"                            // Have a default value in case the user did not add any description","lastModifiedDate":"2022-08-18"},{"lineNumber":213,"author":{"gitId":"kangzongxian"},"content":"                            String description \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":214,"author":{"gitId":"kangzongxian"},"content":"                            String[] remainingWords;","lastModifiedDate":"2022-08-18"},{"lineNumber":215,"author":{"gitId":"kangzongxian"},"content":"                            String at \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":216,"author":{"gitId":"kangzongxian"},"content":"                            String remainingDescription \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":217,"author":{"gitId":"kangzongxian"},"content":"                            if (words.length \u003e 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":218,"author":{"gitId":"kangzongxian"},"content":"                                // Remaining description are the words after the task description","lastModifiedDate":"2022-08-18"},{"lineNumber":219,"author":{"gitId":"kangzongxian"},"content":"                                remainingDescription \u003d joinString(words, 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":220,"author":{"gitId":"kangzongxian"},"content":"                                remainingWords \u003d remainingDescription.split(\" /at \");","lastModifiedDate":"2022-08-18"},{"lineNumber":221,"author":{"gitId":"kangzongxian"},"content":"                                description \u003d remainingWords[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":222,"author":{"gitId":"kangzongxian"},"content":"                                at \u003d remainingWords[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":223,"author":{"gitId":"kangzongxian"},"content":"                                // Cut down a white spacing at the end","lastModifiedDate":"2022-08-18"},{"lineNumber":224,"author":{"gitId":"kangzongxian"},"content":"                                at \u003d at.substring(0, at.length() - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":225,"author":{"gitId":"kangzongxian"},"content":"                            }","lastModifiedDate":"2022-08-18"},{"lineNumber":226,"author":{"gitId":"kangzongxian"},"content":"                            Event newEvent \u003d new Event(description, at);","lastModifiedDate":"2022-08-18"},{"lineNumber":227,"author":{"gitId":"kangzongxian"},"content":"                            taskArrayList.add(newEvent);","lastModifiedDate":"2022-08-18"},{"lineNumber":228,"author":{"gitId":"kangzongxian"},"content":"                            outputString \u003d newEvent.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":229,"author":{"gitId":"kangzongxian"},"content":"                            fileWriter.write(newEvent.saveToDisk());","lastModifiedDate":"2022-08-24"},{"lineNumber":230,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Got it. I \u0027ve added this task:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":231,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(outputString);","lastModifiedDate":"2022-08-18"},{"lineNumber":232,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Now you have \" + String.valueOf(taskArrayList.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":233,"author":{"gitId":"kangzongxian"},"content":"                        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":234,"author":{"gitId":"kangzongxian"},"content":"                            throw new DukeException(\"I\u0027m sorry, I don\u0027t know what that means!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":235,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":236,"author":{"gitId":"kangzongxian"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":237,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":238,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":239,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(\"----------------------\");","lastModifiedDate":"2022-08-17"},{"lineNumber":240,"author":{"gitId":"kangzongxian"},"content":"                // Catch exceptions thrown by the Dukebot","lastModifiedDate":"2022-08-18"},{"lineNumber":241,"author":{"gitId":"kangzongxian"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2022-08-18"},{"lineNumber":242,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(dukeException.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":243,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(\"----------------------\");","lastModifiedDate":"2022-08-18"},{"lineNumber":244,"author":{"gitId":"kangzongxian"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":245,"author":{"gitId":"kangzongxian"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":246,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(\"Error writing into file!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":247,"author":{"gitId":"kangzongxian"},"content":"            } finally {","lastModifiedDate":"2022-08-18"},{"lineNumber":248,"author":{"gitId":"kangzongxian"},"content":"                userCommand \u003d enterInput.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":249,"author":{"gitId":"kangzongxian"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":251,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":252,"author":{"gitId":"kangzongxian"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":253,"author":{"gitId":"kangzongxian"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":254,"author":{"gitId":"kangzongxian"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-08-24"},{"lineNumber":255,"author":{"gitId":"kangzongxian"},"content":"            System.out.println(\"Error managing file\");","lastModifiedDate":"2022-08-24"},{"lineNumber":256,"author":{"gitId":"kangzongxian"},"content":"        } finally {","lastModifiedDate":"2022-08-24"},{"lineNumber":257,"author":{"gitId":"kangzongxian"},"content":"            // User operations done","lastModifiedDate":"2022-08-18"},{"lineNumber":258,"author":{"gitId":"kangzongxian"},"content":"            departure.printCommand();","lastModifiedDate":"2022-08-18"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":261,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kangzongxian":257,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"     * Constructor for the DukeException","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"     * @param errorMessage message to be shown when DukeException is caught","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"     * Text to be shown","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"     * @return text to be shown when DukeException is caught","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"        return \"Oops! \" + super.getMessage();","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of an Event","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"    protected String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"     * The constructor for the Event","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"     * @param at the time of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"     * The string representation of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing the description and the time of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     * A string representation to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"     * @return a string that represents what to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    public String saveToDisk() {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"        String alreadyDone \u003d super.getStatusIcon();","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"        return \"E | \" + alreadyDone + \" | \" + super.getDescription() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":37}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of a Task","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"     * The constructor for the Task","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"     * @param description the text for the task","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"        return description;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"     * Set isDone parameter to be true","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"     * Set isDone parameter to be false","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"     * Get the status of whether the task is done or not","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing whether the task is done","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"     * Get a statement representing if the task is already done or not","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing the task and its status","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"        return \"[ ] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"kangzongxian":53}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"     * The constructor, does not have a time attribute","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"     * @param description the description of the task to do","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"     * The string representation of the to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing the description of the to-do","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"     * A string representation to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"     * @return a string that represents what to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"    public String saveToDisk() {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"        String alreadyDone \u003d super.getStatusIcon();","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"        return \"T | \" + alreadyDone + \" | \" + super.getDescription() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kangzongxian":1,"-":37}}]

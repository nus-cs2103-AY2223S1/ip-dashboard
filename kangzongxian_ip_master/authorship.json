[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kangzongxian":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"checkstyle {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kangzongxian":6,"-":40}},{"path":"src/main/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"[T][] return book","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kangzongxian":1}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible for giving commands","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"public class Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of a duke.Command","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"    protected CommandName givenCommand;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"     * Constructor for the duke.Command class","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"     * @param givenCommand the given command","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"    public Command(CommandName givenCommand) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"        this.givenCommand \u003d givenCommand;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"     * Greet the user depending on the given command","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"    public void printCommand() {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"        switch (givenCommand) {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"        case GREETINGS:","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"            System.out.println(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"            System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"        case DEPARTURE:","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"            System.out.println(\"Bye. Hope to see you again soon ^^!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"            break;","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"        default:","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"            System.out.println(\"Invalid Sentence!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":35}},{"path":"src/main/java/duke/CommandName.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":" * Enums of CommandName","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"public enum CommandName {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"    GREETINGS, DEPARTURE","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible for creating and manipulating Deadlines","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of a duke.Deadline","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    protected String byTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"     * The information regarding the duke.Deadline","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"     * @param description the description of the task to do by the deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"     * @param byDate the due date","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"     * @param byTime the due time","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"     * @throws DukeException self created exception","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"    public Deadline(String description, LocalDate byDate, String byTime) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"     * The string representation of the deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing the description and the due date of the deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byTime.toString() + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"     * A string representation to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"     * @return a string that represents what to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"    public String saveToDisk() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"        String alreadyDone \u003d super.getStatusIcon();","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"        return \"D | \" + alreadyDone + \" | \" + super.getDescription() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":48}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"import java.util.List;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible for the bot Duke","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"public class Duke {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of a Duke object","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"    private static final String FILEDESTINATION \u003d \"./src/main/duke.txt\";","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"     * The constructor for the Duke class","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    public Duke() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"        storage \u003d new Storage(FILEDESTINATION);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"     * The method to run the Duke bot","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     * @throws DukeException exception to be thrown regarding DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"     * @throws IOException exception to be thrown regarding IOException","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    public void run() throws DukeException, IOException {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"        storage.loadTasks();","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"        ui.greet();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"        ui.showTaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"        // Boolean value to check if user wants to leave","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"        boolean isQuit \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"        while (!isQuit) {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"                String userCommand \u003d ui.getCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"                if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"                    isQuit \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"                    ui.bye();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"                } else if (userCommand.equals(\"list\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"                    ui.showTaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"                } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"                    // Get all the words the user has typed","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"                    String[] words \u003d userCommand.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"                    // Check if user wants to mark task","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"                    if (Parser.isMarkTask(words)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"                        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"                        // Check if user enters a number out of range","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"                        if (taskNumber \u003c 0 || taskNumber \u003e taskArrayList.size()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"                            throw new DukeException(\"Number out of range!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"                        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"                            ui.markTaskDoneAndPrintOutput(taskNumber);","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"                        // Checks if user wants to unmark task","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"kangzongxian"},"content":"                    } else if (Parser.isUnmarkTask(words)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"kangzongxian"},"content":"                        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"kangzongxian"},"content":"                        // Check if user enters a number out of range","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"kangzongxian"},"content":"                        if (taskNumber \u003c 0 || taskNumber \u003e taskArrayList.size()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"kangzongxian"},"content":"                            throw new DukeException(\"Number out of range!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"                        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"                            ui.markTaskNotDoneAndPrintOutput(taskNumber);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"                        // Check if user wants to delete a task","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"kangzongxian"},"content":"                    } else if (Parser.isDeleteTask(words)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"                        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"                        if (taskNumber \u003c 0 || taskNumber \u003e taskArrayList.size()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"                            throw new DukeException(\"Number out of range!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"kangzongxian"},"content":"                        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"                            ui.markTaskDeletedAndPrintOutput(taskNumber);","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"                    } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"kangzongxian"},"content":"                        // User is trying to add a new to-do / deadline / event","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"kangzongxian"},"content":"                        if (Parser.isAddTodoTask(words)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"kangzongxian"},"content":"                            createAndAddTodo(words);","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"kangzongxian"},"content":"                        } else if (Parser.isAddDeadlineTask(words)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"kangzongxian"},"content":"                            createAndAddDeadline(words);","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"                        } else if (Parser.isAddEventTask(words)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"                            createAndAddEvent(words);","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"                        } else if (Parser.isFindTask(words)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"                            String keywords \u003d Parser.joinString(words, 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"                            keywords \u003d keywords.substring(0, keywords.length() - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"                            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"kangzongxian"},"content":"                            for (Task task : taskArrayList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"                                if (task.getDescription().contains(keywords)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"                                    System.out.println(task.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"                                }","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"                            }","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"                        } else {","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"                            throw new DukeException(\"I\u0027m sorry, I don\u0027t know what that means!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(dukeException.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"kangzongxian"},"content":"            } finally {","lastModifiedDate":"2022-09-02"},{"lineNumber":104,"author":{"gitId":"kangzongxian"},"content":"                storage.saveTasks();","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"kangzongxian"},"content":"     * Creates a to-do object","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"kangzongxian"},"content":"     * @throws DukeException exception to be thrown regarding DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"kangzongxian"},"content":"    public void createAndAddTodo(String[] wordsArray) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"kangzongxian"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"kangzongxian"},"content":"        if (wordsArray.length \u003e 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"kangzongxian"},"content":"            description \u003d Parser.joinString(wordsArray, 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"kangzongxian"},"content":"            // Correct an extra spacing at the end","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"kangzongxian"},"content":"            description \u003d description.substring(0, description.length() - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"kangzongxian"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"kangzongxian"},"content":"        taskArrayList.add(newTodo);","lastModifiedDate":"2022-09-02"},{"lineNumber":124,"author":{"gitId":"kangzongxian"},"content":"        ui.printAddedTask(newTodo);","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"kangzongxian"},"content":"     * Creates a deadline object","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"kangzongxian"},"content":"     * @throws DukeException exception to be thrown regarding DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"kangzongxian"},"content":"    public void createAndAddDeadline(String[] wordsArray) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"kangzongxian"},"content":"        String remainingDescription \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"kangzongxian"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"kangzongxian"},"content":"        String[] remainingWords;","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"kangzongxian"},"content":"        String[] dateTimeArray \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"kangzongxian"},"content":"        String by \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"kangzongxian"},"content":"        if (wordsArray.length \u003e 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"kangzongxian"},"content":"            // Remaining description are the words after the task description","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"kangzongxian"},"content":"            remainingDescription \u003d Parser.joinString(wordsArray, 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"kangzongxian"},"content":"            remainingWords \u003d remainingDescription.split(\" /by \");","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"kangzongxian"},"content":"            description \u003d remainingWords[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"kangzongxian"},"content":"            by \u003d remainingWords[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"kangzongxian"},"content":"            dateTimeArray \u003d by.split(\" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"kangzongxian"},"content":"            // Cut down a white spacing at the end","lastModifiedDate":"2022-08-18"},{"lineNumber":147,"author":{"gitId":"kangzongxian"},"content":"            by \u003d by.substring(0, by.length() - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"kangzongxian"},"content":"        assert dateTimeArray !\u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"kangzongxian"},"content":"        LocalDate byDate \u003d Parser.createLocalDate(dateTimeArray[0].strip());","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"kangzongxian"},"content":"        Deadline newDeadline \u003d new Deadline(description, byDate, by);","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"kangzongxian"},"content":"        taskArrayList.add(newDeadline);","lastModifiedDate":"2022-09-02"},{"lineNumber":153,"author":{"gitId":"kangzongxian"},"content":"        ui.printAddedTask(newDeadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"kangzongxian"},"content":"     * Creates an event object","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"kangzongxian"},"content":"     * @throws DukeException exception to be thrown regarding DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"kangzongxian"},"content":"    public void createAndAddEvent(String[] wordsArray) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":162,"author":{"gitId":"kangzongxian"},"content":"        // If user is trying to add an event, save the description and the \u0027at\u0027 date","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"kangzongxian"},"content":"        // Have a default value in case the user did not add any description","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"kangzongxian"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":165,"author":{"gitId":"kangzongxian"},"content":"        String[] remainingWords;","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"kangzongxian"},"content":"        String at \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"kangzongxian"},"content":"        String remainingDescription \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":169,"author":{"gitId":"kangzongxian"},"content":"        if (wordsArray.length \u003e 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"kangzongxian"},"content":"            // Remaining description are the words after the task description","lastModifiedDate":"2022-08-18"},{"lineNumber":171,"author":{"gitId":"kangzongxian"},"content":"            remainingDescription \u003d Parser.joinString(wordsArray, 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"kangzongxian"},"content":"            remainingWords \u003d remainingDescription.split(\" /at \");","lastModifiedDate":"2022-08-18"},{"lineNumber":173,"author":{"gitId":"kangzongxian"},"content":"            description \u003d remainingWords[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"kangzongxian"},"content":"            at \u003d remainingWords[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"kangzongxian"},"content":"            // Cut down a white spacing at the end","lastModifiedDate":"2022-08-18"},{"lineNumber":176,"author":{"gitId":"kangzongxian"},"content":"            at \u003d at.substring(0, at.length() - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":177,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"kangzongxian"},"content":"        Event newEvent \u003d new Event(description, at);","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"kangzongxian"},"content":"        taskArrayList.add(newEvent);","lastModifiedDate":"2022-09-02"},{"lineNumber":180,"author":{"gitId":"kangzongxian"},"content":"        ui.printAddedTask(newEvent);","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":182,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":183,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"kangzongxian"},"content":"     * The main function","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"kangzongxian"},"content":"     * @param args arguments","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"kangzongxian"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2022-08-26"},{"lineNumber":188,"author":{"gitId":"kangzongxian"},"content":"        new Duke().run();","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":190,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":191,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kangzongxian":192,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":" * This class is the customised Exceptions that we create","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"     * Constructor for the duke.DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"     * @param errorMessage message to be shown when duke.DukeException is caught","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"     * Text to be shown","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"     * @return text to be shown when duke.DukeException is caught","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        return \"Oops! \" + super.getMessage();","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":24}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible for creating and manipulating an event","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of a duke.Event","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"    protected String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"     * The constructor for the Event","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"     * @param at the time of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"     * The string representation of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing the description and the time of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"     * A string representation to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"     * @return a string that represents what to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"    public String saveToDisk() {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"        String alreadyDone \u003d super.getStatusIcon();","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"        return \"E | \" + alreadyDone + \" | \" + super.getDescription() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":42}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible ofr interpretting the user input","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"     * This method checks if a string typed can be a number or not","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"     * @param number the string that is entered that could be a number","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value indicating whether the string entered can be parsed as an integer","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isNumeric(String number) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"        if (number \u003d\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"            return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"            // try to parse the integer as a number","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"            int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"            return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     * This method joins the individual string elements in an array from a start position","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"     * @param stringArray the array of strings","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"     * @param start the starting position","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"     * @return the string representing the elements joined from the starting position to the end","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"    public static String joinString(String[] stringArray, int start) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"        StringBuilder outputString \u003d new StringBuilder();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"        for (int i \u003d start; i \u003c stringArray.length; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"            String toAdd \u003d stringArray[i] + \" \";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"            outputString.append(toAdd);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"        return outputString.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"     * Creates a local date object","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"     * @param stringDate the date entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"     * @return a local date object representing the date","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"    public static LocalDate createLocalDate(String stringDate) {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"        String[] currDateWords \u003d stringDate.split(\"/\");","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"        String year \u003d currDateWords[2];","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"        String month \u003d currDateWords[1].length() \u003c 2 ? \"0\" + currDateWords[1] : currDateWords[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"        String day \u003d currDateWords[0].length() \u003c 2 ? \"0\" + currDateWords[0] : currDateWords[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"        String currDateString \u003d year + \u0027-\u0027 + month + \u0027-\u0027 + day;","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"        return LocalDate.parse(currDateString);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"     * Check if the command is to mark a task","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value stating whether to mark a task or not","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isMarkTask(String[] wordsArray) {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"kangzongxian"},"content":"        return wordsArray.length \u003e 1","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"kangzongxian"},"content":"                \u0026\u0026 wordsArray[0].equals(\"mark\") \u0026\u0026 isNumeric(wordsArray[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"     * Check if the command is to unmark a task","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value stating whether to unmark a task or not","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isUnmarkTask(String[] wordsArray) {","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"        return wordsArray.length \u003e 1","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"                \u0026\u0026 wordsArray[0].equals(\"unmark\") \u0026\u0026 isNumeric(wordsArray[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"     * Check if the command is to delete a task","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value stating whether to delete a task or not","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isDeleteTask(String[] wordsArray) {","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"kangzongxian"},"content":"        return wordsArray.length \u003e 1 \u0026\u0026 wordsArray[0].equals(\"delete\")","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"                \u0026\u0026 isNumeric(wordsArray[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"     * Check if the command is to add a to-do task","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value stating whether to add a to-do task or not","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isAddTodoTask(String[] wordsArray) {","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"        return wordsArray[0].equals(\"todo\");","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"     * Check if the command is to add a deadline task","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value stating whether to add a deadline task or not","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isAddDeadlineTask(String[] wordsArray) {","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"kangzongxian"},"content":"        return wordsArray[0].equals(\"deadline\");","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"kangzongxian"},"content":"     * Check if the command is to add an event task","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value stating whether to add an event task or not","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isAddEventTask(String[] wordsArray) {","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"kangzongxian"},"content":"        return wordsArray[0].equals(\"event\");","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"kangzongxian"},"content":"     * Check if the command is to find tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"kangzongxian"},"content":"     * @param wordsArray the array of words entered by the user","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"kangzongxian"},"content":"     * @return a boolean value stating whether to find tasks or not","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isFindTask(String[] wordsArray) {","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"kangzongxian"},"content":"        return wordsArray[0].equals(\"find\");","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kangzongxian":126}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import java.util.List;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":" * This clas sis responsible for storing and loading the tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"public class Storage {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    private String fileDestination;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"     * Constructor for the Storage class","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"     * @param fileDestination the destination filepath of the file","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"    public Storage(String fileDestination) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"        this.fileDestination \u003d fileDestination;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"     * Saves the tasks to the text file","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"     * @throws IOException exception to be thrown","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"        FileWriter fileWriter \u003d new FileWriter(fileDestination);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"        String tasksString \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"        for (Task task: taskArrayList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"            tasksString +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"        fileWriter.write(tasksString);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"        fileWriter.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"     * Loads the task to the TaskList array list","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"     * @throws IOException exception to be thrown regarding IOException","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"    public void loadTasks() throws IOException, DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(fileDestination));","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"        String readByLine \u003d bufferedReader.readLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"        while (readByLine !\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"            String taskDetails \u003d readByLine;","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"            String[] keywords \u003d readByLine.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"            Task currentTask \u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"            // Check what kind of task it is","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"            if (keywords[0].contains(\"T\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"                // If user is trying to add a to-do, save the description","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"                // Have a default value in case the user did not add any description","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"                String description \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"                if (keywords.length \u003e 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"                    description \u003d Parser.joinString(keywords, 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"kangzongxian"},"content":"                    description \u003d description.substring(0, description.length() - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"kangzongxian"},"content":"                Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"kangzongxian"},"content":"                if (keywords[0].indexOf(\"X\") \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"                    newTodo.markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"kangzongxian"},"content":"                taskArrayList.add(newTodo);","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"            } else if (keywords[0].contains(\"D\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"kangzongxian"},"content":"                String remainingDescription \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"                String description \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"                String[] remainingWords \u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"                String[] dateTimeArray \u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"kangzongxian"},"content":"                String by \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"                if (keywords.length \u003e 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"kangzongxian"},"content":"                    // Remaining description are the words after the task description","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"                    remainingDescription \u003d Parser.joinString(keywords, 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"kangzongxian"},"content":"                    remainingWords \u003d remainingDescription.split(\"by: \");","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"kangzongxian"},"content":"                    description \u003d remainingWords[0].replace(\"(\", \"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"kangzongxian"},"content":"                    by \u003d remainingWords[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"kangzongxian"},"content":"                    dateTimeArray \u003d by.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"kangzongxian"},"content":"                    // Cut down a white spacing at the end","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"                    by \u003d by.substring(0, by.length() - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(Arrays.toString(remainingWords));","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"                assert dateTimeArray !\u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"                System.out.println(dateTimeArray[0].strip());","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"                LocalDate byDate \u003d Parser.createLocalDate(dateTimeArray[0].strip());","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"kangzongxian"},"content":"                Deadline newDeadline \u003d new Deadline(description, byDate, by);","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"                if (keywords[0].indexOf(\"X\") \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"                    newDeadline.markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"                taskArrayList.add(newDeadline);","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"            } else if (keywords[0].contains(\"E\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"                String description \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"                String[] remainingWords;","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"                String at \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"kangzongxian"},"content":"                String remainingDescription \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"                if (keywords.length \u003e 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"                    // Remaining description are the words after the task description","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"kangzongxian"},"content":"                    remainingDescription \u003d Parser.joinString(keywords, 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"kangzongxian"},"content":"                    remainingWords \u003d remainingDescription.split(\"at:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"                    description \u003d remainingWords[0].replace(\"(\", \"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"kangzongxian"},"content":"                    at \u003d remainingWords[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"kangzongxian"},"content":"                    // Cut down a white spacing at the end","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"kangzongxian"},"content":"                    at \u003d at.substring(0, at.length() - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"kangzongxian"},"content":"                Event newEvent \u003d new Event(description, at);","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"kangzongxian"},"content":"                if (keywords[0].indexOf(\"X\") \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"kangzongxian"},"content":"                    newEvent.markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"kangzongxian"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"kangzongxian"},"content":"                taskArrayList.add(newEvent);","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"kangzongxian"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"kangzongxian"},"content":"                throw new DukeException(\"I\u0027m sorry, I don\u0027t know what that means!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"kangzongxian"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"kangzongxian"},"content":"            readByLine \u003d bufferedReader.readLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"kangzongxian"},"content":"        bufferedReader.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kangzongxian":124}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible for creating and manipulating a task","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"    // Attributes of a duke.Task","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"     * The constructor for the duke.Task","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"     * @param description the text for the task","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        return description;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"     * Set isDone parameter to be true","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"     * Set isDone parameter to be false","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"     * Get the status of whether the task is done or not","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing whether the task is done","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"     * Get a statement representing if the task is already done or not","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing the task and its status","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"        return \"[] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"kangzongxian":58}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible for the list of tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"public class TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    private static List\u003cTask\u003e taskArrayList;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"     * The constructor for TaskList","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"        taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"     * Mark a task as done","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"    public void markDone(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        taskArrayList.get(index).markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     * Add a task to the taskList","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"     * @param task the task to be added to the taskList","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"        taskArrayList.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"    public static List\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"        return taskArrayList;","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kangzongxian":39}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible for Todos","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"     * The constructor, does not have a time attribute","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"     * @param description the description of the task to do","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"     * The string representation of the to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"     * @return a string representing the description of the to-do","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     * A string representation to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"     * @return a string that represents what to write to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    public String saveToDisk() {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"        String alreadyDone \u003d super.getStatusIcon();","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"        return \"T | \" + alreadyDone + \" | \" + super.getDescription() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import java.util.List;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":" * This class is responsible for showing output to the user","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"public class Ui {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    // Use final variables to denote standard greetings we will say to the user","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    static final String GREETING \u003d \"Hello! I\u0027m Duke! What can I do for you?\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"    static final String BYE \u003d \"Bye. Hope to see you again soon ^^!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    static final String LINEBREAK \u003d \"-------------------------\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    private Scanner enterInput;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"     * Constructor for the duke.Ui","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    public Ui() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        this.enterInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"     * Greets the user","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    public void greet() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"     * Say bye to the user","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    public void bye() {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(BYE);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"    public String getCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"        return enterInput.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"     * Show all the tasks the user currently has","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"    public void showTaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"            Task currentTask \u003d taskArrayList.get(i);","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"            System.out.println(String.valueOf(i + 1) + \".\" + currentTask.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"     * Informs user that a task has been added","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"     * @param task the task that is added","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"    public void printAddedTask(Task task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(\"Got it. I \u0027ve added this task:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(\"Now you have \" + taskArrayList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"kangzongxian"},"content":"     * Informs user a task has been deleted","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"     * @param index the position of the task to delete","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"    public void markTaskDeletedAndPrintOutput(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"        Task currentTask \u003d taskArrayList.get(index - 1);","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(currentTask.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"kangzongxian"},"content":"        taskArrayList.remove(index - 1);","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(\"Now you have \" + String.valueOf(taskArrayList.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"kangzongxian"},"content":"     * Marks a task as done and informs the user","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"kangzongxian"},"content":"     * @param index the position of the task to be marked done","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"    public void markTaskDoneAndPrintOutput(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"        Task currentTask \u003d taskArrayList.get(index - 1);","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"        currentTask.markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(currentTask.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"     * Marks a task a not done and informs the user","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"     * @param index the position to mark a task as not done","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"    public void markTaskNotDoneAndPrintOutput(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"        List\u003cTask\u003e taskArrayList \u003d TaskList.getTaskArrayList();","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"kangzongxian"},"content":"        Task currentTask \u003d taskArrayList.get(index - 1);","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(\"0K, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"        currentTask.markNotDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"kangzongxian"},"content":"        System.out.println(currentTask.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kangzongxian":105}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"public class EventTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"    public void descriptionTest() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"        String expectedString \u003d \"[E][] project meeting (at: Mon 2-4pm)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"        Event expectedEvent \u003d new Event(\"project meeting\", \"Mon 2-4pm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(expectedEvent.toString(), expectedString);","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    public void anotherDescriptionTest() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"        String expectedString \u003d \"[E][] study session (at: Tues 3-6pm)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"        Event expectedEvent \u003d new Event(\"study session\", \"Tues 3-6pm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(expectedEvent.toString(), expectedString);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kangzongxian":27}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"    public void descriptionTest() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"        String expectedString \u003d \"[T][] return book\";","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"        Todo expectedTodo \u003d new Todo(\"return book\");","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(expectedTodo.toString(), expectedString);","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"    public void anotherDescriptionTest() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"        String expectedString \u003d \"[T][] do homework\";","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"        Todo expectedTodo \u003d new Todo(\"do homework\");","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(expectedTodo.toString(), expectedString);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kangzongxian":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kangzongxian":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kangzongxian":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kangzongxian":1,"-":37}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"    mainClassName \u003d \"scruffles.Scruffles\"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"    archiveBaseName \u003d \"scruffles\"","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shamooose":3,"-":39}},{"path":"src/main/java/scruffles/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" * A task that is due at a specific deadline, which is represented by a date","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"    public Deadline(String taskName, LocalDate by) {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"        super(taskName);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"    public Deadline(String taskName, LocalDate by, boolean isDone) {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"        super(taskName);","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"        String date \u003d by.getDayOfMonth() + \" \" + by.getMonth().toString() + \" \" + by.getYear();","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"shamooose":29}},{"path":"src/main/java/scruffles/DescriptionEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * An exception that\u0027s thrown when there is a missing description for tasks","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"public class DescriptionEmptyException extends Exception {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"    public DescriptionEmptyException() {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"        super(\"grrrr \u003e:( there is no task name woof woof!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"    public DescriptionEmptyException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"shamooose":17}},{"path":"src/main/java/scruffles/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * An event is a task that occurs at a specific timing on a certain date","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"    public Event(String description, String dateAndTime) {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"        String[] array1 \u003d dateAndTime.split(\" from \");","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"        String[] array2 \u003d array1[1].split(\" to \");","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"        this.at \u003d LocalDate.parse(array1[0]);","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"        this.startTime \u003d LocalTime.parse(array2[0]);","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"        this.endTime \u003d LocalTime.parse(array2[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"    public Event(String description, LocalDate at, LocalTime startTime, LocalTime endTime, boolean isDone) {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"        super(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"        String date \u003d at.getDayOfMonth() + \" \" + at.getMonth().toString() + \" \" + at.getYear() + \" \"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"                + startTime.toString() + \" to \" + endTime.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"shamooose":39}},{"path":"src/main/java/scruffles/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * An exception that\u0027s thrown when the user tries to delete or mark a task that does not exist","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"public class OutOfBoundsException extends Exception {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"    public OutOfBoundsException(int index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"        super(\"grrrr \u003e:( there is no number \" + index + \" item in the list woof woof!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"shamooose":13}},{"path":"src/main/java/scruffles/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * A class that handles parsing of inputs into Scruffles","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"public class Parser {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"     * The method of the parser that\u0027s used to parse inputs the program receives","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"     * @param input the string input of the program","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"     * @param tasks the TaskList of the current program","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"     * @throws UnknownArgumentException when input is an unknown command","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"     * @throws DescriptionEmptyException when a Task command has an incomplete input","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"    public static void parse(String input, TaskList tasks) throws UnknownArgumentException, DescriptionEmptyException {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"            ui.printMessage(tasks.list());","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"            tasks.mark(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"            tasks.add(input, Scruffles.Type.TODO);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"            tasks.add(input, Scruffles.Type.DEADLINE);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"            tasks.add(input, Scruffles.Type.EVENT);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"            tasks.delete(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"            tasks.find(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"            throw new UnknownArgumentException(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shamooose":38}},{"path":"src/main/java/scruffles/Scruffles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * The main class of the program, Scruffles, which is an app that helps track your tasks. With this app you can keep","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" * track of deadlines, events, as well as mark them as done or even delete them when you do not need toi track them","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":" * anymore","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"public class Scruffles {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"    enum Type {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"        TODO,","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"        EVENT","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"    public Scruffles(String filePath) {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"     * The method that executes the program","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"    public void run() {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"        ui.greet();","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"shamooose"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"shamooose"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"                Parser.parse(input, tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"            } catch (UnknownArgumentException | DescriptionEmptyException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"shamooose"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"shamooose"},"content":"        ui.bye();","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"        new Scruffles(\"/Users/shamustan/Desktop/University/AY22:23 S1/CS2103T/scruffles.txt\").run();","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shamooose":59}},{"path":"src/main/java/scruffles/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"import java.io.File;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":" * This class is responsible for the storing and loading of previously saved data","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"public class Storage {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"    private static String filePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"     * Loads the existing file from the filepath","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"     * @throws FileNotFoundException when there is no file found at the filepath","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"     * @returns the TaskList that was saved in the file","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"    public static ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"        File newFile \u003d new File(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"        Scanner scan \u003d new Scanner(newFile);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"            String taskString \u003d scan.nextLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"            String[] inputs \u003d taskString.split(\" / \");","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"            Task task \u003d new Task(\"\");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"            boolean isDone \u003d inputs[1].equals(\"X\");","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"            switch (inputs[0]) {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"            case \"T\":","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"                task \u003d new Todo(inputs[2], isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"shamooose"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"            case \"D\":","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"                task \u003d new Deadline(inputs[2], LocalDate.parse(inputs[3]), isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"shamooose"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"            case \"E\":","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"                task \u003d new Event(inputs[2], LocalDate.parse(inputs[3]), LocalTime.parse(inputs[4]),","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"                            LocalTime.parse(inputs[5]), isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"shamooose"},"content":"                break;","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"shamooose"},"content":"            default:","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"shamooose"},"content":"                continue;","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"            result.add(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"shamooose"},"content":"        return result;","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"shamooose"},"content":"     * Saves the TaskList into the filepath","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"shamooose"},"content":"     * @param tasks the TaskList that is being saved into the file","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"shamooose"},"content":"    public static void save(TaskList tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"shamooose"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"shamooose"},"content":"            File newFile \u003d new File(filePath);","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"shamooose"},"content":"            newFile.createNewFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"shamooose"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"shamooose"},"content":"            fileWriter.write(tasks.saveToFile());","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"shamooose"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"shamooose"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"shamooose"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shamooose":77}},{"path":"src/main/java/scruffles/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * This is the class that is used to hold information regarding tasks tracked by Scruffles","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"public class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"    protected String taskName;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"     * Used to display the status icon of whether a task is marked as done or not","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"     * @returns the required status icon","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"     * Sets this Task as done","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"        this.isDone \u003d !isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.taskName;","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"shamooose":36}},{"path":"src/main/java/scruffles/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" * This class is where the tasks are stored while the program is running","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"public class TaskList {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"    private int taskCount;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"        this.taskCount \u003d tasks.size();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"     * Used to convert the current TaskList into a string format that can be easily read by the program after saving","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"     * @returns the TaskList in the required string format for saving to file","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"    public String saveToFile() {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"            String textInput \u003d \"\";","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"            String isDone \u003d \"O / \";","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"            if (task.isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"                isDone \u003d \"X / \";","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"                textInput \u003d \"T / \" + isDone + task.taskName + \"\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"                textInput \u003d \"D / \" + isDone + task.taskName + \" / \" + ((Deadline) task).by + \"\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"shamooose"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"                textInput \u003d \"E / \" + isDone + task.taskName + \" / \" + ((Event) task).at + \" / \"","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"                        + ((Event) task).startTime + \" / \" + ((Event) task).endTime + \"\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"            output.concat(textInput);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"        return output;","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"shamooose"},"content":"     * Adds the tasks into the TaskList","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"     * @param str the input string of the Task","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"     * @param type the enumerated type of Task (TODO, DEADLINE, EVENT)","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"shamooose"},"content":"    public void add(String str, Scruffles.Type type) {","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"shamooose"},"content":"        if (type.equals(Scruffles.Type.TODO)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"shamooose"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"shamooose"},"content":"                if (str.equals(\"todo\") || str.equals(\"todo \")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"shamooose"},"content":"                    throw new DescriptionEmptyException();","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"shamooose"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"shamooose"},"content":"                tasks.add(new Todo(str.replace(\"todo \", \"\")));","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"shamooose"},"content":"                taskCount++;","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"shamooose"},"content":"                System.out.println(String.format(\"woof! the task is added woof!\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"shamooose"},"content":"                                \"%s\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"shamooose"},"content":"                                \"you now have %d tasks in the list woof!\",","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"shamooose"},"content":"                        tasks.get(taskCount - 1).toString(),","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"shamooose"},"content":"                        taskCount));","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"shamooose"},"content":"            } catch (DescriptionEmptyException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"shamooose"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"shamooose"},"content":"        } else if (type.equals(Scruffles.Type.DEADLINE)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"shamooose"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"shamooose"},"content":"                if (str.equals(\"deadline\") || str.equals(\"deadline \")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"shamooose"},"content":"                    throw new DescriptionEmptyException();","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"shamooose"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"shamooose"},"content":"                String[] input \u003d str.split(\"/by \");","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"shamooose"},"content":"                String name \u003d input[0].replace(\"deadline\", \"\");","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"shamooose"},"content":"                LocalDate date \u003d LocalDate.parse(input[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"shamooose"},"content":"                tasks.add(new Deadline(name, date));","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"shamooose"},"content":"                taskCount++;","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"shamooose"},"content":"                System.out.println(String.format(\"woof! the task is added woof!\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"shamooose"},"content":"                                \"%s\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"shamooose"},"content":"                                \"you now have %d tasks in the list woof!\",","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"shamooose"},"content":"                        tasks.get(taskCount - 1).toString(),","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"shamooose"},"content":"                        taskCount));","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"shamooose"},"content":"            } catch (DescriptionEmptyException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"shamooose"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"shamooose"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"shamooose"},"content":"                System.out.println(\"grrrr \u003e:( when is your deadline?? woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"shamooose"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"shamooose"},"content":"                System.out.println(\"grrrr \u003e:( please input deadline in yyyy-mm-dd format woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"shamooose"},"content":"        } else if (type.equals(Scruffles.Type.EVENT)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"shamooose"},"content":"            try {","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"shamooose"},"content":"                if (str.equals(\"event\") || str.equals(\"event \")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"shamooose"},"content":"                    throw new DescriptionEmptyException();","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"shamooose"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"shamooose"},"content":"                String[] input \u003d str.split(\"/at \");","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"shamooose"},"content":"                String name \u003d input[0].replace(\"event\", \"\");","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"shamooose"},"content":"                tasks.add(new Event(name, input[1]));","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"shamooose"},"content":"                taskCount++;","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"shamooose"},"content":"                System.out.println(String.format(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"shamooose"},"content":"                                \"%s\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"shamooose"},"content":"                                \"you now have %d tasks in the list woof!\",","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"shamooose"},"content":"                        tasks.get(taskCount - 1).toString(),","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"shamooose"},"content":"                        taskCount));","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"shamooose"},"content":"            } catch (DescriptionEmptyException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"shamooose"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"shamooose"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"shamooose"},"content":"                System.out.println(\"grrrr \u003e:( when is your event?? woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"shamooose"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"shamooose"},"content":"                System.out.println(\"grrrr \u003e:( please input event date as \u0027yyyy-mm-dd from hh:mm to hh:mm\u0027 format\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"shamooose"},"content":"                        \" woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"shamooose"},"content":"     * Deletes the task of given number from the TaskList","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"shamooose"},"content":"     * @param input the input string of the message","lastModifiedDate":"2022-08-31"},{"lineNumber":126,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"shamooose"},"content":"    public void delete(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"shamooose"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":129,"author":{"gitId":"shamooose"},"content":"            if (input.equals(\"delete\") || input.equals(\"delete \")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"shamooose"},"content":"                throw new DescriptionEmptyException(\"grrrr \u003e:( you need to delete something woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":131,"author":{"gitId":"shamooose"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"shamooose"},"content":"                int i \u003d Integer.valueOf(input.replace(\"delete \", \"\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"shamooose"},"content":"                if (i \u003e tasks.size() || i \u003c\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":134,"author":{"gitId":"shamooose"},"content":"                    throw new OutOfBoundsException(i);","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"shamooose"},"content":"                } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":136,"author":{"gitId":"shamooose"},"content":"                    Task t \u003d tasks.remove(i - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":137,"author":{"gitId":"shamooose"},"content":"                    taskCount--;","lastModifiedDate":"2022-08-31"},{"lineNumber":138,"author":{"gitId":"shamooose"},"content":"                    String str \u003d String.format(\"woof! the task is now deleted woof!\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":139,"author":{"gitId":"shamooose"},"content":"                                    \"%s\\n\" +","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"shamooose"},"content":"                                    \"you now have %d tasks in the list woof!\",","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"shamooose"},"content":"                            t.toString(),","lastModifiedDate":"2022-08-31"},{"lineNumber":142,"author":{"gitId":"shamooose"},"content":"                            taskCount);","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"shamooose"},"content":"                    System.out.println(str);","lastModifiedDate":"2022-08-31"},{"lineNumber":144,"author":{"gitId":"shamooose"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":145,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":146,"author":{"gitId":"shamooose"},"content":"        } catch (OutOfBoundsException | DescriptionEmptyException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":147,"author":{"gitId":"shamooose"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":148,"author":{"gitId":"shamooose"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":149,"author":{"gitId":"shamooose"},"content":"            System.out.println(\"grrrr \u003e:( you need to input an integer woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":150,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":151,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":152,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":154,"author":{"gitId":"shamooose"},"content":"     * Marks or unmarks the task of given number from the TaskList","lastModifiedDate":"2022-08-31"},{"lineNumber":155,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":156,"author":{"gitId":"shamooose"},"content":"     * @param input the input string of the message","lastModifiedDate":"2022-08-31"},{"lineNumber":157,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":158,"author":{"gitId":"shamooose"},"content":"    public void mark(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":159,"author":{"gitId":"shamooose"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":160,"author":{"gitId":"shamooose"},"content":"            if (input.equals(\"mark\") || input.equals(\"mark \")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":161,"author":{"gitId":"shamooose"},"content":"                throw new DescriptionEmptyException(\"grrrr \u003e:( you need to mark something woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":162,"author":{"gitId":"shamooose"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":163,"author":{"gitId":"shamooose"},"content":"                String str \u003d input.replace(\"mark \", \"\");","lastModifiedDate":"2022-08-31"},{"lineNumber":164,"author":{"gitId":"shamooose"},"content":"                int j \u003d Integer.valueOf(str);","lastModifiedDate":"2022-08-31"},{"lineNumber":165,"author":{"gitId":"shamooose"},"content":"                if (j \u003e tasks.size() || j \u003c\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":166,"author":{"gitId":"shamooose"},"content":"                    throw new OutOfBoundsException(j);","lastModifiedDate":"2022-08-31"},{"lineNumber":167,"author":{"gitId":"shamooose"},"content":"                } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":168,"author":{"gitId":"shamooose"},"content":"                    tasks.get(j - 1).setDone();","lastModifiedDate":"2022-08-31"},{"lineNumber":169,"author":{"gitId":"shamooose"},"content":"                    System.out.println(\"woof! the task is now marked as done woof!\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":170,"author":{"gitId":"shamooose"},"content":"                            + tasks.get(j - 1).toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":171,"author":{"gitId":"shamooose"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":172,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":173,"author":{"gitId":"shamooose"},"content":"        } catch (OutOfBoundsException | DescriptionEmptyException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":174,"author":{"gitId":"shamooose"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":175,"author":{"gitId":"shamooose"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":176,"author":{"gitId":"shamooose"},"content":"            System.out.println(\"grrrr \u003e:( you need to input an integer woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":177,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":178,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":179,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":180,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":181,"author":{"gitId":"shamooose"},"content":"     * Finds a task whose name contains the given keyword in the TaskList","lastModifiedDate":"2022-08-31"},{"lineNumber":182,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":183,"author":{"gitId":"shamooose"},"content":"     * @param input the input string of the message","lastModifiedDate":"2022-08-31"},{"lineNumber":184,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":185,"author":{"gitId":"shamooose"},"content":"    public void find(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":186,"author":{"gitId":"shamooose"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":187,"author":{"gitId":"shamooose"},"content":"            if (input.equals(\"find\") || input.equals(\"find \")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":188,"author":{"gitId":"shamooose"},"content":"                throw new DescriptionEmptyException(\"grrrr \u003e:( what do you want to find woof woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":189,"author":{"gitId":"shamooose"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":190,"author":{"gitId":"shamooose"},"content":"                String keyword \u003d input.replace(\"find \", \"\");","lastModifiedDate":"2022-08-31"},{"lineNumber":191,"author":{"gitId":"shamooose"},"content":"                String output \u003d \"woof here are the tasks i found that have this keyword woof:\";","lastModifiedDate":"2022-08-31"},{"lineNumber":192,"author":{"gitId":"shamooose"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":193,"author":{"gitId":"shamooose"},"content":"                    Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-31"},{"lineNumber":194,"author":{"gitId":"shamooose"},"content":"                    if (task.taskName.contains(keyword)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":195,"author":{"gitId":"shamooose"},"content":"                        output +\u003d \"\\n\" + task.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":196,"author":{"gitId":"shamooose"},"content":"                    }","lastModifiedDate":"2022-08-31"},{"lineNumber":197,"author":{"gitId":"shamooose"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":198,"author":{"gitId":"shamooose"},"content":"                System.out.println(output);","lastModifiedDate":"2022-08-31"},{"lineNumber":199,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":200,"author":{"gitId":"shamooose"},"content":"        } catch (DescriptionEmptyException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":201,"author":{"gitId":"shamooose"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":202,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":203,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":204,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":205,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":206,"author":{"gitId":"shamooose"},"content":"     * Displays the list in the program","lastModifiedDate":"2022-08-31"},{"lineNumber":207,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":208,"author":{"gitId":"shamooose"},"content":"     * @return the list of tasks as a string","lastModifiedDate":"2022-08-31"},{"lineNumber":209,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":210,"author":{"gitId":"shamooose"},"content":"    public String list() {","lastModifiedDate":"2022-08-31"},{"lineNumber":211,"author":{"gitId":"shamooose"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-31"},{"lineNumber":212,"author":{"gitId":"shamooose"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":213,"author":{"gitId":"shamooose"},"content":"            output \u003d \"you have no tasks woof woof!\";","lastModifiedDate":"2022-08-31"},{"lineNumber":214,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":215,"author":{"gitId":"shamooose"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":216,"author":{"gitId":"shamooose"},"content":"            output +\u003d ((i + 1) + \".\" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":217,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":218,"author":{"gitId":"shamooose"},"content":"        return output;","lastModifiedDate":"2022-08-31"},{"lineNumber":219,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":220,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shamooose":220}},{"path":"src/main/java/scruffles/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * A standard task that has no deadline or timing","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"        super(taskName);","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"        super(taskName);","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"shamooose":23}},{"path":"src/main/java/scruffles/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * This class is responsible for the user interactions of the program","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"public class Ui {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"     * Greets the user when they first run the program","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"    public void greet() {","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"        System.out.println(\"woof! I\u0027m scruffles the task tracking doggo\\n\" + \"what can I woof for you today?\");","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"     * A message that\u0027s displayed when there is no file found in the given filePath","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"        System.out.println(\"woof file not found woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"     * Prints a message that is given","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"     * @param msg the message to be printed","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"    public void printMessage(String msg) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"        System.out.println(msg);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"     * Greets the user when they exit the program","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"    public void bye() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"        System.out.println(\"woof see you again woof!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shamooose":39}},{"path":"src/main/java/scruffles/UnknownArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * An exception that\u0027s thrown when the program receives an unknown input","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" * @author Shamus Tan","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"public class UnknownArgumentException extends Exception {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"    public UnknownArgumentException(String arg) {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"        super(\"grrr \u003e:( i don\u0027t know what \" + arg + \" is woof woof!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"shamooose":13}},{"path":"src/test/java/scruffles/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"        Deadline d \u003d new Deadline(\"play with tanks\", LocalDate.parse(\"1989-06-04\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"        assertEquals(\"[D][ ] play with tanks (by: 4 JUNE 1989)\", d.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shamooose":16}},{"path":"src/test/java/scruffles/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"public class EventTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"        Event e \u003d new Event(\"yeet\", \"2022-09-09 from 16:30 to 18:30\");","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"        assertEquals(\"[E][ ] yeet (at: 9 SEPTEMBER 2022 16:30 to 18:30)\", e.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shamooose":14}},{"path":"src/test/java/scruffles/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package scruffles;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"        Todo e \u003d new Todo(\"drop out\");","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"        assertEquals(\"[T][ ] drop out\", e.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shamooose":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"hello","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"todo sleep","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"deadline cs2103t project /by next friday 12pm","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"event cs2103t lecture /at friday 4-6pm","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"todo","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"list","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"event","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"mark","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"mark 3","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"mark 7","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"delete me","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"delete 2","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"bye","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"shamooose":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"java -classpath ../bin Scruffles \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shamooose":1,"-":37}}]

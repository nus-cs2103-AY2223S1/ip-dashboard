[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wrewsama":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"E # not done # birthday  # 2000-12-30","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"D # done # eat  # 2000-01-01","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"T # not done # hello","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"wrewsama":3}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"public enum Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"    LISTALLONDATE(\"listallondate\");","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    private String name;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     * Constructor for the enumeration constants.","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"     * @param name The name of the duke.Command","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"    Command(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"     * Gets the command with the given name.","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"     * @param name the name of the command (i.e. what the user will enter in the CLI)","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"     * @return corresponding command if the name is valid","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"     *         null otherwise","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"    public static Command get(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"        for (Command c : values()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"            if (c.name.equals(name)) {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"                return c;","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"        return null;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"wrewsama":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"     * Constructor for a deadline instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"     * @param by the due date of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Invalid Date Format, please input it as YYYY-MM-DD\");","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"     * String representation of the deadline.","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"     * @return String representing this task","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"        return \"[D]\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"                super.toString() +","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"                \" (by: \" +","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"                \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"     * Gets the deadline of the duke.Task, if any.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"     * @return A LocalDate representing the duke.Task\u0027s deadline if it exists","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"     *         null if no such deadline exists","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"        return this.by;","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"     * Gets the string representation of this task for storage in a file.","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"     * @return a String containing the task name, description, whether it is","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"     *         completed, and the due date.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"wrewsama"},"content":"    public String encode() {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"wrewsama"},"content":"        return String.format(\"%s # %s # %s\",","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"wrewsama"},"content":"                \"D\",","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"wrewsama"},"content":"                super.encode(),","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"wrewsama"},"content":"                this.by);","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"    private static ArrayList\u003cTask\u003e inputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"     * Constructor for a duke.Duke instance.","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"     * @param filePath the path to the file for data storage","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"        this.taskList \u003d new TaskList(this.storage.getTasks(), this.ui, this.storage);","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        this.ui.updateTaskList(this.taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"     * The main application.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"    public void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"        this.ui.printGreeting();","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"        while (!exit) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"                exit \u003d this.ui.handleInput();","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"     * The main program loop.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"     * @param args","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"//        File currentDirFile \u003d new File(\".\");","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"//        String helper \u003d currentDirFile.getAbsolutePath();","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"//        String currentDir \u003d \"\";","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"//        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"//            currentDir \u003d helper.substring(0, helper.length() - currentDirFile.getCanonicalPath().length());","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"//        } catch (java.io.IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"//            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"//        }","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"wrewsama"},"content":"        String filePath \u003d System.getProperty(\"user.home\") + \"/duke.txt\";","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"wrewsama"},"content":"        Duke duke \u003d new Duke(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"wrewsama"},"content":"        duke.run();","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wrewsama":57,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"    private String message;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"     * Constructor for an instance of and exception.","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"     * @param message the error message","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"        super(\"☹ OOPS!!!\" + message);","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     * Get string representation of the exception.","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"     * @return String rep of exception","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"        return \"☹ OOPS!!! \" + this.message;","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":25}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"     * Constructor for a event instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"     * @param at the time of the event","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Invalid Date Format, please input it as YYYY-MM-DD\");","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"     * String representation of the event.","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"     * @return String representing this event","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"        return \"[E]\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"                super.toString() +","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"                \" (at: \" +","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"                this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"                \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"     * Gets the deadline of the duke.Task, if any.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"     * @return A LocalDate representing the duke.Task\u0027s deadline if it exists","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"     *         null if no such deadline exists","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"        return this.at;","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"     * Gets the string representation of this task for storage in a file.","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"     * @return a String containing the task name, description, whether it is","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"     *         completed, and the due date.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"wrewsama"},"content":"    public String encode() {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"wrewsama"},"content":"        return String.format(\"%s # %s # %s\",","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"wrewsama"},"content":"                \"E\",","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"wrewsama"},"content":"                super.encode(),","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"wrewsama"},"content":"                this.at);","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":60}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"     * Gets the command word from the given input line.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"     * @param inputText the user\u0027s input in the console","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     * @return The current command","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if the input doesn\u0027t have a valid command word","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    public Command getCommand(String inputText) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        int firstSpaceIdx \u003d inputText.indexOf(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"        String commandName \u003d firstSpaceIdx \u003d\u003d -1","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"                             ? inputText","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"                             : inputText.substring(0, firstSpaceIdx);","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"        Command result \u003d Command.get(commandName);","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"        // Check if command is valid","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"        return result;","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"     * Executes a given command.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"     * @param command the command to be executed","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"     * @param inputText the user-entered text","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"     * @return true if the program needs to exit","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"     *         false otherwise","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if supplied arguments are invalid","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"    public boolean executeCommand(Command command, String inputText) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"        int firstSpaceIdx \u003d inputText.indexOf(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"        // Determine the action to perform","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"        switch (command) {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"        case BYE:","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"            return true;","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"        case LIST:","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"wrewsama"},"content":"            this.taskList.printItems();","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"wrewsama"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"wrewsama"},"content":"        case MARK:","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"wrewsama"},"content":"            int markindex \u003d Integer.parseInt(inputText.substring(firstSpaceIdx + 1));","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"wrewsama"},"content":"            this.taskList.mark(markindex);","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"wrewsama"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"wrewsama"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"wrewsama"},"content":"            int unmarkindex \u003d Integer.parseInt(inputText.substring(firstSpaceIdx + 1));","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"wrewsama"},"content":"            this.taskList.unmark(unmarkindex);","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"wrewsama"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"wrewsama"},"content":"        case DELETE:","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"wrewsama"},"content":"            int deleteindex \u003d Integer.parseInt(inputText.substring(firstSpaceIdx + 1));","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"wrewsama"},"content":"            this.taskList.delete(deleteindex);","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"wrewsama"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"wrewsama"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"wrewsama"},"content":"            String deadlineInfo \u003d inputText.substring(firstSpaceIdx + 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"wrewsama"},"content":"            this.taskList.addDeadline(deadlineInfo);","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"wrewsama"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"wrewsama"},"content":"        case TODO:","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"wrewsama"},"content":"            String todoInfo \u003d inputText.substring(firstSpaceIdx + 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"wrewsama"},"content":"            this.taskList.addTodo(todoInfo);","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"wrewsama"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"wrewsama"},"content":"        case EVENT:","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"wrewsama"},"content":"            String eventInfo \u003d inputText.substring(firstSpaceIdx + 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"wrewsama"},"content":"            this.taskList.addEvent(eventInfo);","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"wrewsama"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"wrewsama"},"content":"        case LISTALLONDATE:","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"wrewsama"},"content":"            String listInfo \u003d inputText.substring(firstSpaceIdx + 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"wrewsama"},"content":"            this.taskList.printAllOnDate(listInfo);","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"wrewsama"},"content":"            break;","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"wrewsama"},"content":"        return false;","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"wrewsama":87}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":" * This class handles the saving and loading of data to and from local storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":" * @author Andrew Lo Zhi Sheng","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":" * @version CS2103T AY22/23 Semester 1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"    private String filepath;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"    private File dataFile;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"     * Constructor for an instance of duke.Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"     * @param filepath The path to the file used to store data","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"        // Initialise file path","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"        // Create an object representing the data file","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"        this.dataFile \u003d new File(this.filepath);","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"        // Check if dataFile exists","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"            // If not, create it","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"                this.dataFile.createNewFile();","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"            } catch (java.io.IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"     * Saves the given list of Tasks into the data file.","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"     * @param tasklist List of Tasks to be saved","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"            FileWriter writer \u003d new FileWriter(this.filepath);","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"            for (Task task : tasklist) {","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"                writer.write(task.encode() + \"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"            writer.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"wrewsama"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"wrewsama"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"wrewsama"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"wrewsama"},"content":"        Scanner reader \u003d null;","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"wrewsama"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"wrewsama"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"wrewsama"},"content":"            reader \u003d new Scanner(this.dataFile);","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"wrewsama"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"wrewsama"},"content":"                String encodedTask \u003d reader.nextLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"wrewsama"},"content":"                output.add(decode(encodedTask));","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"wrewsama"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"wrewsama"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"wrewsama"},"content":"        } finally {","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"wrewsama"},"content":"            reader.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"wrewsama"},"content":"        return output;","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"wrewsama"},"content":"     * Decodes a line in the data file and returns the duke.Task it represents.","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"wrewsama"},"content":"     * @param code The encoded duke.Task saved in the file as a String","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"wrewsama"},"content":"     * @return The duke.Task saved in the data file.","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if the date passed into duke.Deadline or duke.Event is invalid","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"wrewsama"},"content":"    private Task decode(String code) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"wrewsama"},"content":"        String[] components \u003d code.split(\" # \");","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"wrewsama"},"content":"        Task result;","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"wrewsama"},"content":"        switch (components[0]) {","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"wrewsama"},"content":"        case \"T\":","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"wrewsama"},"content":"            result \u003d new Todo(components[2]);","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"wrewsama"},"content":"            if (components[1].equals(\"done\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"wrewsama"},"content":"                result.mark();","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"wrewsama"},"content":"            return result;","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"wrewsama"},"content":"        case \"D\":","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"wrewsama"},"content":"            result \u003d new Deadline(components[2], components[3]);","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"wrewsama"},"content":"            if (components[1].equals(\"done\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"wrewsama"},"content":"                result.mark();","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"wrewsama"},"content":"            return result;","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"wrewsama"},"content":"        case \"E\":","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"wrewsama"},"content":"            result \u003d new Event(components[2], components[3]);","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"wrewsama"},"content":"            if (components[1].equals(\"done\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"wrewsama"},"content":"                result.mark();","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"wrewsama"},"content":"            return result;","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"wrewsama"},"content":"        default:","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"wrewsama"},"content":"            return null;","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"wrewsama":112}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":" * This class encapsulates a task created in the Chatbot.","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"abstract class Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"    // Fields","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"    protected boolean isDone; // Indicates if task is completed","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"    protected String description; // Name of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     * Constructor for the task instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     * @param name a String containing the task\u0027s name","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        this.description \u003d name;","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"     * Toggles the isDone flag on.","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"    public void mark() {","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"     * Toggles the isDone flag off.","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"     * Gets the string representation of this task.","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"     * @return A string containing a checkbox indicating if the task is complete and its name.","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"     * Gets the status icon for the current task.","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"     * @return A String with a checked checkbox if the task is completed","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"     *         A String with an unchecked box otherwise","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"wrewsama"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"wrewsama"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"wrewsama"},"content":"     * Gets the string representation of this task for storage in a file.","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"wrewsama"},"content":"     * @return a String containing the task description and whether it is completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"wrewsama"},"content":"    public String encode() {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"wrewsama"},"content":"        return String.format(\"%s # %s\",","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"wrewsama"},"content":"                             this.isDone ? \"done\" : \"not done\",","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"wrewsama"},"content":"                             this.description);","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"wrewsama"},"content":"     * Gets the deadline of the duke.Task, if any.","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"wrewsama"},"content":"     * @return A LocalDate representing the duke.Task\u0027s deadline if it exists","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"wrewsama"},"content":"     *         null if no such deadline exists","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"wrewsama"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"wrewsama"},"content":"        return null;","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":78}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"    public TaskList(ArrayList\u003cTask\u003e list, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"    public void addTodo(String input) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"        // Check if input is empty","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"        // Instantiate task object","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"        Task newTodo \u003d new Todo(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"        // Add to list","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"        this.list.add(newTodo);","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"        this.printAddedTask(newTodo);","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"        // Update data file","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"        this.storage.saveTasks(this.list);","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"     * Add a duke.Deadline to the items list.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"     * @param input A String to be added to the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if either the desc or the by param is empty","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"    public void addDeadline(String input) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"        // Get description and date of deadline","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"        int slashIdx \u003d input.indexOf(\"/by\");","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"        // If there is no /by, throw an error","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"        if (slashIdx \u003d\u003d -1 || slashIdx \u003e input.length() - 5) {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Please set a due date!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"        String desc \u003d input.substring(0, slashIdx);","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"wrewsama"},"content":"        String by \u003d input.substring((slashIdx + 4));","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"wrewsama"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"wrewsama"},"content":"        // Instantiate task object","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"wrewsama"},"content":"        Task newDeadline \u003d new Deadline(desc, by);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"wrewsama"},"content":"        // Add to list","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"wrewsama"},"content":"        this.list.add(newDeadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"wrewsama"},"content":"        this.printAddedTask(newDeadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"wrewsama"},"content":"        // Update data file","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"wrewsama"},"content":"        this.storage.saveTasks(this.list);","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"wrewsama"},"content":"     * Add a duke.Deadline to the items list.","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"wrewsama"},"content":"     * @param input A String to be added to the list.","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if description or date is empty","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"wrewsama"},"content":"    public void addEvent(String input) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"wrewsama"},"content":"        // Get description and date of event","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"wrewsama"},"content":"        int slashIdx \u003d input.indexOf(\"/at\");","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"wrewsama"},"content":"        // If there is no /at, throw an error","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"wrewsama"},"content":"        if (slashIdx \u003d\u003d -1 || slashIdx \u003e input.length() - 5) {","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Please set a date!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"wrewsama"},"content":"        String desc \u003d input.substring(0, slashIdx);","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"wrewsama"},"content":"        String at \u003d input.substring((slashIdx + 4));","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"wrewsama"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"wrewsama"},"content":"        // Instantiate task object","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"wrewsama"},"content":"        Task newDeadline \u003d new Event(desc, at);","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"wrewsama"},"content":"        // Add to list","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"wrewsama"},"content":"        this.list.add(newDeadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"wrewsama"},"content":"        this.printAddedTask(newDeadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"wrewsama"},"content":"        // Update data file","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"wrewsama"},"content":"        this.storage.saveTasks(this.list);","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"wrewsama"},"content":"     * Prints the feedback when a new task has been added.","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"wrewsama"},"content":"     * @param newTask The recently added task","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"wrewsama"},"content":"    public void printAddedTask(Task newTask) {","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"  \" + newTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"wrewsama"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"wrewsama"},"content":"                this.list.size()));","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"wrewsama"},"content":"     * Prints all items in the items list.","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"wrewsama"},"content":"    public void printItems() {","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"wrewsama"},"content":"        // Print every task in the list","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"wrewsama"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"wrewsama"},"content":"            String output \u003d String.format(\"%s. %s\", i + 1, this.list.get(i));","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"wrewsama"},"content":"            System.out.println(output);","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"wrewsama"},"content":"    public void printAllOnDate(String input) {","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"wrewsama"},"content":"        LocalDate date \u003d LocalDate.parse(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Here are the tasks on \"+","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"wrewsama"},"content":"                           date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"wrewsama"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"wrewsama"},"content":"            // Check that task is not a To-do which has no deadline","lastModifiedDate":"2022-08-22"},{"lineNumber":142,"author":{"gitId":"wrewsama"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2022-08-22"},{"lineNumber":143,"author":{"gitId":"wrewsama"},"content":"                continue;","lastModifiedDate":"2022-08-22"},{"lineNumber":144,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":146,"author":{"gitId":"wrewsama"},"content":"            // If the deadline is equal to the date, print it","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"wrewsama"},"content":"            if (task.getDeadline().equals(date)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"wrewsama"},"content":"                System.out.println(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"wrewsama"},"content":"     * Marks a task at a certain index as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":155,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":156,"author":{"gitId":"wrewsama"},"content":"     * @param index the index of the task to be marked as done","lastModifiedDate":"2022-08-22"},{"lineNumber":157,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":158,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException when an invalid index is provided","lastModifiedDate":"2022-08-22"},{"lineNumber":159,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":160,"author":{"gitId":"wrewsama"},"content":"    public void mark(int index) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":161,"author":{"gitId":"wrewsama"},"content":"        // Check if the index is within the bounds of the list","lastModifiedDate":"2022-08-22"},{"lineNumber":162,"author":{"gitId":"wrewsama"},"content":"        if (index \u003c\u003d 0 || index \u003e this.list.size()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Invalid index\");","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"wrewsama"},"content":"        // Get the task to be marked","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"wrewsama"},"content":"        Task selectedTask \u003d this.list.get(index - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":168,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":169,"author":{"gitId":"wrewsama"},"content":"        // Mark it as done","lastModifiedDate":"2022-08-22"},{"lineNumber":170,"author":{"gitId":"wrewsama"},"content":"        selectedTask.mark();","lastModifiedDate":"2022-08-22"},{"lineNumber":171,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":172,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-22"},{"lineNumber":173,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"+","lastModifiedDate":"2022-08-22"},{"lineNumber":174,"author":{"gitId":"wrewsama"},"content":"                selectedTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":175,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":176,"author":{"gitId":"wrewsama"},"content":"        // Update data file","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"wrewsama"},"content":"        this.storage.saveTasks(this.list);","lastModifiedDate":"2022-08-22"},{"lineNumber":178,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":179,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":180,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":181,"author":{"gitId":"wrewsama"},"content":"     * Marks a task at a certain index as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":182,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":183,"author":{"gitId":"wrewsama"},"content":"     * @param index the index of the task to be marked as done","lastModifiedDate":"2022-08-22"},{"lineNumber":184,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":185,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException when an invalid index is provided","lastModifiedDate":"2022-08-22"},{"lineNumber":186,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":187,"author":{"gitId":"wrewsama"},"content":"    public void unmark(int index) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":188,"author":{"gitId":"wrewsama"},"content":"        // Check if the index is within the bounds of the list","lastModifiedDate":"2022-08-22"},{"lineNumber":189,"author":{"gitId":"wrewsama"},"content":"        if (index \u003c\u003d 0 || index \u003e this.list.size()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":190,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Invalid index\");","lastModifiedDate":"2022-08-22"},{"lineNumber":191,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":192,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":193,"author":{"gitId":"wrewsama"},"content":"        // Get the task to be marked","lastModifiedDate":"2022-08-22"},{"lineNumber":194,"author":{"gitId":"wrewsama"},"content":"        Task selectedTask \u003d this.list.get(index - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":195,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":196,"author":{"gitId":"wrewsama"},"content":"        // Mark it as not done","lastModifiedDate":"2022-08-22"},{"lineNumber":197,"author":{"gitId":"wrewsama"},"content":"        selectedTask.unmark();","lastModifiedDate":"2022-08-22"},{"lineNumber":198,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":199,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-22"},{"lineNumber":200,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"+","lastModifiedDate":"2022-08-22"},{"lineNumber":201,"author":{"gitId":"wrewsama"},"content":"                selectedTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":202,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":203,"author":{"gitId":"wrewsama"},"content":"        // Update data file","lastModifiedDate":"2022-08-22"},{"lineNumber":204,"author":{"gitId":"wrewsama"},"content":"        this.storage.saveTasks(this.list);","lastModifiedDate":"2022-08-22"},{"lineNumber":205,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":206,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":207,"author":{"gitId":"wrewsama"},"content":"    public void delete(int index) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":208,"author":{"gitId":"wrewsama"},"content":"        // Check if the index is within the bounds of the list","lastModifiedDate":"2022-08-22"},{"lineNumber":209,"author":{"gitId":"wrewsama"},"content":"        if (index \u003c\u003d 0 || index \u003e this.list.size()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":210,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Invalid index\");","lastModifiedDate":"2022-08-22"},{"lineNumber":211,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":212,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":213,"author":{"gitId":"wrewsama"},"content":"        // Remove task from list and get removed task","lastModifiedDate":"2022-08-22"},{"lineNumber":214,"author":{"gitId":"wrewsama"},"content":"        Task removedTask \u003d this.list.remove(index - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":215,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":216,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-22"},{"lineNumber":217,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":218,"author":{"gitId":"wrewsama"},"content":"        System.out.println(removedTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":219,"author":{"gitId":"wrewsama"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-08-22"},{"lineNumber":220,"author":{"gitId":"wrewsama"},"content":"                           this.list.size()));","lastModifiedDate":"2022-08-22"},{"lineNumber":221,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":222,"author":{"gitId":"wrewsama"},"content":"        // Update data file","lastModifiedDate":"2022-08-22"},{"lineNumber":223,"author":{"gitId":"wrewsama"},"content":"        this.storage.saveTasks(this.list);","lastModifiedDate":"2022-08-22"},{"lineNumber":224,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":225,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"wrewsama":225}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"     * Constructor for a to-do instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"     * String representation of the to-do.","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"     * @return String representing this task","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"     * Gets the string representation of this task for storage in a file.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"     * @return a String containing the task name, description and whether it is completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"    public String encode() {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"        return String.format(\"%s # %s\",","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"                             \"T\",","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"                             super.encode());","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":34}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"public class Ui {","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"    public Ui() {","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    public void updateTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"        this.parser \u003d new Parser(this.taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Hello from\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"                + logo","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"                + \"\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"    public boolean handleInput() throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"        String input \u003d this.scanner.nextLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"        Command command \u003d this.parser.getCommand(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"        return this.parser.executeCommand(command, input);","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"wrewsama":37}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"public class DukeTest {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    public void parserTest(){","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"        TaskList taskList \u003d new TaskList(storage.getTasks(), ui, storage);","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"        ui.updateTaskList(taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"            assertEquals(parser.getCommand(\"list\"), Command.LIST);","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"            assertEquals(parser.getCommand(\"bye\"), Command.BYE);","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"            assertEquals(parser.getCommand(\"todo\"), Command.TODO);","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"            assertEquals(parser.getCommand(\"unmark\"), Command.UNMARK);","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"    public void markTest(){","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"        assertEquals(todo.toString(), \"[T][ ] test\");","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"        todo.mark();","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"        assertEquals(todo.toString(), \"[T][X] test\");","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"    @Test","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"    public void encodeTest() {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"            Deadline deadline \u003d new Deadline(\"test\", \"2000-01-01\");","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"            assertEquals(deadline.encode(), \"D # not done # test # 2000-01-01\");","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"wrewsama":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"todo borrow book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"mark 3","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"unmark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"list","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":8}}]

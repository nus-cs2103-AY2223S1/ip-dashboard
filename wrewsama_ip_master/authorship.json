[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"public enum Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    TODO(\"todo\");","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"    private String name;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"     * Constructor for the enumeration constants.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"     * @param name The name of the Command","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"    Command(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"     * Gets the command with the given name.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"     * @param name the name of the command (i.e. what the user will enter in the CLI)","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"     * @return corresponding command if the name is valid","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"     *         null otherwise","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"    public static Command get(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"        for (Command c : values()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"            if (c.name.equals(name)) {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"                return c;","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"        return null;","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"wrewsama":37}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"    protected String by;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"     * Constructor for a deadline instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"     * @param by the due date of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     * String representation of the deadline.","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     * @return String representing this task","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"    private static ArrayList\u003cTask\u003e inputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"     * The main program loop.","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"     * @param args","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Hello from\\n\"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"                           + logo","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"                           + \"\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"        boolean flag \u003d true; // flag indicating if the loop should continue","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"        while (flag \u0026\u0026 sc.hasNextLine()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"            // Read input from console","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"            String inputText \u003d sc.nextLine();","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"                // Get first word","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"                int firstSpaceIdx \u003d inputText.indexOf(\" \");","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"                Command command \u003d Duke.getCommand(inputText, firstSpaceIdx);","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"                // Determine the action to perform","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"                switch (command) {","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"                    case BYE:","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"                        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"                        flag \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"                    case LIST:","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"                        Duke.printItems();","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"                    case MARK:","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"                        int markindex \u003d Integer.parseInt(inputText.substring(firstSpaceIdx + 1));","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"                        Duke.mark(markindex);","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"                    case UNMARK:","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"                        int unmarkindex \u003d Integer.parseInt(inputText.substring(firstSpaceIdx + 1));","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"                        Duke.unmark(unmarkindex);","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"                    case DELETE:","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"                        int deleteindex \u003d Integer.parseInt(inputText.substring(firstSpaceIdx + 1));","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"                        Duke.delete(deleteindex);","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"wrewsama"},"content":"                    case DEADLINE:","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"wrewsama"},"content":"                        String deadlineInfo \u003d inputText.substring(firstSpaceIdx + 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"wrewsama"},"content":"                        Duke.addDeadline(deadlineInfo);","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"wrewsama"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"wrewsama"},"content":"                    case TODO:","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"wrewsama"},"content":"                        String todoInfo \u003d inputText.substring(firstSpaceIdx + 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"wrewsama"},"content":"                        Duke.addTodo(todoInfo);","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"wrewsama"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"wrewsama"},"content":"                    case EVENT:","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"wrewsama"},"content":"                        String eventInfo \u003d inputText.substring(firstSpaceIdx + 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"wrewsama"},"content":"                        Duke.addEvent(eventInfo);","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"wrewsama"},"content":"                        break;","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"wrewsama"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"wrewsama"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"wrewsama"},"content":"                System.out.println(exception);","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"wrewsama"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":71,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":74,"author":{"gitId":"wrewsama"},"content":"     * Gets the command word from the given input line.","lastModifiedDate":"2022-08-15"},{"lineNumber":75,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":76,"author":{"gitId":"wrewsama"},"content":"     * @param inputText the user\u0027s input in the console","lastModifiedDate":"2022-08-15"},{"lineNumber":77,"author":{"gitId":"wrewsama"},"content":"     * @param firstSpaceIdx the index of the space following the command word","lastModifiedDate":"2022-08-15"},{"lineNumber":78,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":79,"author":{"gitId":"wrewsama"},"content":"     * @return The current command","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if the input doesn\u0027t have a valid command word","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"wrewsama"},"content":"    public static Command getCommand(String inputText,","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"wrewsama"},"content":"                                     int firstSpaceIdx) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"wrewsama"},"content":"        String commandName \u003d firstSpaceIdx \u003d\u003d -1","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"wrewsama"},"content":"                             ? inputText","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"wrewsama"},"content":"                             : inputText.substring(0, firstSpaceIdx);","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"wrewsama"},"content":"        Command result \u003d Command.get(commandName);","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"wrewsama"},"content":"        // Check if command is valid","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"wrewsama"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"wrewsama"},"content":"        return result;","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":97,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":99,"author":{"gitId":"wrewsama"},"content":"     * Add a Deadline to the items list.","lastModifiedDate":"2022-08-15"},{"lineNumber":100,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":101,"author":{"gitId":"wrewsama"},"content":"     * @param input A String to be added to the list.","lastModifiedDate":"2022-08-15"},{"lineNumber":102,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if either the desc or the by param is empty","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":105,"author":{"gitId":"wrewsama"},"content":"    public static void addDeadline(String input) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"wrewsama"},"content":"        // Get description and date of deadline","lastModifiedDate":"2022-08-15"},{"lineNumber":107,"author":{"gitId":"wrewsama"},"content":"        int slashIdx \u003d input.indexOf(\"/by\");","lastModifiedDate":"2022-08-15"},{"lineNumber":108,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"wrewsama"},"content":"        // If there is no /by, throw an error","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"wrewsama"},"content":"        if (slashIdx \u003d\u003d -1 || slashIdx \u003e input.length() - 5) {","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Please set a due date!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"wrewsama"},"content":"        String desc \u003d input.substring(0, slashIdx);","lastModifiedDate":"2022-08-15"},{"lineNumber":115,"author":{"gitId":"wrewsama"},"content":"        String by \u003d input.substring((slashIdx + 4));","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":117,"author":{"gitId":"wrewsama"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"wrewsama"},"content":"        // Instantiate task object","lastModifiedDate":"2022-08-15"},{"lineNumber":122,"author":{"gitId":"wrewsama"},"content":"        Task newDeadline \u003d new Deadline(desc, by);","lastModifiedDate":"2022-08-15"},{"lineNumber":123,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":124,"author":{"gitId":"wrewsama"},"content":"        // Add to list","lastModifiedDate":"2022-08-15"},{"lineNumber":125,"author":{"gitId":"wrewsama"},"content":"        Duke.inputs.add(newDeadline);","lastModifiedDate":"2022-08-15"},{"lineNumber":126,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":127,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-15"},{"lineNumber":128,"author":{"gitId":"wrewsama"},"content":"        printAddedTask(newDeadline);","lastModifiedDate":"2022-08-15"},{"lineNumber":129,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":130,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":131,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":132,"author":{"gitId":"wrewsama"},"content":"     * Add a To-do to the items list.","lastModifiedDate":"2022-08-15"},{"lineNumber":133,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":134,"author":{"gitId":"wrewsama"},"content":"     * @param input A String to be added to the list.","lastModifiedDate":"2022-08-15"},{"lineNumber":135,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if the description is empty","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":138,"author":{"gitId":"wrewsama"},"content":"    public static void addTodo(String input) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"wrewsama"},"content":"        // Check if input is empty","lastModifiedDate":"2022-08-18"},{"lineNumber":140,"author":{"gitId":"wrewsama"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":142,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"wrewsama"},"content":"        // Instantiate task object","lastModifiedDate":"2022-08-15"},{"lineNumber":145,"author":{"gitId":"wrewsama"},"content":"        Task newDeadline \u003d new Todo(input);","lastModifiedDate":"2022-08-15"},{"lineNumber":146,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":147,"author":{"gitId":"wrewsama"},"content":"        // Add to list","lastModifiedDate":"2022-08-15"},{"lineNumber":148,"author":{"gitId":"wrewsama"},"content":"        Duke.inputs.add(newDeadline);","lastModifiedDate":"2022-08-15"},{"lineNumber":149,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":150,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-15"},{"lineNumber":151,"author":{"gitId":"wrewsama"},"content":"        printAddedTask(newDeadline);","lastModifiedDate":"2022-08-15"},{"lineNumber":152,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":153,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":154,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":155,"author":{"gitId":"wrewsama"},"content":"     * Add a Deadline to the items list.","lastModifiedDate":"2022-08-15"},{"lineNumber":156,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":157,"author":{"gitId":"wrewsama"},"content":"     * @param input A String to be added to the list.","lastModifiedDate":"2022-08-15"},{"lineNumber":158,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException if description or date is empty","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":161,"author":{"gitId":"wrewsama"},"content":"    public static void addEvent(String input) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"wrewsama"},"content":"        // Get description and date of event","lastModifiedDate":"2022-08-15"},{"lineNumber":163,"author":{"gitId":"wrewsama"},"content":"        int slashIdx \u003d input.indexOf(\"/at\");","lastModifiedDate":"2022-08-15"},{"lineNumber":164,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":165,"author":{"gitId":"wrewsama"},"content":"        // If there is no /at, throw an error","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"wrewsama"},"content":"        if (slashIdx \u003d\u003d -1 || slashIdx \u003e input.length() - 5) {","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Please set a date!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":169,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":170,"author":{"gitId":"wrewsama"},"content":"        String desc \u003d input.substring(0, slashIdx);","lastModifiedDate":"2022-08-15"},{"lineNumber":171,"author":{"gitId":"wrewsama"},"content":"        String at \u003d input.substring((slashIdx + 4));","lastModifiedDate":"2022-08-15"},{"lineNumber":172,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":173,"author":{"gitId":"wrewsama"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":176,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":177,"author":{"gitId":"wrewsama"},"content":"        // Instantiate task object","lastModifiedDate":"2022-08-15"},{"lineNumber":178,"author":{"gitId":"wrewsama"},"content":"        Task newDeadline \u003d new Event(desc, at);","lastModifiedDate":"2022-08-15"},{"lineNumber":179,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":180,"author":{"gitId":"wrewsama"},"content":"        // Add to list","lastModifiedDate":"2022-08-15"},{"lineNumber":181,"author":{"gitId":"wrewsama"},"content":"        Duke.inputs.add(newDeadline);","lastModifiedDate":"2022-08-15"},{"lineNumber":182,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":183,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-15"},{"lineNumber":184,"author":{"gitId":"wrewsama"},"content":"        printAddedTask(newDeadline);","lastModifiedDate":"2022-08-15"},{"lineNumber":185,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":186,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":187,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":188,"author":{"gitId":"wrewsama"},"content":"     * Prints the feedback when a new task has been added.","lastModifiedDate":"2022-08-15"},{"lineNumber":189,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":190,"author":{"gitId":"wrewsama"},"content":"     * @param newTask The recently added task","lastModifiedDate":"2022-08-15"},{"lineNumber":191,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":192,"author":{"gitId":"wrewsama"},"content":"    public static void printAddedTask(Task newTask) {","lastModifiedDate":"2022-08-15"},{"lineNumber":193,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":194,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"  \" + newTask);","lastModifiedDate":"2022-08-15"},{"lineNumber":195,"author":{"gitId":"wrewsama"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-08-15"},{"lineNumber":196,"author":{"gitId":"wrewsama"},"content":"                                         inputs.size()));","lastModifiedDate":"2022-08-15"},{"lineNumber":197,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":198,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":199,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":200,"author":{"gitId":"wrewsama"},"content":"     * Prints all items in the items list.","lastModifiedDate":"2022-08-15"},{"lineNumber":201,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":202,"author":{"gitId":"wrewsama"},"content":"    public static void printItems() {","lastModifiedDate":"2022-08-15"},{"lineNumber":203,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":204,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":205,"author":{"gitId":"wrewsama"},"content":"        // Print every task in the list","lastModifiedDate":"2022-08-15"},{"lineNumber":206,"author":{"gitId":"wrewsama"},"content":"        for (int i \u003d 0; i \u003c Duke.inputs.size(); i++) {","lastModifiedDate":"2022-08-15"},{"lineNumber":207,"author":{"gitId":"wrewsama"},"content":"            String output \u003d String.format(\"%s. %s\", i + 1, Duke.inputs.get(i));","lastModifiedDate":"2022-08-15"},{"lineNumber":208,"author":{"gitId":"wrewsama"},"content":"            System.out.println(output);","lastModifiedDate":"2022-08-15"},{"lineNumber":209,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":210,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":212,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":213,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":214,"author":{"gitId":"wrewsama"},"content":"     * Marks a task at a certain index as done.","lastModifiedDate":"2022-08-15"},{"lineNumber":215,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":216,"author":{"gitId":"wrewsama"},"content":"     * @param index the index of the task to be marked as done","lastModifiedDate":"2022-08-15"},{"lineNumber":217,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":218,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException when an invalid index is provided","lastModifiedDate":"2022-08-18"},{"lineNumber":219,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":220,"author":{"gitId":"wrewsama"},"content":"    public static void mark(int index) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":221,"author":{"gitId":"wrewsama"},"content":"        // Check if the index is within the bounds of the list","lastModifiedDate":"2022-08-18"},{"lineNumber":222,"author":{"gitId":"wrewsama"},"content":"        if (index \u003c\u003d 0 || index \u003e Duke.inputs.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":223,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Invalid index\");","lastModifiedDate":"2022-08-18"},{"lineNumber":224,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":225,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":226,"author":{"gitId":"wrewsama"},"content":"        // Get the task to be marked","lastModifiedDate":"2022-08-15"},{"lineNumber":227,"author":{"gitId":"wrewsama"},"content":"        Task selectedTask \u003d Duke.inputs.get(index - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":228,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":229,"author":{"gitId":"wrewsama"},"content":"        // Mark it as done","lastModifiedDate":"2022-08-15"},{"lineNumber":230,"author":{"gitId":"wrewsama"},"content":"        selectedTask.mark();","lastModifiedDate":"2022-08-15"},{"lineNumber":231,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":232,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-15"},{"lineNumber":233,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"+","lastModifiedDate":"2022-08-15"},{"lineNumber":234,"author":{"gitId":"wrewsama"},"content":"                           selectedTask);","lastModifiedDate":"2022-08-15"},{"lineNumber":235,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":236,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":237,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":238,"author":{"gitId":"wrewsama"},"content":"     * Marks a task at a certain index as done.","lastModifiedDate":"2022-08-15"},{"lineNumber":239,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":240,"author":{"gitId":"wrewsama"},"content":"     * @param index the index of the task to be marked as done","lastModifiedDate":"2022-08-15"},{"lineNumber":241,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":242,"author":{"gitId":"wrewsama"},"content":"     * @throws DukeException when an invalid index is provided","lastModifiedDate":"2022-08-18"},{"lineNumber":243,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":244,"author":{"gitId":"wrewsama"},"content":"    public static void unmark(int index) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":245,"author":{"gitId":"wrewsama"},"content":"        // Check if the index is within the bounds of the list","lastModifiedDate":"2022-08-18"},{"lineNumber":246,"author":{"gitId":"wrewsama"},"content":"        if (index \u003c\u003d 0 || index \u003e Duke.inputs.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":247,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Invalid index\");","lastModifiedDate":"2022-08-18"},{"lineNumber":248,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":249,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"wrewsama"},"content":"        // Get the task to be marked","lastModifiedDate":"2022-08-15"},{"lineNumber":251,"author":{"gitId":"wrewsama"},"content":"        Task selectedTask \u003d Duke.inputs.get(index - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":252,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":253,"author":{"gitId":"wrewsama"},"content":"        // Mark it as not done","lastModifiedDate":"2022-08-15"},{"lineNumber":254,"author":{"gitId":"wrewsama"},"content":"        selectedTask.unmark();","lastModifiedDate":"2022-08-15"},{"lineNumber":255,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":256,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-15"},{"lineNumber":257,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"+","lastModifiedDate":"2022-08-15"},{"lineNumber":258,"author":{"gitId":"wrewsama"},"content":"                           selectedTask);","lastModifiedDate":"2022-08-15"},{"lineNumber":259,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":260,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":261,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":262,"author":{"gitId":"wrewsama"},"content":"    public static void delete(int index) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":263,"author":{"gitId":"wrewsama"},"content":"        // Check if the index is within the bounds of the list","lastModifiedDate":"2022-08-18"},{"lineNumber":264,"author":{"gitId":"wrewsama"},"content":"        if (index \u003c\u003d 0 || index \u003e Duke.inputs.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":265,"author":{"gitId":"wrewsama"},"content":"            throw new DukeException(\"Invalid index\");","lastModifiedDate":"2022-08-18"},{"lineNumber":266,"author":{"gitId":"wrewsama"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":267,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":268,"author":{"gitId":"wrewsama"},"content":"        // Remove task from list and get removed task","lastModifiedDate":"2022-08-15"},{"lineNumber":269,"author":{"gitId":"wrewsama"},"content":"        Task removedTask \u003d Duke.inputs.remove(index - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":270,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":271,"author":{"gitId":"wrewsama"},"content":"        // Print message","lastModifiedDate":"2022-08-15"},{"lineNumber":272,"author":{"gitId":"wrewsama"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":273,"author":{"gitId":"wrewsama"},"content":"        System.out.println(removedTask);","lastModifiedDate":"2022-08-15"},{"lineNumber":274,"author":{"gitId":"wrewsama"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\",","lastModifiedDate":"2022-08-15"},{"lineNumber":275,"author":{"gitId":"wrewsama"},"content":"                                         inputs.size()));","lastModifiedDate":"2022-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wrewsama":267,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"    private String message;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"     * Constructor for an instance of and exception.","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"     * @param message the error message","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"        super(\"☹ OOPS!!!\" + message);","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     * Get string representation of the exception.","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     * @return String rep of exception","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"        return \"☹ OOPS!!! \" + this.message;","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":23}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"    protected String at;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"     * Constructor for a event instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"     * @param at the time of the event","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     * String representation of the event.","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"     * @return String representing this event","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":" * This class encapsulates a task created in the Chatbot.","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"    // Fields","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    protected boolean isDone; // Indicates if task is completed","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"    protected String description; // Name of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"     * Constructor for the task instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"     * @param name a String containing the task\u0027s name","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"        this.description \u003d name;","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"wrewsama"},"content":"     * Toggles the isDone flag on.","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"wrewsama"},"content":"    public void mark() {","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"wrewsama"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"wrewsama"},"content":"     * Toggles the isDone flag off.","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"wrewsama"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"wrewsama"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"wrewsama"},"content":"     * Gets the string representation of this task.","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"wrewsama"},"content":"     * @return A string containing a checkbox indicating if the task is complete and its name.","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"wrewsama"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"wrewsama"},"content":"     * Gets the status icon for the current task.","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"wrewsama"},"content":"     * @return A String with a checked checkbox if the task is completed","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"wrewsama"},"content":"     *         A String with an unchecked box otherwise","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"wrewsama"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"wrewsama"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":53}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"     * Constructor for a to-do instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"wrewsama"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"wrewsama"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"wrewsama"},"content":"     * String representation of the to-do.","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"wrewsama"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"wrewsama"},"content":"     * @return String representing this task","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"wrewsama"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"wrewsama"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"wrewsama"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"wrewsama"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"wrewsama"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"wrewsama"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wrewsama"},"content":"todo borrow book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"wrewsama"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"wrewsama"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"wrewsama"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"wrewsama"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"wrewsama"},"content":"mark 3","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"wrewsama"},"content":"unmark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"wrewsama"},"content":"list","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"wrewsama":8}}]

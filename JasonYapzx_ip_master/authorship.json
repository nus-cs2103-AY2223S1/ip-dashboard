[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"JasonYapzx"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JasonYapzx":1,"-":40}},{"path":"src/main/java/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"public class Date {","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"    public Date(LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"JasonYapzx"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"JasonYapzx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"JasonYapzx"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"JasonYapzx":15}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"    protected Date by;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"    public Deadline(String description, Date by) {","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"JasonYapzx"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"JasonYapzx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"JasonYapzx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"JasonYapzx"},"content":"     * Rewrites this deadline task into the save file format","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"JasonYapzx"},"content":"     * @return String to be stored in save file","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"JasonYapzx"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"JasonYapzx"},"content":"    public String saveData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"JasonYapzx"},"content":"        String marked \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"JasonYapzx"},"content":"        return \"D | \" + marked + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"JasonYapzx":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"import java.util.List;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"JasonYapzx"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"JasonYapzx"},"content":"    private final String PATH_FILE \u003d \"src/data/duke.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"JasonYapzx"},"content":"    private final String PATH_DIRECTORY \u003d \"src/data\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"JasonYapzx"},"content":"    private final String logo \u003d   \"        / \\\\     |_   _| | |  / _|                   | |\\n\"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"JasonYapzx"},"content":"                                + \"       /   \\\\      | |   | | | |_   _ __    ___    __| |\\n\"","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"JasonYapzx"},"content":"                                + \"      / / \\\\ \\\\     | |   | | |  _| | \u0027__|  / _ \\\\  / _` |\\n\"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"JasonYapzx"},"content":"                                + \"     / _____ \\\\   _| |_  | | | |   | |    |  __/ | (_| |\\n\"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"JasonYapzx"},"content":"                                + \"    /_/     \\\\_\\\\ |_____| |_| |_|   |_|     \\\\___|  \\\\__,_|\\n\";","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"JasonYapzx"},"content":"    private final String greeting \u003d   \"____________________________________________________________\\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"JasonYapzx"},"content":"                                      \"                      Hello! I am \\n\" + logo +","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"JasonYapzx"},"content":"                                      \"      Your personal assistant. What can I do for you?\\n\" +","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"JasonYapzx"},"content":"                                      \"____________________________________________________________\";","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"JasonYapzx"},"content":"    private final String goodbye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"JasonYapzx"},"content":"     * Initializing the application ","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"JasonYapzx"},"content":"    public void initialize() throws DukeException, IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"JasonYapzx"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"JasonYapzx"},"content":"        System.out.println(greeting);","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"JasonYapzx"},"content":"        storage \u003d new Storage(PATH_FILE, PATH_DIRECTORY);","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"JasonYapzx"},"content":"        taskList \u003d storage.load();","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"JasonYapzx"},"content":"        listen();","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"JasonYapzx"},"content":"     * Prints all values of list currently","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"JasonYapzx"},"content":"    public void printList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"JasonYapzx"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"JasonYapzx"},"content":"        ","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"JasonYapzx"},"content":"        // Empty list","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"JasonYapzx"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"JasonYapzx"},"content":"            System.out.print(\"List is currently empty! \\n\");","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"JasonYapzx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"JasonYapzx"},"content":"            System.out.println((i+1) + \". \" +taskList.get(i) + \"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"JasonYapzx"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"JasonYapzx"},"content":"     * Marks a task in the list","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"JasonYapzx"},"content":"    public void mark(String input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"JasonYapzx"},"content":"        int index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"JasonYapzx"},"content":"            taskList.get(index).markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"JasonYapzx"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"JasonYapzx"},"content":"                    \"Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"JasonYapzx"},"content":"                    taskList.get(index) + \"\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"JasonYapzx"},"content":"                    \"____________________________________________________________\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"JasonYapzx"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":69,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no task created for this index!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"JasonYapzx"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! Please enter a valid index number!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":72,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":76,"author":{"gitId":"JasonYapzx"},"content":"     * Unmarks a task in the list","lastModifiedDate":"2022-08-16"},{"lineNumber":77,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":78,"author":{"gitId":"JasonYapzx"},"content":"    public void unmark(String input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":79,"author":{"gitId":"JasonYapzx"},"content":"        int index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-08-16"},{"lineNumber":80,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":81,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"JasonYapzx"},"content":"            taskList.get(index).markAsUndone();","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"JasonYapzx"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"JasonYapzx"},"content":"                    \"OK, I\u0027ve marked this task as not done yet: \\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"JasonYapzx"},"content":"                    taskList.get(index) + \"\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"JasonYapzx"},"content":"                    \"____________________________________________________________\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"JasonYapzx"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":88,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no task created for this index!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":89,"author":{"gitId":"JasonYapzx"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":90,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! Please enter a valid index number!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":91,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":92,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":93,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":94,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":95,"author":{"gitId":"JasonYapzx"},"content":"     * Adds a task to the list","lastModifiedDate":"2022-08-16"},{"lineNumber":96,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":97,"author":{"gitId":"JasonYapzx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"JasonYapzx"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"JasonYapzx"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":101,"author":{"gitId":"JasonYapzx"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2022-08-13"},{"lineNumber":102,"author":{"gitId":"JasonYapzx"},"content":"                            \"Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":103,"author":{"gitId":"JasonYapzx"},"content":"                            task + \"\\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":104,"author":{"gitId":"JasonYapzx"},"content":"                            \"Now you have \" + numOfTasks + \" tasks in the list. \\n\" + ","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"JasonYapzx"},"content":"                            \"____________________________________________________________\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":106,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":107,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":109,"author":{"gitId":"JasonYapzx"},"content":"     * Deletes a task from the list","lastModifiedDate":"2022-08-16"},{"lineNumber":110,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":111,"author":{"gitId":"JasonYapzx"},"content":"    public void deleteTask(String input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":112,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":113,"author":{"gitId":"JasonYapzx"},"content":"            int i \u003d Integer.parseInt(input.split(\" \", 2)[0]);","lastModifiedDate":"2022-08-16"},{"lineNumber":114,"author":{"gitId":"JasonYapzx"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"JasonYapzx"},"content":"            taskList.remove(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"JasonYapzx"},"content":"            int numOfTasks \u003d taskList.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":118,"author":{"gitId":"JasonYapzx"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":119,"author":{"gitId":"JasonYapzx"},"content":"                    \"Noted. I\u0027ve removed this task: \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":120,"author":{"gitId":"JasonYapzx"},"content":"                    task + \"\\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":121,"author":{"gitId":"JasonYapzx"},"content":"                    \"Now you have \" + numOfTasks + \" tasks in the list. \\n\" +","lastModifiedDate":"2022-08-16"},{"lineNumber":122,"author":{"gitId":"JasonYapzx"},"content":"                    \"____________________________________________________________\\n\");","lastModifiedDate":"2022-08-16"},{"lineNumber":123,"author":{"gitId":"JasonYapzx"},"content":"        }  catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":124,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! Please enter a valid index number!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":125,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":126,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":127,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":128,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":129,"author":{"gitId":"JasonYapzx"},"content":"     * Handles a to do task","lastModifiedDate":"2022-08-16"},{"lineNumber":130,"author":{"gitId":"JasonYapzx"},"content":"     * @param input String input for to do task","lastModifiedDate":"2022-08-16"},{"lineNumber":131,"author":{"gitId":"JasonYapzx"},"content":"     * @throws DukeException Exception if to do task has no description","lastModifiedDate":"2022-08-16"},{"lineNumber":132,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":133,"author":{"gitId":"JasonYapzx"},"content":"    public void toDoTask(String[] input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":134,"author":{"gitId":"JasonYapzx"},"content":"        if (input.length \u003e\u003d 2) {","lastModifiedDate":"2022-08-16"},{"lineNumber":135,"author":{"gitId":"JasonYapzx"},"content":"            Todo todo \u003d new Todo(input[1]);","lastModifiedDate":"2022-08-16"},{"lineNumber":136,"author":{"gitId":"JasonYapzx"},"content":"            addTask(todo);","lastModifiedDate":"2022-08-16"},{"lineNumber":137,"author":{"gitId":"JasonYapzx"},"content":"        } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":138,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-16"},{"lineNumber":139,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":140,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":141,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":142,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":143,"author":{"gitId":"JasonYapzx"},"content":"     * Handles an deadline task","lastModifiedDate":"2022-08-16"},{"lineNumber":144,"author":{"gitId":"JasonYapzx"},"content":"     * @param input String input for deadline task","lastModifiedDate":"2022-08-16"},{"lineNumber":145,"author":{"gitId":"JasonYapzx"},"content":"     * @throws DukeException Exception if deadline task has no description","lastModifiedDate":"2022-08-16"},{"lineNumber":146,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":147,"author":{"gitId":"JasonYapzx"},"content":"    public void deadlineTask(String[] input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":148,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"JasonYapzx"},"content":"            String[] deadlineDetails \u003d input[1].split(\" /by \", 2);","lastModifiedDate":"2022-08-16"},{"lineNumber":150,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":151,"author":{"gitId":"JasonYapzx"},"content":"            if (deadlineDetails.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-16"},{"lineNumber":152,"author":{"gitId":"JasonYapzx"},"content":"                Date date \u003d Parser.parseDate(deadlineDetails[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"JasonYapzx"},"content":"                Deadline deadline \u003d new Deadline(deadlineDetails[0], date);","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"JasonYapzx"},"content":"                addTask(deadline);","lastModifiedDate":"2022-08-16"},{"lineNumber":155,"author":{"gitId":"JasonYapzx"},"content":"            } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":156,"author":{"gitId":"JasonYapzx"},"content":"                throw new DukeException(\"☹ OOPS!!! Please follow the syntax for an \u0027deadline\u0027 command: event [description] /by [date].\");","lastModifiedDate":"2022-08-16"},{"lineNumber":157,"author":{"gitId":"JasonYapzx"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":158,"author":{"gitId":"JasonYapzx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! Please follow the syntax for an \u0027deadline\u0027 command: event [description] /by [date].\");","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":162,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":163,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":164,"author":{"gitId":"JasonYapzx"},"content":"     * Handles an event task","lastModifiedDate":"2022-08-16"},{"lineNumber":165,"author":{"gitId":"JasonYapzx"},"content":"     * @param input String input for event task","lastModifiedDate":"2022-08-16"},{"lineNumber":166,"author":{"gitId":"JasonYapzx"},"content":"     * @throws DukeException Exception if event task has no description","lastModifiedDate":"2022-08-16"},{"lineNumber":167,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":168,"author":{"gitId":"JasonYapzx"},"content":"    public void eventTask(String[] input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":169,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"JasonYapzx"},"content":"            String[] eventDetails \u003d input[1].split(\" /at \", 2);","lastModifiedDate":"2022-08-16"},{"lineNumber":171,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":172,"author":{"gitId":"JasonYapzx"},"content":"            if (eventDetails.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-16"},{"lineNumber":173,"author":{"gitId":"JasonYapzx"},"content":"                Date date \u003d Parser.parseDate(eventDetails[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":174,"author":{"gitId":"JasonYapzx"},"content":"                Event event \u003d new Event(eventDetails[0], date);","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"JasonYapzx"},"content":"                addTask(event);","lastModifiedDate":"2022-08-16"},{"lineNumber":176,"author":{"gitId":"JasonYapzx"},"content":"            } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":177,"author":{"gitId":"JasonYapzx"},"content":"                throw new DukeException(\"☹ OOPS!!! Please follow the syntax for an \u0027event\u0027 command: event [description] /at [date].\");","lastModifiedDate":"2022-08-16"},{"lineNumber":178,"author":{"gitId":"JasonYapzx"},"content":"            } ","lastModifiedDate":"2022-08-16"},{"lineNumber":179,"author":{"gitId":"JasonYapzx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! Please follow the syntax for an \u0027event\u0027 command: event [description] /at [date].\");","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":185,"author":{"gitId":"JasonYapzx"},"content":"     * Listens to System.in for input","lastModifiedDate":"2022-08-16"},{"lineNumber":186,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":187,"author":{"gitId":"JasonYapzx"},"content":"    public void listen() throws DukeException, IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"JasonYapzx"},"content":"        String input; // initializing the input","lastModifiedDate":"2022-08-16"},{"lineNumber":189,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":190,"author":{"gitId":"JasonYapzx"},"content":"        // Reading user inputs","lastModifiedDate":"2022-08-16"},{"lineNumber":191,"author":{"gitId":"JasonYapzx"},"content":"        while(scanner.hasNextLine()) {","lastModifiedDate":"2022-08-16"},{"lineNumber":192,"author":{"gitId":"JasonYapzx"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2022-08-16"},{"lineNumber":193,"author":{"gitId":"JasonYapzx"},"content":"            String[] inputArr \u003d input.split(\" \", 2); // Splits the string in an array of [command, others]","lastModifiedDate":"2022-08-16"},{"lineNumber":194,"author":{"gitId":"JasonYapzx"},"content":"            String command \u003d inputArr[0];","lastModifiedDate":"2022-08-16"},{"lineNumber":195,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":196,"author":{"gitId":"JasonYapzx"},"content":"            switch (command) {","lastModifiedDate":"2022-08-16"},{"lineNumber":197,"author":{"gitId":"JasonYapzx"},"content":"                case (\"bye\"):","lastModifiedDate":"2022-08-16"},{"lineNumber":198,"author":{"gitId":"JasonYapzx"},"content":"                    this.storage.saveData(taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":199,"author":{"gitId":"JasonYapzx"},"content":"                    System.out.println(goodbye);","lastModifiedDate":"2022-08-16"},{"lineNumber":200,"author":{"gitId":"JasonYapzx"},"content":"                    System.exit(0);","lastModifiedDate":"2022-08-16"},{"lineNumber":201,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":202,"author":{"gitId":"JasonYapzx"},"content":"                case (\"list\"):","lastModifiedDate":"2022-08-16"},{"lineNumber":203,"author":{"gitId":"JasonYapzx"},"content":"                    printList();","lastModifiedDate":"2022-08-16"},{"lineNumber":204,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":205,"author":{"gitId":"JasonYapzx"},"content":"                case (\"delete\"):","lastModifiedDate":"2022-08-16"},{"lineNumber":206,"author":{"gitId":"JasonYapzx"},"content":"                    deleteTask(inputArr[1]);","lastModifiedDate":"2022-08-16"},{"lineNumber":207,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":208,"author":{"gitId":"JasonYapzx"},"content":"                case (\"mark\"):","lastModifiedDate":"2022-08-16"},{"lineNumber":209,"author":{"gitId":"JasonYapzx"},"content":"                    // First word is \"mark\", second word would be an index for task to be marked","lastModifiedDate":"2022-08-16"},{"lineNumber":210,"author":{"gitId":"JasonYapzx"},"content":"                    mark(inputArr[1]);","lastModifiedDate":"2022-08-16"},{"lineNumber":211,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":212,"author":{"gitId":"JasonYapzx"},"content":"                case (\"unmark\"):","lastModifiedDate":"2022-08-16"},{"lineNumber":213,"author":{"gitId":"JasonYapzx"},"content":"                    // First word is \"unmark\", second word would be an index for task to be unmarked","lastModifiedDate":"2022-08-16"},{"lineNumber":214,"author":{"gitId":"JasonYapzx"},"content":"                    unmark(inputArr[1]);","lastModifiedDate":"2022-08-16"},{"lineNumber":215,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":216,"author":{"gitId":"JasonYapzx"},"content":"                case (\"todo\"):","lastModifiedDate":"2022-08-16"},{"lineNumber":217,"author":{"gitId":"JasonYapzx"},"content":"                    toDoTask(inputArr);","lastModifiedDate":"2022-08-16"},{"lineNumber":218,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":219,"author":{"gitId":"JasonYapzx"},"content":"                case (\"deadline\"):","lastModifiedDate":"2022-08-16"},{"lineNumber":220,"author":{"gitId":"JasonYapzx"},"content":"                    deadlineTask(inputArr);","lastModifiedDate":"2022-08-16"},{"lineNumber":221,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":222,"author":{"gitId":"JasonYapzx"},"content":"                case (\"event\"):","lastModifiedDate":"2022-08-16"},{"lineNumber":223,"author":{"gitId":"JasonYapzx"},"content":"                    eventTask(inputArr);","lastModifiedDate":"2022-08-16"},{"lineNumber":224,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":225,"author":{"gitId":"JasonYapzx"},"content":"                default:","lastModifiedDate":"2022-08-16"},{"lineNumber":226,"author":{"gitId":"JasonYapzx"},"content":"                    // Default case if there is no command word in the front","lastModifiedDate":"2022-08-16"},{"lineNumber":227,"author":{"gitId":"JasonYapzx"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-16"},{"lineNumber":228,"author":{"gitId":"JasonYapzx"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":229,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":230,"author":{"gitId":"JasonYapzx"},"content":"        scanner.close();","lastModifiedDate":"2022-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JasonYapzx":229,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"        super(message);","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"JasonYapzx":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"    protected Date at;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"    public Event(String description, Date at) {","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"JasonYapzx"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"JasonYapzx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"JasonYapzx"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"JasonYapzx"},"content":"     * Rewrites this event task into the save file format","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"JasonYapzx"},"content":"     * @return String to be stored in save file","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"JasonYapzx"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"JasonYapzx"},"content":"    public String saveData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"JasonYapzx"},"content":"        String marked \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"JasonYapzx"},"content":"        return \"E | \" + marked + \" | \" + this.description + \" | \" + this.at;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"JasonYapzx":24}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"public class Main {","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"        duke.initialize();","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"JasonYapzx":8}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"     * Handles the parsing of dates for Deadlines/Events","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"JasonYapzx"},"content":"     * @param input String input of date","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"JasonYapzx"},"content":"     * @return Date object used to construct Deadline/Event","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"JasonYapzx"},"content":"     * @throws DukeException Exception if date format is wrong","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"JasonYapzx"},"content":"    public static Date parseDate(String input) throws DukeException{","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"JasonYapzx"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"JasonYapzx"},"content":"            LocalDate parsed \u003d LocalDate.parse(input, dtf);","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"JasonYapzx"},"content":"            return new Date(parsed);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"JasonYapzx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! Please follow the Date and Time Format: yyyy-MM-dd [2000-01-01]\");","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"JasonYapzx"},"content":"     * Handles the parsing of dates for Deadlines/Events","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"JasonYapzx"},"content":"     * @param input String input of date","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"JasonYapzx"},"content":"     * @return Date object used to construct Deadline/Event","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"JasonYapzx"},"content":"     * @throws DukeException Exception if date format is wrong","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"JasonYapzx"},"content":"    public static Date parseDateSave(String input) throws DukeException{","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"JasonYapzx"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"JasonYapzx"},"content":"            LocalDate parsed \u003d LocalDate.parse(input, dtf);","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"JasonYapzx"},"content":"            return new Date(parsed);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"JasonYapzx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"JasonYapzx"},"content":"            throw new DukeException(\"☹ OOPS!!! The save file is corrupted.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"JasonYapzx":42}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"import java.io.*;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"import java.util.List;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"JasonYapzx"},"content":"    private File file;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"JasonYapzx"},"content":"    private File directory;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"JasonYapzx"},"content":"    public Storage(String filePath, String directoryPath) throws DukeException, IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"JasonYapzx"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"JasonYapzx"},"content":"        this.directory \u003d new File(directoryPath);","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"JasonYapzx"},"content":"            if (this.directory.exists()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"JasonYapzx"},"content":"                System.out.println(\"Directory located... \\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"JasonYapzx"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"JasonYapzx"},"content":"                System.out.println(\"Creating a directory to store save file... \\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"JasonYapzx"},"content":"                Files.createDirectories(Path.of(directoryPath));","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"JasonYapzx"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"JasonYapzx"},"content":"            if (this.file.createNewFile()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"JasonYapzx"},"content":"                System.out.println(\"Creating a new save file...\");","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"JasonYapzx"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"JasonYapzx"},"content":"                System.out.println(\"Previous save file located, loading contents of save file...\");","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"JasonYapzx"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"JasonYapzx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"JasonYapzx"},"content":"            throw new IOException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"JasonYapzx"},"content":"     * Parses the save file to load previously saved contents","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"JasonYapzx"},"content":"     * @throws DukeException Thrown if any input in save file is wrong","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"JasonYapzx"},"content":"     * @throws IOException Thrown if Buffered reader fails the reading of data","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"JasonYapzx"},"content":"    public List\u003cTask\u003e load() throws DukeException, IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"JasonYapzx"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"JasonYapzx"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(this.file))) {","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"JasonYapzx"},"content":"            String data \u003d br.readLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"JasonYapzx"},"content":"            while (data !\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"JasonYapzx"},"content":"                String[] dataDetails \u003d data.split(\" \\\\| \");","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"JasonYapzx"},"content":"                String command \u003d dataDetails[0];","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"JasonYapzx"},"content":"                boolean marked; // 1 \u003d marked, 0 \u003d unmarked","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"JasonYapzx"},"content":"                String description \u003d dataDetails[2];","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"JasonYapzx"},"content":"                Task task;","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"JasonYapzx"},"content":"                if (!dataDetails[1].equals(\"1\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"JasonYapzx"},"content":"                    if (!dataDetails[1].equals(\"0\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"JasonYapzx"},"content":"                        throw new DukeException(\"☹ OOPS!!! The save file is corrupted, please delete the file and retry!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"JasonYapzx"},"content":"                    } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"JasonYapzx"},"content":"                        marked \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"JasonYapzx"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"JasonYapzx"},"content":"                } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"JasonYapzx"},"content":"                    marked \u003d true;","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"JasonYapzx"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"JasonYapzx"},"content":"                switch (command) {","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"JasonYapzx"},"content":"                case(\"T\"):","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"JasonYapzx"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"JasonYapzx"},"content":"                case(\"D\"):","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"JasonYapzx"},"content":"                    if (dataDetails.length !\u003d 4) {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"JasonYapzx"},"content":"                        throw new DukeException(\"☹ OOPS!!! A Deadline task is corrupted!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"JasonYapzx"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"JasonYapzx"},"content":"                    Date deadlineDate \u003d Parser.parseDateSave(dataDetails[3]);","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"JasonYapzx"},"content":"                    task \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"JasonYapzx"},"content":"                case(\"E\"):","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"JasonYapzx"},"content":"                    if (dataDetails.length !\u003d 4) {","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"JasonYapzx"},"content":"                        throw new DukeException(\"☹ OOPS!!! An Event task is corrupted!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"JasonYapzx"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"JasonYapzx"},"content":"                    Date eventDate \u003d Parser.parseDateSave(dataDetails[3]);","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"JasonYapzx"},"content":"                    task \u003d new Event(description, eventDate);","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"JasonYapzx"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"JasonYapzx"},"content":"                default:","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"JasonYapzx"},"content":"                    throw new DukeException(\"☹ OOPS!!! The save file is corrupted, please delete the file and retry!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"JasonYapzx"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"JasonYapzx"},"content":"                if (marked) {","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"JasonYapzx"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"JasonYapzx"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"JasonYapzx"},"content":"                list.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"JasonYapzx"},"content":"                data \u003d br.readLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"JasonYapzx"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"JasonYapzx"},"content":"        System.out.println(\"I have reloaded your saved file ☺!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"JasonYapzx"},"content":"        return list;","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"JasonYapzx"},"content":"     * Writes all current tasks on the save file","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"JasonYapzx"},"content":"    public void saveData(List\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"JasonYapzx"},"content":"        System.out.println(\"☺ Saving your data before you go...\");","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"JasonYapzx"},"content":"        FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"JasonYapzx"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"JasonYapzx"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"JasonYapzx"},"content":"                String data \u003d task.saveData();","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"JasonYapzx"},"content":"                fw.write(data + System.lineSeparator());","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"JasonYapzx"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"JasonYapzx"},"content":"            fw.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"JasonYapzx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"JasonYapzx"},"content":"            throw new IOException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"JasonYapzx"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"JasonYapzx":113}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"    protected String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"JasonYapzx"},"content":"     * Provides the current \"marked\" status of a task","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"JasonYapzx"},"content":"     * @return Marked status of task","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"JasonYapzx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"JasonYapzx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"JasonYapzx"},"content":"     * Gets the description of current task","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"JasonYapzx"},"content":"     * @return Description of task","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"JasonYapzx"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"JasonYapzx"},"content":"        return this.description;","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"JasonYapzx"},"content":"     * Marks current task as done","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"JasonYapzx"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"JasonYapzx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"JasonYapzx"},"content":"     * Unmarks current task as undone","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"JasonYapzx"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"JasonYapzx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"JasonYapzx"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"JasonYapzx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"JasonYapzx"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"JasonYapzx"},"content":"     * Rewrites this event task into the save file format","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"JasonYapzx"},"content":"     * @return String to be stored in save file","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"JasonYapzx"},"content":"    public abstract String saveData();","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"JasonYapzx":50}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"JasonYapzx":2}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"JasonYapzx"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"JasonYapzx"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"JasonYapzx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"JasonYapzx"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"JasonYapzx"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"JasonYapzx"},"content":"     * Rewrites this to do task into the save file format","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"JasonYapzx"},"content":"     * @return String to be stored in save file","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"JasonYapzx"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"JasonYapzx"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"JasonYapzx"},"content":"    public String saveData() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"JasonYapzx"},"content":"        String marked \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"JasonYapzx"},"content":"        return \"T | \" + marked + \" | \" + this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"JasonYapzx"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"JasonYapzx":21}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"public class UI {","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"JasonYapzx":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JasonYapzx"},"content":"todo borrow book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"JasonYapzx"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"JasonYapzx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"JasonYapzx"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"JasonYapzx"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"JasonYapzx"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"JasonYapzx":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"JasonYapzx"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JasonYapzx":1,"-":37}}]

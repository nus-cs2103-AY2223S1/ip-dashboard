[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"plugins {","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"repositories {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"dependencies {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"    implementation \u0027org.apache.commons:commons-lang3:3.12.0\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"    implementation \u0027org.apache.commons:commons-text:1.9\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"test {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"    testLogging {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"        showExceptions true","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"        showCauses true","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"application {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"TheSoggy"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"shadowJar {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"TheSoggy"},"content":"run{","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"TheSoggy"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"TheSoggy":43}},{"path":"src/main/java/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"    BYE(), LIST(), EMPTY(\"\"), MARK(), UNMARK(), TODO(), DEADLINE(), EVENT(), DELETE();","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"    private static final Map\u003cString, CommandType\u003e BY_COMMAND_TYPE \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"    static {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"        for (CommandType c : values()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"            BY_COMMAND_TYPE.put(c.commandType, c);","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"    private final String commandType;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"    CommandType(String commandType) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"    CommandType() {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"        commandType \u003d name();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"    public String getString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"        return commandType.toLowerCase();","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"TheSoggy"},"content":"    public static CommandType fromString(String commandType) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"TheSoggy"},"content":"        return BY_COMMAND_TYPE.get(commandType);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"TheSoggy":32}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"    public DeadlineTask(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"        super( \u0027D\u0027, description, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"        return String.format(\"%s (by: %s)\", super.toString(),","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"                deadline.format(Parser.DATETIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"    public String toData() {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"        return String.format(\"%s | %s\", super.toData(),","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"                deadline.format(Parser.DATETIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"TheSoggy":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"import java.io.File;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"    private static final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"    private static final String taskListTxt \u003d \"duke.txt\";","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"    private boolean tasksEnd \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"     * Initialises Duke class with empty {@code TaskList}.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"    public Duke() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"     * Runs the program.","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"TheSoggy"},"content":"    public void run() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"        Parser.printMsg(String.format(\"%s%s\", LOGO, GREETING));","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"TheSoggy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"TheSoggy"},"content":"        load();","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"        while (!tasksEnd) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"            System.out.print(\"\u003e\u003e \");","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"TheSoggy"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"TheSoggy"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"TheSoggy"},"content":"                execute(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"TheSoggy"},"content":"                write(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"TheSoggy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"TheSoggy"},"content":"                Parser.printMsg(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"TheSoggy"},"content":"     * Writes {@code TaskList} taskList into data/duke.txt","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"TheSoggy"},"content":"     * Overwrites the whole file with current taskList","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"TheSoggy"},"content":"     * @param taskList the {@code TaskList} we are saving","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"TheSoggy"},"content":"    public void write(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"TheSoggy"},"content":"        File storageDirectory \u003d new File(\"./data\");","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"TheSoggy"},"content":"        if (!storageDirectory.exists()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"TheSoggy"},"content":"            if (!storageDirectory.mkdir()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"TheSoggy"},"content":"                Parser.printMsg(\"Could not create /data directory\");","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"TheSoggy"},"content":"            FileWriter fw \u003d new FileWriter(String.format(\"./data/%s\", taskListTxt));","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"TheSoggy"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"TheSoggy"},"content":"                fw.write(task.toData() + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"TheSoggy"},"content":"            fw.close();","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"TheSoggy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"TheSoggy"},"content":"            Parser.printMsg(String.format(\"Failed to write file at ./data/%s\", taskListTxt));","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"TheSoggy"},"content":"     * Loads {@code TaskList} taskList from data/duke.txt","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"TheSoggy"},"content":"    public void load() {","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"TheSoggy"},"content":"        File f \u003d new File(String.format(\"./data/%s\", taskListTxt));","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"TheSoggy"},"content":"            if (f.exists()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"TheSoggy"},"content":"                Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"TheSoggy"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"TheSoggy"},"content":"                    taskList.add(Parser.parseTask(sc.nextLine()));","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"TheSoggy"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"TheSoggy"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"TheSoggy"},"content":"            Parser.printMsg(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"TheSoggy"},"content":"     * Execute the command entered by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"TheSoggy"},"content":"     * @param input The command entered by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"TheSoggy"},"content":"     * @throws DukeException if command is not valid.","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"TheSoggy"},"content":"    private void execute(String input) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"TheSoggy"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"TheSoggy"},"content":"        CommandType command \u003d CommandType.fromString(inputs[0].toUpperCase());","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"TheSoggy"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"TheSoggy"},"content":"            throw new DukeException(\"Invalid command: Please try again.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"TheSoggy"},"content":"        String description;","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"TheSoggy"},"content":"        switch (command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"TheSoggy"},"content":"        case BYE:","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"TheSoggy"},"content":"            Parser.printMsg(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"TheSoggy"},"content":"            tasksEnd \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"TheSoggy"},"content":"        case LIST:","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"TheSoggy"},"content":"            Parser.printMsg(String.format(\"Here are the tasks in your list:\\n%s\",","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"TheSoggy"},"content":"                    taskList));","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"TheSoggy"},"content":"        case EMPTY:","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"TheSoggy"},"content":"        case MARK:","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"TheSoggy"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Wrong number of arguments.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"TheSoggy"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"TheSoggy"},"content":"                int index \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"TheSoggy"},"content":"                taskList.setDone(index, true);","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"TheSoggy"},"content":"                Parser.printMsg(String.format(\"Nice! I\u0027ve marked this task as done:\\n %s\",","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"TheSoggy"},"content":"                        taskList.get(index)));","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"TheSoggy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Index of task should be a number.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"TheSoggy"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Index of task should be between 1 and the number of tasks.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"TheSoggy"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"TheSoggy"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Wrong number of arguments.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"TheSoggy"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"TheSoggy"},"content":"                int index \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":138,"author":{"gitId":"TheSoggy"},"content":"                taskList.setDone(index, false);","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"TheSoggy"},"content":"                Parser.printMsg(String.format(\"OK, I\u0027ve marked this task as not done yet:\\n %s\",","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"TheSoggy"},"content":"                        taskList.get(index)));","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"TheSoggy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Index of task should be a number.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"TheSoggy"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Index of task should be between 1 and the number of tasks.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"TheSoggy"},"content":"        case TODO:","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"TheSoggy"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Wrong number of arguments.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"TheSoggy"},"content":"            description \u003d inputs[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"TheSoggy"},"content":"            if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Description cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"TheSoggy"},"content":"            taskList.add(new TodoTask(description, false));","lastModifiedDate":"2022-08-31"},{"lineNumber":156,"author":{"gitId":"TheSoggy"},"content":"            Parser.printMsg(String.format(\"Got it. I\u0027ve added this task:\\n %s\\nNow you have %s in the list.\",","lastModifiedDate":"2022-08-31"},{"lineNumber":157,"author":{"gitId":"TheSoggy"},"content":"                    taskList.get(taskList.size() - 1),","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"TheSoggy"},"content":"                    taskList.lengthString()));","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":160,"author":{"gitId":"TheSoggy"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"TheSoggy"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":162,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Wrong number of arguments.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":163,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"TheSoggy"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"TheSoggy"},"content":"                description \u003d inputs[1].substring(0, inputs[1].indexOf(\" /by \"));","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"TheSoggy"},"content":"                if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"TheSoggy"},"content":"                    throw new DukeException(\"Invalid argument: Description cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"TheSoggy"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"TheSoggy"},"content":"                String deadline \u003d inputs[1].substring(inputs[1].indexOf(\" /by \") + 5);","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"TheSoggy"},"content":"                if (deadline.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"TheSoggy"},"content":"                    throw new DukeException(\"Invalid argument: Deadline cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"TheSoggy"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":173,"author":{"gitId":"TheSoggy"},"content":"                taskList.add(new DeadlineTask(description, Parser.parseDateTime(deadline), false));","lastModifiedDate":"2022-08-31"},{"lineNumber":174,"author":{"gitId":"TheSoggy"},"content":"                Parser.printMsg(String.format(\"Got it. I\u0027ve added this task:\\n %s\\nNow you have %s in the list.\",","lastModifiedDate":"2022-08-31"},{"lineNumber":175,"author":{"gitId":"TheSoggy"},"content":"                        taskList.get(taskList.size() - 1),","lastModifiedDate":"2022-08-26"},{"lineNumber":176,"author":{"gitId":"TheSoggy"},"content":"                        taskList.lengthString()));","lastModifiedDate":"2022-08-26"},{"lineNumber":177,"author":{"gitId":"TheSoggy"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Use /by flag to specify the deadline of the task\");","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":180,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"TheSoggy"},"content":"        case EVENT:","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"TheSoggy"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Wrong number of arguments.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"TheSoggy"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"TheSoggy"},"content":"                description \u003d inputs[1].substring(0, inputs[1].indexOf(\" /at \"));","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"TheSoggy"},"content":"                if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":188,"author":{"gitId":"TheSoggy"},"content":"                    throw new DukeException(\"Invalid argument: Description cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"TheSoggy"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":190,"author":{"gitId":"TheSoggy"},"content":"                String time \u003d inputs[1].substring(inputs[1].indexOf(\" /at \") + 5);","lastModifiedDate":"2022-08-26"},{"lineNumber":191,"author":{"gitId":"TheSoggy"},"content":"                if (time.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"TheSoggy"},"content":"                    throw new DukeException(\"Invalid argument: Event time cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":193,"author":{"gitId":"TheSoggy"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":194,"author":{"gitId":"TheSoggy"},"content":"                taskList.add(new EventTask(description, Parser.parseDateTime(time), false));","lastModifiedDate":"2022-08-31"},{"lineNumber":195,"author":{"gitId":"TheSoggy"},"content":"                Parser.printMsg(String.format(\"Got it. I\u0027ve added this task:\\n %s\\nNow you have %s in the list.\",","lastModifiedDate":"2022-08-31"},{"lineNumber":196,"author":{"gitId":"TheSoggy"},"content":"                        taskList.get(taskList.size() - 1),","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"TheSoggy"},"content":"                        taskList.lengthString()));","lastModifiedDate":"2022-08-26"},{"lineNumber":198,"author":{"gitId":"TheSoggy"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":199,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Use /at flag to specify the date and time of the event.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":200,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":201,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":202,"author":{"gitId":"TheSoggy"},"content":"        case DELETE:","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"TheSoggy"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":204,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Wrong number of arguments.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":205,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":206,"author":{"gitId":"TheSoggy"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":207,"author":{"gitId":"TheSoggy"},"content":"                int index \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"TheSoggy"},"content":"                Task task \u003d taskList.remove(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":209,"author":{"gitId":"TheSoggy"},"content":"                Parser.printMsg(String.format(\"Noted. I\u0027ve removed this task:\\n %s\",","lastModifiedDate":"2022-08-31"},{"lineNumber":210,"author":{"gitId":"TheSoggy"},"content":"                        task));","lastModifiedDate":"2022-08-26"},{"lineNumber":211,"author":{"gitId":"TheSoggy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":212,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Index of task should be a number.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":213,"author":{"gitId":"TheSoggy"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":214,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Invalid argument: Index of task should be between 1 and the number of tasks.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":215,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":216,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-26"},{"lineNumber":217,"author":{"gitId":"TheSoggy"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":218,"author":{"gitId":"TheSoggy"},"content":"            throw new DukeException(\"Invalid command: Please try again.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":219,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":222,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":223,"author":{"gitId":"TheSoggy"},"content":"     * Starts the program.","lastModifiedDate":"2022-08-31"},{"lineNumber":224,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":226,"author":{"gitId":"TheSoggy"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":227,"author":{"gitId":"TheSoggy"},"content":"        duke.run();","lastModifiedDate":"2022-08-31"},{"lineNumber":228,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"TheSoggy":225}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"        super(message);","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"TheSoggy":5}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"    public EventTask(String description, LocalDateTime time, boolean isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"        super( \u0027E\u0027, description, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"        return String.format(\"%s (at: %s)\", super.toString(),","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"                time.format(Parser.DATETIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"    public String toData() {","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"        return String.format(\"%s | %s\", super.toData(),","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"                time.format(Parser.DATETIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"TheSoggy":22}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"import org.apache.commons.text.WordUtils;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"public class Parser {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"    private static final String LINE \u003d \"──────────────────────────────────────────\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"    public static final DateTimeFormatter DATETIME_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d-M-y HHmm\");","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"    public static final DateTimeFormatter DATETIME_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\");","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"     * Pretty-prints an output string","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"     * @param output The string representing the output.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"    public static void printMsg(String output) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"        String[] lines \u003d output.split(\"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"        String newStr \u003d Arrays.stream(lines).map(line -\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"                        String.format(\"\\t %s%s\\n\", line.replace(line.stripLeading(), \"\"),","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"                                WordUtils.wrap(line, 40, \"\\n\\t \", false)))","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"                .reduce(\"\", String::concat);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"        System.out.printf(\"\\t%s%s\\t%s%n\", LINE, newStr, LINE);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"TheSoggy"},"content":"     * Parses a {@code Task} from a string (from the Duke data file).","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"     * @param s The string read from the Duke data file to be parsed.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"TheSoggy"},"content":"     * @return the parsed {@code Task}","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"TheSoggy"},"content":"     * @throws DukeException when the string in the data file is invalid.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"    public static Task parseTask(String s) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"        String[] strings \u003d s.split(\" \\\\| \", -1);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"        Task task;","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"TheSoggy"},"content":"        if (!strings[1].equals(\" \") \u0026\u0026 !strings[1].equals(\"X\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"TheSoggy"},"content":"            throw new DukeException(\"Error parsing Task\");","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"TheSoggy"},"content":"        boolean isDone \u003d strings[1].equals(\"X\");","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"TheSoggy"},"content":"        String description \u003d strings[2];","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"TheSoggy"},"content":"        switch (strings[0]) {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"TheSoggy"},"content":"        case \"T\":","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"TheSoggy"},"content":"            if (strings.length \u003e 3) {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Error parsing TodoTask\");","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"TheSoggy"},"content":"            task \u003d new TodoTask(description, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"TheSoggy"},"content":"        case \"D\":","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"TheSoggy"},"content":"            if (strings.length \u003e 4) {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Error parsing DeadlineTask\");","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"TheSoggy"},"content":"            task \u003d new DeadlineTask(description, Parser.parseDateTime(strings[3]), isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"TheSoggy"},"content":"        case \"E\":","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"TheSoggy"},"content":"            if (strings.length \u003e 4) {","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"TheSoggy"},"content":"                throw new DukeException(\"Error parsing EventTask\");","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"TheSoggy"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"TheSoggy"},"content":"            task \u003d new EventTask(description, Parser.parseDateTime(strings[3]), isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"TheSoggy"},"content":"            break;","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"TheSoggy"},"content":"        default:","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"TheSoggy"},"content":"            throw new DukeException(\"Error parsing Task\");","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"TheSoggy"},"content":"        return task;","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"TheSoggy"},"content":"     * Parses a {@code LocalDateTime} from a string.","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"TheSoggy"},"content":"     * The string must be in the format \"d-M-y HHmm\".","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"TheSoggy"},"content":"     * @param dateTime The string to parse.","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"TheSoggy"},"content":"     * @return The parsed {@code LocalDateTime}.","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"TheSoggy"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"TheSoggy"},"content":"            return LocalDateTime.parse(dateTime, DATETIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"TheSoggy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"TheSoggy"},"content":"            throw new DukeException(String.format(\"%s\", dateTime));","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"TheSoggy":84}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"    private final String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"    private final char symbol;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"     * Initialises a {@code Task} with a symbol and description.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"     * ","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"     * @param symbol The char representing the {@code Task}\u0027s type.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"     * @param description A string representing the {@code Task}\u0027s description.","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"     * @param isDone The boolean representing whether the {@code Task} is done.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"    protected Task(char symbol, String description, boolean isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"     * Returns the char representation of whether a {@code Task} is done.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"     * @return The char representing the {@code Task}\u0027s status.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"TheSoggy"},"content":"     * Sets the {@code Task}\u0027s isDone to isDone.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"     * @param isDone The boolean to set the {@code Task}\u0027s isDone to.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"TheSoggy"},"content":"    protected void setDone(boolean isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"TheSoggy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"     * Returns the string representation of a {@code Task}.","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"TheSoggy"},"content":"     * @return The string representing the {@code Task}.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"TheSoggy"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"TheSoggy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"TheSoggy"},"content":"        return String.format(\"[%c][%s] %s\", symbol, getStatusIcon(), description);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"TheSoggy"},"content":"     * Returns the string representation of a {@code Task} when stored in a data file.","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"TheSoggy"},"content":"     * @return The string representing the {@code Task} when stored in a data file.","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"TheSoggy"},"content":"    public String toData() {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"TheSoggy"},"content":"        return String.format(\"%s | %s | %s\", symbol, getStatusIcon(), description);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"TheSoggy":55}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"import org.apache.commons.text.WordUtils;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"        super();","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"     * Marks a {@code Task} as done or undone.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"     * @param index The index of the {@code Task} to be marked.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"     * @param isDone Whether the {@code Task} is to be marked as done or undone.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"    public void setDone(int index, boolean isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"        get(index).setDone(isDone);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"     * Returns the string representation of the length of the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"     * @return The string representing the length of the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"    public String lengthString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"TheSoggy"},"content":"        return size() \u003d\u003d 1","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"TheSoggy"},"content":"                ? String.format(\"%d task\", size())","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"                : String.format(\"%d tasks\", size());","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"TheSoggy"},"content":"     * Returns the string representation of a {@code TaskList}.","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"     * @return The string representing the {@code TaskList}.","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"TheSoggy"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"TheSoggy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"TheSoggy"},"content":"        AtomicInteger i \u003d new AtomicInteger(1);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"TheSoggy"},"content":"        return stream().map(task -\u003e WordUtils.wrap(String.format(\"%d. %s\\n\", i.getAndIncrement(), task),","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"TheSoggy"},"content":"                        40, \"\\n   \", false))","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"TheSoggy"},"content":"                .reduce(\"\", String::concat);","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"TheSoggy":46}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"    public TodoTask(String description, boolean isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"        super(\u0027T\u0027, description, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"TheSoggy":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"todo borrow book","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"list","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"list","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"list","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"bye","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"TheSoggy":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"javac -cp commons-lang3-3.12.0.jar;commons-text-1.9.jar;../src/main/java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"java -classpath commons-lang3-3.12.0.jar;commons-text-1.9.jar;..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"TheSoggy":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"if ! javac -cp .:commons-lang3-3.12.0.jar:commons-text-1.9.jar:../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"java -classpath .:commons-lang3-3.12.0.jar:commons-text-1.9.jar:../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"TheSoggy":2}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JJoeYi":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"plugins {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"repositories {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"dependencies {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"test {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"    testLogging {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"        showExceptions true","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"        showCauses true","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"application {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"shadowJar {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"run{","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":41}},{"path":"data/saveFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"[T][X] read book","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"[D][ ] return book (by: Jun 06 2022)","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"[E][ ] project meeting (at: zzz)","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"[T][X] join sports club","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"[T][ ] borrow book","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":5}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"JJoeYi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"JJoeYi"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"JJoeYi"},"content":"goto fail","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"JJoeYi"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"JJoeYi"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"JJoeYi"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"JJoeYi"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"JJoeYi"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"JJoeYi"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"JJoeYi"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"JJoeYi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"JJoeYi"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"JJoeYi"},"content":"goto fail","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"JJoeYi"},"content":":init","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"JJoeYi"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"JJoeYi"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"JJoeYi"},"content":":win9xME_args","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"JJoeYi"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"JJoeYi"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"JJoeYi"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"JJoeYi"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"JJoeYi"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"JJoeYi"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"JJoeYi"},"content":":execute","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"JJoeYi"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"JJoeYi"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"JJoeYi"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"JJoeYi"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"JJoeYi"},"content":":end","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"JJoeYi"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"JJoeYi"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"JJoeYi"},"content":":fail","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"JJoeYi"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"JJoeYi"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"JJoeYi"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"JJoeYi"},"content":"exit /b 1","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"JJoeYi"},"content":":mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"JJoeYi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"JJoeYi"},"content":":omega","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":103}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":" * duke.Deadline is a duke.Task that accepts a task description and a deadline (dd-MM-yyyy)","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"    protected String by;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for duke.Deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"     * @param description description of the task","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"     * @param by          date in the format of dd-MM-yyyy","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"        this.byDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"     * Private constructor just to convert text in save file to deadlines.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"    private Deadline(String description, LocalDate byDate, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"        this.byDate \u003d byDate; // this is retrieved in save file, so format is MM d yyyy","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"            + \"(by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"     * returns a Deadline from a string with format \"[D][X] Description (by: MMM d yyyy)\"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"     * e.g. [D][ ] return book (by: Jun 6 2022)","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"     * @param s String to convert into a Deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"     * @throws DukeException when the string doesn\u0027t start with deadline tag [D]","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"JJoeYi"},"content":"    public static Deadline stringToDeadline(String s) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"JJoeYi"},"content":"        if (!s.startsWith(\"[D][\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"JJoeYi"},"content":"            throw new DukeException(\"This string is not a duke.Deadline string!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"JJoeYi"},"content":"        char isDoneString \u003d s.charAt(4); //[T][X] checks if X is present","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"JJoeYi"},"content":"        char X \u003d \u0027X\u0027;","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"JJoeYi"},"content":"        boolean isDone \u003d isDoneString \u003d\u003d X;","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"JJoeYi"},"content":"        int idxOfBy \u003d s.indexOf(\"(by:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"JJoeYi"},"content":"        String description \u003d s.substring(7, idxOfBy);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"JJoeYi"},"content":"        // byString looks like Aug 30 2022","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"JJoeYi"},"content":"        String byString \u003d s.substring(idxOfBy + 5, s.length() - 1); // to avoid the brackets.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"JJoeYi"},"content":"        byString \u003d byString.replace(\" \", \"-\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"JJoeYi"},"content":"        LocalDate byDate \u003d LocalDate.parse(byString, DateTimeFormatter.ofPattern(\"MMM-d-yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"JJoeYi"},"content":"        return new Deadline(description, byDate, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":66}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":" * Main Class of this program","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for Duke. Initializes tasklist and parser.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"    public Duke() {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"        this.taskList \u003d new TaskList(Storage.load());","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"        this.parser \u003d new Parser(this.taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"     * Runs the parser to parse user input","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"        Ui.showWelcome();","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"        while (parser.isScanning()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"            parser.parse();","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"            new Duke().run();","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JJoeYi":32,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":" * Exception class for Duke program","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for initializing a DukeException","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"     * @param msg Exception message to be passed.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"        super(\"\\t-----------------------------------------------\"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"            + \"\\n\\t\" + msg","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"            + \"\\n\\t-----------------------------------------------\");","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":" * Event class is a Task that contains a date and time","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"    protected String at;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"     * @param at          Date and time","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"     * Second constructor for Event that takes in a boolean to indicate if the event is over","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"     * @param at          Date and time","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"     * @param isDone      Boolean to indicate if the event is over","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"     * Returns an event that is constructed from a string with a particular format","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"     * \"[E][ ] Description (at: Date and Time)\"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"     * @param s String to be converted to an Event","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"     * @return Event that is constructed from a string with a particular format","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"     * @throws DukeException When string does not begin with the event header \"[E]\"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"    // duke.Event strings look like: [E][ ] project meeting (at: Aug 6th 2-4pm)","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"    public static Event stringToEvent(String s) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"JJoeYi"},"content":"        if (!s.startsWith(\"[E][\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"JJoeYi"},"content":"            throw new DukeException(\"This string is not a duke.Event string!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"JJoeYi"},"content":"        char isDoneString \u003d s.charAt(4); //[E][X] checks if X is present","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"JJoeYi"},"content":"        char X \u003d \u0027X\u0027;","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"JJoeYi"},"content":"        boolean isDone \u003d isDoneString \u003d\u003d X;","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"JJoeYi"},"content":"        int idxOfAt \u003d s.indexOf(\"(at:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"JJoeYi"},"content":"        String description \u003d s.substring(7, idxOfAt);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"JJoeYi"},"content":"        String dateString \u003d s.substring(idxOfAt + 5, s.length() - 1); // to avoid the brackets","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"JJoeYi"},"content":"        return new Event(description, dateString, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"JJoeYi"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"JJoeYi"},"content":"        String testString \u003d \"[E][ ] project meeting (at: Aug 6th 2-4pm)\";","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"JJoeYi"},"content":"        System.out.println(stringToEvent(testString).toString().equals(testString));","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":67}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":" * Parser is a class that deals with decoding user inputs","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"    private boolean isScanning;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for Parser","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"     * @param taskList The taskList that may be pre-populated from a previous save.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"        this.isScanning \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"    public boolean isScanning() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"        return this.isScanning;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"     * Takes in user input, then updates the taskList with the appropriate Tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"     * @throws DukeException When command is unclear or string is given in a wrong format","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"    public void parse() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"        String line \u003d scanner.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"        if (line.equals(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"            this.isScanning \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"            scanner.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"            Storage.save(this.taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"            Ui.showGoodbye();","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.equals(\"list\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"            taskList.showList();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"JJoeYi"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! Cannot unmark when list is empty\");","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"JJoeYi"},"content":"            if (line.length() \u003c\u003d 7) {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! Please enter a number after unmark\");","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"JJoeYi"},"content":"            int index \u003d Integer.parseInt(line.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JJoeYi"},"content":"            taskList.get(index - 1).markAsUndone();","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tNice! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\t\" + taskList.get(index - 1));","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"JJoeYi"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! Cannot mark when list is empty\");","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"JJoeYi"},"content":"            if (line.length() \u003c\u003d 5) {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! Please enter a number after mark\");","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"JJoeYi"},"content":"            int index \u003d Integer.parseInt(line.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"JJoeYi"},"content":"            taskList.get(index - 1).markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\t\" + taskList.get(index - 1));","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"JJoeYi"},"content":"            if (line.length() \u003c\u003d 5) {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"JJoeYi"},"content":"            Todo todo \u003d new Todo(line.replace(\"todo \", \"\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"JJoeYi"},"content":"            taskList.add(todo);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\t\\t\" + todo);","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"JJoeYi"},"content":"            if (line.length() \u003c\u003d 9) {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"JJoeYi"},"content":"            int idxOfBy \u003d line.indexOf(\"/by\");","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"JJoeYi"},"content":"            if (idxOfBy \u003d\u003d -1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline must include /by\");","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"JJoeYi"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"JJoeYi"},"content":"                new Deadline(line.substring(9, idxOfBy), line.substring(idxOfBy + 4));","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"JJoeYi"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"Error! Please enter deadlines in this format:\\t\\ndeadline TASK /by DD-MM-YYYY\");","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"JJoeYi"},"content":"            Deadline deadline \u003d new Deadline(line.substring(9, idxOfBy), line.substring(idxOfBy + 4));","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"JJoeYi"},"content":"            taskList.add(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\t\\t\" + deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"JJoeYi"},"content":"            if (line.length() \u003c\u003d 6) {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"JJoeYi"},"content":"            int idxOfAt \u003d line.indexOf(\"/at\");","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"JJoeYi"},"content":"            if (idxOfAt \u003d\u003d -1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! The description of a event must include /at\");","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"JJoeYi"},"content":"            Event event \u003d new Event(line.substring(6, idxOfAt), line.substring(idxOfAt + 4));","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"JJoeYi"},"content":"            taskList.add(event);","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\t\\t\" + event);","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"JJoeYi"},"content":"            if (line.length() \u003c\u003d 7) {","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! Please enter a number after delete\");","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"JJoeYi"},"content":"            int index \u003d Integer.parseInt(line.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"JJoeYi"},"content":"            if (index \u003e taskList.size() || index \u003c 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"OOPS!!! Invalid number to delete\");","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\t\\t\" + taskList.get(index - 1));","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"JJoeYi"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"JJoeYi"},"content":"            Ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.startsWith(\"save\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"Saving progress...\");","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"JJoeYi"},"content":"            Storage.save(taskList);","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"Successfully saved!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"JJoeYi"},"content":"        } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"JJoeYi"},"content":"            if (line.length() \u003c 5) {","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"JJoeYi"},"content":"                throw new DukeException(\"Please enter a term to find!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"JJoeYi"},"content":"            String term \u003d line.substring(5);","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"JJoeYi"},"content":"            TaskList res \u003d taskList.find(term);","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"JJoeYi"},"content":"            if (res.isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"JJoeYi"},"content":"                Ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"JJoeYi"},"content":"                Ui.show(\"\\tSorry! No tasks match your term. Make sure your term is the exact capitalization\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"JJoeYi"},"content":"                    \"as in your task list!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"JJoeYi"},"content":"                Ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"JJoeYi"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"JJoeYi"},"content":"                Ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"JJoeYi"},"content":"                Ui.show(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"JJoeYi"},"content":"                res.showList();","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"JJoeYi"},"content":"                Ui.showLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"JJoeYi"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"OOPS!!! I\u0027m sorry, but I don\u0027t know that that means :(\");","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":160}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":" * Storage deals with the saving and loading of previous Tasks from a saveFile.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"     * Returns ArrayList of Tasks from the saveFile if it exists.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"     * Otherwise, creates the data directory and a new saveFile and returns empty ArrayList.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"     * @return ArrayList\u003cduke.Task\u003e from the save file at /data/saveFile.txt if it exists.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"        File saveFile \u003d new File(\"./data/saveFile.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"        if (!folder.exists()) { // folder does not exist, hence save also does not exist","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"No data folder detected. Making data directory and save file...\");","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"                folder.mkdirs();","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"                Ui.show(\"Success!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"                return arrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"        } else { // folder exists, check if save exists","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"            if (saveFile.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"                Ui.show(\"Retrieving save file...\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"                Ui.show(\"Success!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"                return convertSaveToArr(saveFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"                    Ui.show(\"No save file detected, creating save file...\");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"                    saveFile.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"                    Ui.show(\"Success!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"                    return arrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"JJoeYi"},"content":"                    e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"JJoeYi"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"JJoeYi"},"content":"        return arrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JJoeYi"},"content":"     * Returns ArrayList of Tasks from the saveFile by converting each line to a Task","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"JJoeYi"},"content":"     * @param file saveFile in /data/saveFile.txt","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"JJoeYi"},"content":"     * @return ArrayList of Tasks from the saveFile","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"JJoeYi"},"content":"    private static ArrayList\u003cTask\u003e convertSaveToArr(File file) {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"JJoeYi"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"JJoeYi"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"JJoeYi"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"JJoeYi"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"JJoeYi"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"JJoeYi"},"content":"                if (line.startsWith(\"[T]\")) { // TodoClass","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"JJoeYi"},"content":"                    result.add(Todo.stringToTodo(line));","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"JJoeYi"},"content":"                } else if (line.startsWith(\"[D]\")) { // duke.Deadline Class","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"JJoeYi"},"content":"                    result.add(Deadline.stringToDeadline(line));","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"JJoeYi"},"content":"                } else if (line.startsWith(\"[E]\")) { // Evemt Class","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"JJoeYi"},"content":"                    result.add(Event.stringToEvent(line));","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"JJoeYi"},"content":"                } else { // unknown text","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"JJoeYi"},"content":"                    result.add(new Task(line));","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"JJoeYi"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"JJoeYi"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"JJoeYi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"JJoeYi"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"JJoeYi"},"content":"     * Saves the TaskList into memory by overwriting the save file at /data/saveFile.txt","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"JJoeYi"},"content":"     * @param tL The updated Tasklist","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"JJoeYi"},"content":"    public static void save(TaskList tL) {","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"JJoeYi"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"JJoeYi"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/saveFile.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"JJoeYi"},"content":"            ArrayList\u003cTask\u003e lst \u003d tL.getTaskArr();","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"JJoeYi"},"content":"            for (Task task : lst) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"JJoeYi"},"content":"                fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"JJoeYi"},"content":"            fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"JJoeYi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"JJoeYi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":100}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":" * Task is a general class that consists of the task description and a boolean to indicate if the task is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"public class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"    protected String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"     * @param description Description of the Task to do.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"     * @param description Description of the Task to do.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"     * @param isDone      Boolean to indicate if the Task is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":47}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":" * TaskList is a class that represents a list of Tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"    private ArrayList\u003cTask\u003e lst;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for TaskList, initialized with an empty ArrayList","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"        this.lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"     * @param lst ArrayList to initialize the TaskList with.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"    public TaskList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"        this.lst \u003d lst;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"    public ArrayList\u003cTask\u003e getTaskArr() {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"        return this.lst;","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"     * Prints into console the current Tasks in the List in a nice numbered format.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"    public void showList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"        if (!lst.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"            for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + lst.get(i));","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"        } else { // list is empty","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"            Ui.show(\"duke.Task list is empty!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"     * Returns true if the list is empty.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JJoeYi"},"content":"     * @return Returns true if the list is empty.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JJoeYi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"JJoeYi"},"content":"        return lst.isEmpty();","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"JJoeYi"},"content":"     * Returns the Task at the specified position in this list.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JJoeYi"},"content":"     * @param index index of the element in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"JJoeYi"},"content":"     * @return Returns the Task at the specified position in this list.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"JJoeYi"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"JJoeYi"},"content":"        return lst.get(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"JJoeYi"},"content":"     * Appends the specified Task to the end of this list.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"JJoeYi"},"content":"     * @param t The Task to be added","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"JJoeYi"},"content":"    public void add(Task t) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"JJoeYi"},"content":"        lst.add(t);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"JJoeYi"},"content":"     * Returns the number of Tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"JJoeYi"},"content":"     * @return Returns the number of Tasks in the list.","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"JJoeYi"},"content":"    public int size() {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"JJoeYi"},"content":"        return lst.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"JJoeYi"},"content":"     * Removes the Task at the specified index.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"JJoeYi"},"content":"     * @param index Index to remove the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"JJoeYi"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"JJoeYi"},"content":"        lst.remove(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"JJoeYi"},"content":"    public TaskList find(String s) {","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"JJoeYi"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"JJoeYi"},"content":"        for (Task t : lst) {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"JJoeYi"},"content":"            if (t.toString().contains(s)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"JJoeYi"},"content":"                res.add(t);","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"JJoeYi"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"JJoeYi"},"content":"        return new TaskList(res);","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":100}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":" * TodoClass is a Task that contains a task description and a boolean to indicate if the task is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for Todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"     * Constructor for Todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"     * @param isDone      Boolean to indicate if the Task is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"     * Returns a Todo that is constructed from a string with a particular format","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"     * \"[T][X] Description\"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"     * @param s String to be converted to an Todo","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"     * @return Todo that is constructed from a string with a particular format","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"     * @throws DukeException When string does not begin with the Todo header \"[D]\"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"    public static Todo stringToTodo(String s) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"        if (!s.startsWith(\"[T][\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"            throw new DukeException(\"This string is not a duke.Todo string!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"        char isDoneString \u003d s.charAt(4); //\u0027[T][X]\u0027 checks if X is present","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"        char X \u003d \u0027X\u0027;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"        boolean isDone \u003d isDoneString \u003d\u003d X;","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"JJoeYi"},"content":"        String description \u003d s.substring(\"[T][X] \".length());","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"JJoeYi"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"JJoeYi"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"JJoeYi"},"content":"        String testString \u003d \"[T][X] read book\";","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"JJoeYi"},"content":"        System.out.println(stringToTodo(testString).toString().equals(testString));","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":57}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":" * Ui is a class that deals with handling console outputs.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"    final static String DIVIDER_LINE \u003d \"\\t-----------------------------------------------\";","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"     * Prints a welcome message to the console.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"    public static void showWelcome() {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"        showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"        System.out.println(\"\\tHello! I\u0027m duke.Duke Dukem\\n\\tWhat can I do for you?\");","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"        showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"     * Prints a goodbye message to the console.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"    public static void showGoodbye() {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"        showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"        showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"     * Prints a line to the console.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"    public static void showLine() {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"     * Prints the provided string to the console.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"     * @param line The line to be printed to the console.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"    public static void show(String line) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"JJoeYi":43}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"    void stringToDeadline() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"        String testString \u003d \"[D][ ] return book (by: Jun 06 2022)\";","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"        Deadline convertedStr \u003d new Deadline(\"test\", \"01-01-1000\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"            convertedStr \u003d Deadline.stringToDeadline(testString);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"        assertEquals(testString, convertedStr.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JJoeYi":20}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"class EventTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"    void stringToEvent() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"        String testString \u003d \"[E][ ] project meeting (at: Aug 6th 2-4pm)\";","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"        Event convertedString \u003d new Event(\"\",\"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"            convertedString \u003d Event.stringToEvent(testString);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"        assertEquals(testString, convertedString.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JJoeYi":20}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"class TodoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"    void stringToTodo() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"        String testString \u003d \"[T][X] read book\";","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"        Todo convertedStr \u003d new Todo(\"\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"            convertedStr \u003d Todo.stringToTodo(testString);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"        assertEquals(testString, convertedStr.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JJoeYi":20}}]

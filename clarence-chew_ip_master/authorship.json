[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarence-chew":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"plugins {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"repositories {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"dependencies {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"test {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    testLogging {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"        showExceptions true","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        showCauses true","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"application {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"shadowJar {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"run {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"javafx {","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"clarence-chew":68}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"goto fail","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"goto fail","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":":init","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":":win9xME_args","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":":execute","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":":end","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":":fail","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"exit /b 1","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":":mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":":omega","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"clarence-chew":103}},{"path":"src/main/java/duke/CommandMatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import duke.exception.DukeExceptionFunction;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" * This class serves as a way to abstract the idea of making a command","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" * as a matching process and an action.","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"public class CommandMatcher extends StringMatcher\u003cDukeResponse\u003e {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    private Predicate\u003cString\u003e shouldRunAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    private Function\u003cString, DukeResponse\u003e action;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * Constructs an object that handles checking and executing a command.","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     * @param shouldRunAction Predicate to check if the command should be run.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     * @param action Action to run.","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    public CommandMatcher(Predicate\u003cString\u003e shouldRunAction, Function\u003cString, DukeResponse\u003e action) {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        super(shouldRunAction, action);","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        assert shouldRunAction !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        assert action !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"     * Constructs an object that handles checking and executing a command.","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     * @param shouldRunAction Predicate to check if the command should be run.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     * @param action Action to run.","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     * @return Constructed CommandMatcher.","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    public static CommandMatcher of(Predicate\u003cString\u003e shouldRunAction, DukeExceptionFunction\u003cString\u003e action) {","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        return new CommandMatcher(shouldRunAction, DukeExceptionFunction.toFunction(action));","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"     * Constructs an object that handles checking and executing a command.","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"     * @param prefix Prefix of the command which is checked.","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"     * @param action Action to run.","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"     * @return Constructed CommandMatcher.","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"    public static CommandMatcher of(String prefix, DukeExceptionFunction\u003cString\u003e action) {","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        assert prefix !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        assert action !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        return new CommandMatcher((cmd) -\u003e cmd.strip().startsWith(prefix),","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"                DukeExceptionFunction.toFunction(action));","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"clarence-chew":52}},{"path":"src/main/java/duke/ConsoleUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.io.Reader;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" * Handles console-based user interface. Used for sanity checks.","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"public class ConsoleUi implements UiInterface {","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    private static final String UPPER_BAR \u003d \",----------------------------------------------------------------\";","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    private static final String LOWER_BAR \u003d \"\u0027----------------------------------------------------------------\";","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    private static final String LEFT_BAR \u003d \"| \";","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    public Reader getReader() {","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        return new InputStreamReader(System.in);","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    public void printStyledMessage(String... lines) {","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        System.out.println(UPPER_BAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        for (String str : lines) {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"            System.out.print(LEFT_BAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"            System.out.println(str);","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        System.out.println(LOWER_BAR);","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    public void greet() {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        printStyledMessage(\"...where is this again?\",","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"                \"Oh, hello, I didn\u0027t see you there - I\u0027m Anthea, a chatbot...\",","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"                \"...or at least that\u0027s what they told me.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    public void leave() {","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"        printStyledMessage(\"It was nice to have you around, I\u0027m going back to sleep...\");","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import duke.note.NoteList;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":" * The main method of the chatbot, as well as its startup and teardown.","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    /** List of commands */","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    private static ArrayList\u003cCommandMatcher\u003e commands;","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    private static UiInterface ui \u003d new ConsoleUi();","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     * Sets the current UI.","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * @param ui The current UI to use.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    public static void setUi(UiInterface ui) {","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        Duke.ui \u003d ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     * Gets the current UI to interact with.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     * @return UiInterface that helps display text to screen.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    public static UiInterface getUi() {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        return ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    private static DukeResponse handleCommand(String command) {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        Optional\u003cDukeResponse\u003e response \u003d Optional.empty();","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        for (CommandMatcher matcher : commands) {","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"            response \u003d response.or(() -\u003e matcher.run(command));","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        return response.orElse(new DukeResponse(\"I cannot figure out this command...\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"     * Runs the chatbot execution.","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"     * @param args Command line args which are not used.","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        // initialization","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"        ui.greet();","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"        TaskList.initializeTaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"        NoteList.initializeNoteList();","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"        commands \u003d Parser.getCommands();","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        BufferedReader input \u003d new BufferedReader(ui.getReader());","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"        // main application logic","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"        boolean isStillRunning \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"        while (isStillRunning) {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"            String command;","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"            try {","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"                command \u003d input.readLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"                System.out.println(\"IOException in application logic - terminating\");","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"                throw new RuntimeException(ex);","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"                isStillRunning \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"            } else {","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"                DukeResponse response \u003d handleCommand(command);","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"                response.print(ui); // ensure response is printed","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"        // finalization","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"        TaskList.finalizeTaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"        NoteList.finalizeNoteList();","lastModifiedDate":"2022-09-12"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"        ui.leave();","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"clarence-chew":79,"-":4}},{"path":"src/main/java/duke/DukeResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":" * Stores an output to print once.","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class DukeResponse {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    private Consumer\u003cUiInterface\u003e responsePrinter;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    private boolean hasPrinted \u003d false;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a wrapper for the output,","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * so it prints only once.","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * @param output Output to print only once.","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    public DukeResponse(String... output) {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        responsePrinter \u003d (ui) -\u003e ui.printStyledMessage(output);","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a wrapper for the output,","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * so it prints only once.","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     * @param printer Method to print only once.","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    public DukeResponse(Consumer\u003cUiInterface\u003e printer) {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        assert printer !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        this.responsePrinter \u003d printer;","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"     * Prints the output if not printed yet.","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     * @param ui User interface to use.","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    public void print(UiInterface ui) {","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        if (hasPrinted) {","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"            return;","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"        responsePrinter.accept(ui);","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        hasPrinted \u003d true;","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"clarence-chew":46}},{"path":"src/main/java/duke/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":" * Stores a pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":" *","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":" * @param \u003cU\u003e Type of first member of pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" * @param \u003cV\u003e Type of second member of pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"public class Pair\u003cU, V\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    private U u;","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    private V v;","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * @param u First member of the pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * @param v Second member of the pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    public Pair(U u, V v) {","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        this.u \u003d u;","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        this.v \u003d v;","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * Gets the first member of the pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     * @return First member of the pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    public U getFirst() {","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        return this.u;","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"     * Gets the second member of the pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     * @return Second member of the pair.","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    public V getSecond() {","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"        return this.v;","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"clarence-chew":41}},{"path":"src/main/java/duke/ParsedDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.time.Month;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"import java.time.temporal.TemporalAdjuster;","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":" * Helper class to parse date/time strings","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"public class ParsedDateTime {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    private static final DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"),","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"), DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.BASIC_ISO_DATE, DateTimeFormatter.ISO_LOCAL_DATE, DateTimeFormatter.ISO_OFFSET_DATE,","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ISO_DATE, DateTimeFormatter.ISO_LOCAL_TIME, DateTimeFormatter.ISO_OFFSET_TIME,","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ISO_TIME, DateTimeFormatter.ISO_LOCAL_DATE_TIME, DateTimeFormatter.ISO_OFFSET_DATE_TIME,","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ISO_ZONED_DATE_TIME, DateTimeFormatter.ISO_DATE_TIME, DateTimeFormatter.ISO_ORDINAL_DATE,","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ISO_WEEK_DATE, DateTimeFormatter.ISO_INSTANT, DateTimeFormatter.RFC_1123_DATE_TIME };","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"    private static final ArrayList\u003cStringMatcher\u003cTemporalAdjuster\u003e\u003e naturalDateParsers;","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    private static final ArrayList\u003cStringMatcher\u003cTemporalAdjuster\u003e\u003e naturalDateLatestTimeParsers;","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    private static final int BIG_NUMBER_OF_ITERATIONS \u003d 1024;","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    private static final int HOURS_PER_DAY \u003d 24;","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    private static final int MINUTES_PER_HOUR \u003d 60;","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    private static final int DATE_29 \u003d 29;","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"    private static final int MONTH_FEB \u003d 2;","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    static {","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"mon\", \"monday\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getDayOfWeekTemporalAdjuster(DayOfWeek.MONDAY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"tue\", \"tuesday\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getDayOfWeekTemporalAdjuster(DayOfWeek.TUESDAY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"wed\", \"wednesday\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getDayOfWeekTemporalAdjuster(DayOfWeek.WEDNESDAY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"thur\", \"thursday\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getDayOfWeekTemporalAdjuster(DayOfWeek.THURSDAY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"fri\", \"friday\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getDayOfWeekTemporalAdjuster(DayOfWeek.FRIDAY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"sat\", \"saturday\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getDayOfWeekTemporalAdjuster(DayOfWeek.SATURDAY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"sun\", \"sunday\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getDayOfWeekTemporalAdjuster(DayOfWeek.SUNDAY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"jan\", \"january\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.JANUARY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"feb\", \"february\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.FEBRUARY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"mar\", \"march\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.MARCH)));","lastModifiedDate":"2022-09-12"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"apr\", \"april\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.APRIL)));","lastModifiedDate":"2022-09-12"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"may\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.MAY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"jun\", \"june\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.JUNE)));","lastModifiedDate":"2022-09-12"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"jul\", \"july\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.JULY)));","lastModifiedDate":"2022-09-12"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"aug\", \"august\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.AUGUST)));","lastModifiedDate":"2022-09-12"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"sep\", \"september\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.SEPTEMBER)));","lastModifiedDate":"2022-09-12"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"oct\", \"october\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.OCTOBER)));","lastModifiedDate":"2022-09-12"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"nov\", \"november\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.NOVEMBER)));","lastModifiedDate":"2022-09-12"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(new String[]{ \"dec\", \"december\" }),","lastModifiedDate":"2022-09-12"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e getMonthTemporalAdjuster(Month.DECEMBER)));","lastModifiedDate":"2022-09-12"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"        String[] dates \u003d new String[38];","lastModifiedDate":"2022-09-12"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"        for (int i \u003d 1; i \u003c\u003d 31; i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"            // 1th included, this is a feature","lastModifiedDate":"2022-09-12"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"            dates[i - 1] \u003d String.format(\"%dth\", i);","lastModifiedDate":"2022-09-12"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"        // custom ordinals","lastModifiedDate":"2022-09-12"},{"lineNumber":104,"author":{"gitId":"clarence-chew"},"content":"        dates[31] \u003d \"1st\";","lastModifiedDate":"2022-09-12"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"        dates[32] \u003d \"2nd\";","lastModifiedDate":"2022-09-12"},{"lineNumber":106,"author":{"gitId":"clarence-chew"},"content":"        dates[33] \u003d \"3rd\";","lastModifiedDate":"2022-09-12"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"        dates[34] \u003d \"21st\";","lastModifiedDate":"2022-09-12"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"        dates[35] \u003d \"22nd\";","lastModifiedDate":"2022-09-12"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"        dates[36] \u003d \"23rd\";","lastModifiedDate":"2022-09-12"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"        dates[37] \u003d \"31st\";","lastModifiedDate":"2022-09-12"},{"lineNumber":111,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":112,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(dates),","lastModifiedDate":"2022-09-12"},{"lineNumber":113,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":114,"author":{"gitId":"clarence-chew"},"content":"                    boolean isTwoDigit \u003d \u00270\u0027 \u003c\u003d s.charAt(1) \u0026\u0026 s.charAt(1) \u003c\u003d \u00279\u0027;","lastModifiedDate":"2022-09-12"},{"lineNumber":115,"author":{"gitId":"clarence-chew"},"content":"                    int date \u003d Integer.parseInt(s.substring(0, 1));","lastModifiedDate":"2022-09-12"},{"lineNumber":116,"author":{"gitId":"clarence-chew"},"content":"                    if (isTwoDigit) {","lastModifiedDate":"2022-09-12"},{"lineNumber":117,"author":{"gitId":"clarence-chew"},"content":"                        date \u003d Integer.parseInt(s.substring(0, 2));","lastModifiedDate":"2022-09-12"},{"lineNumber":118,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-09-12"},{"lineNumber":119,"author":{"gitId":"clarence-chew"},"content":"                    return getDateTemporalAdjuster(date);","lastModifiedDate":"2022-09-12"},{"lineNumber":120,"author":{"gitId":"clarence-chew"},"content":"                }));","lastModifiedDate":"2022-09-12"},{"lineNumber":121,"author":{"gitId":"clarence-chew"},"content":"        Predicate\u003cString\u003e isDate \u003d s -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":122,"author":{"gitId":"clarence-chew"},"content":"            String[] parts \u003d s.split(\"/\");","lastModifiedDate":"2022-09-12"},{"lineNumber":123,"author":{"gitId":"clarence-chew"},"content":"            if (parts.length \u003d\u003d 2 || parts.length \u003d\u003d 3) {","lastModifiedDate":"2022-09-12"},{"lineNumber":124,"author":{"gitId":"clarence-chew"},"content":"                for (String part : parts) {","lastModifiedDate":"2022-09-12"},{"lineNumber":125,"author":{"gitId":"clarence-chew"},"content":"                    if (!isNumeric(part)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":126,"author":{"gitId":"clarence-chew"},"content":"                        return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":127,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-09-12"},{"lineNumber":128,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":129,"author":{"gitId":"clarence-chew"},"content":"                return true;","lastModifiedDate":"2022-09-12"},{"lineNumber":130,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":131,"author":{"gitId":"clarence-chew"},"content":"            parts \u003d s.split(\"-\");","lastModifiedDate":"2022-09-12"},{"lineNumber":132,"author":{"gitId":"clarence-chew"},"content":"            if (parts.length \u003d\u003d 2 || parts.length \u003d\u003d 3) {","lastModifiedDate":"2022-09-12"},{"lineNumber":133,"author":{"gitId":"clarence-chew"},"content":"                for (String part : parts) {","lastModifiedDate":"2022-09-12"},{"lineNumber":134,"author":{"gitId":"clarence-chew"},"content":"                    if (!isNumeric(part)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":135,"author":{"gitId":"clarence-chew"},"content":"                        return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":136,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-09-12"},{"lineNumber":137,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":138,"author":{"gitId":"clarence-chew"},"content":"                return true;","lastModifiedDate":"2022-09-12"},{"lineNumber":139,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":140,"author":{"gitId":"clarence-chew"},"content":"            return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":141,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":142,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":143,"author":{"gitId":"clarence-chew"},"content":"                isDate,","lastModifiedDate":"2022-09-12"},{"lineNumber":144,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":145,"author":{"gitId":"clarence-chew"},"content":"                    try {","lastModifiedDate":"2022-09-12"},{"lineNumber":146,"author":{"gitId":"clarence-chew"},"content":"                        int date \u003d -1;","lastModifiedDate":"2022-09-12"},{"lineNumber":147,"author":{"gitId":"clarence-chew"},"content":"                        int month \u003d -1;","lastModifiedDate":"2022-09-12"},{"lineNumber":148,"author":{"gitId":"clarence-chew"},"content":"                        int year \u003d -1;","lastModifiedDate":"2022-09-12"},{"lineNumber":149,"author":{"gitId":"clarence-chew"},"content":"                        String[] parts \u003d s.split(\"/\");","lastModifiedDate":"2022-09-12"},{"lineNumber":150,"author":{"gitId":"clarence-chew"},"content":"                        if (parts.length \u003d\u003d 2 || parts.length \u003d\u003d 3) {","lastModifiedDate":"2022-09-12"},{"lineNumber":151,"author":{"gitId":"clarence-chew"},"content":"                            date \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2022-09-12"},{"lineNumber":152,"author":{"gitId":"clarence-chew"},"content":"                            month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2022-09-12"},{"lineNumber":153,"author":{"gitId":"clarence-chew"},"content":"                            if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2022-09-12"},{"lineNumber":154,"author":{"gitId":"clarence-chew"},"content":"                                year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2022-09-12"},{"lineNumber":155,"author":{"gitId":"clarence-chew"},"content":"                            }","lastModifiedDate":"2022-09-12"},{"lineNumber":156,"author":{"gitId":"clarence-chew"},"content":"                        }","lastModifiedDate":"2022-09-12"},{"lineNumber":157,"author":{"gitId":"clarence-chew"},"content":"                        parts \u003d s.split(\"-\");","lastModifiedDate":"2022-09-12"},{"lineNumber":158,"author":{"gitId":"clarence-chew"},"content":"                        if (parts.length \u003d\u003d 2 || parts.length \u003d\u003d 3) {","lastModifiedDate":"2022-09-12"},{"lineNumber":159,"author":{"gitId":"clarence-chew"},"content":"                            date \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2022-09-12"},{"lineNumber":160,"author":{"gitId":"clarence-chew"},"content":"                            month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2022-09-12"},{"lineNumber":161,"author":{"gitId":"clarence-chew"},"content":"                            if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2022-09-12"},{"lineNumber":162,"author":{"gitId":"clarence-chew"},"content":"                                year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2022-09-12"},{"lineNumber":163,"author":{"gitId":"clarence-chew"},"content":"                            }","lastModifiedDate":"2022-09-12"},{"lineNumber":164,"author":{"gitId":"clarence-chew"},"content":"                        }","lastModifiedDate":"2022-09-12"},{"lineNumber":165,"author":{"gitId":"clarence-chew"},"content":"                        if (year \u003d\u003d -1) {","lastModifiedDate":"2022-09-12"},{"lineNumber":166,"author":{"gitId":"clarence-chew"},"content":"                            return getDateMonthTemporalAdjuster(date, month);","lastModifiedDate":"2022-09-12"},{"lineNumber":167,"author":{"gitId":"clarence-chew"},"content":"                        }","lastModifiedDate":"2022-09-12"},{"lineNumber":168,"author":{"gitId":"clarence-chew"},"content":"                        return getDateMonthYearTemporalAdjuster(date, month, year);","lastModifiedDate":"2022-09-12"},{"lineNumber":169,"author":{"gitId":"clarence-chew"},"content":"                    } catch (NumberFormatException ex) {","lastModifiedDate":"2022-09-12"},{"lineNumber":170,"author":{"gitId":"clarence-chew"},"content":"                        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":171,"author":{"gitId":"clarence-chew"},"content":"                            throw new DateTimeException(\"Parse error for date\");","lastModifiedDate":"2022-09-12"},{"lineNumber":172,"author":{"gitId":"clarence-chew"},"content":"                        };","lastModifiedDate":"2022-09-12"},{"lineNumber":173,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-09-12"},{"lineNumber":174,"author":{"gitId":"clarence-chew"},"content":"                }));","lastModifiedDate":"2022-09-12"},{"lineNumber":175,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":176,"author":{"gitId":"clarence-chew"},"content":"                ParsedDateTime::isNumeric,","lastModifiedDate":"2022-09-12"},{"lineNumber":177,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":178,"author":{"gitId":"clarence-chew"},"content":"                    try {","lastModifiedDate":"2022-09-12"},{"lineNumber":179,"author":{"gitId":"clarence-chew"},"content":"                        int year \u003d Integer.parseInt(s);","lastModifiedDate":"2022-09-12"},{"lineNumber":180,"author":{"gitId":"clarence-chew"},"content":"                        if (year \u003c 1) {","lastModifiedDate":"2022-09-12"},{"lineNumber":181,"author":{"gitId":"clarence-chew"},"content":"                            return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":182,"author":{"gitId":"clarence-chew"},"content":"                                throw new DateTimeException(\"No negative years\");","lastModifiedDate":"2022-09-12"},{"lineNumber":183,"author":{"gitId":"clarence-chew"},"content":"                            };","lastModifiedDate":"2022-09-12"},{"lineNumber":184,"author":{"gitId":"clarence-chew"},"content":"                        }","lastModifiedDate":"2022-09-12"},{"lineNumber":185,"author":{"gitId":"clarence-chew"},"content":"                        return getYearTemporalAdjuster(year);","lastModifiedDate":"2022-09-12"},{"lineNumber":186,"author":{"gitId":"clarence-chew"},"content":"                    } catch (NumberFormatException ex) {","lastModifiedDate":"2022-09-12"},{"lineNumber":187,"author":{"gitId":"clarence-chew"},"content":"                        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":188,"author":{"gitId":"clarence-chew"},"content":"                            throw new DateTimeException(\"Parse error for year\");","lastModifiedDate":"2022-09-12"},{"lineNumber":189,"author":{"gitId":"clarence-chew"},"content":"                        };","lastModifiedDate":"2022-09-12"},{"lineNumber":190,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-09-12"},{"lineNumber":191,"author":{"gitId":"clarence-chew"},"content":"                }));","lastModifiedDate":"2022-09-12"},{"lineNumber":192,"author":{"gitId":"clarence-chew"},"content":"        Predicate\u003cString\u003e isTime \u003d s -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":193,"author":{"gitId":"clarence-chew"},"content":"            String[] parts \u003d s.split(\"[:.]\");","lastModifiedDate":"2022-09-12"},{"lineNumber":194,"author":{"gitId":"clarence-chew"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2022-09-12"},{"lineNumber":195,"author":{"gitId":"clarence-chew"},"content":"                return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":196,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":197,"author":{"gitId":"clarence-chew"},"content":"            if (!isNumeric(parts[0])) {","lastModifiedDate":"2022-09-12"},{"lineNumber":198,"author":{"gitId":"clarence-chew"},"content":"                return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":199,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":200,"author":{"gitId":"clarence-chew"},"content":"            if (isNumeric(parts[1])) {","lastModifiedDate":"2022-09-12"},{"lineNumber":201,"author":{"gitId":"clarence-chew"},"content":"                return true;","lastModifiedDate":"2022-09-12"},{"lineNumber":202,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":203,"author":{"gitId":"clarence-chew"},"content":"            if (parts[1].length() \u003c 3) {","lastModifiedDate":"2022-09-12"},{"lineNumber":204,"author":{"gitId":"clarence-chew"},"content":"                return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":205,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":206,"author":{"gitId":"clarence-chew"},"content":"            if (!isNumeric(parts[1].substring(0, parts[1].length() - 2))) {","lastModifiedDate":"2022-09-12"},{"lineNumber":207,"author":{"gitId":"clarence-chew"},"content":"                return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":208,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":209,"author":{"gitId":"clarence-chew"},"content":"            String suffix \u003d parts[1].substring(parts[1].length() - 2)","lastModifiedDate":"2022-09-12"},{"lineNumber":210,"author":{"gitId":"clarence-chew"},"content":"                    .toLowerCase();","lastModifiedDate":"2022-09-12"},{"lineNumber":211,"author":{"gitId":"clarence-chew"},"content":"            return suffix.equals(\"am\") || suffix.equals(\"pm\");","lastModifiedDate":"2022-09-12"},{"lineNumber":212,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":213,"author":{"gitId":"clarence-chew"},"content":"        naturalDateParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":214,"author":{"gitId":"clarence-chew"},"content":"                isTime,","lastModifiedDate":"2022-09-12"},{"lineNumber":215,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":216,"author":{"gitId":"clarence-chew"},"content":"                    try {","lastModifiedDate":"2022-09-12"},{"lineNumber":217,"author":{"gitId":"clarence-chew"},"content":"                        String[] parts \u003d s.split(\"[:.]\");","lastModifiedDate":"2022-09-12"},{"lineNumber":218,"author":{"gitId":"clarence-chew"},"content":"                        int hour \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2022-09-12"},{"lineNumber":219,"author":{"gitId":"clarence-chew"},"content":"                        int minute;","lastModifiedDate":"2022-09-12"},{"lineNumber":220,"author":{"gitId":"clarence-chew"},"content":"                        boolean invalidHour;","lastModifiedDate":"2022-09-12"},{"lineNumber":221,"author":{"gitId":"clarence-chew"},"content":"                        if (isNumeric(parts[1])) {","lastModifiedDate":"2022-09-12"},{"lineNumber":222,"author":{"gitId":"clarence-chew"},"content":"                            minute \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2022-09-12"},{"lineNumber":223,"author":{"gitId":"clarence-chew"},"content":"                            invalidHour \u003d hour \u003c 0 || hour \u003e\u003d HOURS_PER_DAY;","lastModifiedDate":"2022-09-12"},{"lineNumber":224,"author":{"gitId":"clarence-chew"},"content":"                        } else {","lastModifiedDate":"2022-09-12"},{"lineNumber":225,"author":{"gitId":"clarence-chew"},"content":"                            minute \u003d Integer.parseInt(parts[1].substring(0, parts[1].length() - 2));","lastModifiedDate":"2022-09-12"},{"lineNumber":226,"author":{"gitId":"clarence-chew"},"content":"                            String suffix \u003d parts[1].substring(parts[1].length() - 2)","lastModifiedDate":"2022-09-12"},{"lineNumber":227,"author":{"gitId":"clarence-chew"},"content":"                                    .toLowerCase();","lastModifiedDate":"2022-09-12"},{"lineNumber":228,"author":{"gitId":"clarence-chew"},"content":"                            invalidHour \u003d hour \u003c\u003d 0 || hour \u003e 12;","lastModifiedDate":"2022-09-12"},{"lineNumber":229,"author":{"gitId":"clarence-chew"},"content":"                            if (suffix.equals(\"am\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":230,"author":{"gitId":"clarence-chew"},"content":"                                if (hour \u003d\u003d 12) {","lastModifiedDate":"2022-09-12"},{"lineNumber":231,"author":{"gitId":"clarence-chew"},"content":"                                    hour \u003d 0;","lastModifiedDate":"2022-09-12"},{"lineNumber":232,"author":{"gitId":"clarence-chew"},"content":"                                }","lastModifiedDate":"2022-09-12"},{"lineNumber":233,"author":{"gitId":"clarence-chew"},"content":"                            } else if (suffix.equals(\"pm\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":234,"author":{"gitId":"clarence-chew"},"content":"                                if (hour !\u003d 12) {","lastModifiedDate":"2022-09-12"},{"lineNumber":235,"author":{"gitId":"clarence-chew"},"content":"                                    hour +\u003d 12;","lastModifiedDate":"2022-09-12"},{"lineNumber":236,"author":{"gitId":"clarence-chew"},"content":"                                }","lastModifiedDate":"2022-09-12"},{"lineNumber":237,"author":{"gitId":"clarence-chew"},"content":"                            }","lastModifiedDate":"2022-09-12"},{"lineNumber":238,"author":{"gitId":"clarence-chew"},"content":"                        }","lastModifiedDate":"2022-09-12"},{"lineNumber":239,"author":{"gitId":"clarence-chew"},"content":"                        boolean invalidMinute \u003d minute \u003c 0 || minute \u003e\u003d MINUTES_PER_HOUR;","lastModifiedDate":"2022-09-12"},{"lineNumber":240,"author":{"gitId":"clarence-chew"},"content":"                        if (invalidHour || invalidMinute) {","lastModifiedDate":"2022-09-12"},{"lineNumber":241,"author":{"gitId":"clarence-chew"},"content":"                            return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":242,"author":{"gitId":"clarence-chew"},"content":"                                throw new DateTimeException(\"Invalid hour/minute for time\");","lastModifiedDate":"2022-09-12"},{"lineNumber":243,"author":{"gitId":"clarence-chew"},"content":"                            };","lastModifiedDate":"2022-09-12"},{"lineNumber":244,"author":{"gitId":"clarence-chew"},"content":"                        }","lastModifiedDate":"2022-09-12"},{"lineNumber":245,"author":{"gitId":"clarence-chew"},"content":"                        return getTimeTemporalAdjuster(hour, minute);","lastModifiedDate":"2022-09-12"},{"lineNumber":246,"author":{"gitId":"clarence-chew"},"content":"                    } catch (NumberFormatException ex) {","lastModifiedDate":"2022-09-12"},{"lineNumber":247,"author":{"gitId":"clarence-chew"},"content":"                        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":248,"author":{"gitId":"clarence-chew"},"content":"                            throw new DateTimeException(\"Parse error for time\");","lastModifiedDate":"2022-09-12"},{"lineNumber":249,"author":{"gitId":"clarence-chew"},"content":"                        };","lastModifiedDate":"2022-09-12"},{"lineNumber":250,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-09-12"},{"lineNumber":251,"author":{"gitId":"clarence-chew"},"content":"                }));","lastModifiedDate":"2022-09-12"},{"lineNumber":252,"author":{"gitId":"clarence-chew"},"content":"        TemporalAdjuster lastTimeOfDay \u003d temporal -\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":253,"author":{"gitId":"clarence-chew"},"content":"                LocalDateTime.from(temporal).withHour(23).withMinute(59).withSecond(0).withNano(0);","lastModifiedDate":"2022-09-12"},{"lineNumber":254,"author":{"gitId":"clarence-chew"},"content":"        TemporalAdjuster lastTimeOfMonth \u003d temporal -\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":255,"author":{"gitId":"clarence-chew"},"content":"                LocalDateTime.from(temporal).with(TemporalAdjusters.lastDayOfMonth()).with(lastTimeOfDay);","lastModifiedDate":"2022-09-12"},{"lineNumber":256,"author":{"gitId":"clarence-chew"},"content":"        TemporalAdjuster lastTimeOfYear \u003d temporal -\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":257,"author":{"gitId":"clarence-chew"},"content":"                LocalDateTime.from(temporal).with(TemporalAdjusters.lastDayOfYear()).with(lastTimeOfDay);","lastModifiedDate":"2022-09-12"},{"lineNumber":258,"author":{"gitId":"clarence-chew"},"content":"        naturalDateLatestTimeParsers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":259,"author":{"gitId":"clarence-chew"},"content":"        String[] weekdays \u003d new String[]{","lastModifiedDate":"2022-09-12"},{"lineNumber":260,"author":{"gitId":"clarence-chew"},"content":"            \"mon\", \"monday\", \"tue\", \"tuesday\", \"wed\", \"wednesday\", \"thur\", \"thursday\", \"fri\", \"friday\",","lastModifiedDate":"2022-09-12"},{"lineNumber":261,"author":{"gitId":"clarence-chew"},"content":"            \"sat\", \"saturday\", \"sun\", \"sunday\" };","lastModifiedDate":"2022-09-12"},{"lineNumber":262,"author":{"gitId":"clarence-chew"},"content":"        String[] months \u003d new String[]{","lastModifiedDate":"2022-09-12"},{"lineNumber":263,"author":{"gitId":"clarence-chew"},"content":"            \"jan\", \"january\", \"feb\", \"february\", \"mar\", \"march\",","lastModifiedDate":"2022-09-12"},{"lineNumber":264,"author":{"gitId":"clarence-chew"},"content":"            \"apr\", \"april\", \"may\", \"jun\", \"june\",","lastModifiedDate":"2022-09-12"},{"lineNumber":265,"author":{"gitId":"clarence-chew"},"content":"            \"jul\", \"july\", \"aug\", \"august\", \"sep\", \"september\",","lastModifiedDate":"2022-09-12"},{"lineNumber":266,"author":{"gitId":"clarence-chew"},"content":"            \"oct\", \"october\", \"nov\", \"november\", \"dec\", \"december\" };","lastModifiedDate":"2022-09-12"},{"lineNumber":267,"author":{"gitId":"clarence-chew"},"content":"        naturalDateLatestTimeParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":268,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(weekdays),","lastModifiedDate":"2022-09-12"},{"lineNumber":269,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e lastTimeOfDay));","lastModifiedDate":"2022-09-12"},{"lineNumber":270,"author":{"gitId":"clarence-chew"},"content":"        naturalDateLatestTimeParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":271,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(months),","lastModifiedDate":"2022-09-12"},{"lineNumber":272,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e lastTimeOfMonth));","lastModifiedDate":"2022-09-12"},{"lineNumber":273,"author":{"gitId":"clarence-chew"},"content":"        naturalDateLatestTimeParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":274,"author":{"gitId":"clarence-chew"},"content":"                StringMatcher.getCaseInsensitiveMatcher(dates),","lastModifiedDate":"2022-09-12"},{"lineNumber":275,"author":{"gitId":"clarence-chew"},"content":"                s -\u003e lastTimeOfDay));","lastModifiedDate":"2022-09-12"},{"lineNumber":276,"author":{"gitId":"clarence-chew"},"content":"        naturalDateLatestTimeParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":277,"author":{"gitId":"clarence-chew"},"content":"                isDate, s -\u003e lastTimeOfDay));","lastModifiedDate":"2022-09-12"},{"lineNumber":278,"author":{"gitId":"clarence-chew"},"content":"        naturalDateLatestTimeParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":279,"author":{"gitId":"clarence-chew"},"content":"                ParsedDateTime::isNumeric, s -\u003e lastTimeOfYear));","lastModifiedDate":"2022-09-12"},{"lineNumber":280,"author":{"gitId":"clarence-chew"},"content":"        naturalDateLatestTimeParsers.add(new StringMatcher\u003c\u003e(","lastModifiedDate":"2022-09-12"},{"lineNumber":281,"author":{"gitId":"clarence-chew"},"content":"                isTime, s -\u003e t -\u003e t));","lastModifiedDate":"2022-09-12"},{"lineNumber":282,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":283,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":284,"author":{"gitId":"clarence-chew"},"content":"    private Optional\u003cLocalDateTime\u003e parsedDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":285,"author":{"gitId":"clarence-chew"},"content":"    private String input;","lastModifiedDate":"2022-08-20"},{"lineNumber":286,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":287,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":288,"author":{"gitId":"clarence-chew"},"content":"     * Constructs an object to handle if the date/time can be parsed.","lastModifiedDate":"2022-09-09"},{"lineNumber":289,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":290,"author":{"gitId":"clarence-chew"},"content":"     * @param input String that may represent date/time.","lastModifiedDate":"2022-08-20"},{"lineNumber":291,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":292,"author":{"gitId":"clarence-chew"},"content":"    public ParsedDateTime(String input) {","lastModifiedDate":"2022-08-20"},{"lineNumber":293,"author":{"gitId":"clarence-chew"},"content":"        assert input !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":294,"author":{"gitId":"clarence-chew"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-20"},{"lineNumber":295,"author":{"gitId":"clarence-chew"},"content":"        parsedDateTime \u003d Optional.empty();","lastModifiedDate":"2022-08-20"},{"lineNumber":296,"author":{"gitId":"clarence-chew"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2022-08-20"},{"lineNumber":297,"author":{"gitId":"clarence-chew"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":298,"author":{"gitId":"clarence-chew"},"content":"                parsedDateTime \u003d Optional.of(LocalDateTime.parse(input, formatter));","lastModifiedDate":"2022-08-20"},{"lineNumber":299,"author":{"gitId":"clarence-chew"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":300,"author":{"gitId":"clarence-chew"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":301,"author":{"gitId":"clarence-chew"},"content":"                // Just try another one","lastModifiedDate":"2022-08-20"},{"lineNumber":302,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":303,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":304,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":305,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":306,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":307,"author":{"gitId":"clarence-chew"},"content":"     * Constructs an object that handles an already parsed date/time.","lastModifiedDate":"2022-09-12"},{"lineNumber":308,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":309,"author":{"gitId":"clarence-chew"},"content":"     * @param parsed Already parsed date/time.","lastModifiedDate":"2022-09-12"},{"lineNumber":310,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":311,"author":{"gitId":"clarence-chew"},"content":"    public ParsedDateTime(LocalDateTime parsed) {","lastModifiedDate":"2022-09-12"},{"lineNumber":312,"author":{"gitId":"clarence-chew"},"content":"        input \u003d \"\";","lastModifiedDate":"2022-09-12"},{"lineNumber":313,"author":{"gitId":"clarence-chew"},"content":"        parsedDateTime \u003d Optional.of(parsed);","lastModifiedDate":"2022-09-12"},{"lineNumber":314,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":315,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":316,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":317,"author":{"gitId":"clarence-chew"},"content":"     * Finds the earliest time after now that matches the description of input. If no such","lastModifiedDate":"2022-09-12"},{"lineNumber":318,"author":{"gitId":"clarence-chew"},"content":"     * time exists, it falls back on the earliest time before now. If no such time still","lastModifiedDate":"2022-09-12"},{"lineNumber":319,"author":{"gitId":"clarence-chew"},"content":"     * exists, it just gives the input as a ParsedDateTime which stores a String.","lastModifiedDate":"2022-09-12"},{"lineNumber":320,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":321,"author":{"gitId":"clarence-chew"},"content":"     * @param input Human-readable description of the time, which only contains valid","lastModifiedDate":"2022-09-15"},{"lineNumber":322,"author":{"gitId":"clarence-chew"},"content":"     *              descriptors. Valid descriptors include:","lastModifiedDate":"2022-09-15"},{"lineNumber":323,"author":{"gitId":"clarence-chew"},"content":"     *              * case-insensitive Mon-Sun/Monday-Sunday,","lastModifiedDate":"2022-09-15"},{"lineNumber":324,"author":{"gitId":"clarence-chew"},"content":"     *              * an ordinal which specifies a date of the month, e.g. 3rd or 31st,","lastModifiedDate":"2022-09-15"},{"lineNumber":325,"author":{"gitId":"clarence-chew"},"content":"     *              * two or three numbers separated by a slashes or dashes which denote","lastModifiedDate":"2022-09-12"},{"lineNumber":326,"author":{"gitId":"clarence-chew"},"content":"     *                a date, e.g. 3/7 for the next 3rd of July, 3/7/2012 for the 3rd","lastModifiedDate":"2022-09-12"},{"lineNumber":327,"author":{"gitId":"clarence-chew"},"content":"     *                of July on 2012, and 1-2 for the next first of February,","lastModifiedDate":"2022-09-15"},{"lineNumber":328,"author":{"gitId":"clarence-chew"},"content":"     *              * a single number, for a year, e.g. 2024 for year 2024,","lastModifiedDate":"2022-09-15"},{"lineNumber":329,"author":{"gitId":"clarence-chew"},"content":"     *              * case-insensitive month name, or the abbreviation of a month name, e.g. Jan, July","lastModifiedDate":"2022-09-15"},{"lineNumber":330,"author":{"gitId":"clarence-chew"},"content":"     *              * two numbers separated by colons or periods (with optional AM/am/PM/pm","lastModifiedDate":"2022-09-15"},{"lineNumber":331,"author":{"gitId":"clarence-chew"},"content":"     *                after it) for a time, e.g. 23:45, 03.16pm.","lastModifiedDate":"2022-09-15"},{"lineNumber":332,"author":{"gitId":"clarence-chew"},"content":"     * @param isLatestTime If true, gives the latest time in the first block of time which matches","lastModifiedDate":"2022-09-15"},{"lineNumber":333,"author":{"gitId":"clarence-chew"},"content":"     *                     the input description. Example: If today is not Monday, \"Mon\" gives the","lastModifiedDate":"2022-09-15"},{"lineNumber":334,"author":{"gitId":"clarence-chew"},"content":"     *                     time as 23:59 on Monday if isLatestTime, else 00:00.","lastModifiedDate":"2022-09-15"},{"lineNumber":335,"author":{"gitId":"clarence-chew"},"content":"     * @return ParsedDateTime of the input. If input is not readable as a time, it","lastModifiedDate":"2022-09-12"},{"lineNumber":336,"author":{"gitId":"clarence-chew"},"content":"     *         a ParsedDateTime instance that acts like a String.","lastModifiedDate":"2022-09-12"},{"lineNumber":337,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":338,"author":{"gitId":"clarence-chew"},"content":"    public static ParsedDateTime of(String input, boolean isLatestTime) {","lastModifiedDate":"2022-09-15"},{"lineNumber":339,"author":{"gitId":"clarence-chew"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2022-09-12"},{"lineNumber":340,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-09-12"},{"lineNumber":341,"author":{"gitId":"clarence-chew"},"content":"            ArrayList\u003cTemporalAdjuster\u003e adjusters \u003d getDateTimeAdjusters(naturalDateParsers, tokens);","lastModifiedDate":"2022-09-12"},{"lineNumber":342,"author":{"gitId":"clarence-chew"},"content":"            ArrayList\u003cTemporalAdjuster\u003e latestTimeAdjusters \u003d getDateTimeAdjusters(","lastModifiedDate":"2022-09-12"},{"lineNumber":343,"author":{"gitId":"clarence-chew"},"content":"                    naturalDateLatestTimeParsers, tokens);","lastModifiedDate":"2022-09-12"},{"lineNumber":344,"author":{"gitId":"clarence-chew"},"content":"            Optional\u003cTemporal\u003e result \u003d Optional.empty();","lastModifiedDate":"2022-09-12"},{"lineNumber":345,"author":{"gitId":"clarence-chew"},"content":"            Temporal now \u003d LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES);","lastModifiedDate":"2022-09-12"},{"lineNumber":346,"author":{"gitId":"clarence-chew"},"content":"            result \u003d result.or(() -\u003e findAfterTimeMatching(now, adjusters));","lastModifiedDate":"2022-09-12"},{"lineNumber":347,"author":{"gitId":"clarence-chew"},"content":"            result \u003d result.or(() -\u003e findBeforeTimeMatching(now, adjusters));","lastModifiedDate":"2022-09-12"},{"lineNumber":348,"author":{"gitId":"clarence-chew"},"content":"            return result.map(t -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":349,"author":{"gitId":"clarence-chew"},"content":"                if (!isLatestTime) {","lastModifiedDate":"2022-09-15"},{"lineNumber":350,"author":{"gitId":"clarence-chew"},"content":"                    return t;","lastModifiedDate":"2022-09-12"},{"lineNumber":351,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":352,"author":{"gitId":"clarence-chew"},"content":"                return applyLatestTimeAdjusters(latestTimeAdjusters, t);","lastModifiedDate":"2022-09-12"},{"lineNumber":353,"author":{"gitId":"clarence-chew"},"content":"            })","lastModifiedDate":"2022-09-12"},{"lineNumber":354,"author":{"gitId":"clarence-chew"},"content":"                    .map(LocalDateTime::from)","lastModifiedDate":"2022-09-12"},{"lineNumber":355,"author":{"gitId":"clarence-chew"},"content":"                    .map(t -\u003e new ParsedDateTime(t))","lastModifiedDate":"2022-09-12"},{"lineNumber":356,"author":{"gitId":"clarence-chew"},"content":"                    .orElseGet(() -\u003e new ParsedDateTime(input));","lastModifiedDate":"2022-09-12"},{"lineNumber":357,"author":{"gitId":"clarence-chew"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2022-09-12"},{"lineNumber":358,"author":{"gitId":"clarence-chew"},"content":"            // thrown by getNaturalDateParsers if not all tokens are valid","lastModifiedDate":"2022-09-12"},{"lineNumber":359,"author":{"gitId":"clarence-chew"},"content":"            return new ParsedDateTime(input);","lastModifiedDate":"2022-09-12"},{"lineNumber":360,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":361,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":362,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":363,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":364,"author":{"gitId":"clarence-chew"},"content":"     * Applies the latest time adjusters. Each adjuster gives the latest time the token would consider as part","lastModifiedDate":"2022-09-12"},{"lineNumber":365,"author":{"gitId":"clarence-chew"},"content":"     * of the same length of time specified by the token, so this method finds the earliest time all the tokens","lastModifiedDate":"2022-09-12"},{"lineNumber":366,"author":{"gitId":"clarence-chew"},"content":"     * would still consider as part of the same length of time.","lastModifiedDate":"2022-09-12"},{"lineNumber":367,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":368,"author":{"gitId":"clarence-chew"},"content":"     * @param latestTimeAdjusters List of time adjusters which give the latest time considered.","lastModifiedDate":"2022-09-12"},{"lineNumber":369,"author":{"gitId":"clarence-chew"},"content":"     * @param t The time which is specified by all tokens.","lastModifiedDate":"2022-09-12"},{"lineNumber":370,"author":{"gitId":"clarence-chew"},"content":"     * @return Latest time considered by all tokens.","lastModifiedDate":"2022-09-12"},{"lineNumber":371,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":372,"author":{"gitId":"clarence-chew"},"content":"    private static LocalDateTime applyLatestTimeAdjusters(ArrayList\u003cTemporalAdjuster\u003e latestTimeAdjusters, Temporal t) {","lastModifiedDate":"2022-09-12"},{"lineNumber":373,"author":{"gitId":"clarence-chew"},"content":"        return latestTimeAdjusters.stream()","lastModifiedDate":"2022-09-12"},{"lineNumber":374,"author":{"gitId":"clarence-chew"},"content":"                .map(adjuster -\u003e LocalDateTime.from(t.with(adjuster)))","lastModifiedDate":"2022-09-12"},{"lineNumber":375,"author":{"gitId":"clarence-chew"},"content":"                .min(LocalDateTime::compareTo)","lastModifiedDate":"2022-09-12"},{"lineNumber":376,"author":{"gitId":"clarence-chew"},"content":"                .orElse(LocalDateTime.from(t));","lastModifiedDate":"2022-09-12"},{"lineNumber":377,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":378,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":379,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":380,"author":{"gitId":"clarence-chew"},"content":"     * Gets a time adjuster to set to the earliest time at or after the given time","lastModifiedDate":"2022-09-12"},{"lineNumber":381,"author":{"gitId":"clarence-chew"},"content":"     * which is of the day of week specified.","lastModifiedDate":"2022-09-12"},{"lineNumber":382,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":383,"author":{"gitId":"clarence-chew"},"content":"     * @param day Day of week.","lastModifiedDate":"2022-09-12"},{"lineNumber":384,"author":{"gitId":"clarence-chew"},"content":"     * @return Time adjuster which sets to next or same time.","lastModifiedDate":"2022-09-12"},{"lineNumber":385,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":386,"author":{"gitId":"clarence-chew"},"content":"    private static TemporalAdjuster getDayOfWeekTemporalAdjuster(DayOfWeek day) {","lastModifiedDate":"2022-09-12"},{"lineNumber":387,"author":{"gitId":"clarence-chew"},"content":"        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":388,"author":{"gitId":"clarence-chew"},"content":"            if (DayOfWeek.from(LocalDateTime.from(temporal)).equals(day)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":389,"author":{"gitId":"clarence-chew"},"content":"                return temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":390,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":391,"author":{"gitId":"clarence-chew"},"content":"            Temporal result \u003d TemporalAdjusters.next(day).adjustInto(temporal);","lastModifiedDate":"2022-09-12"},{"lineNumber":392,"author":{"gitId":"clarence-chew"},"content":"            return LocalDateTime.from(result).truncatedTo(ChronoUnit.DAYS);","lastModifiedDate":"2022-09-12"},{"lineNumber":393,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":394,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":395,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":396,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":397,"author":{"gitId":"clarence-chew"},"content":"     * Checks if a string consists of digits.","lastModifiedDate":"2022-09-12"},{"lineNumber":398,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":399,"author":{"gitId":"clarence-chew"},"content":"     * @param s A String.","lastModifiedDate":"2022-09-12"},{"lineNumber":400,"author":{"gitId":"clarence-chew"},"content":"     * @return true if consisting only of ASCII digits, false otherwise.","lastModifiedDate":"2022-09-12"},{"lineNumber":401,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":402,"author":{"gitId":"clarence-chew"},"content":"    private static boolean isNumeric(String s) {","lastModifiedDate":"2022-09-12"},{"lineNumber":403,"author":{"gitId":"clarence-chew"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":404,"author":{"gitId":"clarence-chew"},"content":"            if (s.charAt(i) \u003c \u00270\u0027 || \u00279\u0027 \u003c s.charAt(i)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":405,"author":{"gitId":"clarence-chew"},"content":"                return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":406,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":407,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":408,"author":{"gitId":"clarence-chew"},"content":"        return true;","lastModifiedDate":"2022-09-12"},{"lineNumber":409,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":410,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":411,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":412,"author":{"gitId":"clarence-chew"},"content":"     * Gets a time adjuster to set to the earliest time at or after the given time","lastModifiedDate":"2022-09-12"},{"lineNumber":413,"author":{"gitId":"clarence-chew"},"content":"     * which is of the month specified.","lastModifiedDate":"2022-09-12"},{"lineNumber":414,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":415,"author":{"gitId":"clarence-chew"},"content":"     * @param month Month.","lastModifiedDate":"2022-09-12"},{"lineNumber":416,"author":{"gitId":"clarence-chew"},"content":"     * @return Time adjuster which sets to next or same time.","lastModifiedDate":"2022-09-12"},{"lineNumber":417,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":418,"author":{"gitId":"clarence-chew"},"content":"    private static TemporalAdjuster getMonthTemporalAdjuster(Month month) {","lastModifiedDate":"2022-09-12"},{"lineNumber":419,"author":{"gitId":"clarence-chew"},"content":"        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":420,"author":{"gitId":"clarence-chew"},"content":"            if (Month.from(temporal).equals(month)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":421,"author":{"gitId":"clarence-chew"},"content":"                return temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":422,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":423,"author":{"gitId":"clarence-chew"},"content":"            Temporal result \u003d temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":424,"author":{"gitId":"clarence-chew"},"content":"            while (!Month.from(result).equals(month)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":425,"author":{"gitId":"clarence-chew"},"content":"                result \u003d TemporalAdjusters.firstDayOfNextMonth().adjustInto(result);","lastModifiedDate":"2022-09-12"},{"lineNumber":426,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":427,"author":{"gitId":"clarence-chew"},"content":"            return LocalDateTime.from(result).truncatedTo(ChronoUnit.DAYS);","lastModifiedDate":"2022-09-12"},{"lineNumber":428,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":429,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":430,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":431,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":432,"author":{"gitId":"clarence-chew"},"content":"     * Gets a time adjuster to set to the earliest time at or after the given time","lastModifiedDate":"2022-09-12"},{"lineNumber":433,"author":{"gitId":"clarence-chew"},"content":"     * which is of the date of the month specified.","lastModifiedDate":"2022-09-12"},{"lineNumber":434,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":435,"author":{"gitId":"clarence-chew"},"content":"     * @param date Date of the month.","lastModifiedDate":"2022-09-12"},{"lineNumber":436,"author":{"gitId":"clarence-chew"},"content":"     * @return Time adjuster which sets to next or same time.","lastModifiedDate":"2022-09-12"},{"lineNumber":437,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":438,"author":{"gitId":"clarence-chew"},"content":"    private static TemporalAdjuster getDateTemporalAdjuster(int date) {","lastModifiedDate":"2022-09-12"},{"lineNumber":439,"author":{"gitId":"clarence-chew"},"content":"        assert 1 \u003c\u003d date \u0026\u0026 date \u003c\u003d 31;","lastModifiedDate":"2022-09-12"},{"lineNumber":440,"author":{"gitId":"clarence-chew"},"content":"        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":441,"author":{"gitId":"clarence-chew"},"content":"            int temporalDayOfMonth \u003d temporal.get(ChronoField.DAY_OF_MONTH);","lastModifiedDate":"2022-09-12"},{"lineNumber":442,"author":{"gitId":"clarence-chew"},"content":"            if (temporalDayOfMonth \u003d\u003d date) {","lastModifiedDate":"2022-09-12"},{"lineNumber":443,"author":{"gitId":"clarence-chew"},"content":"                return temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":444,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":445,"author":{"gitId":"clarence-chew"},"content":"            Temporal result \u003d temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":446,"author":{"gitId":"clarence-chew"},"content":"            while (true) {","lastModifiedDate":"2022-09-12"},{"lineNumber":447,"author":{"gitId":"clarence-chew"},"content":"                int resultDayOfMonth \u003d result.get(ChronoField.DAY_OF_MONTH);","lastModifiedDate":"2022-09-12"},{"lineNumber":448,"author":{"gitId":"clarence-chew"},"content":"                if (resultDayOfMonth \u003d\u003d date) {","lastModifiedDate":"2022-09-12"},{"lineNumber":449,"author":{"gitId":"clarence-chew"},"content":"                    break;","lastModifiedDate":"2022-09-12"},{"lineNumber":450,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":451,"author":{"gitId":"clarence-chew"},"content":"                if (resultDayOfMonth \u003e date) {","lastModifiedDate":"2022-09-12"},{"lineNumber":452,"author":{"gitId":"clarence-chew"},"content":"                    result \u003d result.with(TemporalAdjusters.firstDayOfNextMonth());","lastModifiedDate":"2022-09-12"},{"lineNumber":453,"author":{"gitId":"clarence-chew"},"content":"                    resultDayOfMonth \u003d 1;","lastModifiedDate":"2022-09-12"},{"lineNumber":454,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":455,"author":{"gitId":"clarence-chew"},"content":"                result \u003d LocalDateTime.from(result).plusDays(date - resultDayOfMonth);","lastModifiedDate":"2022-09-12"},{"lineNumber":456,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":457,"author":{"gitId":"clarence-chew"},"content":"            LocalDateTime startOfDay \u003d LocalDateTime.from(result).truncatedTo(ChronoUnit.DAYS);","lastModifiedDate":"2022-09-12"},{"lineNumber":458,"author":{"gitId":"clarence-chew"},"content":"            return startOfDay;","lastModifiedDate":"2022-09-12"},{"lineNumber":459,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":460,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":461,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":462,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":463,"author":{"gitId":"clarence-chew"},"content":"     * Gets a time adjuster to set to the earliest time at or after the given time","lastModifiedDate":"2022-09-12"},{"lineNumber":464,"author":{"gitId":"clarence-chew"},"content":"     * which is of the time specified.","lastModifiedDate":"2022-09-12"},{"lineNumber":465,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":466,"author":{"gitId":"clarence-chew"},"content":"     * @param hour Hour of day.","lastModifiedDate":"2022-09-12"},{"lineNumber":467,"author":{"gitId":"clarence-chew"},"content":"     * @param minute Minute of hour.","lastModifiedDate":"2022-09-12"},{"lineNumber":468,"author":{"gitId":"clarence-chew"},"content":"     * @return Time adjuster which sets to next or same time.","lastModifiedDate":"2022-09-12"},{"lineNumber":469,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":470,"author":{"gitId":"clarence-chew"},"content":"    private static TemporalAdjuster getTimeTemporalAdjuster(int hour, int minute) {","lastModifiedDate":"2022-09-12"},{"lineNumber":471,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidHour \u003d 0 \u003c\u003d hour \u0026\u0026 hour \u003c HOURS_PER_DAY;","lastModifiedDate":"2022-09-12"},{"lineNumber":472,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidMinute \u003d 0 \u003c\u003d minute \u0026\u0026 minute \u003c MINUTES_PER_HOUR;","lastModifiedDate":"2022-09-12"},{"lineNumber":473,"author":{"gitId":"clarence-chew"},"content":"        if (!isValidHour || !isValidMinute) {","lastModifiedDate":"2022-09-12"},{"lineNumber":474,"author":{"gitId":"clarence-chew"},"content":"            return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":475,"author":{"gitId":"clarence-chew"},"content":"                throw new DateTimeException(","lastModifiedDate":"2022-09-12"},{"lineNumber":476,"author":{"gitId":"clarence-chew"},"content":"                        String.format(\"Invalid time: Hour %d, Minute %d\", hour, minute));","lastModifiedDate":"2022-09-12"},{"lineNumber":477,"author":{"gitId":"clarence-chew"},"content":"            };","lastModifiedDate":"2022-09-12"},{"lineNumber":478,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":479,"author":{"gitId":"clarence-chew"},"content":"        int minuteOfDay \u003d minute + hour * MINUTES_PER_HOUR;","lastModifiedDate":"2022-09-12"},{"lineNumber":480,"author":{"gitId":"clarence-chew"},"content":"        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":481,"author":{"gitId":"clarence-chew"},"content":"            if (temporal.get(ChronoField.MINUTE_OF_DAY) \u003c\u003d minuteOfDay) {","lastModifiedDate":"2022-09-12"},{"lineNumber":482,"author":{"gitId":"clarence-chew"},"content":"                return temporal.with(ChronoField.MINUTE_OF_DAY, minuteOfDay);","lastModifiedDate":"2022-09-12"},{"lineNumber":483,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":484,"author":{"gitId":"clarence-chew"},"content":"            return temporal.plus(1, ChronoUnit.DAYS)","lastModifiedDate":"2022-09-12"},{"lineNumber":485,"author":{"gitId":"clarence-chew"},"content":"                    .with(ChronoField.MINUTE_OF_DAY, minuteOfDay);","lastModifiedDate":"2022-09-12"},{"lineNumber":486,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":487,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":488,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":489,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":490,"author":{"gitId":"clarence-chew"},"content":"     * Gets a time adjuster to set to the earliest time at or after the given time","lastModifiedDate":"2022-09-12"},{"lineNumber":491,"author":{"gitId":"clarence-chew"},"content":"     * which is of the date/month specified.","lastModifiedDate":"2022-09-12"},{"lineNumber":492,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":493,"author":{"gitId":"clarence-chew"},"content":"     * @param date Date of month.","lastModifiedDate":"2022-09-12"},{"lineNumber":494,"author":{"gitId":"clarence-chew"},"content":"     * @param month Month.","lastModifiedDate":"2022-09-12"},{"lineNumber":495,"author":{"gitId":"clarence-chew"},"content":"     * @return Time adjuster which sets to next or same time.","lastModifiedDate":"2022-09-12"},{"lineNumber":496,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":497,"author":{"gitId":"clarence-chew"},"content":"    private static TemporalAdjuster getDateMonthTemporalAdjuster(int date, int month) {","lastModifiedDate":"2022-09-12"},{"lineNumber":498,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidDate \u003d 1 \u003c\u003d date \u0026\u0026 date \u003c\u003d 31;","lastModifiedDate":"2022-09-12"},{"lineNumber":499,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidMonth \u003d 1 \u003c\u003d month \u0026\u0026 month \u003c\u003d 12;","lastModifiedDate":"2022-09-12"},{"lineNumber":500,"author":{"gitId":"clarence-chew"},"content":"        int[] daysInMonth \u003d new int[]{ 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };","lastModifiedDate":"2022-09-12"},{"lineNumber":501,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidCombination \u003d isValidDate \u0026\u0026 isValidMonth \u0026\u0026 date \u003c\u003d daysInMonth[month];","lastModifiedDate":"2022-09-12"},{"lineNumber":502,"author":{"gitId":"clarence-chew"},"content":"        if (!isValidCombination) {","lastModifiedDate":"2022-09-12"},{"lineNumber":503,"author":{"gitId":"clarence-chew"},"content":"            return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":504,"author":{"gitId":"clarence-chew"},"content":"                throw new DateTimeException(","lastModifiedDate":"2022-09-12"},{"lineNumber":505,"author":{"gitId":"clarence-chew"},"content":"                        String.format(\"Date does not exist: Date %d, Month %d\", date, month));","lastModifiedDate":"2022-09-12"},{"lineNumber":506,"author":{"gitId":"clarence-chew"},"content":"            };","lastModifiedDate":"2022-09-12"},{"lineNumber":507,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":508,"author":{"gitId":"clarence-chew"},"content":"        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":509,"author":{"gitId":"clarence-chew"},"content":"            int temporalDate \u003d temporal.get(ChronoField.DAY_OF_MONTH);","lastModifiedDate":"2022-09-12"},{"lineNumber":510,"author":{"gitId":"clarence-chew"},"content":"            int temporalMonth \u003d temporal.get(ChronoField.MONTH_OF_YEAR);","lastModifiedDate":"2022-09-12"},{"lineNumber":511,"author":{"gitId":"clarence-chew"},"content":"            boolean isDate \u003d temporalDate \u003d\u003d date;","lastModifiedDate":"2022-09-12"},{"lineNumber":512,"author":{"gitId":"clarence-chew"},"content":"            boolean isMonth \u003d temporalMonth \u003d\u003d month;","lastModifiedDate":"2022-09-12"},{"lineNumber":513,"author":{"gitId":"clarence-chew"},"content":"            if (isDate \u0026\u0026 isMonth) {","lastModifiedDate":"2022-09-12"},{"lineNumber":514,"author":{"gitId":"clarence-chew"},"content":"                return temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":515,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":516,"author":{"gitId":"clarence-chew"},"content":"            boolean isLaterOnSameMonth \u003d temporalMonth \u003d\u003d month \u0026\u0026 temporalDate \u003e date;","lastModifiedDate":"2022-09-12"},{"lineNumber":517,"author":{"gitId":"clarence-chew"},"content":"            int year \u003d LocalDateTime.from(temporal).getYear();","lastModifiedDate":"2022-09-12"},{"lineNumber":518,"author":{"gitId":"clarence-chew"},"content":"            if (temporalMonth \u003e month || isLaterOnSameMonth) {","lastModifiedDate":"2022-09-12"},{"lineNumber":519,"author":{"gitId":"clarence-chew"},"content":"                year++;","lastModifiedDate":"2022-09-12"},{"lineNumber":520,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":521,"author":{"gitId":"clarence-chew"},"content":"            if (date \u003d\u003d DATE_29 \u0026\u0026 month \u003d\u003d MONTH_FEB) {","lastModifiedDate":"2022-09-12"},{"lineNumber":522,"author":{"gitId":"clarence-chew"},"content":"                year \u003d leapYearNextOrSame(year);","lastModifiedDate":"2022-09-12"},{"lineNumber":523,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":524,"author":{"gitId":"clarence-chew"},"content":"            return LocalDateTime.of(year, month, date, 0, 0, 0);","lastModifiedDate":"2022-09-12"},{"lineNumber":525,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":526,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":527,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":528,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":529,"author":{"gitId":"clarence-chew"},"content":"     * Gets a time adjuster to set to the earliest time at or after the given time","lastModifiedDate":"2022-09-12"},{"lineNumber":530,"author":{"gitId":"clarence-chew"},"content":"     * which is of the date/month/year specified.","lastModifiedDate":"2022-09-12"},{"lineNumber":531,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":532,"author":{"gitId":"clarence-chew"},"content":"     * @param date Date of month.","lastModifiedDate":"2022-09-12"},{"lineNumber":533,"author":{"gitId":"clarence-chew"},"content":"     * @param month Month.","lastModifiedDate":"2022-09-12"},{"lineNumber":534,"author":{"gitId":"clarence-chew"},"content":"     * @param year Year.","lastModifiedDate":"2022-09-12"},{"lineNumber":535,"author":{"gitId":"clarence-chew"},"content":"     * @return Time adjuster which sets to next or same time.","lastModifiedDate":"2022-09-12"},{"lineNumber":536,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":537,"author":{"gitId":"clarence-chew"},"content":"    private static TemporalAdjuster getDateMonthYearTemporalAdjuster(int date, int month, int year) {","lastModifiedDate":"2022-09-12"},{"lineNumber":538,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidDate \u003d 1 \u003c\u003d date \u0026\u0026 date \u003c\u003d 31;","lastModifiedDate":"2022-09-12"},{"lineNumber":539,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidMonth \u003d 1 \u003c\u003d month \u0026\u0026 month \u003c\u003d 12;","lastModifiedDate":"2022-09-12"},{"lineNumber":540,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidYear \u003d 1 \u003c\u003d year;","lastModifiedDate":"2022-09-12"},{"lineNumber":541,"author":{"gitId":"clarence-chew"},"content":"        int[] daysInMonth \u003d new int[]{","lastModifiedDate":"2022-09-12"},{"lineNumber":542,"author":{"gitId":"clarence-chew"},"content":"            0, 31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };","lastModifiedDate":"2022-09-12"},{"lineNumber":543,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidCombination \u003d isValidYear \u0026\u0026 isValidDate \u0026\u0026 isValidMonth \u0026\u0026 date \u003c\u003d daysInMonth[month];","lastModifiedDate":"2022-09-12"},{"lineNumber":544,"author":{"gitId":"clarence-chew"},"content":"        if (!isValidCombination) {","lastModifiedDate":"2022-09-12"},{"lineNumber":545,"author":{"gitId":"clarence-chew"},"content":"            return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":546,"author":{"gitId":"clarence-chew"},"content":"                throw new DateTimeException(String.format(","lastModifiedDate":"2022-09-12"},{"lineNumber":547,"author":{"gitId":"clarence-chew"},"content":"                        \"Date does not exist: Date %d, Month %d, Year %d\", date, month, year));","lastModifiedDate":"2022-09-12"},{"lineNumber":548,"author":{"gitId":"clarence-chew"},"content":"            };","lastModifiedDate":"2022-09-12"},{"lineNumber":549,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":550,"author":{"gitId":"clarence-chew"},"content":"        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":551,"author":{"gitId":"clarence-chew"},"content":"            int temporalDate \u003d temporal.get(ChronoField.DAY_OF_MONTH);","lastModifiedDate":"2022-09-12"},{"lineNumber":552,"author":{"gitId":"clarence-chew"},"content":"            int temporalMonth \u003d temporal.get(ChronoField.MONTH_OF_YEAR);","lastModifiedDate":"2022-09-12"},{"lineNumber":553,"author":{"gitId":"clarence-chew"},"content":"            int temporalYear \u003d temporal.get(ChronoField.YEAR);","lastModifiedDate":"2022-09-12"},{"lineNumber":554,"author":{"gitId":"clarence-chew"},"content":"            boolean isDate \u003d temporalDate \u003d\u003d date;","lastModifiedDate":"2022-09-12"},{"lineNumber":555,"author":{"gitId":"clarence-chew"},"content":"            boolean isMonth \u003d temporalMonth \u003d\u003d month;","lastModifiedDate":"2022-09-12"},{"lineNumber":556,"author":{"gitId":"clarence-chew"},"content":"            boolean isYear \u003d temporalYear \u003d\u003d year;","lastModifiedDate":"2022-09-12"},{"lineNumber":557,"author":{"gitId":"clarence-chew"},"content":"            if (isDate \u0026\u0026 isMonth \u0026\u0026 isYear) {","lastModifiedDate":"2022-09-12"},{"lineNumber":558,"author":{"gitId":"clarence-chew"},"content":"                return temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":559,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":560,"author":{"gitId":"clarence-chew"},"content":"            boolean isLaterOnSameYear \u003d isYear \u0026\u0026 temporalMonth \u003e month;","lastModifiedDate":"2022-09-12"},{"lineNumber":561,"author":{"gitId":"clarence-chew"},"content":"            boolean isLaterOnSameMonth \u003d isYear \u0026\u0026 isMonth \u0026\u0026 temporalDate \u003e date;","lastModifiedDate":"2022-09-12"},{"lineNumber":562,"author":{"gitId":"clarence-chew"},"content":"            if (temporalYear \u003e year || isLaterOnSameYear || isLaterOnSameMonth) {","lastModifiedDate":"2022-09-12"},{"lineNumber":563,"author":{"gitId":"clarence-chew"},"content":"                throw new DateTimeException(String.format(","lastModifiedDate":"2022-09-12"},{"lineNumber":564,"author":{"gitId":"clarence-chew"},"content":"                        \"Later date does not exist: Date %d, Month %d, Year %d\", date, month, year));","lastModifiedDate":"2022-09-12"},{"lineNumber":565,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":566,"author":{"gitId":"clarence-chew"},"content":"            return LocalDateTime.of(year, month, date, 0, 0, 0);","lastModifiedDate":"2022-09-12"},{"lineNumber":567,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":568,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":569,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":570,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":571,"author":{"gitId":"clarence-chew"},"content":"     * Gets a time adjuster to set to the earliest time at or after the given time","lastModifiedDate":"2022-09-12"},{"lineNumber":572,"author":{"gitId":"clarence-chew"},"content":"     * which is of the year specified.","lastModifiedDate":"2022-09-12"},{"lineNumber":573,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":574,"author":{"gitId":"clarence-chew"},"content":"     * @param year Year.","lastModifiedDate":"2022-09-12"},{"lineNumber":575,"author":{"gitId":"clarence-chew"},"content":"     * @return Time adjuster which sets to next or same time.","lastModifiedDate":"2022-09-12"},{"lineNumber":576,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":577,"author":{"gitId":"clarence-chew"},"content":"    private static TemporalAdjuster getYearTemporalAdjuster(int year) {","lastModifiedDate":"2022-09-12"},{"lineNumber":578,"author":{"gitId":"clarence-chew"},"content":"        boolean isValidYear \u003d 1 \u003c\u003d year;","lastModifiedDate":"2022-09-12"},{"lineNumber":579,"author":{"gitId":"clarence-chew"},"content":"        if (!isValidYear) {","lastModifiedDate":"2022-09-12"},{"lineNumber":580,"author":{"gitId":"clarence-chew"},"content":"            return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":581,"author":{"gitId":"clarence-chew"},"content":"                throw new DateTimeException(String.format(","lastModifiedDate":"2022-09-12"},{"lineNumber":582,"author":{"gitId":"clarence-chew"},"content":"                        \"Date does not exist:Year %d\", year));","lastModifiedDate":"2022-09-12"},{"lineNumber":583,"author":{"gitId":"clarence-chew"},"content":"            };","lastModifiedDate":"2022-09-12"},{"lineNumber":584,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":585,"author":{"gitId":"clarence-chew"},"content":"        return temporal -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":586,"author":{"gitId":"clarence-chew"},"content":"            int temporalYear \u003d temporal.get(ChronoField.YEAR);","lastModifiedDate":"2022-09-12"},{"lineNumber":587,"author":{"gitId":"clarence-chew"},"content":"            boolean isYear \u003d temporalYear \u003d\u003d year;","lastModifiedDate":"2022-09-12"},{"lineNumber":588,"author":{"gitId":"clarence-chew"},"content":"            if (isYear) {","lastModifiedDate":"2022-09-12"},{"lineNumber":589,"author":{"gitId":"clarence-chew"},"content":"                return temporal;","lastModifiedDate":"2022-09-12"},{"lineNumber":590,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":591,"author":{"gitId":"clarence-chew"},"content":"            if (temporalYear \u003e year) {","lastModifiedDate":"2022-09-12"},{"lineNumber":592,"author":{"gitId":"clarence-chew"},"content":"                throw new DateTimeException(String.format(","lastModifiedDate":"2022-09-12"},{"lineNumber":593,"author":{"gitId":"clarence-chew"},"content":"                        \"Later date does not exist: Year %d\", year));","lastModifiedDate":"2022-09-12"},{"lineNumber":594,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":595,"author":{"gitId":"clarence-chew"},"content":"            return LocalDateTime.of(year, 1, 1, 0, 0, 0);","lastModifiedDate":"2022-09-12"},{"lineNumber":596,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":597,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":598,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":599,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":600,"author":{"gitId":"clarence-chew"},"content":"     * Gets the next or same year which is a leap year.","lastModifiedDate":"2022-09-12"},{"lineNumber":601,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":602,"author":{"gitId":"clarence-chew"},"content":"     * @param year Year.","lastModifiedDate":"2022-09-12"},{"lineNumber":603,"author":{"gitId":"clarence-chew"},"content":"     * @return Next or same year which is a leap year.","lastModifiedDate":"2022-09-12"},{"lineNumber":604,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":605,"author":{"gitId":"clarence-chew"},"content":"    private static int leapYearNextOrSame(int year) {","lastModifiedDate":"2022-09-12"},{"lineNumber":606,"author":{"gitId":"clarence-chew"},"content":"        while (!isLeapYear(year)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":607,"author":{"gitId":"clarence-chew"},"content":"            year++;","lastModifiedDate":"2022-09-12"},{"lineNumber":608,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":609,"author":{"gitId":"clarence-chew"},"content":"        return year;","lastModifiedDate":"2022-09-12"},{"lineNumber":610,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":611,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":612,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":613,"author":{"gitId":"clarence-chew"},"content":"     * Checks if the input year is a leap year.","lastModifiedDate":"2022-09-12"},{"lineNumber":614,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":615,"author":{"gitId":"clarence-chew"},"content":"     * @param year Year.","lastModifiedDate":"2022-09-12"},{"lineNumber":616,"author":{"gitId":"clarence-chew"},"content":"     * @return true if it is a leap year, false otherwise.","lastModifiedDate":"2022-09-12"},{"lineNumber":617,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":618,"author":{"gitId":"clarence-chew"},"content":"    private static boolean isLeapYear(int year) {","lastModifiedDate":"2022-09-12"},{"lineNumber":619,"author":{"gitId":"clarence-chew"},"content":"        return year % 400 \u003d\u003d 0 || (year % 4 \u003d\u003d 0 \u0026\u0026 year % 100 !\u003d 0);","lastModifiedDate":"2022-09-12"},{"lineNumber":620,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":621,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":622,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":623,"author":{"gitId":"clarence-chew"},"content":"     * Gets TemporalAdjusters which match the tokens available from the matchers.","lastModifiedDate":"2022-09-12"},{"lineNumber":624,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":625,"author":{"gitId":"clarence-chew"},"content":"     * @param matchers StringMatchers which check the tokens to give TemporalAdjusters.","lastModifiedDate":"2022-09-12"},{"lineNumber":626,"author":{"gitId":"clarence-chew"},"content":"     * @param tokens Array of String tokens.","lastModifiedDate":"2022-09-12"},{"lineNumber":627,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of TemporalAdjusters.","lastModifiedDate":"2022-09-12"},{"lineNumber":628,"author":{"gitId":"clarence-chew"},"content":"     * @throws IllegalArgumentException If some token is not recognized by the StringMatchers.","lastModifiedDate":"2022-09-12"},{"lineNumber":629,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":630,"author":{"gitId":"clarence-chew"},"content":"    private static ArrayList\u003cTemporalAdjuster\u003e getDateTimeAdjusters(","lastModifiedDate":"2022-09-12"},{"lineNumber":631,"author":{"gitId":"clarence-chew"},"content":"            ArrayList\u003cStringMatcher\u003cTemporalAdjuster\u003e\u003e matchers, String[] tokens) {","lastModifiedDate":"2022-09-12"},{"lineNumber":632,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cTemporalAdjuster\u003e adjusters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":633,"author":{"gitId":"clarence-chew"},"content":"        for (String token : tokens) {","lastModifiedDate":"2022-09-12"},{"lineNumber":634,"author":{"gitId":"clarence-chew"},"content":"            if (token.equals(\"\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":635,"author":{"gitId":"clarence-chew"},"content":"                continue;","lastModifiedDate":"2022-09-12"},{"lineNumber":636,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":637,"author":{"gitId":"clarence-chew"},"content":"            adjusters.add(parseToken(matchers, token));","lastModifiedDate":"2022-09-12"},{"lineNumber":638,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":639,"author":{"gitId":"clarence-chew"},"content":"        return adjusters;","lastModifiedDate":"2022-09-12"},{"lineNumber":640,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":641,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":642,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":643,"author":{"gitId":"clarence-chew"},"content":"     * Gets TemporalAdjusters which match the token available from the matchers.","lastModifiedDate":"2022-09-12"},{"lineNumber":644,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":645,"author":{"gitId":"clarence-chew"},"content":"     * @param matchers StringMatchers which check the tokens to give TemporalAdjusters.","lastModifiedDate":"2022-09-12"},{"lineNumber":646,"author":{"gitId":"clarence-chew"},"content":"     * @param token Array of String tokens.","lastModifiedDate":"2022-09-12"},{"lineNumber":647,"author":{"gitId":"clarence-chew"},"content":"     * @return TemporalAdjuster determined by StringMatchers.","lastModifiedDate":"2022-09-12"},{"lineNumber":648,"author":{"gitId":"clarence-chew"},"content":"     * @throws IllegalArgumentException If the token is not recognized by the StringMatchers.","lastModifiedDate":"2022-09-12"},{"lineNumber":649,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":650,"author":{"gitId":"clarence-chew"},"content":"    private static TemporalAdjuster parseToken(ArrayList\u003cStringMatcher\u003cTemporalAdjuster\u003e\u003e matchers, String token) {","lastModifiedDate":"2022-09-12"},{"lineNumber":651,"author":{"gitId":"clarence-chew"},"content":"        Optional\u003cTemporalAdjuster\u003e adjuster \u003d Optional.empty();","lastModifiedDate":"2022-09-12"},{"lineNumber":652,"author":{"gitId":"clarence-chew"},"content":"        for (StringMatcher\u003cTemporalAdjuster\u003e matcher : matchers) {","lastModifiedDate":"2022-09-12"},{"lineNumber":653,"author":{"gitId":"clarence-chew"},"content":"            adjuster \u003d adjuster.or(() -\u003e matcher.run(token));","lastModifiedDate":"2022-09-12"},{"lineNumber":654,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":655,"author":{"gitId":"clarence-chew"},"content":"        return adjuster.orElseThrow(() -\u003e new IllegalArgumentException(\"Unrecognised token\"));","lastModifiedDate":"2022-09-12"},{"lineNumber":656,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":657,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":658,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":659,"author":{"gitId":"clarence-chew"},"content":"     * Finds the time after the given time which is a fixed point of all the adjusters.","lastModifiedDate":"2022-09-12"},{"lineNumber":660,"author":{"gitId":"clarence-chew"},"content":"     * Warning: Imperfect practical implementation which stops an infinite loop.","lastModifiedDate":"2022-09-12"},{"lineNumber":661,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":662,"author":{"gitId":"clarence-chew"},"content":"     * @param time Starting time.","lastModifiedDate":"2022-09-12"},{"lineNumber":663,"author":{"gitId":"clarence-chew"},"content":"     * @param adjusters Adjusters which find the next time that works according to their description.","lastModifiedDate":"2022-09-12"},{"lineNumber":664,"author":{"gitId":"clarence-chew"},"content":"     * @return Time which satisfies all adjusters\u0027 descriptions.","lastModifiedDate":"2022-09-12"},{"lineNumber":665,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":666,"author":{"gitId":"clarence-chew"},"content":"    private static Optional\u003cTemporal\u003e findAfterTimeMatching(Temporal time, ArrayList\u003cTemporalAdjuster\u003e adjusters) {","lastModifiedDate":"2022-09-12"},{"lineNumber":667,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-09-12"},{"lineNumber":668,"author":{"gitId":"clarence-chew"},"content":"            Temporal result \u003d time;","lastModifiedDate":"2022-09-12"},{"lineNumber":669,"author":{"gitId":"clarence-chew"},"content":"            for (int i \u003d 0; i \u003c BIG_NUMBER_OF_ITERATIONS; i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":670,"author":{"gitId":"clarence-chew"},"content":"                Temporal originalTime \u003d result;","lastModifiedDate":"2022-09-12"},{"lineNumber":671,"author":{"gitId":"clarence-chew"},"content":"                for (TemporalAdjuster adjuster : adjusters) {","lastModifiedDate":"2022-09-12"},{"lineNumber":672,"author":{"gitId":"clarence-chew"},"content":"                    result \u003d adjuster.adjustInto(result);","lastModifiedDate":"2022-09-12"},{"lineNumber":673,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":674,"author":{"gitId":"clarence-chew"},"content":"                if (originalTime.equals(result)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":675,"author":{"gitId":"clarence-chew"},"content":"                    return Optional.of(result);","lastModifiedDate":"2022-09-12"},{"lineNumber":676,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":677,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":678,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-09-12"},{"lineNumber":679,"author":{"gitId":"clarence-chew"},"content":"        } catch (DateTimeException ex) {","lastModifiedDate":"2022-09-12"},{"lineNumber":680,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-09-12"},{"lineNumber":681,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":682,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":683,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":684,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":685,"author":{"gitId":"clarence-chew"},"content":"     * Finds the time before the given time which is a fixed point of all the adjusters.","lastModifiedDate":"2022-09-12"},{"lineNumber":686,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":687,"author":{"gitId":"clarence-chew"},"content":"     * @param time Ending time.","lastModifiedDate":"2022-09-12"},{"lineNumber":688,"author":{"gitId":"clarence-chew"},"content":"     * @param adjusters Adjusters which find the next time that works according to their description.","lastModifiedDate":"2022-09-12"},{"lineNumber":689,"author":{"gitId":"clarence-chew"},"content":"     * @return Time which satisfies all adjusters\u0027 descriptions.","lastModifiedDate":"2022-09-12"},{"lineNumber":690,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":691,"author":{"gitId":"clarence-chew"},"content":"    private static Optional\u003cTemporal\u003e findBeforeTimeMatching(Temporal time, ArrayList\u003cTemporalAdjuster\u003e adjusters) {","lastModifiedDate":"2022-09-12"},{"lineNumber":692,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-09-12"},{"lineNumber":693,"author":{"gitId":"clarence-chew"},"content":"            Temporal result \u003d LocalDateTime.of(1, 1, 1, 0, 0, 0);","lastModifiedDate":"2022-09-12"},{"lineNumber":694,"author":{"gitId":"clarence-chew"},"content":"            LocalDateTime endingTime \u003d LocalDateTime.from(time);","lastModifiedDate":"2022-09-12"},{"lineNumber":695,"author":{"gitId":"clarence-chew"},"content":"            while (LocalDateTime.from(result).compareTo(endingTime) \u003c\u003d 0) {","lastModifiedDate":"2022-09-12"},{"lineNumber":696,"author":{"gitId":"clarence-chew"},"content":"                Temporal originalTime \u003d result;","lastModifiedDate":"2022-09-12"},{"lineNumber":697,"author":{"gitId":"clarence-chew"},"content":"                for (TemporalAdjuster adjuster : adjusters) {","lastModifiedDate":"2022-09-12"},{"lineNumber":698,"author":{"gitId":"clarence-chew"},"content":"                    result \u003d adjuster.adjustInto(result);","lastModifiedDate":"2022-09-12"},{"lineNumber":699,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":700,"author":{"gitId":"clarence-chew"},"content":"                if (originalTime.equals(result)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":701,"author":{"gitId":"clarence-chew"},"content":"                    return Optional.of(result);","lastModifiedDate":"2022-09-12"},{"lineNumber":702,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":703,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":704,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-09-12"},{"lineNumber":705,"author":{"gitId":"clarence-chew"},"content":"        } catch (DateTimeException ex) {","lastModifiedDate":"2022-09-12"},{"lineNumber":706,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-09-12"},{"lineNumber":707,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":708,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":709,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":710,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":711,"author":{"gitId":"clarence-chew"},"content":"     * Gets a nicely-formatted date.","lastModifiedDate":"2022-08-26"},{"lineNumber":712,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":713,"author":{"gitId":"clarence-chew"},"content":"     * @return The date if it parses, else the original string.","lastModifiedDate":"2022-08-26"},{"lineNumber":714,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":715,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":716,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":717,"author":{"gitId":"clarence-chew"},"content":"        return parsedDateTime.map((dateTime) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":718,"author":{"gitId":"clarence-chew"},"content":"            assert dateTime !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":719,"author":{"gitId":"clarence-chew"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":720,"author":{"gitId":"clarence-chew"},"content":"        }).orElse(input);","lastModifiedDate":"2022-08-20"},{"lineNumber":721,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":722,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":722}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import duke.note.Note;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import duke.note.NoteList;","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":" * Handles creating commands through duke.CommandMatcher/duke.PrefixCommandMatcher.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"public class Parser {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     * Lists objects in a String[].","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * @param response String that describes the objects.","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     * @param objects List of objects.","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * @param \u003cT\u003e Type of objects.","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * @return String[] of objects.","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    public static \u003cT\u003e String[] listObjects(String response, List\u003cT\u003e objects) {","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        assert response !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        assert objects !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        String[] output \u003d new String[objects.size() + 1];","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        output[0] \u003d response;","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        for (int i \u003d 0; i \u003c objects.size(); i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"            assert objects.get(i) !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"            output[i + 1] \u003d (i + 1) + \".\" + objects.get(i).toString();","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        return output;","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"     * Lists numbered objects in a String[].","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"     * @param response String that describes the objects.","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"     * @param objects List of numbered objects.","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"     * @param \u003cT\u003e Type of objects.","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"     * @return String[] of objects.","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    public static \u003cT\u003e String[] listNumberedObjects(String response, List\u003cPair\u003cInteger, T\u003e\u003e objects) {","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        assert response !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        assert objects !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"        String[] output \u003d new String[objects.size() + 1];","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"        output[0] \u003d response;","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        for (int i \u003d 0; i \u003c objects.size(); i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"            Pair\u003cInteger, T\u003e pair \u003d objects.get(i);","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"            assert pair !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"            assert pair.getFirst() !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"            assert pair.getSecond() !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"            output[i + 1] \u003d (pair.getFirst() + 1) + \".\" + pair.getSecond().toString();","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        return output;","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"     * Gets the chatbot commands in an ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of chatbot commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cCommandMatcher\u003e getCommands() {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cCommandMatcher\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"        commands \u003d addNoteCommands(commands);","lastModifiedDate":"2022-09-12"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"        commands \u003d addTaskCommands(commands);","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"        commands \u003d addTaskModificationCommands(commands);","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        commands \u003d addTaskViewingCommands(commands);","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"        commands \u003d addCatchAllCommand(commands);","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"        return commands;","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"     * Adds adding task commands to an ArrayList.","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of chatbot commands.","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cCommandMatcher\u003e addTaskCommands(ArrayList\u003cCommandMatcher\u003e commands) {","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"        assert commands !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"deadline\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d new Deadline(str, map.getOrDefault(\"by\", \"[unknown]\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTaskList().add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"                    \"Good luck with the deadline, here\u0027s the task:\",","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"                    task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"todo\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d new ToDo(str);","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTaskList().add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"clarence-chew"},"content":"                    \"I\u0027ve recorded this thing you need to do:\",","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"                    task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"event\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d new Event(str, map.getOrDefault(\"at\", \"[unknown]\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTaskList().add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"clarence-chew"},"content":"                    \"That\u0027s going to happen at some time later:\",","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"clarence-chew"},"content":"                    task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"clarence-chew"},"content":"        return commands;","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"clarence-chew"},"content":"     * Adds task modification commands to an ArrayList.","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":124,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of chatbot commands.","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cCommandMatcher\u003e addTaskModificationCommands(ArrayList\u003cCommandMatcher\u003e commands) {","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"clarence-chew"},"content":"        assert commands !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"clarence-chew"},"content":"        commands.add(PrefixCommandMatcher.of(\"mark\", (str, map) -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d TaskList.getTask(str);","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"clarence-chew"},"content":"            task.markAsDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"clarence-chew"},"content":"                    \"Marked your task as done:\",","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"clarence-chew"},"content":"                    task.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"clarence-chew"},"content":"        commands.add(PrefixCommandMatcher.of(\"unmark\", (str, map) -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d TaskList.getTask(str);","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"clarence-chew"},"content":"            task.markAsNotDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"clarence-chew"},"content":"                    \"Aw... it\u0027s not done yet:\",","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"clarence-chew"},"content":"                    task.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":148,"author":{"gitId":"clarence-chew"},"content":"        commands.add(PrefixCommandMatcher.of(\"delete\", (str, map) -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":149,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":150,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":151,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d TaskList.getTask(str);","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTaskList().remove(task);","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"clarence-chew"},"content":"                    \"It seems you didn\u0027t need this task anymore, so I removed it:\",","lastModifiedDate":"2022-09-02"},{"lineNumber":155,"author":{"gitId":"clarence-chew"},"content":"                    task.toString(),","lastModifiedDate":"2022-08-20"},{"lineNumber":156,"author":{"gitId":"clarence-chew"},"content":"                    String.format(\"You have %d tasks left.\", TaskList.getTaskList().size()));","lastModifiedDate":"2022-08-20"},{"lineNumber":157,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":159,"author":{"gitId":"clarence-chew"},"content":"        commands.add(PrefixCommandMatcher.of(\"reschedule\", (str, map) -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":160,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":161,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":162,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d TaskList.getTask(str);","lastModifiedDate":"2022-09-12"},{"lineNumber":163,"author":{"gitId":"clarence-chew"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2022-09-12"},{"lineNumber":164,"author":{"gitId":"clarence-chew"},"content":"                return new DukeResponse(\"That\u0027s a todo, it doesn\u0027t have a date.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":165,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":166,"author":{"gitId":"clarence-chew"},"content":"            Task newTask;","lastModifiedDate":"2022-09-12"},{"lineNumber":167,"author":{"gitId":"clarence-chew"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2022-09-12"},{"lineNumber":168,"author":{"gitId":"clarence-chew"},"content":"                if (!map.containsKey(\"at\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":169,"author":{"gitId":"clarence-chew"},"content":"                    return new DukeResponse(\"Do specify /at for events.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":170,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":171,"author":{"gitId":"clarence-chew"},"content":"                newTask \u003d new Event(task.getDescription(), map.get(\"at\"), task.isTaskDone());","lastModifiedDate":"2022-09-12"},{"lineNumber":172,"author":{"gitId":"clarence-chew"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-09-12"},{"lineNumber":173,"author":{"gitId":"clarence-chew"},"content":"                if (!map.containsKey(\"at\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":174,"author":{"gitId":"clarence-chew"},"content":"                    return new DukeResponse(\"Do specify /by for events.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":175,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":176,"author":{"gitId":"clarence-chew"},"content":"                newTask \u003d new Deadline(task.getDescription(), map.get(\"by\"), task.isTaskDone());","lastModifiedDate":"2022-09-12"},{"lineNumber":177,"author":{"gitId":"clarence-chew"},"content":"            } else {","lastModifiedDate":"2022-09-12"},{"lineNumber":178,"author":{"gitId":"clarence-chew"},"content":"                return new DukeResponse(\"This is a strange task - I don\u0027t recognise it.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":179,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":180,"author":{"gitId":"clarence-chew"},"content":"            List\u003cTask\u003e tasks \u003d TaskList.getTaskList();","lastModifiedDate":"2022-09-12"},{"lineNumber":181,"author":{"gitId":"clarence-chew"},"content":"            tasks.set(tasks.indexOf(task), newTask);","lastModifiedDate":"2022-09-12"},{"lineNumber":182,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-12"},{"lineNumber":183,"author":{"gitId":"clarence-chew"},"content":"                    \"I have rescheduled your task!\",","lastModifiedDate":"2022-09-12"},{"lineNumber":184,"author":{"gitId":"clarence-chew"},"content":"                    newTask.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":185,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-12"},{"lineNumber":186,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":187,"author":{"gitId":"clarence-chew"},"content":"        return commands;","lastModifiedDate":"2022-09-09"},{"lineNumber":188,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":189,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":190,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"clarence-chew"},"content":"     * Adds task viewing commands to an ArrayList.","lastModifiedDate":"2022-09-09"},{"lineNumber":192,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":193,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of chatbot commands.","lastModifiedDate":"2022-09-09"},{"lineNumber":194,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":195,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cCommandMatcher\u003e addTaskViewingCommands(ArrayList\u003cCommandMatcher\u003e commands) {","lastModifiedDate":"2022-09-09"},{"lineNumber":196,"author":{"gitId":"clarence-chew"},"content":"        assert commands !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":197,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new CommandMatcher(str -\u003e str.equals(\"list\"), (str) -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":198,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":199,"author":{"gitId":"clarence-chew"},"content":"            List\u003cTask\u003e tasks \u003d TaskList.getTaskList();","lastModifiedDate":"2022-09-09"},{"lineNumber":200,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":201,"author":{"gitId":"clarence-chew"},"content":"                    listObjects(\"Here, your tasks:\", tasks));","lastModifiedDate":"2022-09-12"},{"lineNumber":202,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":203,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":204,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"find\", (str, map) -\u003e {","lastModifiedDate":"2022-08-26"},{"lineNumber":205,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":206,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":207,"author":{"gitId":"clarence-chew"},"content":"            List\u003cPair\u003cInteger, Task\u003e\u003e tasks \u003d TaskList.filterTasks(str);","lastModifiedDate":"2022-09-12"},{"lineNumber":208,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":209,"author":{"gitId":"clarence-chew"},"content":"                    listNumberedObjects(\"Here are the tasks that you might be looking for:\", tasks));","lastModifiedDate":"2022-09-12"},{"lineNumber":210,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-12"},{"lineNumber":211,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":212,"author":{"gitId":"clarence-chew"},"content":"        return commands;","lastModifiedDate":"2022-09-12"},{"lineNumber":213,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":214,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":215,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":216,"author":{"gitId":"clarence-chew"},"content":"     * Adds note commands to an ArrayList.","lastModifiedDate":"2022-09-12"},{"lineNumber":217,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":218,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of chatbot commands.","lastModifiedDate":"2022-09-12"},{"lineNumber":219,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":220,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cCommandMatcher\u003e addNoteCommands(ArrayList\u003cCommandMatcher\u003e commands) {","lastModifiedDate":"2022-09-12"},{"lineNumber":221,"author":{"gitId":"clarence-chew"},"content":"        assert commands !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":222,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new CommandMatcher(str -\u003e str.equals(\"list notes\"), (str) -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":223,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":224,"author":{"gitId":"clarence-chew"},"content":"            List\u003cNote\u003e notes \u003d NoteList.getNoteList();","lastModifiedDate":"2022-09-12"},{"lineNumber":225,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-12"},{"lineNumber":226,"author":{"gitId":"clarence-chew"},"content":"                    listObjects(\"Here, your notes:\", notes));","lastModifiedDate":"2022-09-12"},{"lineNumber":227,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-12"},{"lineNumber":228,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":229,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"find notes\", (str, map) -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":230,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":231,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":232,"author":{"gitId":"clarence-chew"},"content":"            List\u003cPair\u003cInteger, Note\u003e\u003e notes \u003d NoteList.filterNotes(str);","lastModifiedDate":"2022-09-12"},{"lineNumber":233,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-12"},{"lineNumber":234,"author":{"gitId":"clarence-chew"},"content":"                    listNumberedObjects(\"These notes match your query:\", notes));","lastModifiedDate":"2022-09-12"},{"lineNumber":235,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-12"},{"lineNumber":236,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":237,"author":{"gitId":"clarence-chew"},"content":"        commands.add(PrefixCommandMatcher.of(\"view note\", (str, map) -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":238,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":239,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":240,"author":{"gitId":"clarence-chew"},"content":"            Note note \u003d NoteList.getNote(str);","lastModifiedDate":"2022-09-12"},{"lineNumber":241,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(\"Here\u0027s the note:\", note.getTitle(), note.getContent());","lastModifiedDate":"2022-09-12"},{"lineNumber":242,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-12"},{"lineNumber":243,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":244,"author":{"gitId":"clarence-chew"},"content":"        commands.add(PrefixCommandMatcher.of(\"delete note\", (str, map) -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":245,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":246,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":247,"author":{"gitId":"clarence-chew"},"content":"            Note note \u003d NoteList.getNote(str);","lastModifiedDate":"2022-09-12"},{"lineNumber":248,"author":{"gitId":"clarence-chew"},"content":"            NoteList.getNoteList().remove(note);","lastModifiedDate":"2022-09-12"},{"lineNumber":249,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(","lastModifiedDate":"2022-09-12"},{"lineNumber":250,"author":{"gitId":"clarence-chew"},"content":"                    \"I removed this note:\",","lastModifiedDate":"2022-09-12"},{"lineNumber":251,"author":{"gitId":"clarence-chew"},"content":"                    note.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":252,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-09-12"},{"lineNumber":253,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":254,"author":{"gitId":"clarence-chew"},"content":"        commands.add(PrefixCommandMatcher.of(\"note\", (str, map) -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":255,"author":{"gitId":"clarence-chew"},"content":"            assert str !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":256,"author":{"gitId":"clarence-chew"},"content":"            assert map !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":257,"author":{"gitId":"clarence-chew"},"content":"            Note note \u003d new Note(str, map.getOrDefault(\"content\", \"[EMPTY]\"));","lastModifiedDate":"2022-09-12"},{"lineNumber":258,"author":{"gitId":"clarence-chew"},"content":"            NoteList.getNoteList().add(note);","lastModifiedDate":"2022-09-12"},{"lineNumber":259,"author":{"gitId":"clarence-chew"},"content":"            return new DukeResponse(String.format(\"Added your note about %s.\", str));","lastModifiedDate":"2022-09-12"},{"lineNumber":260,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-26"},{"lineNumber":261,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":262,"author":{"gitId":"clarence-chew"},"content":"        return commands;","lastModifiedDate":"2022-09-09"},{"lineNumber":263,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":264,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":265,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":266,"author":{"gitId":"clarence-chew"},"content":"     * Adds the command that runs otherwise","lastModifiedDate":"2022-09-09"},{"lineNumber":267,"author":{"gitId":"clarence-chew"},"content":"     * to an ArrayList.","lastModifiedDate":"2022-09-09"},{"lineNumber":268,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":269,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of chatbot commands.","lastModifiedDate":"2022-09-09"},{"lineNumber":270,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":271,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cCommandMatcher\u003e addCatchAllCommand(ArrayList\u003cCommandMatcher\u003e commands) {","lastModifiedDate":"2022-09-09"},{"lineNumber":272,"author":{"gitId":"clarence-chew"},"content":"        commands.add(","lastModifiedDate":"2022-09-09"},{"lineNumber":273,"author":{"gitId":"clarence-chew"},"content":"                new CommandMatcher((str) -\u003e true, (str) -\u003e new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":274,"author":{"gitId":"clarence-chew"},"content":"                \"(\u003e.\u003c\u0027) I\u0027m sorry, I don\u0027t really know what that means.\")));","lastModifiedDate":"2022-09-09"},{"lineNumber":275,"author":{"gitId":"clarence-chew"},"content":"        return commands;","lastModifiedDate":"2022-08-20"},{"lineNumber":276,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":277,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":277}},{"path":"src/main/java/duke/PrefixCommandMatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import duke.exception.DukeExceptionBiFunction;","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import duke.exception.DukeExceptionFunction;","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":" * Makes a command matcher based on prefix.","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":" * It splits the slash options \"/by /at\" and other parts as a Map\u0026lt;String, String\u0026gt;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":" * and trims the string involved.","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":" * The action takes the String and a map containing the options.","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"public class PrefixCommandMatcher extends CommandMatcher {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     * Creates a command matcher that tries to match a prefix.","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * @param prefix Prefix to match.","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     * @param action Action to do.","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    public PrefixCommandMatcher(String prefix, BiFunction\u003cString, Map\u003cString, String\u003e, DukeResponse\u003e action) {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        super(makePrefixMatcher(prefix),","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"                DukeExceptionFunction.toFunction((cmd) -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"                    // preprocessing","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"                    cmd \u003d cmd.strip();","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"                    // corner case","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"                    if (cmd.equals(prefix)) {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"                        throw new DukeException(new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"                                \"(\u003e.\u003c\u0027) Add a description to your \" + prefix + \".\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"                    // map processing","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"                    String withoutPrefix \u003d cmd.substring(prefix.length() + 1);","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"                    String[] commandParts \u003d withoutPrefix.split(\" /\");","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"                    Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"                    for (int i \u003d 1; i \u003c commandParts.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"                        String[] keyAndValue \u003d commandParts[i].split(\" \", 2);","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"                        if (keyAndValue.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"                            map.put(keyAndValue[0].strip(), keyAndValue[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"                        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"                            map.put(keyAndValue[0].strip(), \"\");","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"                    // another corner case","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"                    if (commandParts[0].equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"                        throw new DukeException(new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"                                \"(\u003e.\u003c\u0027) The description for \" + prefix + \" shouldn\u0027t be empty.\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"                    // accept","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"                    return action.apply(commandParts[0], map);","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"                }));","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        assert prefix !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"        assert action !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"    private static Predicate\u003cString\u003e makePrefixMatcher(String prefix) {","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"        return (cmd) -\u003e cmd.strip().startsWith(prefix + \" \") || cmd.strip().equals(prefix);","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"     * Creates a command matcher that tries to match a prefix.","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"     * @param prefix Prefix to match.","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"     * @param action Action to do.","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"    public static PrefixCommandMatcher of(String prefix, DukeExceptionBiFunction\u003cString, Map\u003cString, String\u003e\u003e action) {","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        assert prefix !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"        assert action !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"        return new PrefixCommandMatcher(prefix,","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"                DukeExceptionBiFunction.toBiFunction(action));","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":79}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.File;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.nio.ByteBuffer;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import java.util.Base64;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":" * Handles file state.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"public class Storage {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    private static Map\u003cString, Storage\u003e fileStates \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    private String contents \u003d null;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    private String fileName;","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    private Storage(String fileName) {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"     * Gets a singleton object that manages a particular file.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     * @param fileName File name to identify file.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     * @return Object managing the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    public static Storage getFileState(String fileName) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        if (!fileStates.containsKey(fileName)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"            fileStates.put(fileName, new Storage(fileName));","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"        return fileStates.get(fileName);","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    private static String convertToBase64(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        return Base64.getEncoder().encodeToString(input.getBytes(StandardCharsets.UTF_16));","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    private static String convertFromBase64(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        return StandardCharsets.UTF_16.decode(ByteBuffer.wrap(Base64.getDecoder().decode(input))).toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"     * Gets lines from file as a String[][].","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"     * @return Array of String[], each storing comma-separated parts of a line.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"    public String[][] getLines() {","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cString[]\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"            File f \u003d new File(fileName);","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"                ArrayList\u003cString\u003e curLine \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"                for (String str : sc.nextLine().split(\",\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"                    curLine.add(convertFromBase64(str));","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"                lines.add(curLine.toArray(new String[]{}));","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"            return (String[][]) lines.toArray(new String[][]{});","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"            // file not found or error","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"            return new String[][] {};","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"     * Saves the string to the file on disk.","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"     * @param strings Strings to save.","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"    public void saveLines(String[][] strings) {","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"        assert strings !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"            FileWriter writer \u003d new FileWriter(fileName, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"            for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"                assert strings[i] !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"                if (i \u003e 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"                    writer.append(\u0027\\n\u0027);","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"                StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"                for (String s : strings[i]) {","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"                    builder.append(\u0027,\u0027).append(convertToBase64(s));","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"                writer.append(builder.substring(1));","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"            writer.close();","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"            /*throw new DukeException(new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"                    \"(\u003e.\u003c\u0027) I was unable to record your tasks...\")));*/","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"            Duke.getUi().printStyledMessage(","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"                    \"(\u003e.\u003c\u0027) I was unable to record your tasks...\");","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":102}},{"path":"src/main/java/duke/StringMatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" * This class serves as a way to abstract the idea of getting a result","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" * from a string.","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"public class StringMatcher\u003cT\u003e {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    private Predicate\u003cString\u003e isMatch;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    private Function\u003cString, T\u003e getResult;","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * Constructs an object that calculates a particular case.","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     * @param isMatch Checks if this function handles this case.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     * @param getResult Function that calculates result.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    public StringMatcher(Predicate\u003cString\u003e isMatch, Function\u003cString, T\u003e getResult) {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        assert isMatch !\u003d null;","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        assert getResult !\u003d null;","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        this.isMatch \u003d isMatch;","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        this.getResult \u003d getResult;","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    public static Predicate\u003cString\u003e getCaseInsensitiveMatcher(String[] matches) {","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        String[] copy \u003d new String[matches.length];","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        for (int i \u003d 0; i \u003c matches.length; i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"            copy[i] \u003d matches[i].toLowerCase();","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        return s -\u003e {","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"            String lowercase \u003d s.toLowerCase();","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"            for (String candidate : copy) {","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"                if (lowercase.equals(candidate)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"                    return true;","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"            return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"     * Checks if the string matches.","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"     * If it does, it would give the result.","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"     * @param input String to check if it is for this command.","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"     * @return An Optional of class T if the string matches.","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"    public Optional\u003cT\u003e run(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        assert input !\u003d null;","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        if (isMatch.test(input)) {","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"            return Optional.of(getResult.apply(input));","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"        return Optional.empty();","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"clarence-chew":58}},{"path":"src/main/java/duke/UiInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.Reader;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":" * Functions that a UI interface needs to implement.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public interface UiInterface {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"     * Gives you the input stream to scan to interact with this interface.","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"     * @return InputStream to scan.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    Reader getReader();","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * Styles and prints lines with a border.","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     * @param lines Lines to be printed","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    void printStyledMessage(String... lines);","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * Greets user.","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    void greet();","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"     * Leaves the user.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    void leave();","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"clarence-chew":32}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.exception;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.DukeResponse;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":" * An exception class that comes with a DukeResponse","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" * so that the chatbot can show the message to the screen.","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    private DukeResponse response;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a DukeException such that it","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * holds a DukeResponse.","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * @param response Response which can be shown.","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    public DukeException(DukeResponse response) {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        super(\"[DukeException]\");","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        assert response !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        this.response \u003d response;","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * Gets the available response.","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     * @return Single-use response.","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    public DukeResponse getResponse() {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        return response;","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"clarence-chew":32}},{"path":"src/main/java/duke/exception/DukeExceptionBiFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.exception;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import duke.DukeResponse;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" * Defines an interface for functions that throw DukeException.","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" *","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" * @param \u003cT\u003e Input type.","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"public interface DukeExceptionBiFunction\u003cT, U\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * Constructs DukeExceptionBiFunction from BiFunction.","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * @param lambda BiFunction.","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * @param \u003cA\u003e Input type.","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     * @param \u003cB\u003e Input type.","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     * @return Constructed DukeExceptionBiFunction.","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    public static \u003cA, B\u003e DukeExceptionBiFunction\u003cA, B\u003e of(BiFunction\u003cA, B, DukeResponse\u003e lambda) {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        assert lambda !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        return lambda::apply;","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     * Constructs BiFunction from DukeExceptionBiFunction.","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"     * @param lambda DukeExceptionFunction.","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     * @param \u003cA\u003e Input type.","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     * @return Constructed Function.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    public static \u003cA, B\u003e BiFunction\u003cA, B, DukeResponse\u003e toBiFunction(DukeExceptionBiFunction\u003cA, B\u003e lambda) {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        assert lambda !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        return (a, b) -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"            try {","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"                return lambda.apply(a, b);","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"                return exception.getResponse();","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"     * Applies on T, U such that it allows for throwing of DukeException.","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"     * @return Single-use output DukeResponse.","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"     * @throws DukeException Single-use output DukeException.","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    public DukeResponse apply(T t, U u) throws DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"clarence-chew":51}},{"path":"src/main/java/duke/exception/DukeExceptionFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.exception;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import duke.DukeResponse;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" * Defines an interface for functions that throw DukeException.","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" *","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" * @param \u003cT\u003e Input type.","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"public interface DukeExceptionFunction\u003cT\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * Constructs DukeExceptionFunction from Function.","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * @param lambda Function.","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * @param \u003cA\u003e Input type.","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     * @return Constructed DukeExceptionFunction.","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    public static \u003cA\u003e DukeExceptionFunction\u003cA\u003e of(Function\u003cA, DukeResponse\u003e lambda) {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        assert lambda !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        return a -\u003e lambda.apply(a);","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     * Constructs Function from DukeExceptionFunction.","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     * @param lambda DukeExceptionFunction.","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"     * @param \u003cA\u003e Input type.","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     * @return Constructed Function.","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    public static \u003cA\u003e Function\u003cA, DukeResponse\u003e toFunction(DukeExceptionFunction\u003cA\u003e lambda) {","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        assert lambda !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        return a -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"            try {","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"                return lambda.apply(a);","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"                return exception.getResponse();","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"     * Applies on T such that it allows for throwing of DukeException.","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"     * @return Single-use output DukeResponse.","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"     * @throws DukeException Single-use output DukeException.","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    public DukeResponse apply(T t) throws DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"clarence-chew":50}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.gui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author clarence-chew-reused","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"// Reused from this tutorial","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"// with minor modifications at most","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        setMinHeight(dialog.getPrefHeight());","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Gets a dialog box for the user.","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param text User\u0027s text.","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param img User\u0027s image.","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return Dialog box.","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assert text !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Gets a dialog box for Duke.","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param text Duke\u0027s text.","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param img Duke\u0027s image.","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return Dialog box.","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert text !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"clarence-chew":16,"-":69}},{"path":"src/main/java/duke/gui/GraphicUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.gui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.io.PipedReader;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.io.PipedWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.io.Reader;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import duke.UiInterface;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author clarence-chew-reused","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"// Reused from this tutorial","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// with minor modifications at most","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Used for GUI.","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class GraphicUi implements UiInterface {","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final PipedWriter writer \u003d new PipedWriter();","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Gets writer that writes out of application logic into GUI.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return Writer from application logic.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static PipedWriter getWriter() {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return writer;","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Reader getReader() {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return new PipedReader(MainWindow.getWriter());","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            System.out.println(\"Did not obtain GUI reader - terminating\");","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Prints lines.","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param lines Line to be printed","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void printStyledMessage(String... lines) {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            assert line !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            result.append(line);","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            result.append(\u0027\\n\u0027);","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        result.append(\u0027\\n\u0027);","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            assert bufferedWriter !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            bufferedWriter.write(result.toString(), 0, result.length());","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            System.out.println(\"Cannot write output - terminating\");","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void greet() {","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        printStyledMessage(\"...where is this again?\",","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \"Oh, hello, I didn\u0027t see you there - I\u0027m Anthea, a chatbot...\",","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \"...or at least that\u0027s what they told me.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void leave() {","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        printStyledMessage(\"It was nice to have you around, I\u0027m going back to sleep...\",","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \"(close the window yourself)\");","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"clarence-chew":10,"-":79}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.gui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//@@author clarence-chew-reused","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Reused from this tutorial","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// with minor modifications at most","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Launcher {","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Launches the GUI application.","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param args Ignored arguments.","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (args.length \u003e 0 \u0026\u0026 args[0].equals(\"console\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Duke.main(new String[]{});","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"clarence-chew":5,"-":24}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.gui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author clarence-chew-reused","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Reused from this tutorial","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// with minor modifications at most","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Start the application and Duke logic.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param stage JavaFX stage.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            // Start application logic in thread","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            Thread appLogic \u003d new Thread(\"appLogic\") {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                public void run() {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    Duke.setUi(new GraphicUi());","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    Duke.main(new String[]{});","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            };","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            appLogic.start();","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().getOutput();","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"clarence-chew":11,"-":39}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.gui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.io.PipedReader;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.io.PipedWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author clarence-chew-reused","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"// Reused from this tutorial","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"// with minor modifications at most","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * GUI writes to here.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final PipedWriter writer \u003d new PipedWriter();","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * GUI reads from here.","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static BufferedReader reader;","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.getClass().getResourceAsStream(\"/images/userImage.png\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            96, 96, false, true);","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.getClass().getResourceAsStream(\"/images/dukeImage.png\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            96, 96, false, true);","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Get the writer that writes out GUI interactions.","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return The writer that writes out GUI interactions.","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static PipedWriter getWriter() {","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return writer;","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void initialize() {","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            reader \u003d new BufferedReader(new PipedReader(GraphicUi.getWriter()));","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            System.out.println(\"Cannot initialize GUI output reader - terminating\");","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            bufferedWriter.write(input);","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialog(String.format(","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                            \"I did not manage to send that to application logic:\\n%s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                            input), dukeImage)","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        getOutput();","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Gets output. Used for first message too.","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void getOutput() {","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            while (true) {","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                String line \u003d reader.readLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                if (line.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                result.append(line);","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                result.append(\u0027\\n\u0027);","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            String responseWithoutTrailingNewline \u003d result.substring(0, result.length() - 1);","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialog(responseWithoutTrailingNewline, dukeImage)","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialog(\"I did not manage to read it...\", dukeImage)","lastModifiedDate":"2022-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"clarence-chew":16,"-":108}},{"path":"src/main/java/duke/note/Note.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.note;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":" * Stores a note which has title and content.","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"public class Note {","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"    private String title;","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"    private String content;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a note.","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     * @param title Title of note.","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * @param content Content of note.","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    public Note(String title, String content) {","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * Gets the title of the note.","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * @return Title of the note.","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    public String getTitle() {","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        return title;","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     * Gets the content of the note.","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     * @return Content of the note.","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    public String getContent() {","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        return content;","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"     * Checks if the note title matches the query.","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"     * @param query Query for the note to check.","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"     * @return True if the note description matches the query.","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    public boolean isMatchingQuery(String query) {","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        return title.contains(query);","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"     * Gets a String array format of the note to save to file.","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"     * @return String array.","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ title, content };","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"     * Get String for printing to the screen.","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"     * @return String for printing.","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        return title;","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"clarence-chew":67}},{"path":"src/main/java/duke/note/NoteList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.note;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import duke.DukeResponse;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import duke.Pair;","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" * Holds the list of tasks.","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"public class NoteList {","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /** List of tasks to remember */","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    private static ArrayList\u003cNote\u003e noteList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     * Initializes the task list.","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    public static void initializeNoteList() {","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        noteList \u003d NoteStorage.getNotes();","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * Finalizes the note list.","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    public static void finalizeNoteList() {","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        NoteStorage.saveNotes(noteList);","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     * Gets note from index as string.","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"     * @param index Index as a string.","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"     * @return Note if successful.","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     * @throws DukeException if not successful.","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    public static Note getNote(String index) throws DukeException {","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"            int idx \u003d Integer.parseInt(index);","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"            return noteList.get(idx - 1);","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            throw new DukeException(new DukeResponse(","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"                    \"Sorry, I didn\u0027t understand \" + index + \", please give me a number.\"));","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"            throw new DukeException(new DukeResponse(","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"                    \"Sorry, the number \" + index + \", wasn\u0027t in the range.\"));","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"     * Gets notes that match the search term.","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"     * @param query Search term.","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"     * @return List of indices and notes.","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cPair\u003cInteger, Note\u003e\u003e filterNotes(String query) {","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cPair\u003cInteger, Note\u003e\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        for (int i \u003d 0; i \u003c noteList.size(); i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"            Note note \u003d noteList.get(i);","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"            if (note.isMatchingQuery(query)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"                result.add(new Pair\u003c\u003e(i, note));","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        return result;","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"     * Gets the task list for other classes to work on.","lastModifiedDate":"2022-09-12"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"     * @return The task list.","lastModifiedDate":"2022-09-12"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"    public static List\u003cNote\u003e getNoteList() {","lastModifiedDate":"2022-09-12"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        return noteList;","lastModifiedDate":"2022-09-12"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"clarence-chew":76}},{"path":"src/main/java/duke/note/NoteStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.note;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" * Accesses a file for notes.","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"public class NoteStorage {","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * Gets ArrayList of previously saved notes.","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of notes.","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cNote\u003e getNotes() {","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        Storage storage \u003d Storage.getFileState(\"./dukeNotes.txt\");","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        for (String[] line : storage.getLines()) {","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"            assert line !\u003d null;","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"            notes.add(new Note(line[0], line[1]));","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        return notes;","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     * Saves a list of notes to the default file.","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     * @param notes List of notes.","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    public static void saveNotes(List\u003cNote\u003e notes) {","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        List\u003cString[]\u003e lines \u003d notes.stream().map(Note::getAsStringArray).collect(Collectors.toList());","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        Storage storage \u003d Storage.getFileState(\"./dukeNotes.txt\");","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        storage.saveLines((String[][]) lines.toArray(new String[][]{}));","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"clarence-chew":39}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.ParsedDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":" * Handles a task with a deadline.","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    protected ParsedDateTime datetime;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * @param by Time of deadline.","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        this(description, by, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * @param by Time of deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     * @param isDone If the task is done.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        datetime \u003d ParsedDateTime.of(by, true);","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        assert description !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        assert by !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), datetime.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        String[] data \u003d super.getAsStringArray();","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ \"Deadline\", data[1], data[2], datetime.toString() };","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.ParsedDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":" * Handles an event.","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    protected ParsedDateTime datetime;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"     * Creates an event.","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of event.","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * @param at Time of event.","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        this(description, at, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * Creates an event.","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of event.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * @param at Time of event.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     * @param isDone If the task is done.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        assert description !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        assert at !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        datetime \u003d ParsedDateTime.of(at, true);","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), datetime.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        String[] data \u003d super.getAsStringArray();","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ \"Event\", data[1], data[2], datetime.toString() };","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":" * A task stores its state and description.","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"    private static final char MARKER_DONE \u003d \u0027X\u0027;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"    private static final char MARKER_NOT_DONE \u003d \u0027 \u0027;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    private String name;","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a task which is not done.","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * @param name Name of task.","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    public Task(String name) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        this(name, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        assert name !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a task.","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * @param name Name of task.","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     * @param isDone True if and only if the task is done.","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        assert name !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"     * Checks if the task description matches the query.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"     * @param query Query for the task to check.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"     * @return True if the task description matches the query.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"    public boolean isMatchingQuery(String query) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"        return name.contains(query);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"    private char getDoneMarker() {","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        return isDone ? MARKER_DONE : MARKER_NOT_DONE;","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"     * Gets the task description.","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"     * @return Task description.","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"        return name;","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"     * Gets if the task is done.","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2022-09-12"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2022-09-12"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"        return isDone;","lastModifiedDate":"2022-09-12"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"     * Creates a string representation suitable for printing to screen.","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"        return String.format(\"[%c] %s\", getDoneMarker(), name);","lastModifiedDate":"2022-08-16"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"     * Creates a string array representation suitable for printing to files.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"     * @return String array representation.","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ \"Task\", name, String.valueOf(isDone) };","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"clarence-chew":98}},{"path":"src/main/java/duke/task/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" * Constructs tasks from strings","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"public class TaskFactory {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    private static boolean isTrue(String str) {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        return str.equals(\"true\");","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * Constructs the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     * @param taskData Data for the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     * @return Task according to taskData.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     * @throws IllegalArgumentException If taskData does not conform to the format.","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    public static Task constructTask(String[] taskData) throws IllegalArgumentException {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        if (taskData \u003d\u003d null || taskData.length \u003c 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalArgumentException(\"taskData cannot be null or of length 1\");","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        boolean isTask \u003d taskData[0].equals(\"Task\") \u0026\u0026 taskData.length \u003e\u003d 3;","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        if (isTask) {","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"            return new Task(taskData[1], isTrue(taskData[2]));","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        boolean isToDo \u003d taskData[0].equals(\"ToDo\") \u0026\u0026 taskData.length \u003e\u003d 3;","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        if (isToDo) {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"            return new ToDo(taskData[1], isTrue(taskData[2]));","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        boolean isDeadline \u003d taskData[0].equals(\"Deadline\") \u0026\u0026 taskData.length \u003e\u003d 4;","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        if (isDeadline) {","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"            return new Deadline(taskData[1], taskData[3], isTrue(taskData[2]));","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"        boolean isEvent \u003d taskData[0].equals(\"Event\") \u0026\u0026 taskData.length \u003e\u003d 4;","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"        if (isEvent) {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"            return new Event(taskData[1], taskData[3], isTrue(taskData[2]));","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        throw new IllegalArgumentException(\"Unsupported task type or incorrect task data length\");","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"     * Constructs the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"     * @param taskData Data for the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"     * @return Optional of Task according to taskData, Optional.empty() if cannot construct.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"    public static Optional\u003cTask\u003e constructOptionalTask(String[] taskData) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        assert taskData !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"            return Optional.of(constructTask(taskData));","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"            Duke.getUi().printStyledMessage(","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"                    \"(\u003e.\u003c\u0027) did not understand this task - dropping it\",","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"                    String.join(\", \", taskData));","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":62}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import duke.DukeResponse;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import duke.Pair;","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" * Holds the list of tasks","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"public class TaskList {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /** List of tasks to remember */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     * Initializes the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    public static void initializeTaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        taskList \u003d TaskStorage.getTasks();","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * Finalizes the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    public static void finalizeTaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        TaskStorage.saveTasks(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     * Gets task from index as string.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"     * @param index Index as a string.","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"     * @return Task if successful.","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     * @throws DukeException if not successful.","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    public static Task getTask(String index) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"            int idx \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"            return taskList.get(idx - 1);","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            throw new DukeException(new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"                    \"Sorry, I didn\u0027t understand \" + index + \", please give me a number.\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"            throw new DukeException(new DukeResponse(","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"                    \"Sorry, the number \" + index + \", wasn\u0027t in the range.\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"     * Gets tasks that match the search term.","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"     * @param query Search term.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"     * @return List of indices and tasks.","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cPair\u003cInteger, Task\u003e\u003e filterTasks(String query) {","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cPair\u003cInteger, Task\u003e\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"            if (task.isMatchingQuery(query)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"                result.add(new Pair\u003c\u003e(i, task));","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        return result;","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"     * Gets the task list for other classes to work on.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"     * @return The task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"    public static List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        return taskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":76}},{"path":"src/main/java/duke/task/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" * Accesses a file for tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"public class TaskStorage {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * Gets ArrayList of previously saved tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        Storage storage \u003d Storage.getFileState(\"./duke.txt\");","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        for (String[] line : storage.getLines()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"            assert line !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"            TaskFactory.constructOptionalTask(line).ifPresent((task) -\u003e tasks.add(task));","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        return tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     * Saves a list of tasks to the default file.","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    public static void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        List\u003cString[]\u003e lines \u003d tasks.stream().map(Task::getAsStringArray).collect(Collectors.toList());","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        Storage storage \u003d Storage.getFileState(\"./duke.txt\");","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        storage.saveLines((String[][]) lines.toArray(new String[][]{}));","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":39}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":" * A class that stores something to do.","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"     * Creates a task item.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"        this(description, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"        assert description !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     * Creates a task item.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * @param isDone If the task is done.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        assert description !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"     * Gets a string array representation suitable for printing to files.","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     * @return String array representation.","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        String[] data \u003d super.getAsStringArray();","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        assert data !\u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ \"ToDo\", data[1], data[2] };","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-width: 1; -fx-border-color: #7f7f7f; -fx-border-radius: 5; -fx-border-insets: 5;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"32.0\" fitWidth\u003d\"32.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"clarence-chew":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"clarence-chew":19}},{"path":"src/test/java/duke/ParsedDateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Timeout;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class ParsedDateTimeTest {","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    @Timeout(1)","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    public void of_makingObjects_normalBehavior() {","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"345\", true).toString(), \"31 Dec 0345 2359\");","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"345\", false).toString(), \"01 Jan 0345 0000\");","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"29/2/1984\", false).toString(), \"29 Feb 1984 0000\");","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"29-2-1984\", true).toString(), \"29 Feb 1984 2359\");","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"Friday 13th 1985\", true).toString(), \"13 Sep 1985 2359\");","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"Friday 13th 1985\", false).toString(), \"13 Sep 1985 0000\");","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"January 1984\", true).toString(), \"31 Jan 1984 2359\");","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"Jan 1984\", false).toString(), \"01 Jan 1984 0000\");","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"Friday MAY 1984\", true).toString(), \"04 May 1984 2359\");","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"Friday MAY 1984\", false).toString(), \"04 May 1984 0000\");","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"12:34\", true).toString(),","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"                ParsedDateTime.of(\"12:34\", false).toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"12:34pm\", true).toString(),","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"                ParsedDateTime.of(\"12:34\", false).toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"11:34am\", true).toString(),","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"                ParsedDateTime.of(\"11:34\", false).toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"11:34pm\", true).toString(),","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"                ParsedDateTime.of(\"23:34\", false).toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"12:34am\", true).toString(),","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"                ParsedDateTime.of(\"00:34\", false).toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"12:34Am\", true).toString(),","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"                ParsedDateTime.of(\"12:34aM\", false).toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(ParsedDateTime.of(\"1st 1th 1St 1/1/1950 January Jan jan 1950\", true).toString(),","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"                \"01 Jan 1950 2359\");","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    @Timeout(1)","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    public void of_makingObjects_cannotConstruct() {","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        String[] testCases \u003d new String[]{","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"            \"2022 fri 31st\", \"29/2 2100\", \"29-2-2100\", \"12/12-12\", \"23rd 14/5\", \"34/56\", \"-3\",","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            \"Jan Jul\", \"2030 2040\", \"Monday Tuesday\", \"1st 2nd\",","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"            \"13.00am\", \"0.00am\", \"13.0pm\", \"0.0pm\", \"-3:-3\", \"26.26\"","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        };","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        for (String s : testCases) {","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"            assertEquals(ParsedDateTime.of(s, true).toString(), s);","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"            assertEquals(ParsedDateTime.of(s, false).toString(), s);","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"clarence-chew":51}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    public void getAsStringArray_makingObjects_normalBehavior() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"        Task task1 \u003d new Deadline(\"task one\", \"not-date-1\", false);","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        Task task2 \u003d new Deadline(\"task two\", \"not-date-2\", true);","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        Task task3 \u003d new Deadline(\"task three\", \"not-date-3\");","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[D][ ] task one (by: not-date-1)\", task1.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[D][X] task two (by: not-date-2)\", task2.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[D][ ] task three (by: not-date-3)\", task3.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Deadline\", \"task one\", \"false\", \"not-date-1\" }, task1.getAsStringArray());","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Deadline\", \"task two\", \"true\", \"not-date-2\" }, task2.getAsStringArray());","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Deadline\", \"task three\", \"false\", \"not-date-3\" }, task3.getAsStringArray());","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"clarence-chew":23}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class EventTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    public void getAsStringArray_makingObjects_normalBehavior() {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"        Task task1 \u003d new Event(\"task one\", \"not-date-1\", false);","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        Task task2 \u003d new Event(\"task two\", \"not-date-2\", true);","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        Task task3 \u003d new Event(\"task three\", \"not-date-3\");","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[E][ ] task one (at: not-date-1)\", task1.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[E][X] task two (at: not-date-2)\", task2.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[E][ ] task three (at: not-date-3)\", task3.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Event\", \"task one\", \"false\", \"not-date-1\" }, task1.getAsStringArray());","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Event\", \"task two\", \"true\", \"not-date-2\" }, task2.getAsStringArray());","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Event\", \"task three\", \"false\", \"not-date-3\" }, task3.getAsStringArray());","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"clarence-chew":23}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    public void markAsDone_togglingDoneAndNotDone_normalBehavior() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"        Task task1 \u003d new Task(\"task one\", false);","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        Task task2 \u003d new Task(\"task two\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        Task task3 \u003d new Task(\"task three\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task one\", task1.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task two\", task2.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task three\", task3.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        task1.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        task2.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        task3.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task one\", task1.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task two\", task2.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task three\", task3.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        task1.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        task2.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        task3.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task one\", task1.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task two\", task2.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task three\", task3.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        task1.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        task2.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        task3.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task one\", task1.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task two\", task2.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task three\", task3.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    public void getAsStringArray_makingObjects_normalBehavior() {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        Task task1 \u003d new Task(\"task one\", false);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        Task task2 \u003d new Task(\"task two\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        Task task3 \u003d new Task(\"task three\");","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Task\", \"task one\", \"false\" }, task1.getAsStringArray());","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Task\", \"task two\", \"true\" }, task2.getAsStringArray());","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Task\", \"task three\", \"false\" }, task3.getAsStringArray());","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"clarence-chew":54}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    public void getAsStringArray_makingObjects_normalBehavior() {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"        Task task1 \u003d new ToDo(\"task one\", false);","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        Task task2 \u003d new ToDo(\"task two\", true);","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        Task task3 \u003d new ToDo(\"task three\");","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[T][ ] task one\", task1.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[T][X] task two\", task2.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[T][ ] task three\", task3.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"ToDo\", \"task one\", \"false\" }, task1.getAsStringArray());","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"ToDo\", \"task two\", \"true\" }, task2.getAsStringArray());","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"ToDo\", \"task three\", \"false\" }, task3.getAsStringArray());","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"clarence-chew":23}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"/v8AVABvAEQAbw\u003d\u003d,/v8AaABvAG0AZQB3AG8AcgBr,/v8AZgBhAGwAcwBl","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AbQBlAGUAdAAgAHAAZQBvAHAAbABlACAAYQB0ACAAZgB1AG4AYwB0AGkAbwBuACAAeAAvAHkALwB6ACAAdwBoAGEAdABlAHYAZQBy,/v8AdAByAHUAZQ\u003d\u003d,/v8AMwAxACAARABlAGMAIAAxADkANQAwACAAMgAzADUAOQ\u003d\u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8ALwBhAHQAIABtAHkAcwB0AGUAcgBpAG8AdQBz,/v8AdAByAHUAZQ\u003d\u003d,/v8AMwAxACAARABlAGMAIAAxADkANgAwACAAMgAzADUAOQ\u003d\u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8ALwBiAHkAIABtAHkAcwB0AGUAcgBpAG8AdQBzACAAbgB1AG0AYgBlAHIAIAAy,/v8AdAByAHUAZQ\u003d\u003d,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8AcgB1AHMAaAAgAHQAaABpAHMAIABwAGwAZQBhAHMAZQ\u003d\u003d,/v8AZgBhAGwAcwBl,/v8AMwAxACAARABlAGMAIAAxADkANgAwACAAMgAzADUAOQ\u003d\u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AIAB3AG8AdwAgACAAbQB1AGMAaAAgACAAcwBwAGEAYwBl,/v8AZgBhAGwAcwBl,/v8AMQAwAGEAbQ\u003d\u003d","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"/v8AVABvAEQAbw\u003d\u003d,/v8AaABvAG0AZQB3AG8AcgBr,/v8AZgBhAGwAcwBl","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"/v8AVABvAEQAbw\u003d\u003d,/v8AbwB0AGgAZQByACAAaABvAG0AZQB3AG8AcgBr,/v8AZgBhAGwAcwBl","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"/v8AVABvAEQAbw\u003d\u003d,/v8AcAByAG8AagBlAGMAdAAgADEAMg\u003d\u003d,/v8AZgBhAGwAcwBl","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AbQBlAGUAdAAgAGYAcgBpAGUAbgBkAHM\u003d,/v8AZgBhAGwAcwBl,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AbQBlAGUAdAAgAHAAZQBvAHAAbABlACAAYQB0ACAAZABpAG4AbgBlAHI\u003d,/v8AZgBhAGwAcwBl,/v8ANgA6ADIANQAgAHAAbQ\u003d\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AbQBlAGUAdAAgAHAAZQBvAHAAbABlACAAYQB0ACAAZgB1AG4AYwB0AGkAbwBuACAAeAAvAHkALwB6ACAAdwBoAGEAdABlAHYAZQBy,/v8AZgBhAGwAcwBl,/v8AMAA3ACAATgBvAHYAIAAxADUAMgA0ACAAMAA3ADEAMg\u003d\u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8ALwBhAHQAIABtAHkAcwB0AGUAcgBpAG8AdQBz,/v8AZgBhAGwAcwBl,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8ALwBiAHkAIABtAHkAcwB0AGUAcgBpAG8AdQBzACAAbgB1AG0AYgBlAHIAIAAy,/v8AZgBhAGwAcwBl,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8AcgB1AHMAaAAgAHQAaABpAHMAIABwAGwAZQBhAHMAZQ\u003d\u003d,/v8AZgBhAGwAcwBl,/v8AdwBoAGUAbgA/","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AIAB3AG8AdwAgACAAbQB1AGMAaAAgACAAcwBwAGEAYwBl,/v8AZgBhAGwAcwBl,/v8AMQAwAGEAbQ\u003d\u003d","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"clarence-chew":16}},{"path":"text-ui-test/dukeNotes.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"/v8AaABlAGwAbABv,/v8AdABoAGkAcwAgAGkAcwAgAGEAIABnAHIAZQBhAHQAIABuAG8AdABl","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"/v8AcABp,/v8AMwAuADEANAAxADUAOQAyADYANQAzADUAOAA5ADcAOQAzADIAMw\u003d\u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/v8AcABp,/v8AMwAuADEANAAxADUAOQAyADYANQAzADUAOAA5ADcAOQAzADIAMw\u003d\u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"/v8AaABlAGwAbABv,/v8AcgBlAHAAZQBhAHQAZQBkACAAdABpAHQAbABl","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"clarence-chew":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"random","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"mark","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"unmark","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"todo homework /at /by 1:23","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"todo other homework /options ignored","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"todo project 12","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"mark 0","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"mark -1","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"mark not a number","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"unmark not a number","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"mark 5","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"mark 6","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"event meet friends","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"event meet people at dinner /at 6:25 pm","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"event meet people at function x/y/z whatever /at oh no not this /by /at 7:12am 1524 Fri NOV","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"deadline /at mysterious","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"deadline /by mysterious number 2","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"deadline rush this please /by when? /option is ignored","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"delete 0","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"delete nan","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"delete 24","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"  event  wow  much  space / very /wow /at 10am","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"find","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"find ","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"find  meet","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"find      me","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"find me","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"find t","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"note hello /content this is a great note","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"note pi /content 3.14159265358979323","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"note hello /content repeated title","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"list notes","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"delete note fails","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"find notes he","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"view note 1","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"view note 2","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"view note 3","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"view note 0","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"view note -1","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"view note 12389","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"view note okay","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"reschedule 1 /at hi1 /by hi2","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"reschedule 2 /at 1950 /by 1960","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"reschedule 5 /at 1950 /by 1960","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"delete note 3","lastModifiedDate":"2022-09-12"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"list notes","lastModifiedDate":"2022-09-12"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":71}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\note\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"REM delete data","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"if exist duke.txt del duke.txt","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"if exist dukeNotes.txt del dukeNotes.txt","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"REM delete output from previous run","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"if exist ACTUAL1.TXT del ACTUAL1.TXT","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL1.TXT","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL1.TXT","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"REM compare the output to the expected output","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"FC ACTUAL1.TXT EXPECTED1.TXT","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":15,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/note/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"# delete data","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"if [ -e \"./duke.txt\" ]","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"then","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    rm duke.txt","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"fi","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"if [ -e \"./dukeNotes.txt\" ]","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"then","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    rm dukeNotes.txt","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"fi","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"# delete output from previous run","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"if [ -e \"./ACTUAL1.TXT\" ]","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"then","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"    rm ACTUAL1.TXT","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"fi","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL1.TXT","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL1.TXT","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"# convert to UNIX format","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"cp EXPECTED1.TXT EXPECTED1-UNIX.TXT","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"dos2unix ACTUAL1.TXT EXPECTED1-UNIX.TXT","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"    # compare the output to the expected output","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"    diff ACTUAL1.TXT EXPECTED1-UNIX.TXT","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"    if [ $? -eq 0 ]","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    then","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"    else","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"        echo \"Test result: FAILED SECOND\"","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"        exit 1","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"    fi","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarence-chew":32,"-":37}}]

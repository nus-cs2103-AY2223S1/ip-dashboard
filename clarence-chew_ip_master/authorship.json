[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarence-chew":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"plugins {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"repositories {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"dependencies {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"test {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    testLogging {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        showExceptions true","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        showCauses true","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"application {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"shadowJar {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"run{","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"clarence-chew":41}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"goto fail","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"goto fail","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":":init","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":":win9xME_args","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":":execute","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":":end","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":":fail","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"exit /b 1","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":":mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":":omega","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"clarence-chew":103}},{"path":"src/main/java/duke/CommandMatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" * This class serves as a way to abstract the idea of making a command","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" * as a matching process and an action.","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"public class CommandMatcher {","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    private Predicate\u003cString\u003e check;","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    private Consumer\u003cString\u003e action;","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * Creates an object that handles checking and executing a command.","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * @param check Predicate to check if the command should be run.","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * @param action Action to run.","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    public CommandMatcher(Predicate\u003cString\u003e check, Consumer\u003cString\u003e action) {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        this.check \u003d check;","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * Creates an object that handles checking and executing a command.","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     * @param prefix Prefix of the command which is checked.","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     * @param action Action to run.","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    public CommandMatcher(String prefix, Consumer\u003cString\u003e action) {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        this.check \u003d (cmd) -\u003e cmd.strip().startsWith(prefix);","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"     * Checks if the string matches.","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     * If it does, it would execute the action.","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     * @param input String to check if it is for this command.","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"     * @return If the string matches.","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    public boolean run(String input) {","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        if (check.test(input)) {","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"            action.accept(input);","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            return true;","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        return false;","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"clarence-chew":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" * The main method of the chatbot, as well as its startup and teardown.","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /** List of commands */","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    private static ArrayList\u003cCommandMatcher\u003e commands;","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    private static Optional\u003cTask\u003e getTask(String index) {","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"            int idx \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d TaskList.getTaskList().get(idx - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"            return Optional.of(task);","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"Sorry, I didn\u0027t understand \" + index + \", please give me a number.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"Sorry, the number \" + index + \", wasn\u0027t in the range.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    private static void handleCommand(String command) {","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        for (CommandMatcher matcher : commands) {","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"            if (matcher.run(command)) {","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"                break;","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"     * Runs the chatbot execution.","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"     * @param args Command line args which are not used.","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        Ui.greet();","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        TaskList.initializeTaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        commands \u003d Parser.getCommands();","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        boolean keepRunning \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        while (keepRunning) {","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"            String command \u003d input.nextLine();","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"                keepRunning \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"            } else {","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"                handleCommand(command);","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"        TaskList.finalizeTaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        Ui.leave();","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"clarence-chew":56,"-":4}},{"path":"src/main/java/duke/ParsedDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" * Helper class to parse date/time strings","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"public class ParsedDateTime {","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    private static final DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"), DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.BASIC_ISO_DATE, DateTimeFormatter.ISO_LOCAL_DATE, DateTimeFormatter.ISO_OFFSET_DATE,","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ISO_DATE, DateTimeFormatter.ISO_LOCAL_TIME, DateTimeFormatter.ISO_OFFSET_TIME,","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ISO_TIME, DateTimeFormatter.ISO_LOCAL_DATE_TIME, DateTimeFormatter.ISO_OFFSET_DATE_TIME,","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ISO_ZONED_DATE_TIME, DateTimeFormatter.ISO_DATE_TIME, DateTimeFormatter.ISO_ORDINAL_DATE,","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        DateTimeFormatter.ISO_WEEK_DATE, DateTimeFormatter.ISO_INSTANT, DateTimeFormatter.RFC_1123_DATE_TIME };","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    private Optional\u003cLocalDateTime\u003e parsedDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    private String input;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * Creates an object to handle if the date/time can be parsed.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * @param input String that may represent date/time.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    public ParsedDateTime(String input) {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        parsedDateTime \u003d Optional.empty();","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"                parsedDateTime \u003d Optional.of(LocalDateTime.parse(input, formatter));","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"                // Just try another one","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        return parsedDateTime.map((dateTime) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        }).orElse(input);","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":46}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":" * Handles creating commands through duke.CommandMatcher/duke.PrefixCommandMatcher.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"public class Parser {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cCommandMatcher\u003e getCommands() {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cCommandMatcher\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new CommandMatcher((str) -\u003e str.equals(\"list\"), (str) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"            List\u003cTask\u003e list \u003d TaskList.getTaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"            String[] output \u003d new String[list.size() + 1];","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"            output[0] \u003d \"Here, your tasks:\";","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"                output[i + 1] \u003d (i + 1) + \".\" + list.get(i).toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(output);","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"mark\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTask(str).ifPresent((task) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"                task.markAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"                Ui.messagePrint(\"Marked your task as done:\",","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"                        task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"            });","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"unmark\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTask(str).ifPresent((task) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"                task.markAsNotDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"                Ui.messagePrint(\"Aw... it\u0027s not done yet:\",","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"                        task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            });","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"deadline\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d new Deadline(str, map.getOrDefault(\"by\", \"[unknown]\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTaskList().add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"Good luck with the deadline, here\u0027s the task:\",","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"                    task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"todo\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d new ToDo(str);","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTaskList().add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"I\u0027ve recorded this thing you need to do:\",","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"                    task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"event\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d new Event(str, map.getOrDefault(\"at\", \"[unknown]\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTaskList().add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"That\u0027s going to happen at some time later:\",","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"                    task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new PrefixCommandMatcher(\"delete\", (str, map) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"            TaskList.getTask(str).ifPresent((task) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"                TaskList.getTaskList().remove(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"                Ui.messagePrint(\"It seems you didn\u0027t need this task anymore, so I removed it:\",","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"                        task.toString(),","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"                        String.format(\"You have %d tasks left.\", TaskList.getTaskList().size()));","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"            });","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"        // default command matcher - add to list","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"        commands.add(new CommandMatcher((str) -\u003e true, (str) -\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"(\u003e.\u003c\u0027) I\u0027m sorry, I don\u0027t really know what that means.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"        }));","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"        return commands;","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":83}},{"path":"src/main/java/duke/PrefixCommandMatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" * Makes a command matcher based on prefix.","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" * It splits the slash options \"/by /at\" and other parts as a Map\u0026lt;String, String\u0026gt;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" * and trims the string involved.","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" * The action takes the String and a map containing the options.","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"public class PrefixCommandMatcher extends CommandMatcher {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * Creates a command matcher that tries to match a prefix.","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    public PrefixCommandMatcher(String prefix, BiConsumer\u003cString, Map\u003cString, String\u003e\u003e action) {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        super((cmd) -\u003e cmd.strip().startsWith(prefix + \" \") || cmd.strip().equals(prefix), (cmd) -\u003e {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"            cmd \u003d cmd.strip();","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"            if (cmd.equals(prefix)) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"                Ui.messagePrint(\"(\u003e.\u003c\u0027) Add a description to your \" + prefix + \".\");","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"                return;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"            String withoutPrefix \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"            String[] commandParts \u003d withoutPrefix.split(\" /\");","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"            Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"            for (int i \u003d 1; i \u003c commandParts.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"                String[] keyAndValue \u003d commandParts[i].split(\" \", 2);","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"                if (keyAndValue.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"                    map.put(keyAndValue[0].strip(), keyAndValue[1].strip());","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"                } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"                    map.put(keyAndValue[0].strip(), \"\");","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"            commandParts[0] \u003d commandParts[0].strip();","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"            if (commandParts[0].equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"                Ui.messagePrint(\"(\u003e.\u003c\u0027) The description for \" + prefix + \" shouldn\u0027t be empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"                return;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"            action.accept(commandParts[0].strip(), map);","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        });","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":43}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.io.File;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.nio.ByteBuffer;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import java.util.*;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":" * Handles file state.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"public class Storage {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    private static Map\u003cString, Storage\u003e fileStates \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    private String contents \u003d null;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    private String fileName;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    private Storage(String fileName) {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    public static Storage getFileState(String fileName) {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        if (!fileStates.containsKey(fileName)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"            fileStates.put(fileName, new Storage(fileName));","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        return fileStates.get(fileName);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    /*public String getContents() {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        if (contents \u003d\u003d null) {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"                File f \u003d new File(fileName);","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"                Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"                boolean isFirst \u003d true;","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"                    if (isFirst) {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"                        isFirst \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"                    } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"                        sb.append(\u0027\\n\u0027);","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"                    sb.append(s.nextLine());","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"                contents \u003d sb.toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"            } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"                // file not found or error","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"                contents \u003d \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        return contents;","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"    }*/","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"    ///**","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"    // * Saves the string to the file on disk","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"    // * @param str string to save","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"    // */","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"    /*public void saveContents(String str) {","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"        contents \u003d str;","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"        // write to file TODO","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"    }*/","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"    private static String toBase64(String input) {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        return Base64.getEncoder().encodeToString(input.getBytes(StandardCharsets.UTF_16));","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"    private static String fromBase64(String input) {","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"        return StandardCharsets.UTF_16.decode(ByteBuffer.wrap(Base64.getDecoder().decode(input))).toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"    public String[][] getLines() {","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cString[]\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"            File f \u003d new File(fileName);","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"                ArrayList\u003cString\u003e curLine \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"                for (String str : sc.nextLine().split(\",\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"                    curLine.add(fromBase64(str));","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"                lines.add(curLine.toArray(new String[] {}));","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"            return (String[][]) lines.toArray(new String[][] {});","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"            // file not found or error","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"            return new String[][] {};","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"     * Saves the string to the file on disk.","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"     * @param strings Strings to save.","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"    public void saveLines(String[][] strings) {","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"            FileWriter writer \u003d new FileWriter(fileName, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"            for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"                if (i \u003e 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"                    writer.append(\u0027\\n\u0027);","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"                StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"                for (String s : strings[i]) {","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"clarence-chew"},"content":"                    builder.append(\u0027,\u0027).append(toBase64(s));","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"clarence-chew"},"content":"                writer.append(builder.substring(1));","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"            writer.close();","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"(\u003e.\u003c\u0027) I was unable to record your tasks...\");","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"clarence-chew"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"public class Ui {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"    /** List of commands */","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    private static ArrayList\u003cCommandMatcher\u003e commands;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    /** List of strings to remember */","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * Styles and prints lines with a border.","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * @param lines Lines to be printed","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    public static void messagePrint(String... lines) {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        System.out.println(\",----------------------------------------------------------------\");","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        for (String str : lines) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"            System.out.print(\"| \");","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"            System.out.println(str);","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        System.out.println(\"\u0027----------------------------------------------------------------\");","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     * Greets user.","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    public static void greet() {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        Ui.messagePrint(\"...where is this again?\",","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"                \"Oh, hello, I didn\u0027t see you there - I\u0027m Anthea, a chatbot...\",","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"                \"...or at least that\u0027s what they told me.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"     * Leaves the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    public static void leave() {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"        Ui.messagePrint(\"It was nice to have you around, I\u0027m going back to sleep...\");","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":41}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.ParsedDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":" * Handles a task with a deadline.","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    protected ParsedDateTime datetime;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"     * Creates a duke.tasks.Deadline object.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * @param by Time of deadline.","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        this(description, by, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     * Creates a duke.tasks.Deadline object.","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     * @param by Time of deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * @param done If the task is done.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    public Deadline(String description, String by, boolean done) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        super(description, done);","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        datetime \u003d new ParsedDateTime(by);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), datetime.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     * Get a string array representation suitable for printing to files.","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"     * @return String array representation.","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        String[] data \u003d super.getAsStringArray();","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ \"Deadline\", data[1], data[2], datetime.toString() };","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import duke.ParsedDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":" * Handles an event.","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    protected ParsedDateTime datetime;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"     * Creates an event.","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of event.","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * @param at Time of event.","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        this(description, at, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     * Creates an event.","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of event.","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"     * @param at Time of event.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"     * @param done If the task is done.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    public Event(String description, String at, boolean done) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        super(description, done);","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        datetime \u003d new ParsedDateTime(at);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), datetime.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     * Get a string array representation suitable for printing to files.","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"     * @return String array representation.","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        String[] data \u003d super.getAsStringArray();","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ \"Event\", data[1], data[2], datetime.toString() };","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":" * A task stores the state and description of a task.","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"    private static final char MARKER_DONE \u003d \u0027X\u0027;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"    private static final char MARKER_NOT_DONE \u003d \u0027 \u0027;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    private String name;","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    private boolean done;","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    Task(String name) {","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        this(name, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    Task(String name, boolean done) {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     * Marks the task as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    private char getDoneMarker() {","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        return this.done ? MARKER_DONE : MARKER_NOT_DONE;","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"     * Creates a string representation suitable for printing to screen.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        return String.format(\"[%c] %s\", getDoneMarker(), name);","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"     * Creates a string array representation suitable for printing to files.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"     * @return String array representation.","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ \"Task\", name, String.valueOf(done) };","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"clarence-chew":54}},{"path":"src/main/java/duke/task/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":" * Constructs tasks from strings","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"public class TaskFactory {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"     * Constructs the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"     * @param taskData Data for the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"     * @return Task according to taskData.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * @throws IllegalArgumentException If taskData does not conform to the format.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    public static Task constructTask(String[] taskData) throws IllegalArgumentException {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        if (taskData \u003d\u003d null || taskData.length \u003c 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalArgumentException(\"taskData cannot be null or of length 1\");","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        if (taskData[0].equals(\"Task\") \u0026\u0026 taskData.length \u003e\u003d 3) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"            return new Task(taskData[1], taskData[2].equals(\"true\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        if (taskData[0].equals(\"ToDo\") \u0026\u0026 taskData.length \u003e\u003d 3) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"            return new ToDo(taskData[1], taskData[2].equals(\"true\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        if (taskData[0].equals(\"Deadline\") \u0026\u0026 taskData.length \u003e\u003d 4) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"            return new Deadline(taskData[1], taskData[3], taskData[2].equals(\"true\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        if (taskData[0].equals(\"Event\") \u0026\u0026 taskData.length \u003e\u003d 4) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"            return new Event(taskData[1], taskData[3], taskData[2].equals(\"true\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        throw new IllegalArgumentException(\"Unsupported task type or incorrect task data length\");","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"     * Constructs the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"     * @param taskData Data for the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"     * @return Optional of Task according to taskData, Optional.empty() if cannot construct.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    public static Optional\u003cTask\u003e constructOptionalTask(String[] taskData) {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            return Optional.of(constructTask(taskData));","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"(\u003e.\u003c\u0027) did not understand this task - dropping it\",","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"                    String.join(\", \", taskData));","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":50}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" * Holds the list of tasks","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"public class TaskList {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"    /** List of tasks to remember */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    public static void initializeTaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        taskList \u003d TaskStorage.getTasks();","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    public static void finalizeTaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        TaskStorage.saveTasks(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"     * Get task from index as string.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"     * @param index Index as a string.","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"     * @return Optional.of(task) if successful, else Optional.empty().","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    public static Optional\u003cTask\u003e getTask(String index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"            int idx \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"            Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"            return Optional.of(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"Sorry, I didn\u0027t understand \" + index + \", please give me a number.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"            Ui.messagePrint(\"Sorry, the number \" + index + \", wasn\u0027t in the range.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"            return Optional.empty();","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"    public static List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        return taskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":46}},{"path":"src/main/java/duke/task/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":" * Accesses a file for tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"public class TaskStorage {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"     * Gets ArrayList of previously saved tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        Storage storage \u003d Storage.getFileState(\"./duke.txt\");","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        for (String[] line : storage.getLines()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"            TaskFactory.constructOptionalTask(line).ifPresent((task) -\u003e tasks.add(task));","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        return tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"     * Saves a list of tasks to the default file.","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"    public static void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        List\u003cString[]\u003e lines \u003d tasks.stream().map(Task::getAsStringArray).collect(Collectors.toList());","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        Storage storage \u003d Storage.getFileState(\"./duke.txt\");","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        storage.saveLines((String[][]) lines.toArray(new String[][]{}));","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":36}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":" * A class that stores something to do.","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"     * Creates a task item.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        this(description, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"     * Creates a task item.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"     * @param done If the task is done.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    public ToDo(String description, boolean done) {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        super(description, done);","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     * Get a string array representation suitable for printing to files.","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"     * @return String array representation.","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    public String[] getAsStringArray() {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        String[] data \u003d super.getAsStringArray();","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        return new String[]{ \"ToDo\", data[1], data[2] };","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":39}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    public void testStringArray() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"        Task task1 \u003d new Deadline(\"task one\", \"1\", false);","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        Task task2 \u003d new Deadline(\"task two\", \"2\", true);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        Task task3 \u003d new Deadline(\"task three\", \"3\");","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[D][ ] task one (by: 1)\", task1.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[D][X] task two (by: 2)\", task2.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[D][ ] task three (by: 3)\", task3.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Deadline\", \"task one\", \"false\", \"1\" }, task1.getAsStringArray());","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Deadline\", \"task two\", \"true\", \"2\" }, task2.getAsStringArray());","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Deadline\", \"task three\", \"false\", \"3\" }, task3.getAsStringArray());","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"clarence-chew":23}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"    public void testDoneMarker() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"        Task task1 \u003d new Task(\"task one\", false);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"        Task task2 \u003d new Task(\"task two\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"        Task task3 \u003d new Task(\"task three\");","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task one\", task1.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task two\", task2.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task three\", task3.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        task1.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"        task2.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"        task3.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task one\", task1.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task two\", task2.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task three\", task3.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"        task1.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        task2.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"        task3.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task one\", task1.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task two\", task2.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task three\", task3.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        task1.markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        task2.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"        task3.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[ ] task one\", task1.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task two\", task2.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"[X] task three\", task3.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"    public void testStringArray() {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        Task task1 \u003d new Task(\"task one\", false);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        Task task2 \u003d new Task(\"task two\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        Task task3 \u003d new Task(\"task three\");","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Task\", \"task one\", \"false\" }, task1.getAsStringArray());","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Task\", \"task two\", \"true\" }, task2.getAsStringArray());","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        assertArrayEquals(new String[] { \"Task\", \"task three\", \"false\" }, task3.getAsStringArray());","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"clarence-chew":55}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"/v8AVABvAEQAbw\u003d\u003d,/v8AaABvAG0AZQB3AG8AcgBr,/v8AZgBhAGwAcwBl","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AbQBlAGUAdAAgAHAAZQBvAHAAbABlACAAYQB0ACAAZgB1AG4AYwB0AGkAbwBuACAAeAAvAHkALwB6ACAAdwBoAGEAdABlAHYAZQBy,/v8AdAByAHUAZQ\u003d\u003d,/v8ANwA6ADEAMgBhAG0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8ALwBhAHQAIABtAHkAcwB0AGUAcgBpAG8AdQBz,/v8AdAByAHUAZQ\u003d\u003d,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8ALwBiAHkAIABtAHkAcwB0AGUAcgBpAG8AdQBzACAAbgB1AG0AYgBlAHIAIAAy,/v8AdAByAHUAZQ\u003d\u003d,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8AcgB1AHMAaAAgAHQAaABpAHMAIABwAGwAZQBhAHMAZQ\u003d\u003d,/v8AZgBhAGwAcwBl,/v8AdwBoAGUAbgA/","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AdwBvAHcAIAAgAG0AdQBjAGgAIAAgAHMAcABhAGMAZQ\u003d\u003d,/v8AZgBhAGwAcwBl,/v8AMQAwAGEAbQ\u003d\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"/v8AVABvAEQAbw\u003d\u003d,/v8AaABvAG0AZQB3AG8AcgBr,/v8AZgBhAGwAcwBl","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"/v8AVABvAEQAbw\u003d\u003d,/v8AbwB0AGgAZQByACAAaABvAG0AZQB3AG8AcgBr,/v8AZgBhAGwAcwBl","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"/v8AVABvAEQAbw\u003d\u003d,/v8AcAByAG8AagBlAGMAdAAgADEAMg\u003d\u003d,/v8AZgBhAGwAcwBl","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AbQBlAGUAdAAgAGYAcgBpAGUAbgBkAHM\u003d,/v8AZgBhAGwAcwBl,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AbQBlAGUAdAAgAHAAZQBvAHAAbABlACAAYQB0ACAAZABpAG4AbgBlAHI\u003d,/v8AZgBhAGwAcwBl,/v8ANgA6ADIANQAgAHAAbQ\u003d\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AbQBlAGUAdAAgAHAAZQBvAHAAbABlACAAYQB0ACAAZgB1AG4AYwB0AGkAbwBuACAAeAAvAHkALwB6ACAAdwBoAGEAdABlAHYAZQBy,/v8AZgBhAGwAcwBl,/v8ANwA6ADEAMgBhAG0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8ALwBhAHQAIABtAHkAcwB0AGUAcgBpAG8AdQBz,/v8AZgBhAGwAcwBl,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8ALwBiAHkAIABtAHkAcwB0AGUAcgBpAG8AdQBzACAAbgB1AG0AYgBlAHIAIAAy,/v8AZgBhAGwAcwBl,/v8AWwB1AG4AawBuAG8AdwBuAF0\u003d","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"/v8ARABlAGEAZABsAGkAbgBl,/v8AcgB1AHMAaAAgAHQAaABpAHMAIABwAGwAZQBhAHMAZQ\u003d\u003d,/v8AZgBhAGwAcwBl,/v8AdwBoAGUAbgA/","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"/v8ARQB2AGUAbgB0,/v8AdwBvAHcAIAAgAG0AdQBjAGgAIAAgAHMAcABhAGMAZQ\u003d\u003d,/v8AZgBhAGwAcwBl,/v8AMQAwAGEAbQ\u003d\u003d","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"clarence-chew":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"random","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"mark","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"unmark","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"todo homework /at /by 1:23","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"todo other homework /options ignored","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"todo project 12","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"mark 0","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"mark -1","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"mark not a number","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"unmark not a number","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"mark 5","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"mark 6","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"event meet friends","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"event meet people at dinner /at 6:25 pm","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"event meet people at function x/y/z whatever /at oh no not this /by /at 7:12am","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"deadline /at mysterious","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"deadline /by mysterious number 2","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"deadline rush this please /by when? /option is ignored","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"delete 0","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"delete nan","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"delete 24","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"  event  wow  much  space / very /wow /at 10am","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"clarence-chew":47}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"REM delete data","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"if exist duke.txt del duke.txt","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"REM delete output from previous run","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"if exist ACTUAL1.TXT del ACTUAL1.TXT","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL1.TXT","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL1.TXT","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"REM compare the output to the expected output","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"FC ACTUAL1.TXT EXPECTED1.TXT","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"clarence-chew":14,"-":19}}]

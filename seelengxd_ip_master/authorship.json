[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"checkstyle {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"seelengxd":6,"-":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":" * Represents a deadline - a task with a due date.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"    private LocalDate by;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"     * Create a new Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"     * @param by Due date of deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     * Return whether the deadline is on the specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * @param date Specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     * @return whether the deadline is on the specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"        return this.by.equals(date);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"     * Return file representation of Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"     * @return \"D | {1 if done else 0} | {description} | {formattedDueDate}\".","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"    public String toFileRepresentation() {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"        return String.format(\"D | %s | %s\", super.toFileRepresentation(), this.by);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"     * Return new Deadline from file representation.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"     * @param rep String of file representation.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"     * @return Deadline instance.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"    public static Deadline fromFileRepresentation(String rep) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"seelengxd"},"content":"        String[] args \u003d rep.split(\" \\\\| \");","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"seelengxd"},"content":"        boolean isDone \u003d args[1].equals(\"1\");","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"seelengxd"},"content":"        String description \u003d args[2];","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"seelengxd"},"content":"        String date \u003d args[3];","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"seelengxd"},"content":"        Deadline result \u003d new Deadline(description, LocalDate.parse(date));","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"seelengxd"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"seelengxd"},"content":"            result.markDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"seelengxd"},"content":"        return result;","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"seelengxd"},"content":"     * Return String representation of Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"seelengxd"},"content":"     * @return \"[D] {[X] if done else [ ]} | {description} (by: {formattedBy})\"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"seelengxd"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"seelengxd"},"content":"        return String.format(\"[D] %s (by: %s)\",","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"seelengxd"},"content":"                super.toString(),","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"seelengxd"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\")));","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":67,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seelengxd":67}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":" * Main class of Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"    // For adding some colour","lastModifiedDate":"2022-08-12"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"     * Create a new instance of Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     * @param filePath File path of the data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"     * Loop that runs until user enters the exit command.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"     * DukeExceptions are caught here and printed with Ui.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"    public void run() {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"        ui.greet();","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"                ui.printLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"                ui.printError(e.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"            } finally {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"seelengxd"},"content":"                ui.printLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"seelengxd"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"seelengxd"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-12"},{"lineNumber":52,"author":{"gitId":"seelengxd"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"seelengxd":51,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":" * Representation of user-related errors for Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"    private final String message;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"     * Creates new DukeException with specified message.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"     * @param message Error to be displayed to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"     * Returns DukeException message.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"     * @return Message.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"        return this.message;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     * Returns String representation of DukeException - the message.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"     * @return Message.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"        return this.getMessage();","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":34}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":" * Represents an Event, a task at a specified time.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"    private LocalDate at;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"     * Initialise new event with description and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"     * @param description Description of Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"     * @param at Date of event.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     * Return whether Event is on that date.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * @param date Specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     * @return Boolean of whether Event is on that date.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"        return this.at.equals(date);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"     * Return file representation of Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"     * @return \"E | {1 if done else 0} | {description} | {at}\"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"    public String toFileRepresentation() {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"        return String.format(\"E | %s | %s\", super.toFileRepresentation(), this.at);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"     * Return new Event instance from file representation","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"     * @param rep String representation of Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"     * @return New Event instance.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"    public static Event fromFileRepresentation(String rep) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"seelengxd"},"content":"        String[] args \u003d rep.split(\" \\\\| \");","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"seelengxd"},"content":"        boolean isDone \u003d args[1].equals(\"1\");","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"seelengxd"},"content":"        String description \u003d args[2];","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"seelengxd"},"content":"        String date \u003d args[3];","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"seelengxd"},"content":"        Event result \u003d new Event(description, LocalDate.parse(date));","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"seelengxd"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"seelengxd"},"content":"            result.markDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"seelengxd"},"content":"        return result;","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"seelengxd"},"content":"     * Return String representation of Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"seelengxd"},"content":"     * @return \"[E] | {[X] if done else [ ]} | {description} | {formattedAt}\"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"seelengxd"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"seelengxd"},"content":"        return String.format(\"[E] %s (at: %s)\",","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"seelengxd"},"content":"                super.toString(),","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"seelengxd"},"content":"                this.at.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\")));","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":67,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seelengxd":67}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"import duke.command.TaskOnDateCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":" * Represents all command parsing logic.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"public class Parser {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"     * Parse user command into Command instance to execute.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"     * @param fullCommand String representing the command input of the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"     * @return Command to be executed.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException If the fullCommand is not valid.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"        String[] inputArray \u003d fullCommand.split(\" +\", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"        String firstWord \u003d inputArray[0];","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"        String argsString \u003d \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"        if (inputArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"            argsString \u003d inputArray[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"        Command resultCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"        // commands","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new ExitCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"        case \"list\":","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new ListCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new MarkCommand(parseInt(argsString));","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new UnmarkCommand(parseInt(argsString));","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"seelengxd"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new AddCommand(parseTodo(argsString));","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"seelengxd"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new AddCommand(parseDeadline(argsString));","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"seelengxd"},"content":"        case \"event\":","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new AddCommand(parseEvent(argsString));","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"seelengxd"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new DeleteCommand(parseInt(argsString));","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"seelengxd"},"content":"        case \"on\":","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new TaskOnDateCommand(LocalDate.parse(argsString));","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"seelengxd"},"content":"        case \"find\":","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"seelengxd"},"content":"            resultCommand \u003d new FindCommand(argsString);","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"seelengxd"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"seelengxd"},"content":"        default:","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"I don\u0027t know this command!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"seelengxd"},"content":"        return resultCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"seelengxd"},"content":"     * Parse description into Todo instance","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"seelengxd"},"content":"     * @param description Description of Todo","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"seelengxd"},"content":"     * @return Todo instance","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException If description is empty.","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"seelengxd"},"content":"    public static Todo parseTodo(String description) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"seelengxd"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"seelengxd"},"content":"        return new Todo(description);","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"seelengxd"},"content":"     * Parse argsString into Deadline instance","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"seelengxd"},"content":"     * @param argsString String of format \"description /by date\"","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"seelengxd"},"content":"     * @return Deadline instance.","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException If argsString format is wrong.","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"seelengxd"},"content":"    public static Deadline parseDeadline(String argsString) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"seelengxd"},"content":"        String[] args \u003d argsString.split(\" */by *\");","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"seelengxd"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"Wrong usage of deadline.\\nUsage: deadline some description /by some date\");","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"seelengxd"},"content":"        String description \u003d args[0];","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"seelengxd"},"content":"        String by \u003d args[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"seelengxd"},"content":"        LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"seelengxd"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"Description should not be empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"seelengxd"},"content":"        return new Deadline(description, byDate);","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"seelengxd"},"content":"     * Parse argsString into Event instance.","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"seelengxd"},"content":"     * @param argsString String of format \"description /at date\"","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"seelengxd"},"content":"     * @return Event instance","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException If argsString format is wrong.","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"seelengxd"},"content":"    public static Event parseEvent(String argsString) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"seelengxd"},"content":"        String[] args \u003d argsString.split(\" */at *\");","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"seelengxd"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"Wrong usage of event.\\nUsage: event some description /at some date\");","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"seelengxd"},"content":"        String description \u003d args[0];","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"seelengxd"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"Description should not be empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"seelengxd"},"content":"        String at \u003d args[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"seelengxd"},"content":"        LocalDate atDate \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"seelengxd"},"content":"        return new Event(description, atDate);","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"seelengxd"},"content":"     * Parse String to Integer","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"seelengxd"},"content":"     * @param number String representation of integer.","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"seelengxd"},"content":"     * @return Integer with value integer.","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException If number is not of number format.","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"seelengxd"},"content":"    public static int parseInt(String number) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"seelengxd"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"seelengxd"},"content":"            return Integer.parseInt(number);","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"seelengxd"},"content":"        } catch (java.lang.NumberFormatException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(String.format(\"%s is not a number. e.g 5 is a number, five is a string.\", number));","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":140,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":140}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import java.io.File;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":" * Represents all of Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"public class Storage {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    private String filePath;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     * Initialise Storage with filePath.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"     * @param filePath filePath of data file.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * Load the data from the specified filePath. Creates an empty file if not found.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     * @return ArrayList containing Task used to initialise TaskList","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException if file was wrongly modified, causing errors in reading the file.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();;","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"        File dataDirectory \u003d new File(\"data\");","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"        File dataFile \u003d new File(this.filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"            if (dataFile.exists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"                Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"                    String line \u003d s.nextLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"                    char firstLetter \u003d line.charAt(0);","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"                    Task task;","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"                    switch (firstLetter) {","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"                        task \u003d Todo.fromFileRepresentation(line);","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"                        break;","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"seelengxd"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"seelengxd"},"content":"                        task \u003d Event.fromFileRepresentation(line);","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"seelengxd"},"content":"                        break;","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"seelengxd"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"seelengxd"},"content":"                        task \u003d Deadline.fromFileRepresentation(line);","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"seelengxd"},"content":"                        break;","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"seelengxd"},"content":"                    default:","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"seelengxd"},"content":"                        throw new DukeException(\"Did you wrongly modify the file?\");","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"seelengxd"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"seelengxd"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"seelengxd"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"seelengxd"},"content":"            } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"seelengxd"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"seelengxd"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"seelengxd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"seelengxd"},"content":"            System.out.println(\"This should not happen... \" + e.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"seelengxd"},"content":"        return taskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"seelengxd"},"content":"     * Save taskList to specified filepath.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException if Duke has insufficient permissions to write to file.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"seelengxd"},"content":"    public void saveFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"seelengxd"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"seelengxd"},"content":"            File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"seelengxd"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"seelengxd"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"seelengxd"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"seelengxd"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"seelengxd"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"seelengxd"},"content":"                fw.write(task.toFileRepresentation() + System.lineSeparator());","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"seelengxd"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"seelengxd"},"content":"            fw.close();","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"seelengxd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"Where are you running this file? \" + e.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":86}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":" * Abstract class that all Tasks inherit from.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"    private String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"    private boolean done;","lastModifiedDate":"2022-08-12"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"     * Create a task.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-12"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-12"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-12"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"     * Mark task as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-12"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-08-12"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"     * Mark task as not done.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-08-12"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-12"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"     * Return common part of all tasks for file representation","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"     * @return \"{1 if done else 0} | {description}\"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"    public String toFileRepresentation() {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"        return String.format(\"%d | %s\", this.done ? 1 : 0, this.description);","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"     * Returns nothing because abstract tasks should not be created.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"     * @param rep String of task representation","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"seelengxd"},"content":"     * @return Nothing.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"seelengxd"},"content":"    public static Task fromFileRepresentation(String rep) {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"seelengxd"},"content":"        return null;","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"seelengxd"},"content":"     * Returns if tasks is on that date.","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"seelengxd"},"content":"     * If no date, default to false.","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"seelengxd"},"content":"     * @param date Specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"seelengxd"},"content":"     * @return Whether the task is on the specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"seelengxd"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"seelengxd"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"seelengxd"},"content":"    /*","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"seelengxd"},"content":"     * Return whether the description includes the search query","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"seelengxd"},"content":"     * @param searchQuery String to search.","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"seelengxd"},"content":"     * @return whether the description includes the search query","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"seelengxd"},"content":"    public boolean descriptionIncludes(String searchQuery) {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"seelengxd"},"content":"        return description.contains(searchQuery);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"seelengxd"},"content":"     * Return String representation of Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"seelengxd"},"content":"     * @return \"{[X] if done else [ ]} | {description}\"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-12"},{"lineNumber":76,"author":{"gitId":"seelengxd"},"content":"    public String toString() {","lastModifiedDate":"2022-08-12"},{"lineNumber":77,"author":{"gitId":"seelengxd"},"content":"        char doneFlag \u003d done ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2022-08-12"},{"lineNumber":78,"author":{"gitId":"seelengxd"},"content":"        return String.format(\"[%c] %s\", doneFlag, description);","lastModifiedDate":"2022-08-12"},{"lineNumber":79,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":80,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-12"}],"authorContributionMap":{"seelengxd":80}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import static java.util.stream.Collectors.toCollection;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     * Initialise an empty task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     * Initialise a task list with existing tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * @param taskArrayList List of tasks to initialize with.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"        this.taskArrayList \u003d taskArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"     * Return number of tasks in the task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"     * @return Number of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"    public int taskCount() {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        return this.taskArrayList.size();","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"     * @param task Task to add.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"        this.taskArrayList.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"seelengxd"},"content":"     * Returns a specified task.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"seelengxd"},"content":"     * @param index Index of task (1 - indexed)","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"seelengxd"},"content":"     * @return Task with that index.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException if index is more than the number of tasks or index \u003c 1.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"seelengxd"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"seelengxd"},"content":"        int numTasks \u003d this.taskArrayList.size();","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"seelengxd"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"You don\u0027t have tasks.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"seelengxd"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(\"Task number should be at least 1.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"seelengxd"},"content":"        if (index \u003e numTasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"seelengxd"},"content":"            throw new DukeException(String.format(\"You only have %d tasks.\", numTasks));","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"seelengxd"},"content":"        // The user gives 1-indexed numbers.","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"seelengxd"},"content":"        return this.taskArrayList.get(index - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"seelengxd"},"content":"     * Marks task as done and returns it.","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"seelengxd"},"content":"     * @param index Index of task (1 - indexed)","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"seelengxd"},"content":"     * @return Task marked as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException if index is more than the number of tasks or index \u003c 1.","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"seelengxd"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"seelengxd"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"seelengxd"},"content":"        task.markDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"seelengxd"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"seelengxd"},"content":"     * Marks task as not done and returns it.","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"seelengxd"},"content":"     * @param index Index of task (1 - indexed)","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"seelengxd"},"content":"     * @return Task unmarked as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException if index is more than the number of tasks or index \u003c 1.","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"seelengxd"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"seelengxd"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"seelengxd"},"content":"        task.unmarkDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"seelengxd"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"seelengxd"},"content":"     * Deletes task and returns deleted task.","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"seelengxd"},"content":"     * @param index Index of task (1 - indexed)","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"seelengxd"},"content":"     * @return Deleted task.","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException if index is more than the number of tasks or index \u003c 1.","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"seelengxd"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"seelengxd"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"seelengxd"},"content":"        this.taskArrayList.remove(index - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"seelengxd"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"seelengxd"},"content":"     * Returns tasks on that date.","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"seelengxd"},"content":"     * @param date","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"seelengxd"},"content":"     * @return ArrayList of tasks on specified date","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"seelengxd"},"content":"    public ArrayList\u003cTask\u003e getTasksOn(LocalDate date) {","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"seelengxd"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d this.taskArrayList.stream()","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"seelengxd"},"content":"                .filter(task -\u003e task.isOn(date))","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"seelengxd"},"content":"                .collect(toCollection(ArrayList::new));","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"seelengxd"},"content":"        return filteredTaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"seelengxd"},"content":"     * Returns a filtered task list where description contains the search query.","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"seelengxd"},"content":"     * @param searchQuery String to search for.","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"seelengxd"},"content":"     * @return ArrayList of type Task matching the search description.","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"seelengxd"},"content":"    public ArrayList\u003cTask\u003e searchTasks(String searchQuery) {","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"seelengxd"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d this.taskArrayList.stream()","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"seelengxd"},"content":"                .filter(task -\u003e task.descriptionIncludes(searchQuery))","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"seelengxd"},"content":"                .collect(toCollection(ArrayList::new));","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"seelengxd"},"content":"        return filteredTaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"seelengxd"},"content":"     * Returns iterator so TaskList is iterable","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"seelengxd"},"content":"     * @return Iterator to iterate tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"seelengxd"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"seelengxd"},"content":"        return this.taskArrayList.iterator();","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":138}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":" * Enum of current task types.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"    Todo, Deadline, Event","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seelengxd":8}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":" * Represents a task with no date information.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"     * Return the string representation of a Todo.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"     * @return \"[T] {taskDescription}\"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"     * Return the file representation of a Todo.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"     * @return \"T | {1 if done else 0} | {taskDescription}\"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"    public String toFileRepresentation() {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"        return \"T | \" + super.toFileRepresentation();","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"     * Convert string representation to Todo.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"     * @param rep String representation of Todo","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"     * @return new Todo","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"    public static Todo fromFileRepresentation(String rep) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        String[] args \u003d rep.split(\" \\\\| \");","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"        boolean isDone \u003d args[1].equals(\"1\");","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"        String description \u003d args[2];","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"        Todo result \u003d new Todo(description);","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"            result.markDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"        return result;","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seelengxd":45}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":" * Represents the user interface and handles all input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":" * Including styles like colours, indentation and lines.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"public class Ui {","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"    // For adding some colour","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"    private static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"     * Takes in user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"     * @return one line of user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"        return scanner.nextLine().strip();","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     * Print line with indentation.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"     * If message spans multiple lines, they are indented appropriately,","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"     * @param toPrint String to print.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"    public void printWithIndent(String toPrint) {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"        System.out.println(\"\\t\" + toPrint.replace(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"     * Prints an indented line.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"    public void printLine() {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"        printWithIndent(\"____________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"     * Prints error message in red with a sad face.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"seelengxd"},"content":"     * @param error String of the error message.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"seelengxd"},"content":"    public void printError(String error) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"seelengxd"},"content":"        printWithIndent(ANSI_RED + \"☹ Oh no! \" + error + ANSI_RESET);","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"seelengxd"},"content":"     * Prints \"Now you have {taskCount} tasks in the list.\"","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"seelengxd"},"content":"     * @param taskCount Number of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"seelengxd"},"content":"    public void printTaskCount(int taskCount) {","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"seelengxd"},"content":"        printWithIndent(String.format(\"Now you have %d tasks in the list.\", taskCount));","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"seelengxd"},"content":"     * Greets the user with a coloured logo.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"seelengxd"},"content":"    public void greet() {","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"seelengxd"},"content":"        printLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"seelengxd"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"seelengxd"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"seelengxd"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"seelengxd"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"seelengxd"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"seelengxd"},"content":"        printWithIndent(\"Hello from\\n\" + ANSI_CYAN + logo + ANSI_RESET);","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"seelengxd"},"content":"        printWithIndent(\"How can I help you today?\");","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"seelengxd"},"content":"        printLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":71}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":" * Represents all commands related to adding all kinds of tasks (Todo, Event, Deadline).","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    private Task task;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"     * Adds task to list and prints the task and task count.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"     * Also saves the updated taskList to storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\" \" + task);","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"        ui.printTaskCount(taskList.taskCount());","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":" * Super class of all Commands.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"     * Returns whether the Command is the Exit command.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"     * @return Whether the Command is the Exit command.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"     * Abstract execute method for each Command class to run once in the Duke main loop.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":" * Represents Command to delete any kind of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    private int index;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     * Create delete command.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * Deletes task and prints to user.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     * Also saves the updated taskList to storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"        Task task \u003d taskList.deleteTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"  \" + task);","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"        ui.printTaskCount(taskList.taskCount());","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":39}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":" * Represents the exit command to say bye to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"     * Return true because this is the exit command.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"     * @return true.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"        return true;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"     * Says bye to user.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import duke.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":" * Represents the command to find tasks based on a search query.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    private String searchQuery;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"     * Create FindCommand","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"     * @param searchQuery String to filter description for.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    public FindCommand(String searchQuery) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"        this.searchQuery \u003d searchQuery;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     * Prints out tasks that have the search query in the description.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d taskList.searchTasks(searchQuery);","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(String.format(\"Here are the tasks containing \u0027%s\u0027:\", searchQuery));","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"            Task task \u003d filteredTaskList.get(i);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"            ui.printWithIndent(i + 1 + \". \" + task);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"seelengxd":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":" * Represents the list command to list all of the user\u0027s tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"     * Prints out list of tasks individually with index.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.taskCount(); i++) {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"            ui.printWithIndent(i + \". \" + task);","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":" * Represents the command to mark tasks as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    private int index;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     * Create mark command","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * Marks task as done and prints it to user.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     * Also saves the updated taskList to storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"        Task task \u003d taskList.markTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"  \" + task);","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":38}},{"path":"src/main/java/duke/command/TaskOnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"import duke.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":" * Represents command to filter tasks for a specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"public class TaskOnDateCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"     * Create TaskOnDateCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"     * @param date Specified date to filter for.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"    public TaskOnDateCommand(LocalDate date) {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"     * Filters for tasks on a specified date and prints it to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"E, d MMM yyyy\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d taskList.getTasksOn(date);","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(String.format(\"Here are the tasks on %s:\", formattedDate));","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.size(); i++) {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"            Task task \u003d filteredTaskList.get(i);","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"seelengxd"},"content":"            ui.printWithIndent(i + 1 + \". \" + task);","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"seelengxd"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":42}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import duke.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":" * Represents command to unmark tasks as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    private int index;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"     * Creates UnmarkCommand","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"     * @param index Index of task to mark as not done.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"seelengxd"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"seelengxd"},"content":"     * Marks task as not done and prints it to user.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"seelengxd"},"content":"     * Also saves the updated taskList to storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"seelengxd"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"seelengxd"},"content":"     * @param ui Ui interface for input and output.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"seelengxd"},"content":"     * @param storage Storage for Duke\u0027s file operations.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"seelengxd"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"seelengxd"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"seelengxd"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"seelengxd"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"seelengxd"},"content":"        Task task \u003d taskList.unmarkTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"seelengxd"},"content":"        ui.printWithIndent(\"  \" + task);","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"seelengxd"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"seelengxd":38}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"public class EventTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"    public void testFileRepresentation() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"        assertEquals(\"E | 0 | test description | 2022-08-21\",","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"                     new Event(\"test description\",","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"                               LocalDate.parse(\"2022-08-21\")).toFileRepresentation());","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"seelengxd":17}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"    public void wrongCommandTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"idk\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"        assertEquals(\"I don\u0027t know this command!\", exception.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"seelengxd":15}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"seelengxd"},"content":"    public void testFilterDate() {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"seelengxd"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"seelengxd"},"content":"        Deadline deadline \u003d new Deadline(\"test deadline\", LocalDate.parse(\"2022-01-01\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"seelengxd"},"content":"        Event event \u003d new Event(\"test event\", LocalDate.parse(\"2022-02-02\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"seelengxd"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"seelengxd"},"content":"        taskList.addTask(event);","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"seelengxd"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d taskList.getTasksOn(LocalDate.parse(\"2022-02-02\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"seelengxd"},"content":"        assertEquals(filteredTaskList.size(), 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"seelengxd"},"content":"        assertEquals(filteredTaskList.get(0), event);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"seelengxd"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"seelengxd"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"seelengxd":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seelengxd"},"content":"todo borrow book","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"seelengxd"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"seelengxd"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"seelengxd"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"seelengxd"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"seelengxd"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"seelengxd"},"content":"mark 2","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seelengxd"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"seelengxd"},"content":"unmark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"seelengxd"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"seelengxd"},"content":"bye","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seelengxd":11}}]

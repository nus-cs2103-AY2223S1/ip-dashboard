[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":" * The Deadline class represents a task","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":" * with a specific deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"    private String deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"     * @param description description for the deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"     * @param deadline string that represents deadline of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * Overriding method of toString() for Deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     * @return the string representing Deadline task.","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + deadline + \")\";","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" * The Duke is a personalized chatbot.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"     * Enum Command that represents all of Duke\u0027s commands.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"    private enum Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"        BYE, LIST, MARK, UNMARK, TODO, EVENT, DEADLINE, DELETE;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    private static boolean terminate \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    private static Storage myStorage \u003d new Storage();","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * Displays error message.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * @param error The description for the error.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    private static void displayError(String error) {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"â˜¹ OOPS!!!\" + error);","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"     * Runs the given Duke command.","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"     * @param userInput user\u0027s input to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    private static void run(String userInput) {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"        String[] Strings \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        Command cmd \u003d Command.valueOf(Strings[0].toUpperCase());","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        switch (cmd) {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"            case BYE:","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"                terminate \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"            case LIST:","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"                myStorage.printStorage();","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"            case MARK:","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"                    mark(userInput);","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please enter a valid index to mark.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"                    unmark(userInput);","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please enter a valid index to unmark.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"            case TODO:","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"                    todo(userInput);","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please enter a task todo.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"            case EVENT:","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"                    event(userInput);","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please enter a event.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please only enter one event.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please use /at to specify event time.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"                   deadline(userInput);","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please enter a deadline.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please only enter one deadline.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Please use /by to specify deadline time.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"            case DELETE:","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"                try {","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"                    delete(userInput);","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"jchilling"},"content":"                    displayError(\"Sorry. Task does not exist.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"     * Mark task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"     * @param userInput user\u0027s input to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"    private static void mark(String userInput) {","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"        String input \u003d userInput.substring(5);","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"        myStorage.markDone(Integer.parseInt(input));","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"     * Mark task as not done.","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"jchilling"},"content":"     * @param userInput user\u0027s input to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"    private static void unmark(String userInput){","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"        String input \u003d userInput.substring(7);","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"        myStorage.unmarkDone(Integer.parseInt(input));","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"     * Delete a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"     * @param userInput user\u0027s input to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"jchilling"},"content":"    private static void delete(String userInput) {","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"        String input \u003d userInput.substring(7);","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"jchilling"},"content":"        myStorage.deleteTask(Integer.parseInt(input));","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"jchilling"},"content":"     * Calls storage to add a todo task.","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"jchilling"},"content":"     * @param userInput user\u0027s input to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"jchilling"},"content":"    private static void todo(String userInput) {","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"jchilling"},"content":"        myStorage.addTask(new ToDo(userInput.substring(5)));","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"jchilling"},"content":"     * Calls storage to add an event.","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"jchilling"},"content":"     * @param userInput user\u0027s input to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"jchilling"},"content":"     * @throws DukeException when user inputs more than one event.","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"jchilling"},"content":"    private static void event(String userInput) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"jchilling"},"content":"        userInput \u003d userInput.substring(6);","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"jchilling"},"content":"        String[] Strings \u003d userInput.split(\"/at\");","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"jchilling"},"content":"        if (Strings.length \u003e 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":138,"author":{"gitId":"jchilling"},"content":"            throw new DukeException();","lastModifiedDate":"2022-08-19"},{"lineNumber":139,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":140,"author":{"gitId":"jchilling"},"content":"        myStorage.addTask(new Event(Strings[0], Strings[1]));","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":142,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":143,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":144,"author":{"gitId":"jchilling"},"content":"     * Calls storage to add a deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":145,"author":{"gitId":"jchilling"},"content":"     * @param userInput user\u0027s input to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":146,"author":{"gitId":"jchilling"},"content":"     * @throws DukeException when user inputs more than one deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":147,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"jchilling"},"content":"    private static void deadline(String userInput) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":149,"author":{"gitId":"jchilling"},"content":"        userInput \u003d userInput.substring(9);","lastModifiedDate":"2022-08-19"},{"lineNumber":150,"author":{"gitId":"jchilling"},"content":"        String[] Strings \u003d userInput.split(\"/by\");","lastModifiedDate":"2022-08-19"},{"lineNumber":151,"author":{"gitId":"jchilling"},"content":"        if (Strings.length \u003e 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":152,"author":{"gitId":"jchilling"},"content":"            throw new DukeException();","lastModifiedDate":"2022-08-19"},{"lineNumber":153,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":154,"author":{"gitId":"jchilling"},"content":"        myStorage.addTask(new Deadline(Strings[0], Strings[1]));","lastModifiedDate":"2022-08-19"},{"lineNumber":155,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":156,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":157,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":158,"author":{"gitId":"jchilling"},"content":"     * The main program for Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":159,"author":{"gitId":"jchilling"},"content":"     * @param args command line arguments.","lastModifiedDate":"2022-08-20"},{"lineNumber":160,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":169,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":170,"author":{"gitId":"jchilling"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-16"},{"lineNumber":171,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":172,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":173,"author":{"gitId":"jchilling"},"content":"        while (!terminate) {","lastModifiedDate":"2022-08-19"},{"lineNumber":174,"author":{"gitId":"jchilling"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-08-16"},{"lineNumber":175,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-19"},{"lineNumber":176,"author":{"gitId":"jchilling"},"content":"                run(userInput);","lastModifiedDate":"2022-08-19"},{"lineNumber":177,"author":{"gitId":"jchilling"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":178,"author":{"gitId":"jchilling"},"content":"                displayError(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-19"},{"lineNumber":179,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":180,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":181,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":182,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jchilling":174,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":" * The DukeException Class represents","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":" * exceptions unique to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"    public DukeException() {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"        super();","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":" * The Event class represents a task","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":" * with a specific date or time.","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"    private String eventTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"     * Constructs a Event object","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"     * @param description description for the event.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"     * @param eventTime string that represents time of event.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * Overriding method of toString() for Event.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     * @return the string representing Event task.","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + eventTime + \")\";","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":26}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" * The Storage Class represents the","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":" * storage for Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"public class Storage {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"    private ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"     * Prints current tasks in the storage to user.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public void printStorage() {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"        for(int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"            Task currTask \u003d this.storage.get(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"            System.out.println((i + 1) + \".\" + currTask.toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"     * Mark the specified task in the storage as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"     * @param i Specified task.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    public void markDone(int i) {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"        storage.get(i - 1).markDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        System.out.println(storage.get(i - 1).toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"     * Mark the specified task in the storage as not done.","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"     * @param i Specified task.","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    public void unmarkDone(int i) {","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        storage.get(i - 1).unmarkDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        System.out.println(storage.get(i - 1).toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"     * Deletes the specified task in the storage.","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"     * @param i Specified task.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"        Task target \u003d storage.get(i - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"        System.out.println(target.toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        storage.remove(target);","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"        if (storage.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"     * Adds the Task into the storage.","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"     * @param t Specified Task.","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"        this.storage.add(t);","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"        System.out.println(t);","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"        if (storage.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jchilling":71}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":" * The Task class represents a task","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":" * added to the storage.","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"    private String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"     * Construct a Task object.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"     * @param description description for Task.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * Mark the task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"     * Mark the task as not done.","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"     * Return an icon that represents whether the task is done.","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"     * @return String representation of status.","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"     * Overriding method of toString() for Task.","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"     * @return the string representing Task.","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jchilling":48}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":" * The ToDo class represents a task","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":" * the user specified that needs to be done.","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"     * Constructs a ToDo object.","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"     * @param description description for the ToDo task.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"     * Overriding method of toString() for ToDo.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"     * @return the string representing ToDo task.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"todo read book","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"todo","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"event bday party /at 8/14","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"event","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"event bday party /at 8/14 move-in /at 8/30","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"deadline","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"mark 0","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"mark 1","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"unmark 1","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"unmark 0","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"delete -1","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"delete 1","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"list","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"blah","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jchilling":1,"-":21}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jchilling":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jchilling":6,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"T | 0 | sleep","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"E | 0 | poop | Aug 22 2022 4:00PM","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"T | 0 | sleep","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"T | 0 | sleep","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"T | 0 | todo","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"T | 0 | cry","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"T | 0 | sleep cry","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"T | 0 | 5","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"E | 0 | sleep | 1000","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"E | 0 | LOL | 8�� 27 2022 6:00�U��","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"E | 0 | sleep | 4pm","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"jchilling":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * The Duke is a personalized chatbot.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    private static Storage myStorage;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * Constructor that initializes Duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     * @param filePath The specified file path.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    private Duke(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        myStorage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"            tasks \u003d new TaskList(myStorage.load());","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"            File path \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"                path.createNewFile();","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"                path.getParentFile().mkdirs();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"     * Run Duke chatbot.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"    private void run() {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"                Command cmd \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"                cmd.execute(tasks, ui, myStorage);","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"                isExit \u003d cmd.isExit();","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"                ui.showError(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"            } catch (DukeException e2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"                ui.showError(e2.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"     * The main program for duke.Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"     * @param args command line arguments.","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jchilling":67,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":" * The duke.DukeException Class represents","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":" * exceptions unique to duke.Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"    public DukeException(String description) {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.commands.DateCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":" * The Parser class deals with making sense of the user command.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     * Make sense of the user\u0027s input by parsing.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     * @param userInput The command user input in Duke command line.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"     * @return A Command object representing user command.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"     * @throws DukeException when user command is invalid.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"        String[] strings \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        switch (strings[0]) {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"                if (strings.length \u003e 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"                    throw new DukeException(\"Invalid Input.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"                return new DeleteCommand(Integer.parseInt(strings[1]));","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please enter an index to delete.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"                userInput \u003d userInput.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"                return new TodoCommand(userInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please enter a task todo.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"                userInput \u003d userInput.substring(6);","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"                String[] stringsEvent \u003d userInput.split(\" /at \");","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"                if (stringsEvent.length \u003e 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"                    throw new DukeException(\"Please only enter one event.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"                return new EventCommand(stringsEvent);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please enter an event.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please use /at to specify event time.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"                userInput \u003d userInput.substring(9);","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"                String[] stringsEvent \u003d userInput.split(\" /by \");","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"                if (stringsEvent.length \u003e 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"                    throw new DukeException(\"Please only enter one deadline.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"                return new DeadlineCommand(stringsEvent);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please enter a deadline.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please use /by to specify event time.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"                if (strings.length \u003e 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"                    throw new DukeException(\"Invalid Input.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"                return new MarkCommand(Integer.parseInt(strings[1]));","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please enter an index to mark.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"                if (strings.length \u003e 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"jchilling"},"content":"                    throw new DukeException(\"Invalid Input.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"                return new UnmarkCommand(Integer.parseInt(strings[1]));","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please enter an index to unmark.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"        case DateCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"                if (strings.length \u003e 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"                    throw new DukeException(\"Invalid Input.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"                return new DateCommand(strings[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please enter a date.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"            if (strings.length \u003e 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"jchilling"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"            if (strings.length \u003e 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"jchilling"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"jchilling"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"jchilling"},"content":"                if (strings.length \u003e 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"jchilling"},"content":"                    throw new DukeException(\"Invalid Input.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"jchilling"},"content":"                return new FindCommand(strings[1]);","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"jchilling"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"jchilling"},"content":"                throw new DukeException(\"Please enter a keyword.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"jchilling"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"jchilling"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":135}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":" * The Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"public class Storage {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    /* Local file path for Duke*/","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    private String filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"     * Save the tasks in task list to local storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"     * @param tasks ArrayList that represents task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"                fw.write(t.toStore());","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"            fw.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Unable to save file.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"     * Load local storage to task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"     * @return ArrayList that represents task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"     * @throws FileNotFoundException when local storage file is not found.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"        File localStorage \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"        ArrayList\u003cTask\u003e fromStorage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"        Scanner sc \u003d new Scanner(localStorage);","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"            String[] strings \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"            if (strings[0].equals(\"T\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"                fromStorage.add(new ToDo(Integer.parseInt(strings[1]),","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"                        strings[2]));","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"            } else if (strings[0].equals(\"E\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"                fromStorage.add(new Event(Integer.parseInt(strings[1]),","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"                        strings[2], strings[3]));","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"            } else if (strings[0].equals(\"D\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"                fromStorage.add(new Deadline(Integer.parseInt(strings[1]),","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"                        strings[2], strings[3]));","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"        return fromStorage;","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":71}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":" * The TaskList class contains the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":" * The TaskList class contains the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"public class TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public TaskList(ArrayList\u003cTask\u003e fromStorage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        this.taskList \u003d fromStorage;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        return taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    public int getTasksNumber() {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"     * Adds the Task into the storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"     * @param t Specified Task.","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"        this.taskList.add(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"     * Deletes the specified task in the storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"     * @param i Specified task.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"    public Task deleteTask(int i) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"            Task target \u003d taskList.get(i - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"            taskList.remove(target);","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"            return target;","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"            throw new DukeException(\"Task not found.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"     * Gets the tasks on a specified date.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"     * @param date LocalDate object that represents specified date.","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"     * @return ArrayList that represents all tasks on specified date.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"    public ArrayList\u003cTask\u003e getTasksOnDate(LocalDate date) {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"            if (t.compareDate(date)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"                temp.add(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"        return temp;","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"            if (t.toString().contains(keyword)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"                temp.add(t);","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"        return temp;","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"     * Mark the specified task in the storage as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"     * @param i Specified task.","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"    public Task markDone(int i) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"            Task target \u003d taskList.get(i - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"            target.markDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"            return target;","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"            throw new DukeException(\"Task not found.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"     * Mark the specified task in the storage as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"     * @param i Specified task","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"    public Task unmarkDone(int i) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"            Task target \u003d taskList.get(i - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"jchilling"},"content":"            target.unmarkDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"            return target;","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"            throw new DukeException(\"Task not found\");","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":111}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" * The Ui class deals with interactions with users.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"public class Ui {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    /* The scanner that reads input*/","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     * Reads the user\u0027s command.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * @return The string representing the user\u0027s input.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        return command;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"     * Show the Duke\u0027s welcome message to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"     * Show line to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"_______\");","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"     * Show loading error to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"File not found.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"     * Show a message that a specified task has been deleted from the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"     * @param t The specified task deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"     * @param taskList The task list the specified task is deleted from.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"    public void showDelete(Task t, TaskList taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"        if (taskList.getTasksNumber() \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Now you have \" + taskList.getTasksNumber() + \" tasks in the list.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"     * Show a message that a specified task has been added to the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"     * @param t The specified task to be added.","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"     * @param taskList The task list the specified task is added to.","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"    public void showAddTask(Task t, TaskList taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"        System.out.println(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"        if (taskList.getTasksNumber() \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Now you have \" + taskList.getTasksNumber() + \" tasks in the list.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"     * Show a message that a specified task has been marked done.","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"     * @param t The specified task to be marked done.","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"jchilling"},"content":"    public void showMark(Task t) {","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"        System.out.println(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"     * Show a message that a specified task has been marked undone.","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"     * @param t The specified task to be marked undone.","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"    public void showUnmark(Task t) {","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"        System.out.println(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"     * Show all the tasks in the task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"jchilling"},"content":"     * @param taskList The specified task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"    public void showTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"jchilling"},"content":"            Task currTask \u003d taskList.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"            System.out.println((i + 1) + \".\" + currTask.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"jchilling"},"content":"     * Show all tasks on a specified date.","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"     * @param onDateTasks ArrayList that represents all tasks on date.","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"jchilling"},"content":"    public void showGetDate(ArrayList\u003cTask\u003e onDateTasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"jchilling"},"content":"        for (Task t : onDateTasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"jchilling"},"content":"            System.out.println(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"jchilling"},"content":"        int count \u003d onDateTasks.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"jchilling"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"YAY! You have no deadlines/events on this day.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"jchilling"},"content":"        } else if (onDateTasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Shag man. You have \" + count + \" deadline/event on this day.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"jchilling"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Shag man. You have \" + count + \" deadlines/events on this day.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"jchilling"},"content":"    public void showFoundTasks(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"jchilling"},"content":"        int count \u003d foundTasks.size();","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"jchilling"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"There is no matching task in your list.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"jchilling"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"jchilling"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"jchilling"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"jchilling"},"content":"            System.out.println((i + 1) + \".\" + foundTasks.get(i));","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"jchilling"},"content":"     * Show error message.","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"jchilling"},"content":"     * @param error The description for the error.","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"jchilling"},"content":"    public void showError(String error) {","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"OOPS!!!\" + error);","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"jchilling"},"content":"     * Show bye message to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"jchilling"},"content":"    public void showBye() {","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"jchilling"},"content":"        System.out.println(\"Bye, hope to see you again next time!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":161}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":" * The ByeCommand class represents user command bye.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        ui.showBye();","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":29}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" * The abstract Command class represents a command","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * entered by user.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"     * Executes the Command.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"     * @param tasks Specified task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     * @param ui Specified Ui.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * @param storage Specified storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * @throws DukeException when Command cannot be successfully executed.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     * Checks if the Command is the ByeCommand.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"     * @return true only when Command is ByeCommand.","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":28}},{"path":"src/main/java/duke/commands/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":" * The DateCommand class represents user command date.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"date\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    private String userDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"     * Constructor for DateCommand that takes in","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"     * a specified date as a String.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"     * @param userDescription Specified date.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    public DateCommand(String userDescription) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        this.userDescription \u003d userDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"            LocalDate targetDate \u003d LocalDate.parse(userDescription);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"            ArrayList\u003cTask\u003e onDateCount \u003d tasks.getTasksOnDate(targetDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"            ui.showGetDate(onDateCount);","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"            throw new DukeException(\"Please enter date in yyyy-M-d format.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":51}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" * The DeadlineCommand class represents user command deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    private String[] userDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * Constructor of DeadlineCommand that takes in","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     * String Array represting user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     * @param userDescription Specified user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    public DeadlineCommand(String[] userDescription) {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        this.userDescription \u003d userDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"            Task deadline \u003d new Deadline(userDescription[0], userDescription[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"            storage.save(tasks.getTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"            ui.showAddTask(deadline, tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"            throw new DukeException(\"Please use /at to specify event time.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":43}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * The DeleteCommand class represents user command delete.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    private int i;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * Constructor for DeleteCommand that takes in","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * an integer representing Task to delete.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     * @param i Specified index.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    public DeleteCommand(int i) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        this.i \u003d i;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        Task t \u003d tasks.deleteTask(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        ui.showDelete(t, tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":37}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" * The EventCommand class represents user command event.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    private String[] userDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * Constructor of EventCommand that takes in","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * String Array represting user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     * @param userDescription Specified user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    public EventCommand(String[] userDescription) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        this.userDescription \u003d userDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"            Task event \u003d new Event(userDescription[0], userDescription[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"            tasks.addTask(event);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"            storage.save(tasks.getTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"            ui.showAddTask(event, tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"            throw new DukeException(\"Please use /at to specify event time.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":43}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    private String keyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"jchilling":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":" * The ListCommand class represents user command list.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"        ui.showTasks(tasks.getTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":23}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * The MarkCommand class represents user command mark.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    private int index;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     * Constructor for MarkCommand that takes in","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * an integer representing Task to mark done.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * @param i Specified index.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public MarkCommand(int i) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        this.index \u003d i;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        Task t \u003d tasks.markDone(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        ui.showMark(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":36}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * The TodoCommand class represents user command todo.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    private String userDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * Constructor for ToDoCommand that takes in","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * user input as a String.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     * @param userDescription Specified user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    public TodoCommand(String userDescription) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        this.userDescription \u003d userDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        Task t \u003d new ToDo(userDescription);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        tasks.addTask(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"        ui.showAddTask(t, tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":38}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * The UnmarkCommand class represents user command unmark.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    private int index;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     * Constructor for UnmarkCommand that takes in","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * an integer representing Task to mark undone.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * @param i Specified index.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public UnmarkCommand(int i) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        this.index \u003d i;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        Task t \u003d tasks.unmarkDone(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        ui.showUnmark(t);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"jchilling":36}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" * The duke.task.Deadline class represents a task","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * with a specific deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    private String ddl;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * @param description description for the deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * @param deadline string that represents deadline of task.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"            LocalDateTime localDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"            localDateTime \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"            this.deadline \u003d localDateTime.toLocalDate();","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"            this.ddl \u003d localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"                String[] strings \u003d deadline.split(\" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"                this.deadline \u003d LocalDate.parse(strings[0]);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"                this.ddl \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"                if (strings.length \u003e 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"                    this.ddl +\u003d \" \" + deadline.substring(deadline.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"                this.ddl \u003d deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"     * Constructor for Deadline when loaded from Storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"     * @param i Mark status.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"     * @param description Specified Deadline description.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"     * @param deadline Specified Deadline date.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"    public Deadline(int i, String description, String deadline) {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"        this.ddl \u003d deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"            this.markDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"    public boolean compareDate(LocalDate date) {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"        return date.equals(this.deadline);","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"    public String toStore() {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"        return \"D\" + \" | \" + super.toStore() + \" | \" + this.ddl;","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"     * Overriding method of toString() for duke.task.Deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"     * @return the string representing duke.task.Deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + ddl + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":75}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":" * The Event class represents a task","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":" * with a specific date or time.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    private String eventAt;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     * Constructs a Event object","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     * @param description description for the event.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"     * @param eventDate string that represents time of event.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"    public Event(String description, String eventDate) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"            LocalDateTime localDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"            localDateTime \u003d LocalDateTime.parse(eventDate, DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"            this.eventDate \u003d localDateTime.toLocalDate();","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"            this.eventAt \u003d localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"                String[] strings \u003d eventDate.split(\" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"                this.eventDate \u003d LocalDate.parse(strings[0]);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"                this.eventAt \u003d this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"                if (strings.length \u003e 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"                    this.eventAt +\u003d \" \" + eventDate.substring(eventDate.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"                this.eventAt \u003d eventDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    ","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"     * Constructor for Event when loaded from Storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"     * @param i Mark status.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"     * @param description Specified Event description.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"     * @param eventAt Specified Event date.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"    public Event(int i, String description, String eventAt) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"        this.eventAt \u003d eventAt;","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"            this.markDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"    public boolean compareDate(LocalDate date) {","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"        return date.equals(this.eventDate);","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"    public String toStore() {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"        return \"E\" + \" | \" + super.toStore() + \" | \" + this.eventAt;","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"     * Overriding method of toString() for duke.task.Event.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"     * @return the string representing duke.task.Event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventAt + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":" * The Task class represents a task","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":" * added to the storage.","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"    private String description;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"     * Construct a Task object.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"     * @param description description for Task.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"     * Mark the task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"     * Mark the task as not done.","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"     * Return an icon that represents whether the task is done.","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"     * @return String representation of status.","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"     * Return the Task in the form it is stored in local.","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"     * @return Task in store form.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"    public String toStore() {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"        return this.isDone ? \"1\" : \"0\" + \" | \" + this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"     * Compare date between tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"     * * @param date Specified date of task.","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"     * @return true only if both task on the same date.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"    public abstract boolean compareDate(LocalDate date);","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"     * Overriding method of toString() for duke.task.Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"     * @return the string representing duke.task.Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jchilling":70}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":" * The ToDo class represents a task","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":" * the user specified that needs to be done.","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"     * Constructs a ToDo object.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"     * @param description description for the ToDo task.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    public ToDo(int i, String description) {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"        super(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"            this.markDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    public String toStore() {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        return \"T\" + \" | \" + super.toStore();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"    public boolean compareDate(LocalDate date) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"     * Overriding method of toString() for duke.task.ToDo.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"     * @return the string representing duke.task.ToDo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":45}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"import duke.commands.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"bruh\");","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"    public void parse_mark_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"mark 1\") instanceof MarkCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jchilling"},"content":"    public void parse_markNoInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please enter an index to mark.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"jchilling"},"content":"    public void parse_markMoreThanOneInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"mark 2 3\");","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Invalid Input.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"jchilling"},"content":"    public void parse_markNotIntInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"mark z\");","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jchilling"},"content":"    public void parse_unmark_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"unmark 1\") instanceof UnmarkCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"jchilling"},"content":"    public void parse_unmarkNoInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"unmark\");","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please enter an index to unmark.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"jchilling"},"content":"    public void parse_unmarkMoreThanOneInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"unmark 2 3\");","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Invalid Input.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"jchilling"},"content":"    public void parse_unmarkNotIntInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"unmark z\");","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"jchilling"},"content":"    public void parse_delete_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"delete 1\") instanceof MarkCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"jchilling"},"content":"    public void parse_deleteNoInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"delete\");","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please enter an index to delete.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"jchilling"},"content":"    public void parse_deleteMoreThanOneInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"delete 2 3\");","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Invalid Input.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"jchilling"},"content":"    public void parse_deleteNotIntInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"delete z\");","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"jchilling"},"content":"    public void parse_bye_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ByeCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"jchilling"},"content":"    public void parse_byeInvalid_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"bye hi\");","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"jchilling"},"content":"    public void parse_list_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"jchilling"},"content":"    public void parse_listInvalid_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"list bye\");","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"jchilling"},"content":"    public void parse_todo_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"todo sleep\") instanceof TodoCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"jchilling"},"content":"    public void parse_todoNoInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please enter a task todo.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"jchilling"},"content":"    public void parse_event_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"event sleep /at 2022-8-22 1000\") instanceof EventCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"jchilling"},"content":"    public void parse_eventNoTime_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"event sleep\");","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please use /at to specify event time.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":188,"author":{"gitId":"jchilling"},"content":"    public void parse_eventNoInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"event\");","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":193,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please enter an event.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":194,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":195,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"jchilling"},"content":"    public void parse_deadline_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":199,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"event sleep /by 2022-8-22 1000\") instanceof DeadlineCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":201,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":202,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"jchilling"},"content":"    public void parse_deadlineNoTime_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":204,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":205,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"deadline fight\");","lastModifiedDate":"2022-08-27"},{"lineNumber":206,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":207,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":208,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please use /by to specify event time.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":209,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":210,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":211,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":212,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":213,"author":{"gitId":"jchilling"},"content":"    public void parse_deadlineNoInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":214,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":215,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"deadline\");","lastModifiedDate":"2022-08-27"},{"lineNumber":216,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":217,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":218,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please enter a deadline.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":219,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":220,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":221,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":222,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":223,"author":{"gitId":"jchilling"},"content":"    public void parse_date_success() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":224,"author":{"gitId":"jchilling"},"content":"        assertTrue(Parser.parse(\"date 2022-08-22\") instanceof DateCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":225,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":226,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":227,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":228,"author":{"gitId":"jchilling"},"content":"    public void parse_dateInvalid_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":229,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":230,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"date 1\");","lastModifiedDate":"2022-08-27"},{"lineNumber":231,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":232,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":233,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please enter date in yyyy-M-d format.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":234,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":235,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":236,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":237,"author":{"gitId":"jchilling"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":238,"author":{"gitId":"jchilling"},"content":"    public void parse_dateNoInput_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":239,"author":{"gitId":"jchilling"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":240,"author":{"gitId":"jchilling"},"content":"            Parser.parse(\"date\");","lastModifiedDate":"2022-08-27"},{"lineNumber":241,"author":{"gitId":"jchilling"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":242,"author":{"gitId":"jchilling"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":243,"author":{"gitId":"jchilling"},"content":"            assertEquals(\"Please enter a date.\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":244,"author":{"gitId":"jchilling"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":245,"author":{"gitId":"jchilling"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":246,"author":{"gitId":"jchilling"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jchilling":246}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jchilling"},"content":"todo read book","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"jchilling"},"content":"todo","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"jchilling"},"content":"event bday party /at 8/14","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"jchilling"},"content":"event","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"jchilling"},"content":"event bday party /at 8/14 move-in /at 8/30","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"jchilling"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"jchilling"},"content":"deadline","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jchilling"},"content":"mark 0","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jchilling"},"content":"mark 1","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jchilling"},"content":"unmark 1","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"jchilling"},"content":"unmark 0","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"jchilling"},"content":"delete -1","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"jchilling"},"content":"delete 1","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"jchilling"},"content":"list","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"blah","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"jchilling":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jchilling"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"jchilling"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jchilling":2,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jchilling"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jchilling":1,"-":37}}]

[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate Deadline which is-a Task","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"    protected String by;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for Deadline.","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"     * @param description Deadline\u0027s description.","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"     * @param by Deadline\u0027s by.","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException if Deadline\u0027s by is empty.","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        if (by.equals(\" \")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"☹ OOPS!!! The deadline needs to have a end day and/or date\");","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"        Response dukeResponse \u003d new Response();","lastModifiedDate":"2022-08-12"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"        dukeResponse.startUp();","lastModifiedDate":"2022-08-12"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-12"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"        String userResponse \u003d \"0\";","lastModifiedDate":"2022-08-12"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"        while (true) {","lastModifiedDate":"2022-08-12"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"            userResponse \u003d scanner.nextLine();","lastModifiedDate":"2022-08-12"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"            dukeResponse.handleUserInput(userResponse);","lastModifiedDate":"2022-08-12"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Jonaspng":10,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":" * Represent exceptions specific to Duke.","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"     * Constructor for DukeException","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"     * @param message Error message.","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"        super(message);","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate Event which is-a Task.","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"    protected String at;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for Event.","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"     * @param description Event\u0027s description.","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"     * @param at Event\u0027s at.","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException if event\u0027s at is empty.","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"    public Event(String description, String at) throws DukeException{","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        if (at.equals(\" \")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"☹ OOPS!!! The event needs to have specific start time and end time\");","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":30}},{"path":"src/main/java/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate the Response function of the chatbot.","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"public class Response {","lastModifiedDate":"2022-08-12"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    private final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-12"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-12"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-12"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-12"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-12"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    private final String line \u003d \"_______________________________\";","lastModifiedDate":"2022-08-12"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    private TaskList userList;","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for Response.","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    public Response() {","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"        this.userList \u003d new TaskList();","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"    public enum Command {","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"        BYE, LIST, UNMARK, MARK, TODO, DEADLINE, EVENT, DELETE","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"     * Handles user\u0027s input into chatbot.","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"     * @param input User input into chatbot.","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    public void handleUserInput(String input) {","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"        String[] inputList \u003d input.split(\" \");","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(line);","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"            Task newListItem;","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"            switch (userInputToCommand(inputList[0])) {","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"                case BYE:","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"                    System.out.println(line);","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"                    System.exit(0);","lastModifiedDate":"2022-08-12"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"                case LIST:","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"                    System.out.println(userList);","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"                case UNMARK:","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"                    userList.unmark(getIntegerInUserInput(inputList));","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"                case MARK:","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"                    userList.mark(getIntegerInUserInput(inputList));","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"                case TODO:","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"                    newListItem \u003d new ToDo(getToDoDescription(inputList, input));","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"                    userList.add(newListItem);","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"                case DEADLINE:","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"                    newListItem \u003d new Deadline(getDeadlineDescription(inputList, input),","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"                            getDeadlineBy(inputList, input));","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"                    userList.add(newListItem);","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"                case EVENT:","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"                    newListItem \u003d new Event(getEventDescription(inputList, input),","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"                            getEventAt(inputList, input));","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"                    userList.add(newListItem);","lastModifiedDate":"2022-08-13"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"                case DELETE:","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"                    userList.delete(getIntegerInUserInput(inputList));","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-12"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-13"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"     * Handles what to show during start up of chatbot.","lastModifiedDate":"2022-08-13"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"    public void startUp() {","lastModifiedDate":"2022-08-12"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        String temp \u003d line + \"\\n\" + logo + \"\\n\" + \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\" + line;","lastModifiedDate":"2022-08-12"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(temp);","lastModifiedDate":"2022-08-12"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"     * gets the todo description from user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"    public String getToDoDescription(String[] inputList, String input) {","lastModifiedDate":"2022-08-13"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"            return input.split(\" \", 2)[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"        return \" \";","lastModifiedDate":"2022-08-13"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"     * gets the Deadline\u0027s description from user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":101,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-13"},{"lineNumber":102,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":104,"author":{"gitId":"Jonaspng"},"content":"    public String getDeadlineDescription(String[] inputList, String input) {","lastModifiedDate":"2022-08-13"},{"lineNumber":105,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":106,"author":{"gitId":"Jonaspng"},"content":"            String[] descriptionWithBy \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-13"},{"lineNumber":107,"author":{"gitId":"Jonaspng"},"content":"            return descriptionWithBy[1].split(\" /by \", 2)[0];","lastModifiedDate":"2022-08-13"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"        return \" \";","lastModifiedDate":"2022-08-13"},{"lineNumber":110,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":113,"author":{"gitId":"Jonaspng"},"content":"     * gets the Deadline\u0027s by from user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":114,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":115,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-13"},{"lineNumber":116,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":117,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":118,"author":{"gitId":"Jonaspng"},"content":"    public String getDeadlineBy(String[] inputList, String input) {","lastModifiedDate":"2022-08-13"},{"lineNumber":119,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":120,"author":{"gitId":"Jonaspng"},"content":"            String[] descriptionWithBy \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-13"},{"lineNumber":121,"author":{"gitId":"Jonaspng"},"content":"            return descriptionWithBy[1].split(\" /by \", 2)[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":122,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":123,"author":{"gitId":"Jonaspng"},"content":"        return \" \" ;","lastModifiedDate":"2022-08-13"},{"lineNumber":124,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":125,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":126,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":127,"author":{"gitId":"Jonaspng"},"content":"     * gets the Event\u0027s description from user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":128,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":129,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-13"},{"lineNumber":130,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":131,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":132,"author":{"gitId":"Jonaspng"},"content":"    public String getEventDescription(String[] inputList, String input) {","lastModifiedDate":"2022-08-13"},{"lineNumber":133,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":134,"author":{"gitId":"Jonaspng"},"content":"            String[] descriptionWithAt \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-13"},{"lineNumber":135,"author":{"gitId":"Jonaspng"},"content":"            return descriptionWithAt[1].split(\" /at \", 2)[0];","lastModifiedDate":"2022-08-13"},{"lineNumber":136,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":137,"author":{"gitId":"Jonaspng"},"content":"        return \" \";","lastModifiedDate":"2022-08-13"},{"lineNumber":138,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":139,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":140,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":141,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":142,"author":{"gitId":"Jonaspng"},"content":"     * gets the Event\u0027s at from user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":143,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":144,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-13"},{"lineNumber":145,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":146,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":147,"author":{"gitId":"Jonaspng"},"content":"    public String getEventAt(String[] inputList, String input) {","lastModifiedDate":"2022-08-13"},{"lineNumber":148,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":149,"author":{"gitId":"Jonaspng"},"content":"            String[] descriptionWithAt \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-13"},{"lineNumber":150,"author":{"gitId":"Jonaspng"},"content":"            return descriptionWithAt[1].split(\" /at \", 2)[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":151,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":152,"author":{"gitId":"Jonaspng"},"content":"        return \" \";","lastModifiedDate":"2022-08-13"},{"lineNumber":153,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":154,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":155,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":156,"author":{"gitId":"Jonaspng"},"content":"     * gets the user integer input from user string input.","lastModifiedDate":"2022-08-13"},{"lineNumber":157,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":158,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-13"},{"lineNumber":159,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException if input list length \u003e 2 or input list length \u003c 2.","lastModifiedDate":"2022-08-13"},{"lineNumber":160,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":161,"author":{"gitId":"Jonaspng"},"content":"    public int getIntegerInUserInput(String[] inputList) throws DukeException{","lastModifiedDate":"2022-08-13"},{"lineNumber":162,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":163,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"Please provide only 1 task number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":164,"author":{"gitId":"Jonaspng"},"content":"        } else if (inputList.length \u003c 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":165,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"Please provide a task number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":166,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":167,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":168,"author":{"gitId":"Jonaspng"},"content":"            return Integer.parseInt(inputList[1]);","lastModifiedDate":"2022-08-13"},{"lineNumber":169,"author":{"gitId":"Jonaspng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":170,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"Please provide an actual number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":171,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":172,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":173,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":174,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":175,"author":{"gitId":"Jonaspng"},"content":"     * Converts string user input command into enum command to be used in switch.","lastModifiedDate":"2022-08-13"},{"lineNumber":176,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":177,"author":{"gitId":"Jonaspng"},"content":"     * @param userCommand string user input command.","lastModifiedDate":"2022-08-13"},{"lineNumber":178,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException if user input command is not any valid command.","lastModifiedDate":"2022-08-13"},{"lineNumber":179,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":180,"author":{"gitId":"Jonaspng"},"content":"    public Command userInputToCommand(String userCommand) throws DukeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":181,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":182,"author":{"gitId":"Jonaspng"},"content":"            return Command.valueOf(userCommand.toUpperCase(Locale.ROOT));","lastModifiedDate":"2022-08-13"},{"lineNumber":183,"author":{"gitId":"Jonaspng"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":184,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-13"},{"lineNumber":185,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":186,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":187,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":188,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-12"}],"authorContributionMap":{"Jonaspng":188}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate a Task that user adds to the list.","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"    private  String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for ListItem.","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"     * @param description name of item.","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException If user did not give description of task.","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    public Task(String description) throws DukeException{","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        if (description.equals(\" \")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"     * Method to get the name of the item.","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"     * @return  name of item.","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        return this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"     * Mark item as Done.","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"     * Mark item as not Done.","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        return \"[ ] \" + this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":63}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate the todolist that stores all user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"public class TaskList {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    protected int length;","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for ToDoList.","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        this.length \u003d 0;","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"     * Adds new item to list.","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"     * @param item new list item to be added.","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"    public void add(Task item) {","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        list.add(item);","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"        this.length +\u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(item);","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Now you have \" + this.length + \" tasks in the list\");","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"     * Marks item in list.","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"     * @param itemNumber item with the number user want to mark as done.","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    public void mark(int itemNumber) {","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"            list.get(itemNumber - 1).markAsDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(\"You do not have that item number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"     * Marks item as not done in list.","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"     * @param itemNumber item with the number user want to mark as not done.","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"    public void unmark(int itemNumber) throws DukeException{","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"            list.get(itemNumber - 1).markAsNotDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"You do not have that item number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"     * Delete item for list","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"     * @param itemNumber item with the number user want to delete.","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"    public void delete(int itemNumber) {","lastModifiedDate":"2022-08-13"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"            Task itemToRemove \u003d list.get(itemNumber - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"            list.remove(itemNumber - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"            this.length -\u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-13"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(itemToRemove);","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(\"Now you have \" + this.length + \" tasks in the list\");","lastModifiedDate":"2022-08-13"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(\"You do not have that item number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-08-13"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"        for (Task task : list) {","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"            s.append(counter + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-08-13"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"            counter +\u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"        return s.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":90}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate Todo which is-a Task.","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for Todo.","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"     * @param description Todo\u0027s description.","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"todo go to park to run","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"deadline cs2100 quiz /by tues","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"event psychiatric test /at IMH 3pm","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"mark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"unmark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"bye","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":10}}]

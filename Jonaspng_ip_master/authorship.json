[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"T | 1 | blah","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"import duke.*;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    public void run() {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"            try {","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"            } finally {","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"            }","lastModifiedDate":"2022-08-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        new Duke(\"./data\").run();","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":35,"-":6}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    private Task newTask;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"        ui.showAddedTask(newTask, tasks);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"        tasks.updateStorage(storage);","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":17}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    public void setIsExit(boolean isExit) {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"        return this.isExit;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":16}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate Deadline which is-a Task","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for Deadline.","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"     * @param description Deadline\u0027s description.","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"     * @param by Deadline\u0027s by.","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException if Deadline\u0027s by is empty.","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"        if (by.equals(\" \")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"☹ OOPS!!! The deadline needs to have a end day and/or date\");","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"date after /by should be in YYYY-MM-DD Format.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"        return \"D\" + super.toStorageString() + \" | \" + this.by;","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":44}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"        Task deletedTask \u003d tasks.delete(taskNumber);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"        ui.showDeletedTask(deletedTask, tasks);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"        tasks.updateStorage(storage);","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":18}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * Represent exceptions specific to Duke.","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"     * Constructor for DukeException","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"     * @param message Error message.","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"        super(message);","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate Event which is-a Task.","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for Event.","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"     * @param description Event\u0027s description.","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"     * @param at Event\u0027s at.","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException if event\u0027s at is empty.","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    public Event(String description, String at) throws DukeException{","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"        if (at.equals(\" \")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"☹ OOPS!!! The event needs to have specific start time and end time\");","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"date after /at should be in YYYY-MM-DD Format.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"        return \"E\" + super.toStorageString() + \" | \" + this.at;","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":47}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"        ui.showBye();","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"        this.setIsExit(true);","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":10}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"        ui.showList(tasks);","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":9}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"        Task markedTask \u003d tasks.mark(taskNumber);","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"        ui.showMarkedTask(markedTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"        tasks.updateStorage(storage);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate the Response function of the chatbot.","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"public class Parser {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    private TaskList userList;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for Response.","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    public Parser() {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"    public enum userCommand {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"        BYE, LIST, UNMARK, MARK, TODO, DEADLINE, EVENT, DELETE","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"     * Handles user\u0027s input into chatbot.","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"     * @param input User input into chatbot.","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"        String[] inputList \u003d input.split(\" \");","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"        Task newListItem;","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"        switch (userInputToCommand(inputList[0])) {","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        case BYE:","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"        case LIST:","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"            return new UnmarkCommand(getIntegerInUserInput(inputList));","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        case MARK:","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"            return new MarkCommand(getIntegerInUserInput(inputList));","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"        case TODO:","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"            newListItem \u003d new ToDo(getToDoDescription(inputList, input));","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"            return new AddCommand(newListItem);","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"            newListItem \u003d new Deadline(getDeadlineDescription(inputList, input),","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"                    getDeadlineBy(inputList, input));","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"            return new AddCommand(newListItem);","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"        case EVENT:","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"            newListItem \u003d new Event(getEventDescription(inputList, input),","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"                    getEventAt(inputList, input));","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"            return new AddCommand(newListItem);","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        case DELETE:","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"            return new DeleteCommand(getIntegerInUserInput(inputList));","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"     * gets the todo description from user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"    public static String getToDoDescription(String[] inputList, String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e\u003d 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"            return input.split(\" \", 2)[1];","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        return \" \";","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"     * gets the Deadline\u0027s description from user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"    public static String getDeadlineDescription(String[] inputList, String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e\u003d 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"            String[] descriptionWithBy \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"            return descriptionWithBy[1].split(\" /by \", 2)[0];","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        return \" \";","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"     * gets the Deadline\u0027s by from user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"    public static String getDeadlineBy(String[] inputList, String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"            String[] descriptionWithBy \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"            return descriptionWithBy[1].split(\" /by \", 2)[1];","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"        return \" \" ;","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"     * gets the Event\u0027s description from user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"Jonaspng"},"content":"    public static String getEventDescription(String[] inputList, String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e\u003d 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"Jonaspng"},"content":"            String[] descriptionWithAt \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"Jonaspng"},"content":"            return descriptionWithAt[1].split(\" /at \", 2)[0];","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"        return \" \";","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"Jonaspng"},"content":"     * gets the Event\u0027s at from user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"Jonaspng"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"Jonaspng"},"content":"    public static String getEventAt(String[] inputList, String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":121,"author":{"gitId":"Jonaspng"},"content":"            String[] descriptionWithAt \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"Jonaspng"},"content":"            return descriptionWithAt[1].split(\" /at \", 2)[1];","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"Jonaspng"},"content":"        return \" \";","lastModifiedDate":"2022-08-19"},{"lineNumber":125,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"Jonaspng"},"content":"     * gets the user integer input from user string input.","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":130,"author":{"gitId":"Jonaspng"},"content":"     * @param inputList user input after spliting by \" \".","lastModifiedDate":"2022-08-19"},{"lineNumber":131,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException if input list length \u003e 2 or input list length \u003c 2.","lastModifiedDate":"2022-08-19"},{"lineNumber":132,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":133,"author":{"gitId":"Jonaspng"},"content":"    public static int getIntegerInUserInput(String[] inputList) throws DukeException{","lastModifiedDate":"2022-08-19"},{"lineNumber":134,"author":{"gitId":"Jonaspng"},"content":"        if (inputList.length \u003e 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"Please provide only 1 task number!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"Jonaspng"},"content":"        } else if (inputList.length \u003c 2) {","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"Please provide a task number!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":138,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":139,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":140,"author":{"gitId":"Jonaspng"},"content":"            return Integer.parseInt(inputList[1]);","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"Jonaspng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":142,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"Please provide an actual number!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":143,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":144,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":145,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":146,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":147,"author":{"gitId":"Jonaspng"},"content":"     * Converts string user input command into enum command to be used in switch.","lastModifiedDate":"2022-08-19"},{"lineNumber":148,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":149,"author":{"gitId":"Jonaspng"},"content":"     * @param userInputCommand string user input command.","lastModifiedDate":"2022-08-19"},{"lineNumber":150,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException if user input command is not any valid command.","lastModifiedDate":"2022-08-19"},{"lineNumber":151,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":152,"author":{"gitId":"Jonaspng"},"content":"    public static userCommand userInputToCommand(String userInputCommand) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":153,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":154,"author":{"gitId":"Jonaspng"},"content":"            return userCommand.valueOf(userInputCommand.toUpperCase());","lastModifiedDate":"2022-08-19"},{"lineNumber":155,"author":{"gitId":"Jonaspng"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":156,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-19"},{"lineNumber":157,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":158,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":159,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":160,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":160}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.io.File;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate the Storage of the chatbot","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"public class Storage {","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    private String filePath;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    private File dataFile;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"            File folder \u003d new File(filePath);","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"            folder.mkdir();","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"            this.dataFile \u003d new File(filePath + \"/duke.txt\");","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"            if (!this.dataFile.exists()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"                this.dataFile.createNewFile();","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(\"Something went wrong in file creation\");","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    public void update(ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath + \"/duke.txt\");","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"                myWriter.write(task.toStorageString() + \"\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"            myWriter.close();","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"There is something wrong with storage file!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        ArrayList\u003cTask\u003e memory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        Scanner myReader;","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"            myReader \u003d new Scanner(this.dataFile);","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"Storage file not found at specified path!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"        while (myReader.hasNextLine()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"            String taskString \u003d myReader.nextLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"            String[] taskDataArray \u003d taskString.split(\" \\\\| \"); // since | is a special character","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"            Task currTask \u003d null;","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"            switch (taskDataArray[0]) {","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"            case \"T\":","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"                currTask \u003d new ToDo(taskDataArray[2]);","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"                memory.add(currTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"            case \"E\":","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"                currTask \u003d new Event(taskDataArray[2], taskDataArray[3]);","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"                memory.add(currTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"            case \"D\":","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"                currTask \u003d new Deadline(taskDataArray[2], taskDataArray[3]);","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"                memory.add(currTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"            if (taskDataArray[1].equals(\"1\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"                assert currTask !\u003d null;","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"                currTask.markAsDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"        return memory;","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":81}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate a Task that user adds to the list.","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    private String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for ListItem.","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     * @param description name of item.","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"     * @throws DukeException If user did not give description of task.","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    public Task(String description) throws DukeException{","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"        if (description.equals(\" \")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"     * Method to get the name of the item.","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"     * @return  name of item.","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"        return this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"     * Mark item as Done.","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"     * Mark item as not Done.","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        return \"[ ] \" + this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"            return \" | \" + \"1\" + \" | \" + this.description;","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"        return \" | \" + \"0\" + \" | \" + this.description;","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":69}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate the todolist that stores all user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"public class TaskList {","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"    protected int length;","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for ToDoList.","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"        this.length \u003d 0;","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for ToDoList with an ArrayList argument.","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        this.length \u003d list.size();","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"     * Adds new item to list.","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"     * @param item new list item to be added.","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    public void add(Task item) {","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        list.add(item);","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        this.length +\u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"     * Marks item in list.","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"     * @param itemNumber item with the number user want to mark as done.","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"     * @return the task that got unmarked.","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"    public Task mark(int itemNumber) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"            list.get(itemNumber - 1).markAsDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"            return list.get(itemNumber - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"You do not have that item number!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"     * Marks item as not done in list.","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"     * @param itemNumber item with the number user want to mark as not done.","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"     * @return the task that got unmarked.","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"    public Task unmark(int itemNumber) throws DukeException{","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"            list.get(itemNumber - 1).markAsNotDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"            return list.get(itemNumber - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"            throw new DukeException(\"You do not have that item number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"     * Delete item for list","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"     * @param itemNumber item with the number user want to delete.","lastModifiedDate":"2022-08-13"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"     * @return Task to be deleted","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"    public Task delete(int itemNumber) {","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"        Task itemToRemove \u003d null;","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"            itemToRemove \u003d list.get(itemNumber - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"            list.remove(itemNumber - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"            this.length -\u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"            System.out.println(\"You do not have that item number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"        return itemToRemove;","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"    public void updateStorage(Storage storage) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"        storage.update(this.list);","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"        return this.length;","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-08-13"},{"lineNumber":101,"author":{"gitId":"Jonaspng"},"content":"        for (Task task : list) {","lastModifiedDate":"2022-08-13"},{"lineNumber":102,"author":{"gitId":"Jonaspng"},"content":"            s.append(counter + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-08-13"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"            counter +\u003d 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":104,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":105,"author":{"gitId":"Jonaspng"},"content":"        return s.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":106,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":107,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":108}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":" * Encapsulate Todo which is-a Task.","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":" *","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":" * @author: Jonas Png","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"     * Class constructor for Todo.","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"     * @param description Todo\u0027s description.","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"    public String toStorageString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"        return \"T\" + super.toStorageString();","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"public class Ui {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    private final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    private final String line \u003d \"_______________________________\";","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    public Ui() {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"     * Handles what to show during Duke\u0027s startup.","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"        showLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"        showLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        String temp \u003d line + \"Storage file not found at specified path!\" + line;","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(temp);","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    public void showAddedTask(Task itemToAdd, TaskList tasks) {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(itemToAdd);","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Now you have \" + tasks.getLength() + \" tasks in the list\");","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    public void showDeletedTask(Task itemToRemove, TaskList tasks) {","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(itemToRemove);","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Now you have \" + tasks.getLength() + \" tasks in the list\");","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"    public void showMarkedTask(Task markedTask) {","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(markedTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"    public void showUnmarkedTask(Task unmarkedTask) {","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(unmarkedTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(tasks);","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"    public void showBye() {","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"        return command;","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        showLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":84}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"    private int taskNumber;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"        Task unmarkedTask \u003d tasks.unmark(taskNumber);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"        ui.showUnmarkedTask(unmarkedTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"        tasks.updateStorage(storage);","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":17}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"T | 1 | go to park to run","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"D | 0 | cs2100 quiz | 2022-10-15","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"E | 0 | psychiatric test | 2022-10-15","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Jonaspng":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"todo go to park to run","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"deadline cs2100 quiz /by 2022-10-15","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"event psychiatric test /at 2022-10-15","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"mark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"unmark 3","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"bye","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"Jonaspng":10}}]
